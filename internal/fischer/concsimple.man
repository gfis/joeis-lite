A084009	simple0	0	new Z(n.square().toString() + new StringBuilder(n.square().toString()).reverse()).divide(11)	a(n) = n^2 concatenated with reverse(n^2) divided by 11.	0..36
A105814	simple1	1	n.square().add(new Z(n.toString() + n.toString()))	a(n) = n^2 + (n concatenated with n).	1..10000
A239460	simple1	1	new Z(n.square().toString() + n.pow(3).toString())	Concatenation of n^2 and n^3.	1..1000
A239461	simple1	1	new Z(n.pow(3).toString() + n.square().toString())	Concatenation of n^3 and n^2.1..1000
A246972	simple0	0	new Z(n.add(1).square().toString() + n.square().toString())	(n+1)^2 concatenated with n^2.	0..1000
A246973	simple0	0	new Z(n.square().toString() + n.add(1).square().toString())	n^2 concatenated with (n+1)^2.	0..1000
A253445	simple1	1	new Z(n.square().toString() + n.square().toString())	a(n) = concatenation of n^2 with itself.	1..10000
A337148	simple0	0	new Z(n.add(n.add(1)).toString() + n.multiply(n.add(1)).toString())	Concatenation of sum n+(n+1) and product n*(n+1) in decimal.	0..38

A073729	simple1	1	n.mod(Z.TEN).add((String.valueOf(mN).charAt(0) - '0') * 10)	Concatenation of initial and final digits of n in decimal representation.	nonn,base,easy,look,	1..10000	nyi	_Reinhard Zumkeller_, Aug 05 2002
# A073730	simple1	1		Concatenation of largest and smallest digits of n in decimal representation.	nonn,base,look,	1..10000	nyi	_Reinhard Zumkeller_, Aug 05 2002
A082252	simple1	1	new Z(String.valueOf(3*mN - 2) + String.valueOf(3*mN - 1) + String.valueOf(3*mN)).divide(3)	Concatenation of (3n-2), (3n-1) and 3n divided by 3.	base,easy,nonn,changed,	1..1000	nyi	_Amarnath Murthy_, Apr 11 2003
A082253	simple1	1	new Z(String.valueOf(5*mN - 4) + String.valueOf(5*mN - 3) + String.valueOf(5*mN - 2) + String.valueOf(5*mN - 1) + String.valueOf(5*mN)).divide(5)	Concatenation of (5n-4), (5n-3), (5n-2), (5n-1) and 5n divided by 5.	base,easy,nonn,changed,	1..1000	nyi	_Amarnath Murthy_, Apr 11 2003
A082254	simple1	1	new Z(String.valueOf(6*mN - 5) + String.valueOf(6*mN - 4) + String.valueOf(6*mN - 3) + String.valueOf(6*mN - 2) + String.valueOf(6*mN - 1) + String.valueOf(6*mN)).divide(6)	Concatenation of (6n-5), (6n-4), (6n-3), (6n-2), (6n-1) and 6n divided by 6.	base,easy,nonn,changed,	1..1000	nyi	_Amarnath Murthy_, Apr 11 2003
A082255	simple1	1	new Z(String.valueOf(8*mN - 3) + String.valueOf(8*mN - 2) + String.valueOf(8*mN - 1) + String.valueOf(8*mN) + String.valueOf(8*mN + 1) + String.valueOf(8*mN + 2) + String.valueOf(8*mN + 3) + String.valueOf(8*mN + 4)).divide(8)	Integer part of (concatenation of (8n-3), (8n-2), (8n-1), (8n), (8n+1), (8n+2), (8n+3), (8n+4) divided by 8).	base,easy,nonn,synth	1..12	nyi	_Amarnath Murthy_, Apr 11 2003
A082256	simple1	1	new Z(String.valueOf(9*mN - 8) + String.valueOf(9*mN - 7) + String.valueOf(9*mN - 6) + String.valueOf(9*mN - 5) + String.valueOf(9*mN - 4) + String.valueOf(9*mN - 3) + String.valueOf(9*mN - 2) + String.valueOf(9*mN - 1) + String.valueOf(9*mN)).divide(9)	(Concatenation of 9n-8, 9n-7, 9n-6, 9n-5, 9n-4, 9n-3, 9n-2, 9n-1 and 9n) divided by 9.	base,easy,nonn,synth	1..10	nyi	_Amarnath Murthy_, Apr 11 2003
A087737	simple1	1	new Z(n.toString(2) + (n.add(1)).toString(2), 2)	Value of (n,n+1) concatenated in binary representation.	nonn,base,	1..10000	nyi	_Reinhard Zumkeller_, Oct 01 2003
A087744	simple1	1	new Z(n.toString(2) + String.valueOf(mN))	Binary and decimal representation of n concatenated.	nonn,base,changed,	1..10000	nyi	_Reinhard Zumkeller_, Oct 02 2003
A113697	simple1	1	new Z(String.valueOf(mN) + String.valueOf(mN + 2)).divide(mN + 1)	Floor[n concatenated with n+2 divided by n+1].	base,nonn,synth	1..72	nyi	_Amarnath Murthy_, Nov 11 2005
A136613	simple0	0	new Z(String.valueOf(ZUtils.digitSum(n)) + String.valueOf(mN))	Concatenation of (sum of digits of n) and n.	nonn,base,look,	0..10000	nyi	_Reinhard Zumkeller_, Jan 13 2008
A248038	simple1	1	new Z(String.valueOf(3 * mN) + String.valueOf(3 * mN))	3n concatenated with itself.	nonn,base,easy,changed,synth	1..41	nyi	_Larry Guindine_, Sep 30 2014
A248378	simple0	0	((mN & 1) == 0) ? new Z(String.valueOf(mN / 2 + 1) + String.valueOf(mN / 2 + 2)) : new Z(String.valueOf(mN / 2 + 2) + String.valueOf(mN / 2 + 1))	a(2n) = concatenation of n+1 with n+2, a(2n+1) = concatenation of n+2 with n+1.	nonn,base,easy,	0..10000	nyi	_N. J. A. Sloane_, Oct 07 2014
A248422	simple1	1	new Z(String.valueOf(2 * mN) + String.valueOf(2 * mN))	Even integers concatenated with themselves.	nonn,base,changed,	1..1000	nyi	_Lev Krasnovsky_, Oct 06 2014
A248555	simple1	1	new Z(String.valueOf(3 * mN - 2) + String.valueOf(3 * mN) + String.valueOf(3 * mN - 1))	a(n) is the concatenation of 3n-2, 3n and 3n-1.	nonn,base,less,changed,	1..1000	nyi	_Charles Duvall_, Oct 08 2014
A248556	simple1	1	new Z(String.valueOf(3 * mN - 2) + String.valueOf(3 * mN - 1) + String.valueOf(3 * mN))	Concatenate (3n-2,3n-1,3n).	nonn,base,easy,synth	1..33	nyi	_Charles Duvall_, Oct 08 2014

A250073	simple0	0	new Z(Z.ONE.shiftLeft(mN).toTwoDigits(60))	Powers of 2 written in base 60, concatenating the decimal values of the sexagesimal digits.	nonn,base,synth	0..32	nyi	_Michael De Vlieger_, Nov 11 2014
A254334	simple0	0	new Z(Z.THREE.pow(mN).toTwoDigits(60))	Powers of 3 in base 60, concatenating the decimal values of the sexagesimal digits.	nonn,base,	0..1200	nyi	_Michael De Vlieger_, Jan 28 2015
A254335	simple0	0	new Z(Z.FIVE.pow(mN).toTwoDigits(60))	Powers of 5 in base 60, concatenating the decimal values of the sexagesimal digits.	nonn,base,	0..1200	nyi	_Michael De Vlieger_, Jan 28 2015
A254336	simple0	0	new Z(Z.TEN.pow(mN).toTwoDigits(60))	Powers of 10 in base 60, concatenating the decimal values of the sexagesimal digits.	nonn,base,	0..600	nyi	_Michael De Vlieger_, Jan 28 2015

A061086	simple1	1	new Z(String.valueOf(mN) + n.pow(3).tostring())	a(n) is the concatenation of n with n^3.	nonn,base,changed,	1..10000	nyi	_Amarnath Murthy_, Apr 19 2001
A178664	simple0	0	new Z(Z.ONE.shiftLeft(mN).toString() + Z.ONE.shiftLeft(mN).toString())	2^n concatenated with itself.	0..200
A206527	simple0	0	new Z(Z.THREE.pow(mN).toString() + Z.THREE.pow(mN).toString())	3^n concatenated with itself.	0..200
A206528	simple0	0	new Z(Z.FIVE.pow(mN).toString() + Z.FIVE.pow(mN).toString())	5^n concatenated with itself.	0..200
A206529	simple0	0	new Z(Z.SEVEN.pow(mN).toString() + Z.SEVEN.pow(mN).toString())	7^n concatenated with itself.	0..200
