package irvine.oeis.$(PACK);
// Generated by $(GEN) $(CALLCODE)

import irvine.math.MemoryFunctionInt3;
import irvine.math.z.Z;
import irvine.oeis.triangle.Triangle;

/**
 * $(ASEQNO) $(NAME)
 * @author Georg Fischer
 */
public class $(ASEQNO) extends Triangle {

  /** Construct the sequence. */
  public $(ASEQNO) () {
    hasRAM(true);
  }

  private final MemoryFunctionInt3<Z> mB = new MemoryFunctionInt3<Z>() {
    @Override
    protected Z compute(final int n, final int k, final int m) {
      if (n == 0 && k == 0) {
        return Z.ONE;
      }
      if (k > n || k < 0) {
        return Z.ZERO;
      }
      return get(n - 1, k - 1, m)$(PARM2).add(get(n - 1, k, m)$(PARM3));
    }
  };
 
  @Override
  protected Z compute(final int n, final int k) {
    return mB.get(n, k, $(PARM1));
  }
}
