package irvine.oeis.$(PACK);
// Generated by $(GEN) $(CALLCODE) at $(DATE)

import irvine.math.z.Z;
import irvine.oeis.DirectSequence;
import irvine.oeis.recur.LinearRecurrence;

/**
 * $(ASEQNO) $(NAME)
 * @author $(AUTHOR)
 */
public class $(ASEQNO) extends LinearRecurrence implements DirectSequence {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET), new long[] {1, -3, 3}, new long[] {0, 1, $(PARM1)});
$(PARM4=next)
  }

# ($n * ($n * ($shape - 2) - ($shape - 4))/$div)
  @Override
  public Z a(final int n) {
    return Z.valueOf(n).multiply(n * $(PARM2=shape_2) - $(PARM3=shape_4)).divide2();
  }

  @Override
  public Z a(final Z n) {
    return n.multiply(n.multiply($(PARM2=shape_2)).subtract($(PARM3=shape_4))).divide2();
  }
}
