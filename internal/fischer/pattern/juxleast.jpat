package irvine.oeis.$(PACK);
// Generated by $(GEN) $(CALLCODE) $(PARM1) $(PARM2) $(PARM3) at $(DATE)
// DO NOT EDIT here!

import irvine.math.z.Z;
import irvine.oeis.Sequence;
import irvine.oeis.$(PARM3).$(PARM2);

/**
 * $(ASEQNO) $(NAME)
 * @author $(AUTHOR)
 */
public class $(ASEQNO) implements Sequence {

  private Z mN;
  private final Sequence mSeq;
  private final StringBuffer mBuf;

  /** Construct the sequence. */
  public $(ASEQNO)() {
    mBuf = new StringBuffer(256);
    mSeq = new $(PARM2)();
    mN = Z.valueOf($(OFFSET) - 1);
  }

  @Override
  public Z next() {
    mN = mN.add(1);
    String sn = mN.toString($(PARM1));
    int k = mBuf.indexOf(sn);
    while (k < 0) {
      mBuf.append(mSeq.next().toString());
      k = mBuf.indexOf(sn);
    }
    return Z.valueOf(k + 1);
  }
}
