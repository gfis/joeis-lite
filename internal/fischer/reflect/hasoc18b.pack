#!queue	A000512	0	->	1	A133687	--------------------------------
package irvine.oeis.a000;

import irvine.math.z.Z;
import irvine.oeis.a133.A133687;

/**
 * A000512 Number of equivalence classes of n X n matrices over {0,1} with rows and columns summing to 3, where equivalence is defined by row and column permutations.
 * @author Sean A. Irvine
 */
public class A000512 extends A133687 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = 0;

  @Override
  public Z next() {
    return Z.valueOf(get(++mN, 3));
  }
}
#!queue	A000513	0	->	1	A133687	--------------------------------
package irvine.oeis.a000;

import irvine.math.z.Z;
import irvine.oeis.a133.A133687;

/**
 * A000513 Number of equivalence classes of n X n matrices over {0,1} with rows and columns summing to 4, where equivalence is defined by row and column permutations. Also number of isomorphism classes of bicolored quartic bipartite graphs, where isomorphism cannot exchange the colors.
 * @author Sean A. Irvine
 */
public class A000513 extends A133687 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = 0;

  @Override
  public Z next() {
    return Z.valueOf(get(++mN, 4));
  }
}
#!queue	A000516	0	->	1	A133687	--------------------------------
package irvine.oeis.a000;

import irvine.math.z.Z;
import irvine.oeis.a133.A133687;

/**
 * A000516 Number of equivalence classes of n X n matrices over {0,1} with rows and columns summing to 5, where equivalence is defined by row and column permutations. Isomorphism classes of bicolored 5-regular bipartite graphs, where isomorphism cannot exchange the colors.
 * @author Sean A. Irvine
 */
public class A000516 extends A133687 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = 0;

  @Override
  public Z next() {
    return Z.valueOf(get(++mN, 5));
  }
}
#!queue	A000519	0	->	1	A133687	--------------------------------
package irvine.oeis.a000;

import irvine.math.z.Z;
import irvine.oeis.a133.A133687;

/**
 * A000519 Number of equivalence classes of nonzero regular 0-1 matrices of order n.
 * @author Sean A. Irvine
 */
public class A000519 extends A133687 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = 0;

  @Override
  public Z next() {
    ++mN;
    Z sum = Z.ZERO;
    for (int k = 0; k < mN; ++k) {
      sum = sum.add(get(mN, k));
    }
    return sum;
  }
}
#!queue	A007065	0	->	-1	A011804	--------------------------------
package irvine.oeis.a007;

import irvine.oeis.a011.A011804;

/**
 * A007065 Number of M-sequences from multicomplexes on at most 5 variables with no monomial of degree greater than n.
 * @author Sean A. Irvine
 */
public class A007065 extends A011804 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  @Override
  protected long start() {
    return -2;
  }

  @Override
  protected long variables() {
    return 5;
  }
}
#!queue	A007625	0	->	-1	A011804	--------------------------------
package irvine.oeis.a007;

import irvine.oeis.a011.A011804;

/**
 * A007625 Number of M-sequences from multicomplexes on at most 6 variables with no monomial of degree more than n-1.
 * @author Sean A. Irvine
 */
public class A007625 extends A011804 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  @Override
  protected long start() {
    return -2;
  }

  @Override
  protected long variables() {
    return 6;
  }
}
#!queue	A011808	0	->	1	A011804	--------------------------------
package irvine.oeis.a011;

/**
 * A011808 M-sequences from multicomplexes on at most 11 variables with no monomial of degree more than n-1.
 * @author Sean A. Irvine
 */
public class A011808 extends A011804 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  @Override
  protected long variables() {
    return 11;
  }
}
#!queue	A011821	0	->	1	A011804	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;

/**
 * A011821 Number of M-sequences m_0,...,m_5 with m_1 &lt; n.
 * @author Sean A. Irvine
 */
public class A011821 extends A011804 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return m(++mN, 5);
  }
}
#!queue	A011822	0	->	1	A011804	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;

/**
 * A011822 M-sequences m_0,...,m_6 with m_1 &lt; n.
 * @author Sean A. Irvine
 */
public class A011822 extends A011804 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return m(++mN, 6);
  }
}
#!queue	A011823	0	->	1	A011804	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;

/**
 * A011823 M-sequences m_0,...,m_7 with m_1 &lt; n.
 * @author Sean A. Irvine
 */
public class A011823 extends A011804 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return m(++mN, 7);
  }
}
#!queue	A011824	0	->	1	A011804	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;

/**
 * A011824 M-sequences m_0,...,m_8 with m_1 &lt; n.
 * @author Sean A. Irvine
 */
public class A011824 extends A011804 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return m(++mN, 8);
  }
}
#!queue	A011825	0	->	1	A011804	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;

/**
 * A011825 M-sequences m_0,...,m_9 with m_1 &lt; n.
 * @author Sean A. Irvine
 */
public class A011825 extends A011804 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return m(++mN, 9);
  }
}
#!queue	A011827	0	->	1	A007695	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;
import irvine.oeis.a007.A007695;

/**
 * A011827 f-vectors for simplicial complexes of dimension at most 2 on at most n-1 vertices.
 * @author Sean A. Irvine
 */
public class A011827 extends A007695 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return f(++mN, 3);
  }
}
#!queue	A011828	0	->	1	A007695	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;
import irvine.oeis.a007.A007695;

/**
 * A011828 Number of f-vectors for simplicial complexes of dimension at most 3 on at most n-1 vertices.
 * @author Sean A. Irvine
 */
public class A011828 extends A007695 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return f(++mN, 4);
  }
}
#!queue	A011829	0	->	1	A007695	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;
import irvine.oeis.a007.A007695;

/**
 * A011829 Number of f-vectors for simplicial complexes of dimension at most 4 on at most n-1 vertices.
 * @author Sean A. Irvine
 */
public class A011829 extends A007695 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return f(++mN, 5);
  }
}
#!queue	A011830	0	->	1	A007695	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;
import irvine.oeis.a007.A007695;

/**
 * A011830 f-vectors for simplicial complexes of dimension at most 5 on at most n-1 vertices.
 * @author Sean A. Irvine
 */
public class A011830 extends A007695 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return f(++mN, 6);
  }
}
#!queue	A011831	0	->	1	A007695	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;
import irvine.oeis.a007.A007695;

/**
 * A011831 f-vectors for simplicial complexes of dimension at most 6 on at most n-1 vertices.
 * @author Sean A. Irvine
 */
public class A011831 extends A007695 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return f(++mN, 7);
  }
}
#!queue	A011832	0	->	1	A007695	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;
import irvine.oeis.a007.A007695;

/**
 * A011832 f-vectors for simplicial complexes of dimension at most 7 on at most n-1 vertices.
 * @author Sean A. Irvine
 */
public class A011832 extends A007695 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return f(++mN, 8);
  }
}
#!queue	A011833	0	->	1	A007695	--------------------------------
package irvine.oeis.a011;

import irvine.math.z.Z;
import irvine.oeis.a007.A007695;

/**
 * A011833 Number of f-vectors for simplicial complexes of dimension at most 8 on at most n-1 vertices.
 * @author Sean A. Irvine
 */
public class A011833 extends A007695 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = -1;

  @Override
  public Z next() {
    return f(++mN, 9);
  }
}
#!queue	A027610	0	->	1	A047749	--------------------------------
package irvine.oeis.a027;

import irvine.math.z.Z;
import irvine.oeis.a047.A047749;

/**
 * A027610 Number of chordal planar triangulations; also number of planar triangulations with maximal number of triangles; also number of graphs obtained from the tetrahedron by repeatedly inserting vertices of degree 3 into a triangular face; also number of uniquely 4-colorable planar graphs; also number of simplicial 3-clusters with n cells; also Apollonian networks.
 * @author Sean A. Irvine
 */
public class A027610 extends A047749 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = 0;

  @Override
  public Z next() {
    Z res = a1764(++mN).multiply2().divide(mN + 1).add(a47749(mN).multiply(9));
    if ((mN & 1) == 0) {
      res = res.add(a1764(mN / 2).multiply(5));
    }
    if ((mN - 1) % 3 == 0) {
      res = res.add(a1764((mN - 1) / 3).multiply(8));
    }
    if ((mN - 1) % 4 == 0) {
      res = res.add(a1764((mN - 1) / 4).multiply(6));
    }
    if ((mN - 2) % 6 == 0) {
      res = res.add(a1764((mN - 2) / 6).multiply(4));
    }
    if ((2 * mN - 1) % 3 == 0) {
      res = res.add(a47749((2 * mN - 1) / 3).multiply(4));
    }
    return res.divide(24);
  }
}
#!queue	A047751	0	->	1	A047749	--------------------------------
package irvine.oeis.a047;

import irvine.math.z.Z;

/**
 * A047751 Number of dissectable polyhedra with symmetry of type K.
 * @author Sean A. Irvine
 */
public class A047751 extends A047749 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = 0;

  @Override
  public Z next() {
    if (++mN == 1) {
      return Z.ONE;
    } else if (mN % 12 != 5) {
      return Z.ZERO;
    } else {
      return super.next();
    }
  }
}

#!queue	A047752	0	->	1	A047749	--------------------------------
package irvine.oeis.a047;

import irvine.math.z.Z;
import irvine.oeis.Sequence;
import irvine.oeis.a001.A001764;

/**
 * A047752 Number of dissectable polyhedra with symmetry of type J.
 * @author Sean A. Irvine
 */
public class A047752 extends A047749 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private final Sequence mA = new A001764();
  private long mN = 0;

  @Override
  public Z next() {
    if (++mN % 12 != 5) {
      return Z.ZERO;
    } else {
      return mA.next().subtract(super.next()).divide2();
    }
  }
}

#!queue	A047762	0	->	1	A047749	--------------------------------
package irvine.oeis.a047;

import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * A047762 Number of dissectable polyhedra with symmetry of type E.
 * @author Sean A. Irvine
 */
public class A047762 extends A047749 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  {
    super.next();
  }
  private final Sequence mA = new A047760();
  private final Sequence mB = new A047758();
  private final Sequence mC = new A047754();
  private final Sequence mD = new A047753();
  private final Sequence mE = new A047752();
  private final Sequence mF = new A047751();
  private boolean mEven = true;

  @Override
  public Z next() {
    final Z t = super.next().subtract(mA.next().multiply2()
      .add(mB.next().multiply(6))
      .add(mC.next().multiply2())
      .add(mD.next().multiply(3))
      .add(mE.next().multiply2())
      .add(mF.next())
    );
    mEven = !mEven;
    if (mEven) {
      return Z.ZERO;
    } else {
      return t.divide(4);
    }
  }
}
#!queue	A047764	0	->	1	A047749	--------------------------------
package irvine.oeis.a047;

import irvine.math.z.Z;

/**
 * A047764 Number of dissectable polyhedra with symmetry of type Q.
 * @author Sean A. Irvine
 */
public class A047764 extends A047749 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private long mN = 0;

  @Override
  public Z next() {
    return (++mN % 6) != 2 ? Z.ZERO : super.next();
  }
}

#!queue	A047765	0	->	1	A047749	--------------------------------
package irvine.oeis.a047;

import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * A047765 Number of dissectable polyhedra with symmetry of type P.
 * @author Sean A. Irvine
 */
public class A047765 extends A047749 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  {
    super.next();
  }
  private final Sequence mA = new A047764();
  private boolean mOdd = false;

  @Override
  public Z next() {
    final Z a = mA.next();
    mOdd = !mOdd;
    return mOdd ? Z.ZERO : super.next().subtract(a);
  }
}
#!queue	A047775	0	->	1	A047749	--------------------------------
package irvine.oeis.a047;

import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * A047775 Number of dissectable polyhedra with symmetry of type B.
 * @author Sean A. Irvine
 */
public class A047775 extends A047749 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  {
    super.next();
  }

  private final Sequence mA = new A047773();
  private final Sequence mB = new A047760();
  private final Sequence mC = new A047753();
  private final Sequence mD = new A047751();
  private final Sequence mE = new A047764();
  private final Sequence mF = new A047765();

  @Override
  public Z next() {
    return super.next()
      .subtract(mA.next().multiply2())
      .subtract(mB.next().multiply2())
      .subtract(mC.next())
      .subtract(mD.next())
      .subtract(mE.next())
      .subtract(mF.next())
      .divide2();
  }
}

#!queue	A052366	1	->	0	A318795	--------------------------------
package irvine.oeis.a052;

import irvine.math.z.Z;
import irvine.oeis.a318.A318795;

/**
 * A052366 Number of nonnegative integer 4 X 4 matrices with sum of elements equal to n, under row and column permutations.
 * @author Sean A. Irvine
 */
public class A052366 extends A318795 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = -1;

  @Override
  public Z next() {
    return m(4, 4, ++mN);
  }
}
#!queue	A052367	1	->	0	A318795	--------------------------------
package irvine.oeis.a052;

import irvine.math.z.Z;
import irvine.oeis.a318.A318795;

/**
 * A052367 Number of nonnegative integer 5 X 5 matrices with sum of elements equal to n, under row and column permutations.
 * @author Sean A. Irvine
 */
public class A052367 extends A318795 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = -1;

  @Override
  public Z next() {
    return m(5, 5, ++mN);
  }
}
#!queue	A052372	1	->	0	A318795	--------------------------------
package irvine.oeis.a052;

import irvine.math.z.Z;
import irvine.oeis.a318.A318795;

/**
 * A052372 Number of nonnegative integer 6 X 6 matrices with sum of elements equal to n, under row and column permutations.
 * @author Sean A. Irvine
 */
public class A052372 extends A318795 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = -1;

  @Override
  public Z next() {
    return m(6, 6, ++mN);
  }
}
#!queue	A052373	1	->	0	A318795	--------------------------------
package irvine.oeis.a052;

import irvine.math.z.Z;
import irvine.oeis.a318.A318795;

/**
 * A052373 Number of nonnegative integer 7 X 7 matrices with sum of elements equal to n, under row and column permutations.
 * @author Sean A. Irvine
 */
public class A052373 extends A318795 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = -1;

  @Override
  public Z next() {
    return m(7, 7, ++mN);
  }
}
#!queue	A056504	1	->	0	A285012	--------------------------------
package irvine.oeis.a056;

import irvine.math.z.Z;
import irvine.oeis.a285.A285012;

/**
 * A056504 Number of periodic palindromic structures of length n using a maximum of three different symbols.
 * @author Sean A. Irvine
 */
public class A056504 extends A285012 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = -1;

  @Override
  public Z next() {
    return t(++mN, 3).add(t(mN, 2)).add(t(mN, 1));
  }
}
#!queue	A056505	1	->	0	A285012	--------------------------------
package irvine.oeis.a056;

import irvine.math.z.Z;
import irvine.oeis.a285.A285012;

/**
 * A056505 Number of periodic palindromic structures using a maximum of four different symbols.
 * @author Sean A. Irvine
 */
public class A056505 extends A285012 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = -1;

  @Override
  public Z next() {
    return t(++mN, 4).add(t(mN, 3)).add(t(mN, 2)).add(t(mN, 1));
  }
}
#!queue	A056506	1	->	0	A285012	--------------------------------
package irvine.oeis.a056;

import irvine.math.z.Z;
import irvine.oeis.a285.A285012;

/**
 * A056506 Number of periodic palindromic structures using a maximum of five different symbols.
 * @author Sean A. Irvine
 */
public class A056506 extends A285012 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = -1;

  @Override
  public Z next() {
    return t(++mN, 5).add(t(mN, 4)).add(t(mN, 3)).add(t(mN, 2)).add(t(mN, 1));
  }
}
#!queue	A056507	1	->	0	A285012	--------------------------------
package irvine.oeis.a056;

import irvine.math.z.Z;
import irvine.oeis.a285.A285012;

/**
 * A056507 Number of periodic palindromic structures using a maximum of six different symbols.
 * @author Sean A. Irvine
 */
public class A056507 extends A285012 {

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  private int mN = -1;

  @Override
  public Z next() {
    return t(++mN, 6).add(t(mN, 5)).add(t(mN, 4)).add(t(mN, 3)).add(t(mN, 2)).add(t(mN, 1));
  }
}
#!queue	A999999	0	0	0	0
