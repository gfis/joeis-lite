#!queue	A003270	0	->	1	A099054	1	int_offset	--------------------------------
package irvine.oeis.a003;

import irvine.oeis.Conjectural;
import irvine.oeis.a099.A099054;

/**
 * A003270 A nonrepetitive sequence.
 * @author Sean A. Irvine
 */
public class A003270 extends A099054 implements Conjectural {

  /** Construct the sequence. */
  public A003270() {
    super(1);
  }
}

#!queue	A003652	0	->	2	A003658	1	int_offset	--------------------------------
package irvine.oeis.a003;

import irvine.math.group.QuadraticFieldUtils;
import irvine.math.z.Z;
import irvine.oeis.Conjectural;

/**
 * A003652 Class number of real quadratic field with discriminant A003658(n), n &gt;= 2.
 * @author Sean A. Irvine
 */
public class A003652 extends A003658 implements Conjectural {

  // contains heuristics.

  /** Construct the sequence. */
  public A003652() {
    super(2);
    super.next(); // skip 1
  }

  @Override
  public Z next() {
    return Z.valueOf(QuadraticFieldUtils.classNumber(super.next()));
  }
}
#!queue	A048958	0	->	1	A001203	1	int_offset	--------------------------------
package irvine.oeis.a048;

import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;
import irvine.oeis.a001.A001203;

/**
 * A048958 4-digit terms in the continued fraction for Pi.
 * @author Sean A. Irvine
 */
public class A048958 extends AbstractSequence {

  private final A001203 mSeq = new A001203();
  private static final Z LOWER = Z.valueOf(1000);
  private static final Z UPPER = Z.valueOf(10000);

  /** Construct the sequence. */
  public A048958() {
    super(1);
  }

  @Override
  public Z next() {
    while (true) {
      final Z t = mSeq.next();
      if (t.compareTo(LOWER) >= 0 && t.compareTo(UPPER) < 0) {
        return t;
      }
    }
  }
}
#!queue	A048959	0	->	1	A001203	1	int_offset	--------------------------------
package irvine.oeis.a048;

import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;
import irvine.oeis.a001.A001203;

/**
 * A048959 Positions of 4-digit terms in the continued fraction for Pi (3 is at position 0).
 * @author Sean A. Irvine
 */
public class A048959 extends AbstractSequence {

  private final A001203 mSeq = new A001203();
  private static final Z LOWER = Z.valueOf(1000);
  private static final Z UPPER = Z.valueOf(10000);
  private long mM = -1;

  /** Construct the sequence. */
  public A048959() {
    super(1);
  }

  @Override
  public Z next() {
    while (true) {
      ++mM;
      final Z t = mSeq.next();
      if (t.compareTo(LOWER) >= 0 && t.compareTo(UPPER) < 0) {
        return Z.valueOf(mM);
      }
    }
  }
}
#!queue	A048960	0	->	1	A001203	1	int_offset	--------------------------------
package irvine.oeis.a048;

import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;
import irvine.oeis.a001.A001203;

/**
 * A048960 5-digit terms in the continued fraction for Pi.
 * @author Sean A. Irvine
 */
public class A048960 extends AbstractSequence {

  private final A001203 mSeq = new A001203();
  private static final Z LOWER = Z.valueOf(10000);
  private static final Z UPPER = Z.valueOf(100000);

  /** Construct the sequence. */
  public A048960() {
    super(1);
  }

  @Override
  public Z next() {
    while (true) {
      final Z t = mSeq.next();
      if (t.compareTo(LOWER) >= 0 && t.compareTo(UPPER) < 0) {
        return t;
      }
    }
  }
}
#!queue	A048961	0	->	1	A001203	1	int_offset	--------------------------------
package irvine.oeis.a048;

import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;
import irvine.oeis.a001.A001203;

/**
 * A048961 Positions of 5-digit terms in the continued fraction for Pi (3 is position 0).
 * @author Sean A. Irvine
 */
public class A048961 extends AbstractSequence {

  private final A001203 mSeq = new A001203();
  private static final Z LOWER = Z.valueOf(10000);
  private static final Z UPPER = Z.valueOf(100000);
  private long mM = -1;

  /** Construct the sequence. */
  public A048961() {
    super(1);
  }

  @Override
  public Z next() {
    while (true) {
      ++mM;
      final Z t = mSeq.next();
      if (t.compareTo(LOWER) >= 0 && t.compareTo(UPPER) < 0) {
        return Z.valueOf(mM);
      }
    }
  }
}
#!queue	A052434	0	->	2	A000720	1	int_offset	--------------------------------
package irvine.oeis.a052;

import irvine.math.Mobius;
import irvine.math.cr.CR;
import irvine.math.z.Z;
import irvine.oeis.a000.A000720;

/**
 * A052434 Nearest integer to R(n) - pi(n), where R(x) is the Riemann prime counting function.
 * @author Sean A. Irvine
 */
public class A052434 extends A000720 {

  // This is slow ... and heuristic ...

  private static final long HEURISTIC_TERMS = 10000;
  private long mN = 1;

  /** Construct the sequence. */
  public A052434() {
    super(2);
    super.next();
  }

  protected CR riemann(final long n) {
    return new CR() {
      @Override
      protected Z approximate(final int precision) {
        final CR ncr = CR.valueOf(n);
        Z sum = Z.ZERO;
        long k = 0;
        while (true) {
          final CR kcr = CR.valueOf(++k);
          final Z t = ncr.pow(kcr.inverse()).li().divide(kcr).getApprox(precision);
          if (t.isZero() || k > HEURISTIC_TERMS) {
            break;
          }
          final int mobius = Mobius.mobius(k);
          if (mobius != 0) {
            sum = sum.signedAdd(mobius == 1, t);
          }
        }
        return sum;
      }
    };
  }

  @Override
  public Z next() {
    final CR r = riemann(++mN);
    //System.out.println(mN + " R=" + r);
    return r.subtract(CR.valueOf(super.next())).round();
  }
}
#!queue	A056483	0	->	1	A056477	1	int_offset	--------------------------------
package irvine.oeis.a056;

import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;

/**
 * A056483 Number of primitive (aperiodic) palindromic structures using exactly four different symbols.
 * @author Georg Fischer
 */
public class A056483 extends AbstractSequence {

  private final A056477 mSeq1 = new A056477();
  private final A056478 mSeq2 = new A056478();

  /** Construct the sequence. */
  public A056483() {
    super(1);
    mSeq1.next();
    mSeq2.next();
  }

  @Override
  public Z next() {
    return mSeq2.next().subtract(mSeq1.next());
  }
}
#!queue	A056484	0	->	1	A056478	1	int_offset	--------------------------------
package irvine.oeis.a056;

import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;

/**
 * A056484 Number of primitive (aperiodic) palindromic structures using exactly five different symbols.
 * @author Georg Fischer
 */
public class A056484 extends AbstractSequence {

  private final A056478 mSeq1 = new A056478();
  private final A056479 mSeq2 = new A056479();

  /** Construct the sequence. */
  public A056484() {
    super(1);
    mSeq1.next();
    mSeq2.next();
  }

  @Override
  public Z next() {
    return mSeq2.next().subtract(mSeq1.next());
  }
}

#!queue	A067497	1	->	0	A067480	2	int_offset,_int_digit	--------------------------------
package irvine.oeis.a067;

import irvine.math.z.Z;

/**
 * A067497 Smallest power of 2 with n+1 digits (n&gt;=0). Also numbers k such that 1 is the first digit of 2^k.
 * @author Georg Fischer
 */
public class A067497 extends A067480 {

  /** Construct the sequence. */
  public A067497() {
    this(0, 1);
  }

  /**
   * Generic constructor with parameters
   * @param offset first index
   * @param digit leading digit
   */
  public A067497(final int offset, final int digit) {
    super(offset, digit);
  }

  @Override
  public Z next() {
    super.next();
    return Z.valueOf(mN);
  }
}
#!queue	A124574	0	->	1	A052179	3	int_offset,_long_x,_long_y	--------------------------------
package irvine.oeis.a124;
// Generated by gen_seq4.pl A052179/parmof3 at 2023-07-17 11:30

import irvine.oeis.a052.A052179;

/**
 * A124574 Triangle read by rows: row n is the first row of the matrix M[n]^(n-1), where M[n] is the n X n tridiagonal matrix with main diagonal (3,4,4,...) and super- and subdiagonals (1,1,1,...).
 * @author Georg Fischer
 */
public class A124574 extends A052179 {

  /** Construct the sequence. */
  public A124574() {
    super(1, 3, 4);
  }
}
#!queue	A124576	0	->	1	A052179	3	int_offset,_long_x,_long_y	--------------------------------
package irvine.oeis.a124;
// Generated by gen_seq4.pl A052179/parmof3 at 2023-07-17 11:30

import irvine.oeis.a052.A052179;

/**
 * A124576 Triangle read by rows: row n is the first row of the matrix M[n]^(n-1), where M[n] is the n X n tridiagonal matrix with main diagonal (1,4,4,...) and super- and subdiagonals (1,1,1,...).
 * @author Georg Fischer
 */
public class A124576 extends A052179 {

  /** Construct the sequence. */
  public A124576() {
    super(1, 1, 4);
  }
}
#!queue	A124733	0	->	1	A052179	3	int_offset,_long_x,_long_y	--------------------------------
package irvine.oeis.a124;
// Generated by gen_seq4.pl A052179/parmof3 at 2023-07-17 11:30

import irvine.oeis.a052.A052179;

/**
 * A124733 Triangle read by rows: row n is the first row of the matrix M[n]^(n-1), where M[n] is the n X n tridiagonal matrix with main diagonal (2,3,3,...) and super- and subdiagonals (1,1,1,...).
 * @author Georg Fischer
 */
public class A124733 extends A052179 {

  /** Construct the sequence. */
  public A124733() {
    super(1, 2, 3);
  }
}
#!queue	A159772	0	->	1	RowSumSequence	2	int_offset,_Sequence_seq	--------------------------------
package irvine.oeis.a159;
// manually robot/rowsums at 2023-07-20

import irvine.math.z.Z;
import irvine.oeis.a064.A064580;
import irvine.oeis.triangle.RowSumSequence;

/**
 * A159772 Number of n-leaf binary trees that do not contain (()((((()())())())())) as a subtree.
 * Row sums of triangle A064580
 * @author Georg Fischer
 */
public class A159772 extends RowSumSequence {

  private int mN = -1;

  /** Construct the sequence. */
  public A159772() {
    super(1, new A064580());
  }

  @Override
  public Z next() {
    return (++mN == 0) ? Z.ONE : super.next();
  }
}
#!queue	A999999	0	0	0	0
