#!queue	A051597	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a051;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000027;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A051597 Rows of triangle formed using Pascal's rule except begin and end n-th row with n+1.
 * @author Georg Fischer
 */
public class A051597 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A051597() {
    super($(OFFSET), new A000027());
  }
}
#!queue	A051601	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a051;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a001.A001477;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A051601 Rows of triangle formed using Pascal's rule except we begin and end the n-th row with n.
 * @author Georg Fischer
 */
public class A051601 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A051601() {
    super($(OFFSET), new A001477());
  }
}
#!queue	A051666	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a051;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000290;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A051666 Rows of triangle formed using Pascal's rule except begin and end n-th row with n^2.
 * @author Georg Fischer
 */
public class A051666 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A051666() {
    super($(OFFSET), new A000290());
  }
}
#!queue	A053207	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a053;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.recur.LinearRecurrence;
import irvine.oeis.a005.A005843;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A053207 Rows of triangle formed using Pascal's rule except begin n-th row with n and end it with n+1.
 * @author Georg Fischer
 */
public class A053207 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A053207() {
    super($(OFFSET), new LinearRecurrence(new long[] {-1, 2}, new long[] {-1, 1}), new A005843());
  }
}
#!queue	A054143	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a054;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000225;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A054143 Triangular array T given by T(n,k) = Sum_{0 &lt;= j &lt;= i-n+k, n-k &lt;= i &lt;= n} C(i,j) for n &gt;= 0 and 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A054143 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A054143() {
    super($(OFFSET), "1", new A000225());
    skipRight(1);
  }
}
#!queue	A059259	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a059;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A059259 Triangle read by rows giving coefficient T(i,j) of x^i y^j in 1/(1-x-x*y-y^2) = 1/((1+y)(1-x-y)) for (i,j) = (0,0), (1,0), (0,1), (2,0), (1,1), (0,2), ...
 * @author Georg Fischer
 */
public class A059259 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A059259() {
    super($(OFFSET), "1", new A059841());
  }
}
#!queue	A059260	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a059;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A059260 Triangle read by rows giving coefficient T(i,j) of x^i y^j in 1/(1-y-x*y-x^2) = 1/((1+x)(1-x-y)) for (i,j) = (0,0), (1,0), (0,1), (2,0), (1,1), (0,2), ...
 * @author Georg Fischer
 */
public class A059260 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A059260() {
    super($(OFFSET), new A059841(), "1");
  }
}
#!queue	A067337	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a067;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a133.A133494;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A067337 Triangle where T(n,k)=2*T(n,k-1)+C(n-1,k)-C(n-1,k-1) and n&gt;=k&gt;=0.
 * @author Georg Fischer
 */
public class A067337 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A067337() {
    super($(OFFSET), "1", new A133494());
  }
}
#!queue	A071919	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a071;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000007;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A071919 Number of monotone nondecreasing functions [n]-&gt;[m] for n &gt;= 0, m &gt;= 0, read by antidiagonals.
 * @author Georg Fischer
 */
public class A071919 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A071919() {
    super($(OFFSET), "1", new A000007());
  }
}
#!queue	A074829	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a074;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000045;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A074829 Triangle formed by Pascal's rule, except that the n-th row begins and ends with the n-th Fibonacci number.
 * @author Georg Fischer
 */
public class A074829 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A074829() {
    super($(OFFSET), new A000045());
    skipLeft(1);
    skipRight(1);
  }
}
#!queue	A074883	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a074;
// manually 2021-10-21

import irvine.oeis.a000.A000203;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A074883 Triangle generated by Pascal's rule, except begin and end the n-th row with sigma(n).
 * @author Georg Fischer
 */
public class A074883 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A074883() {
    super($(OFFSET), new A000203());
  }
}
#!queue	A074909	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a074;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000027;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A074909 Running sum of Pascal's triangle (A007318), or beheaded Pascal's triangle read by beheaded rows.
 * @author Georg Fischer
 */
public class A074909 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A074909() {
    super($(OFFSET), "1", new A000027());
  }
}
#!queue	A074911	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a074;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000142;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A074911 Triangle generated by Pascal's rule, except begin and end the n-th row with n!.
 * @author Georg Fischer
 */
public class A074911 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A074911() {
    super($(OFFSET), new A000142());
    skipLeft(1);
    skipRight(1);
  }
}
#!queue	A074912	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a074;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000010;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A074912 Triangle generated by Pascal's rule, except begin and end the n-th row with phi(n).
 * @author Georg Fischer
 */
public class A074912 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A074912() {
    super($(OFFSET), new A000010());
  }
}
#!queue	A080233	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a080;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a024.A024000;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A080233 Triangle T(n,k) obtained by taking differences of consecutive pairs of row elements of Pascal's triangle A007318.
 * @author Georg Fischer
 */
public class A080233 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A080233() {
    super($(OFFSET), "1", new A024000());
  }
}
#!queue	A091598	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a091;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a078.A078008;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A091598 Triangle read by rows: T(n,0) = A078008(n), T(n,m) = T(n-1,m-1) + T(n-1,m).
 * @author Georg Fischer
 */
public class A091598 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A091598() {
    super($(OFFSET), new A078008(), "1");
  }
}
#!queue	A093560	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a093;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A093560 (3,1) Pascal triangle.
 * @author Georg Fischer
 */
public class A093560 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A093560() {
    super($(OFFSET), "3", "1");
  }
}
#!queue	A093561	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a093;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A093561 (4,1) Pascal triangle.
 * @author Georg Fischer
 */
public class A093561 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A093561() {
    super($(OFFSET), "4", "1");
  }
}
#!queue	A093562	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a093;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A093562 (5,1) Pascal triangle.
 * @author Georg Fischer
 */
public class A093562 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A093562() {
    super($(OFFSET), "5", "1");
  }
}
#!queue	A093563	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a093;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A093563 (6,1)-Pascal triangle.
 * @author Georg Fischer
 */
public class A093563 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A093563() {
    super($(OFFSET), "6", "1");
  }
}
#!queue	A093564	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a093;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A093564 (7,1) Pascal triangle.
 * @author Georg Fischer
 */
public class A093564 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A093564() {
    super($(OFFSET), "7", "1");
  }
}
#!queue	A093565	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a093;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A093565 (8,1) Pascal triangle.
 * @author Georg Fischer
 */
public class A093565 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A093565() {
    super($(OFFSET), "8", "1");
  }
}
#!queue	A093644	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a093;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A093644 (9,1) Pascal triangle.
 * @author Georg Fischer
 */
public class A093644 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A093644() {
    super($(OFFSET), "9", "1");
  }
}
#!queue	A093645	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a093;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A093645 (10,1) Pascal triangle.
 * @author Georg Fischer
 */
public class A093645 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A093645() {
    super($(OFFSET), "10", "1");
  }
}
#!queue	A095660	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a095;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A095660 Pascal (1,3) triangle.
 * @author Georg Fischer
 */
public class A095660 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A095660() {
    super($(OFFSET), "1", "3");
  }
}
#!queue	A095666	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a095;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A095666 Pascal (1,4) triangle.
 * @author Georg Fischer
 */
public class A095666 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A095666() {
    super($(OFFSET), "1", "4");
  }
}
#!queue	A096940	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a096;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A096940 Pascal (1,5) triangle.
 * @author Georg Fischer
 */
public class A096940 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A096940() {
    super($(OFFSET), "1", "5");
  }
}
#!queue	A096956	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a096;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A096956 Pascal (1,6) triangle.
 * @author Georg Fischer
 */
public class A096956 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A096956() {
    super($(OFFSET), "1", "6");
  }
}
#!queue	A098354	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a098;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000079;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A098354 Multiplication table of the powers of 2 read by antidiagonals.
 * @author Georg Fischer
 */
public class A098354 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A098354() {
    super($(OFFSET), new A000079());
    skipLeft(2);
    skipRight(2);
  }
}
#!queue	A099567	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a099;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000930;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A099567 Riordan array (1/(1-x-x^3), 1/(1-x)).
 * @author Georg Fischer
 */
public class A099567 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A099567() {
    super($(OFFSET), new A000930(), "1");
  }
}
#!queue	A102363	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a102;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000079;
import irvine.oeis.a168.A168604;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A102363 Triangle read by rows, constructed by a Pascal-like rule with left edge = 2^k, right edge = 2^(k+1)-1 (k &gt;= 0).
 * @author Georg Fischer
 */
public class A102363 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A102363() {
    super($(OFFSET), new A000079(), new A168604());
  }
}
#!queue	A106516	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a106;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000244;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A106516 A Pascal-like triangle based on 3^n.
 * @author Georg Fischer
 */
public class A106516 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A106516() {
    super($(OFFSET), new A000244(), "1");
  }
}
#!queue	A108561	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a108;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a033.A033999;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A108561 Triangle read by rows: T(n,0)=1, T(n,n)=(-1)^n, T(n+1,k)=T(n,k-1)+T(n,k) for 0 &lt; k &lt; n.
 * @author Georg Fischer
 */
public class A108561 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A108561() {
    super($(OFFSET), "1", new A033999());
  }
}
#!queue	A108617	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a108;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000045;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A108617 Triangle read by rows: T(n,k) = T(n-1,k-1) + T(n-1,k) for 0 &lt; k &lt; n, T(n,0) = T(n,n) = n-th Fibonacci number.
 * @author Georg Fischer
 */
public class A108617 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A108617() {
    super($(OFFSET), new A000045());
  }
}
#!queue	A109128	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a109;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A109128 Triangle read by rows: T(n,k) = T(n-1,k-1) + T(n-1,k) + 1 for 0&lt;k&lt;n, T(n,0) = T(n,n) = 1.
 * @author Georg Fischer
 */
public class A109128 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A109128() {
    super($(OFFSET), "1");
    setPlus("1");
  }
}
#!queue	A117670	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a117;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000027;
import irvine.oeis.a000.A000225;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A117670 Triangle read by rows: partial sums of the Pascal triangle minus 1.
 * @author Georg Fischer
 */
public class A117670 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A117670() {
    super($(OFFSET), new A000027(), new A000225());
    setPlus("1");
    skipRight(1);
  }
}
#!queue	A118923	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a118;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a079.A079978;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A118923 Triangle T(n,k) built by placing T(n,0)=A000012(n) in the left edge, T(n,n)=A079978(n) on the right edge and filling the body with the Pascal recurrence T(n,k) = T(n-1,k) + T(n-1,k-1).
 * @author Georg Fischer
 */
public class A118923 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A118923() {
    super($(OFFSET), "1", new A079978());
  }
}
#!queue	A121460	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a121;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a001.A001519;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A121460 Triangle read by rows: T(n,k) is the number of nondecreasing Dyck paths of semilength n, having k returns to the x-axis (1&lt;=k&lt;=n).
 * @author Georg Fischer
 */
public class A121460 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A121460() {
    super($(OFFSET), new A001519(), "1");
  }
}
#!queue	A125166	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a125;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000578;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A125166 Triangle, companion to A125165, left border = n^3.
 * @author Georg Fischer
 */
public class A125166 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A125166() {
    super($(OFFSET), new A000578(), "1");
    skipLeft(1);
  }
}
#!queue	A125170	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a125;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a007.A007051;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A125170 Binomial transform of an infinite lower triangular matrix with (1,1,2,4,8,...) in every column and the rest zeros. Let the left column = A007051, then for k &gt; 1, T(n,k) = (n-1,k) + (n-1,k-1).
 * @author Georg Fischer
 */
public class A125170 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A125170() {
    super($(OFFSET), new A007051(), "1");
  }
}
#!queue	A125608	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a125;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000204;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A125608 Triangle read by rows: given the left border = the Lucas numbers, (1, 3, 4, 7, ...), T(n,k) = (n-1,k) + (n-1,k-1).
 * @author Georg Fischer
 */
public class A125608 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A125608() {
    super($(OFFSET), new A000204(), "1");
  }
}
#!queue	A126258	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a126;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a027.A027656;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A126258 Triangle generated by Pascal's rule with left diagonal = [1,0,2,0,3,0,4,...](A000027 with interpolated zeros) and right diagonal =[1,1,1,1,1,...].
 * @author Georg Fischer
 */
public class A126258 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A126258() {
    super($(OFFSET), new A027656(), "1");
  }
}
#!queue	A128176	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a128;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a008.A008619;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A128176 A128174 * A007318.
 * @author Georg Fischer
 */
public class A128176 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A128176() {
    super($(OFFSET), new A008619(), "1");
  }
}
#!queue	A128308	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a128;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a111.A111277;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A128308 Binomial transform of A128307.
 * @author Georg Fischer
 */
public class A128308 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A128308() {
    super($(OFFSET), new A111277(), "1");
  }
}
#!queue	A129689	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a129;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a255.A255047;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A129689 A007318 * A129688.
 * @author Georg Fischer
 */
public class A129689 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A129689() {
    super($(OFFSET), new A255047(), "1");
  }
}
#!queue	A131060	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131060 3*A007318 - 2*A000012 as infinite lower triangular matrices.
 * @author Georg Fischer
 */
public class A131060 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131060() {
    super($(OFFSET), "1");
    setPlus("2");
  }
}
#!queue	A131061	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131061 Triangle read by rows: T(n,k) = 4*binomial(n,k) - 3  for 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A131061 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131061() {
    super($(OFFSET), "1");
    setPlus("3");
  }
}
#!queue	A131063	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131063 Triangle read by rows: T(n,k) = 5*binomial(n,k) - 4  for 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A131063 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131063() {
    super($(OFFSET), "1");
    setPlus("4");
  }
}
#!queue	A131065	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131065 Triangle read by rows: T(n,k) = 6*binomial(n,k) - 5 for 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A131065 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131065() {
    super($(OFFSET), "1");
    setPlus("5");
  }
}
#!queue	A131067	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131067 Triangle read by rows: T(n,k) = 7*binomial(n,k) - 6 for 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A131067 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131067() {
    super($(OFFSET), "1");
    setPlus("6");
  }
}
#!queue	A131084	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a019.A019590;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131084 A129686 * A007318. Riordan triangle (1+x, x/(1-x)).
 * @author Georg Fischer
 */
public class A131084 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131084() {
    super($(OFFSET), new A019590(), "1");
  }
}
#!queue	A131085	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a080.A080956;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131085 Triangle T(n,k) (n&gt;=0, 0&lt;=k&lt;=n-1) read by rows, A007318 * A129686.
 * @author Georg Fischer
 */
public class A131085 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131085() {
    super($(OFFSET), new A080956(), "1");
  }
}
#!queue	A131415	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a006.A006127;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131415 (A007318 * A000012) + (A000012 * A007318) - A007318.
 * @author Georg Fischer
 */
public class A131415 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131415() {
    super($(OFFSET), new A006127(), "1");
  }
}
#!queue	A131768	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a005.A005408;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131768 2*(A007318 * A097807) - A000012.
 * @author Georg Fischer
 */
public class A131768 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131768() {
    super($(OFFSET), new A005408(), "1");
    setPlus("1");
  }
}
#!queue	A131923	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000027;
import irvine.oeis.a001.A001489;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131923 Triangle read by rows: T(n,k) = binomial(n,k) + n.
 * @author Georg Fischer
 */
public class A131923 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131923() {
    super($(OFFSET), new A000027());
    setPlus(new A001489());
  }
}
#!queue	A131948	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a005.A005408;
import irvine.oeis.a239.A239229;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A131948 Triangle T(n,k) = 2*A002024(n+1,k+1) + A007318(n,k) - 2, read by rows.
 * @author Georg Fischer
 */
public class A131948 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A131948() {
    super($(OFFSET), new A005408());
    setPlus(new A239229());
    skipPlus(1);
  }
}
#!queue	A132200	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a132;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a123.A123932;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A132200 Numbers in (4,4)-Pascal triangle .
 * @author Georg Fischer
 */
public class A132200 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A132200() {
    super($(OFFSET), new A123932());
  }
}
#!queue	A133545	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a133;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a006.A006127;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A133545 (A000012 * A007318 - A007318 * A000012) - A000012.
 * @author Georg Fischer
 */
public class A133545 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A133545() {
    super($(OFFSET), new A006127(), "1");
    setPlus("1");
  }
}
#!queue	A133913	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a133;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a007.A007001;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A133913 Array read by ascending antidiagonals generated from partial sums of A007001.
 * @author Georg Fischer
 */
public class A133913 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A133913() {
    super($(OFFSET), "1", new A007001());
  }
}
#!queue	A134634	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a134;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000108;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A134634 Triangle formed by Pascal's rule with left borders = A000108.
 * @author Georg Fischer
 */
public class A134634 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A134634() {
    super($(OFFSET), new A000108());
  }
}
#!queue	A134636	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a134;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a005.A005408;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A134636 Triangle formed by Pascal's rule given borders = 2n+1.
 * @author Georg Fischer
 */
public class A134636 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A134636() {
    super($(OFFSET), new A005408());
  }
}
#!queue	A135087	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a135;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a122.A122553;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A135087 Triangle T(n, k) = 2*A134058(n, k) - 1, read by rows.
 * @author Georg Fischer
 */
public class A135087 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A135087() {
    super($(OFFSET), new A122553());
    setPlus("1");
  }
}
#!queue	A135855	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a135;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a052.A052905;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A135855 A007318 * a tridiagonal matrix with (1, 4, 1, 0, 0, 0, ...) in every column.
 * @author Georg Fischer
 */
public class A135855 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A135855() {
    super($(OFFSET), new A052905(), "1");
  }
}
#!queue	A135856	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a135;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a016.A016813;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A135856 A007318 * a bidiagonal matrix with all 1's in the main diagonal and all 4's in the subdiagonal.
 * @author Georg Fischer
 */
public class A135856 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A135856() {
    super($(OFFSET), new A016813(), "1");
  }
}
#!queue	A135857	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a135;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a016.A016777;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A135857 Partial sums triangle based on A016777. Riordan convolution triangle ((1 + 2*x)/(1-x)^2, x/(1-x)).
 * @author Georg Fischer
 */
public class A135857 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A135857() {
    super($(OFFSET), new A016777(), "1");
  }
}
#!queue	A136431	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a136;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000045;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A136431 Hyperfibonacci square number array a(k,n) = F(n)^(k), read by ascending antidiagonals (k, n &gt;= 0).
 * @author Georg Fischer
 */
public class A136431 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A136431() {
    super($(OFFSET), "0", new A000045());
  }
}
#!queue	A136438	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a136;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000073;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A136438 Hypertribonacci number array read by antidiagonals.
 * @author Georg Fischer
 */
public class A136438 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A136438() {
    super($(OFFSET), "0", new A000073());
  }
}
#!queue	A137688	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a137;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000079;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A137688 2^A003056: 2^n appears n+1 times.
 * @author Georg Fischer
 */
public class A137688 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A137688() {
    super($(OFFSET), new A000079());
  }
}
#!queue	A140709	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a140;

import irvine.oeis.a132.A132371;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A140709 Triangle read by rows: T(n,k) is the number of deco polyominoes of height n in which the maximal number of initial consecutive columns ending at the same level is k (1 &lt;= k &lt;= n).
 * @author Georg Fischer
 */
public class A140709 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A140709() {
    super($(OFFSET), new A132371(), "1");
  }
}
#!queue	A144225	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a144;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000007;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A144225 Bordered Pascal's triangle in rectangular format.
 * @author Georg Fischer
 */
public class A144225 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A144225() {
    super($(OFFSET), new A000007());
    setPlus(new A000007());
  }
}
#!queue	A153491	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a153;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A153491 Triangle T(n,m)= 11*binomial(n,k) - 8 read by rows, 0&lt;=k&lt;=n.
 * @author Georg Fischer
 */
public class A153491 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A153491() {
    super($(OFFSET), "3");
    setPlus("8");
  }
}
#!queue	A156644	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a156;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a024.A024000;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A156644 Mirror image of triangle A080233.
 * @author Georg Fischer
 */
public class A156644 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A156644() {
    super($(OFFSET), new A024000(), "1");
  }
}
#!queue	A156665	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a156;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a052.A052551;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A156665 Triangle read by rows, A156663 * A007318.
 * @author Georg Fischer
 */
public class A156665 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A156665() {
    super($(OFFSET), new A052551(), "1");
  }
}
#!queue	A157933	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a157;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000079;
import irvine.oeis.a105.A105755;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A157933 Triangle T(i,j) such that Sum_{j=0..i} T(i,j)*x(i,j)/2^i = Sum_{k=0..i, j=0..k} x(k,j), if x(k-1,j) = (x(k,j) + x(k,j+1))/2.
 * @author Georg Fischer
 */
public class A157933 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A157933() {
    super($(OFFSET), new A105755());
    setPlus(new A000079());
    skipPlus(2);
  }
}
#!queue	A160760	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a160;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.recur.LinearRecurrence;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A160760 Triangle read by rows, binomial transform of an infinite lower triangular Toeplitz matrix with A078008 in every column.
 * @author Georg Fischer
 */
public class A160760 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A160760() {
    super($(OFFSET), new LinearRecurrence(new long[] {3}, new long[] {1}, new long[] {1}), "1");
  }
}
#!queue	A164847	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a164;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a098.A098608;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A164847 (100^n,1) Pascal triangle.
 * @author Georg Fischer
 */
public class A164847 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A164847() {
    super($(OFFSET), new A098608(), "1");
  }
}
#!queue	A164866	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a164;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a096.A096884;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A164866 (101^n,1)-Pascal triangle.
 * @author Georg Fischer
 */
public class A164866 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A164866() {
    super($(OFFSET), "1", new A096884());
  }
}
#!queue	A168625	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a168;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A168625 Triangle T(n,k) = 8*binomial(n,k) - 7 with columns 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A168625 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A168625() {
    super($(OFFSET), "1");
    setPlus("7");
  }
}
#!queue	A172171	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a172;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a017.A017173;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A172171 (1, 9) Pascal Triangle read by horizontal rows. Same as A093644, but mirrored and without the additional row/column (1, 9, 9, 9, 9, ...).
 * @author Georg Fischer
 */
public class A172171 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A172171() {
    super($(OFFSET), "1", new A017173());
  }
}
#!queue	A172179	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a172;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A172179 (1,[99n+1]) Pascal Triangle.
 * @author Georg Fischer
 */
public class A172179 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A172179() {
    super($(OFFSET), "1", new A172178());
  }
}
#!queue	A172185	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a172;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.recur.PaddingSequence;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A172185 (9,11) Pascal triangle.
 * @author Georg Fischer
 */
public class A172185 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A172185() {
    super($(OFFSET), "9", new PaddingSequence(new long[] { 1 }, new long[] { 11 }));
  }
}
#!queue	A172283	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a172;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.recur.PaddingSequence;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A172283 (-9,11) Pascal triangle.
 * @author Georg Fischer
 */
public class A172283 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A172283() {
    super($(OFFSET), "-9", new PaddingSequence(new long[] { 1 }, new long[] { 11 }));
  }
}
#!queue	A176203	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a176;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A176203 Triangle read by rows: T(n, k) = 16*binomial(n, k) - 15.
 * @author Georg Fischer
 */
public class A176203 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A176203() {
    super($(OFFSET), "1");
    setPlus("15");
  }
}
#!queue	A181971	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a181;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a080.A080513;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A181971 Triangle read by rows: T(n,0) = 1, T(n,n) = floor((n+3)/2) and T(n,k) = T(n-1,k-1) + T(n-1,k), 0 &lt; k &lt; n.
 * @author Georg Fischer
 */
public class A181971 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A181971() {
    super($(OFFSET), "1", new A080513());
  }
}
#!queue	A182533	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a182;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a134.A134824;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A182533 A symmetrical triangle. Read by rows:  T(n,k) = 2*C(n-2,k-1) - C(n-2,k) - C(n-2,k-2), n &gt;= 2, 0 &lt;= k &lt;= n, with T(0,0) = 0, T(1,0) = T(1,1) = 1.
 * @author Georg Fischer
 */
public class A182533 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A182533() {
    super($(OFFSET), new A134824());
  }
}
#!queue	A187887	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a187;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a006.A006134;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A187887 Riordan matrix (1/((1-x)*sqrt(1-4*x)),x/(1-x)).
 * @author Georg Fischer
 */
public class A187887 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A187887() {
    super($(OFFSET), new A006134(), "1");
  }
}
#!queue	A187888	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a187;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000984;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A187888 Riordan matrix (1/sqrt(1-4*x),x/(1-x)).
 * @author Georg Fischer
 */
public class A187888 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A187888() {
    super($(OFFSET), new A000984(), "1");
  }
}
#!queue	A193820	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a193;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a011.A011782;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A193820 Triangular array:  the fusion of polynomial sequences P and Q given by p(n,x)=(x+1)^n and q(n,x)=x^n+x^(n-1)+...+x+1.
 * @author Georg Fischer
 */
public class A193820 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A193820() {
    super($(OFFSET), "1", new A011782());
  }
}
#!queue	A193923	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a193;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a088.A088305;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A193923 Triangular array:  the fusion of (p(n,x)) by (q(n,x)), where p(n,x)=(x+1)^n and q(n,x)=Sum_{k=0..n}F(k+1)*x^(n-k), where F=A000045 (Fibonacci numbers).
 * @author Georg Fischer
 */
public class A193923 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A193923() {
    super($(OFFSET), "1", new A088305());
  }
}
#!queue	A193924	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a193;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a088.A088305;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A193924 Mirror of the triangle A193923.
 * @author Georg Fischer
 */
public class A193924 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A193924() {
    super($(OFFSET), new A088305(), "1");
  }
}
#!queue	A194118	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a194;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000124;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A194118 Triangular array:  T(n,k)=C(n+2,k)+C(n+2,k+2), 0&lt;=k&lt;=n.
 * @author Georg Fischer
 */
public class A194118 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A194118() {
    super($(OFFSET), new A000124());
    skipLeft(1);
    skipRight(1);
  }
}
#!queue	A204201	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a204;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a033.A033484;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A204201 Triangle based on (0,1/3,1) averaging array.
 * @author Georg Fischer
 */
public class A204201 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A204201() {
    super($(OFFSET), "1", new A033484());
  }
}
#!queue	A204202	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a204;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a153.A153893;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A204202 Triangle based on (0,2/3,1) averaging array.
 * @author Georg Fischer
 */
public class A204202 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A204202() {
    super($(OFFSET), "2", new A153893());
  }
}
#!queue	A204203	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a204;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a036.A036563;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A204203 Triangle based on (0,1/4,1) averaging array.
 * @author Georg Fischer
 */
public class A204203 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A204203() {
    super($(OFFSET), "1", new A036563());
    skipRight(2);
  }
}
#!queue	A204204	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a204;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000225;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A204204 Triangle based on (0,3/4,1) averaging array.
 * @author Georg Fischer
 */
public class A204204 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A204204() {
    super($(OFFSET), "3", new A000225());
    skipRight(2);
  }
}
#!queue	A204205	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a204;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a048.A048487;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A204205 Triangle based on (0,1/5,1) averaging array.
 * @author Georg Fischer
 */
public class A204205 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A204205() {
    super($(OFFSET), "1", new A048487());
  }
}
#!queue	A204206	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a204;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000051;
import irvine.oeis.a000.A000225;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A204206 Triangle based on (1,3/2,2) averaging array.
 * @author Georg Fischer
 */
public class A204206 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A204206() {
    super($(OFFSET), new A000051(), new A000225());
    skipLeft(1);
    skipRight(2);
  }
}
#!queue	A214292	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a214;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a001.A001477;
import irvine.oeis.a001.A001489;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A214292 Triangle read by rows: T(n,k) = T(n-1,k-1) + T(n-1,k), 0 &lt; k &lt; n with T(n,0) = n and T(n,n) = -n.
 * @author Georg Fischer
 */
public class A214292 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A214292() {
    super($(OFFSET), new A001477(), new A001489());
  }
}
#!queue	A221881	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a221;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000225;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A221881 Number of order-preserving or order-reversing full contraction mappings (of an n-chain) with (right) waist exactly k.
 * @author Georg Fischer
 */
public class A221881 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A221881() {
    super($(OFFSET), "1", new A000225());
    setPlus("1");
    skipRight(1);
  }
}
#!queue	A222403	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a222;
// manually wraptr1 at 2021-11-13

import irvine.oeis.a000.A000217;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A222403 Triangle read by rows: left and right edges are A000217, interior entries are filled in using the Pascal triangle rule.
 * @author Georg Fischer
 */
public class A222403 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A222403() {
    super($(OFFSET), new A000217());
  }
}
#!queue	A222404	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a222;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a002.A002378;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A222404 Triangle read by rows: left and right edges are A002378, interior entries are filled in using the Pascal triangle rule.
 * @author Georg Fischer
 */
public class A222404 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A222404() {
    super($(OFFSET), new A002378());
  }
}
#!queue	A222405	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a222;
// manually wraptr1 at 2021-11-13

import irvine.oeis.a002.A002061;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A222405 Triangle read by rows: left and right edges are A002061 (1,3,7,13,21,...), interior entries are filled in using the Pascal triangle rule.
 * @author Georg Fischer
 */
public class A222405 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A222405() {
    super($(OFFSET), new A002061());
    skipLeft(1);
  }
}
#!queue	A227074	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a227;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000302;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A227074 A triangle formed like Pascal's triangle, but with 4^n on the borders instead of 1.
 * @author Georg Fischer
 */
public class A227074 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A227074() {
    super($(OFFSET), new A000302());
  }
}
#!queue	A227075	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a227;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000244;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A227075 A triangle formed like Pascal's triangle, but with 3^n on the borders instead of 1.
 * @author Georg Fischer
 */
public class A227075 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A227075() {
    super($(OFFSET), new A000244());
  }
}
#!queue	A227076	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a227;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000351;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A227076 A triangle formed like Pascal's triangle, but with 5^n on the borders instead of 1.
 * @author Georg Fischer
 */
public class A227076 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A227076() {
    super($(OFFSET), new A000351());
  }
}
#!queue	A227550	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a227;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000142;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A227550 A triangle formed like Pascal's triangle, but with factorial(n) on the borders instead of 1.
 * @author Georg Fischer
 */
public class A227550 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A227550() {
    super($(OFFSET), new A000142());
  }
}
#!queue	A228053	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a228;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a033.A033999;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A228053 A triangle formed like Pascal's triangle, but with (-1)^(n+1) on the borders instead of 1.
 * @author Georg Fischer
 */
public class A228053 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A228053() {
    super($(OFFSET), new A033999());
    skipLeft(1);
    skipRight(1);
  }
}
#!queue	A228074	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a228;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000045;
import irvine.oeis.a001.A001477;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A228074 A Fibonacci-Pascal triangle read by rows: T(n,0) = Fibonacci(n), T(n,n) = n and for n &gt; 0: T(n,k) = T(n-1,k-1) + T(n-1,k), 0 &lt; k &lt; n.
 * @author Georg Fischer
 */
public class A228074 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A228074() {
    super($(OFFSET), new A000045(), new A001477());
  }
}
#!queue	A228196	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a228;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000290;
import irvine.oeis.a155.A155559;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A228196 A triangle formed like Pascal's triangle, but with n^2 on the left border and 2^n on the right border instead of 1.
 * @author Georg Fischer
 */
public class A228196 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A228196() {
    super($(OFFSET), new A000290(), new A155559());
  }
}
#!queue	A230448	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a230;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a226.A226205;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A230448 T(n, k) = T(n-1, k-1) + T(n-1, k) with T(n, 0) = 1 and T(n, n) = A226205(n+1), n &gt;= 0 and 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A230448 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A230448() {
    super($(OFFSET), "1", new A226205());
  }
}
#!queue	A230449	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a230;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a052.A052952;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A230449 T(n, k) = T(n-1, k-1) + T(n-1, k) with T(n, 0) = 1 and T(n, n) = A052952(n), n &gt;= 0 and 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A230449 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A230449() {
    super($(OFFSET), "1", new A052952());
  }
}
#!queue	A235501	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a235;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a077.A077957;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A235501 Riordan array (1/(1-2*x^2), x/(1-x)).
 * @author Georg Fischer
 */
public class A235501 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A235501() {
    super($(OFFSET), new A077957(), "1");
  }
}
#!queue	A236538	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a236;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000079;
import irvine.oeis.a001.A001792;
import irvine.oeis.a053.A053220;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A236538 Triangle read by rows: T(n,k) = (n+1)*2^(n-2)+(k-1)*2^(n-1) for 1 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A236538 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A236538() {
    super($(OFFSET), new A001792(), new A053220());
    setPlus(new A000079());
    skipPlus(2);
  }
}
#!queue	A292508	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a292;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a002.A002865;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A292508 Number A(n,k) of partitions of n with k kinds of 1; square array A(n,k), n&gt;=0, k&gt;=0, read by antidiagonals.
 * @author Georg Fischer
 */
public class A292508 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A292508() {
    super($(OFFSET), "1", new A002865());
  }
}
#!queue	A298485	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a298;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a040.A040000;
import irvine.oeis.a153.A153881;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A298485 Triangle read by rows; row 0 is 1; the n-th row for n&gt;0 contains the coefficients in the expansion of (2-x)*(1+x)^(n-1).
 * @author Georg Fischer
 */
public class A298485 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A298485() {
    super($(OFFSET), new A040000(), new A153881());
  }
}
#!queue	A299146	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a299;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000027;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A299146 Modified Pascal's triangle read by rows: T(n,k) = C(n+1,k) - n, 1 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A299146 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A299146() {
    super($(OFFSET), "1");
    setPlus(new A000027());
  }
}
#!queue	A302764	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a302;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a080.A080956;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A302764 Pascal-like triangle with A000012 as the left border and A080956 as the right border.
 * @author Georg Fischer
 */
public class A302764 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A302764() {
    super($(OFFSET), "1", new A080956());
  }
}
#!queue	A316938	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a316;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000045;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A316938 Triangle read by rows formed using Pascal's rule except that n-th row begins and ends with Fibonacci(n+4).
 * @author Georg Fischer
 */
public class A316938 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A316938() {
    super($(OFFSET), new A000045());
    skipLeft(4);
    skipRight(4);
  }
}
#!queue	A316939	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a316;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a000.A000045;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A316939 Triangle read by rows formed using Pascal's rule except that n-th row begins and ends with Fibonacci(n+2).
 * @author Georg Fischer
 */
public class A316939 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A316939() {
    super($(OFFSET), new A000045());
    skipLeft(2);
    skipRight(2);
  }
}
#!queue	A323211	0	->	0	WrappedRecurrence	--------------------------------
package irvine.oeis.a323;
// Generated by gen_seq4.pl wraptr1 at 2021-10-17 19:42

import irvine.oeis.a057.A057428;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A323211 Level 1 of Pascal's pyramid. T(n, k) triangle read by rows for n &gt;= 0 and 0 &lt;= k &lt;= n.
 * @author Georg Fischer
 */
public class A323211 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A323211() {
    super($(OFFSET), "1");
    setPlus(new A057428());
  }
}
#!queue	A325000	0	->	1	WrappedRecurrence	--------------------------------
package irvine.oeis.a325;
// Generated by gen_seq4.pl wraptr2 at 2021-10-17 19:42

import irvine.oeis.a000.A000217;
import irvine.oeis.triangle.WrappedRecurrence;

/**
 * A325000 Array read by descending antidiagonals: T(n,k) is the number of unoriented colorings of the facets (or vertices) of a regular n-dimensional simplex using up to k colors.
 * @author Georg Fischer
 */
public class A325000 extends WrappedRecurrence {

  /** Construct the sequence. */
  public A325000() {
    super($(OFFSET), new A000217(), "1");
    skipLeft(1);
  }
}
#!queue	A999999	0	0	0	0
