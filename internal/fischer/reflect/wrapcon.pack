#!queue	A057211	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a057;
// manually triconst 2021-10-19

import irvine.oeis.recur.PeriodicSequence;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A057211 Alternating runs of ones and zeros, where the n-th run has length n.
 * @author Georg Fischer
 */
public class A057211 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A057211() {
    super($(OFFSET), new PeriodicSequence(1, 0));
    mSeqPlus = new PeriodicSequence(1, 0);
  }
}
#!queue	A057212	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a057;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000035;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A057212 n-th run has length n.
 * @author Georg Fischer
 */
public class A057212 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A057212() {
    super($(OFFSET), new A000035(), new A000035());
    setPlus(new A000035());
  }
}
#!queue	A057944	0	->	0	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a057;
// Generated by gen_seq4.pl triconst at 2021-10-31 22:00

import irvine.oeis.a000.A000217;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A057944 Largest triangular number less than or equal to n; write m-th triangular number m+1 times.
 * @author Georg Fischer
 */
public class A057944 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A057944() {
    super($(OFFSET), new A000217(), new A000217());
    setPlus(new A000217());
    skipPlus(2);
  }
}
#!queue	A063712	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a063;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000027;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A063712 Table of bits required for product of n- and k-bit positive numbers read by antidiagonals.
 * @author Georg Fischer
 */
public class A063712 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A063712() {
    super($(OFFSET), new A000027(), new A000027());
    setPlus(new A000027());
    skipPlus(3);
  }
}
#!queue	A108035	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a108;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000045;
import irvine.oeis.a020.A020701;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A108035 Triangle read by rows: n-th row is n-th nonzero Fibonacci number repeated n times.
 * @author Georg Fischer
 */
public class A108035 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A108035() {
    super($(OFFSET), new A000045(), new A000045());
    setPlus(new A020701());
    skipLeft(2);
    skipRight(2);
  }
}
#!queue	A108036	0	->	0	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a108;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000045;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A108036 Triangle read by rows: the triangle in A108035 surrounded by a border of 0's.
 * @author Georg Fischer
 */
public class A108036 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A108036() {
    super($(OFFSET), "0", "0");
    setPlus(new A000045());
    skipPlus(2);
  }
}
#!queue	A123081	0	->	0	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a123;
// Generated by gen_seq4.pl triconst at 2021-10-31 22:00

import irvine.oeis.a000.A000110;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A123081 Infinite square array read by antidiagonals: T(n,k) = Bell(n+k) = A000110(n+k).
 * @author Georg Fischer
 */
public class A123081 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A123081() {
    super($(OFFSET), new A000110(), new A000110());
    setPlus(new A000110());
    skipPlus(2);
  }
}
#!queue	A127733	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a127;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000290;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A127733 Square of A127648 = Triangle read by rows, n^2 preceded by (n-1) zeros.
 * @author Georg Fischer
 */
public class A127733 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A127733() {
    super($(OFFSET), "0", new A000290());
    setPlus("0");
    skipRight(1);
  }
}
#!queue	A127739	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a127;
// Generated by gen_seq4.pl triconst at 2021-10-31 22:00

import irvine.oeis.a000.A000217;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A127739 Triangle read by rows, in which row n contains the triangular number T(n) = A000217(n) repeated n times; smallest triangular number greater than or equal to n.
 * @author Georg Fischer
 */
public class A127739 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A127739() {
    super($(OFFSET), new A000217(), new A000217());
    setPlus(new A000217());
    skipLeft(1);
    skipRight(1);
    skipPlus(3);
  }
}
#!queue	A128220	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a128;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000027;
import irvine.oeis.a030.A030543;
import irvine.oeis.a065.A065475;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A128220 Triangle, A127701 * A000012.
 * @author Georg Fischer
 */
public class A128220 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A128220() {
    super($(OFFSET), new A065475(), new A000027());
    setPlus(new A030543());
  }
}
#!queue	A130299	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a130;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000027;
import irvine.oeis.a005.A005408;
import irvine.oeis.a030.A030544;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A130299 A130296 * A051340.
 * @author Georg Fischer
 */
public class A130299 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A130299() {
    super($(OFFSET), new A005408(), new A000027());
    setPlus(new A030544());
  }
}
#!queue	A130493	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a130;
// Generated by gen_seq4.pl triconst at 2021-10-31 22:00

import irvine.oeis.a000.A000142;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A130493 Triangle read by rows in which row n contains n! repeated n times.
 * @author Georg Fischer
 */
public class A130493 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A130493() {
    super($(OFFSET), new A000142(), new A000142());
    setPlus(new A000142());
    skipLeft(1);
    skipRight(1);
    skipPlus(3);
  }
}
#!queue	A131410	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000045;
import irvine.oeis.a020.A020695;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A131410 A127647 * A000012.
 * @author Georg Fischer
 */
public class A131410 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A131410() {
    super($(OFFSET), new A000045(), new A000045());
    setPlus(new A020695());
    skipLeft(1);
    skipRight(1);
  }
}
#!queue	A131821	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000027;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A131821 Triangle read by rows: row n consists of n followed by (n-2) ones then n.
 * @author Georg Fischer
 */
public class A131821 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A131821() {
    super($(OFFSET), new A000027(), new A000027());
    setPlus("1");
  }
}
#!queue	A131919	0	->	0	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a131;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a005.A005408;
import irvine.oeis.a030.A030544;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A131919 A002024 + A131821 - A000012.
 * @author Georg Fischer
 */
public class A131919 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A131919() {
    super($(OFFSET), new A005408(), new A005408());
    setPlus(new A030544());
  }
}
#!queue	A143536	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a143;
// Generated by gen_seq4.pl triconst at 2021-10-31 22:00

import irvine.oeis.a010.A010051;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A143536 Triangle read by rows, T(n,k) = 1 if n is prime, 0 otherwise.
 * @author Georg Fischer
 */
public class A143536 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A143536() {
    super($(OFFSET), new A010051(), new A010051());
    setPlus(new A010051());
    skipPlus(2);
  }
}
#!queue	A154221	0	->	0	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a154;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000051;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A154221 A simple Pascal-like triangle.
 * @author Georg Fischer
 */
public class A154221 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A154221() {
    super($(OFFSET), "1", "1");
    setPlus(new A000051());
  }
}
#!queue	A167407	0	->	0	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a167;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a001.A001489;
import irvine.oeis.a057.A057427;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A167407 T(m,n) is -m if n=0, 1 elsewhere.
 * @author Georg Fischer
 */
public class A167407 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A167407() {
    super($(OFFSET), new A001489(), new A057427());
    setPlus("1");
  }
}
#!queue	A168256	0	->	0	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a168;
// Generated by gen_seq4.pl triconst at 2021-10-31 22:00

import irvine.oeis.a000.A000108;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A168256 Triangle read by rows: Catalan number C(n) repeated n+1 times.
 * @author Georg Fischer
 */
public class A168256 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A168256() {
    super($(OFFSET), new A000108(), new A000108());
    setPlus(new A000108());
    skipPlus(2);
  }
}
#!queue	A172417	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a172;
// Generated by gen_seq4.pl triconst at 2021-10-31 22:00

import irvine.oeis.a000.A000108;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A172417 Triangle read by rows: Catalan number C(n) repeated n times.
 * @author Georg Fischer
 */
public class A172417 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A172417() {
    super($(OFFSET), new A000108(), new A000108());
    setPlus(new A000108());
    skipLeft(1);
    skipRight(1);
    skipPlus(3);
  }
}
#!queue	A201208	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a201;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000034;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A201208 One 1, two 2's, three 1's, four 2's, five 1's, ...
 * @author Georg Fischer
 */
public class A201208 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A201208() {
    super($(OFFSET), new A000034(), new A000034());
    setPlus(new A000034());
  }
}
#!queue	A210765	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a210;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a046.A046054;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A210765 Triangle read by rows in which row n lists the number of partitions of n together with n-1 ones.
 * @author Georg Fischer
 */
public class A210765 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A210765() {
    super($(OFFSET), new A046054(), "1");
    setPlus("1");
  }
}
#!queue	A278597	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a278;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a010.A010701;
import irvine.oeis.a036.A036453;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A278597 One half of A278481.
 * @author Georg Fischer
 */
public class A278597 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A278597() {
    super($(OFFSET), new A036453(), new A036453());
    setPlus(new A010701());
  }
}
#!queue	A319840	0	->	1	WrappedConstantTriangle	--------------------------------
package irvine.oeis.a319;
// Generated by gen_seq4.pl triconst at 2021-10-17 19:37

import irvine.oeis.a000.A000027;
import irvine.oeis.a032.A032583;
import irvine.oeis.triangle.WrappedConstantTriangle;

/**
 * A319840 Table read by antidiagonals: T(n, k) is the number of elements on the perimeter of an n X k matrix.
 * @author Georg Fischer
 */
public class A319840 extends WrappedConstantTriangle {

  /** Construct the sequence. */
  public A319840() {
    super($(OFFSET), new A000027(), new A000027());
    setPlus(new A032583());
  }
}
#!queue	A999999	0	0	0	0
