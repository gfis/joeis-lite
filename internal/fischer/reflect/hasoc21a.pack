#!queue	A003270	0	->	1	A099054	0	int_offset	--------------------------------
package irvine.oeis.a003;

import irvine.oeis.Conjectural;
import irvine.oeis.a099.A099054;

/**
 * A003270 A nonrepetitive sequence.
 * @author Sean A. Irvine
 */
public class A003270 extends A099054 implements Conjectural {
}
#!queue	A003652	0	->	2	A003658	0	int_offset	--------------------------------
package irvine.oeis.a003;

import irvine.math.group.QuadraticFieldUtils;
import irvine.math.z.Z;
import irvine.oeis.Conjectural;

/**
 * A003652 Class number of real quadratic field with discriminant A003658(n), n &gt;= 2.
 * @author Sean A. Irvine
 */
public class A003652 extends A003658 implements Conjectural {

  // contains heuristics.

  /** Construct the sequence. */
  protected A003652() {
    super(2);
    super.next(); // skip 1
  }

  @Override
  public Z next() {
    return Z.valueOf(QuadraticFieldUtils.classNumber(super.next()));
  }
}
#!queue	A048958	0	->	1	A001203	0	int_offset	--------------------------------
package irvine.oeis.a048;

import irvine.math.z.Z;
import irvine.oeis.a001.A001203;

/**
 * A048958 4-digit terms in the continued fraction for Pi.
 * @author Sean A. Irvine
 */
public class A048958 extends A001203 {

  private static final Z LOWER = Z.valueOf(1000);
  private static final Z UPPER = Z.valueOf(10000);

  /** Construct the sequence. */
  protected A048958() {
    super(1);
  }

  @Override
  public Z next() {
    while (true) {
      final Z t = super.next();
      if (t.compareTo(LOWER) >= 0 && t.compareTo(UPPER) < 0) {
        return t;
      }
    }
  }
}
#!queue	A048959	0	->	1	A001203	0	int_offset	--------------------------------
package irvine.oeis.a048;

import irvine.math.z.Z;
import irvine.oeis.a001.A001203;

/**
 * A048959 Positions of 4-digit terms in the continued fraction for Pi (3 is at position 0).
 * @author Sean A. Irvine
 */
public class A048959 extends A001203 {

  private static final Z LOWER = Z.valueOf(1000);
  private static final Z UPPER = Z.valueOf(10000);
  private long mM = -1;

  /** Construct the sequence. */
  protected A048959() {
    super(1);
  }

  @Override
  public Z next() {
    while (true) {
      ++mM;
      final Z t = super.next();
      if (t.compareTo(LOWER) >= 0 && t.compareTo(UPPER) < 0) {
        return Z.valueOf(mM);
      }
    }
  }
}
#!queue	A048960	0	->	1	A001203	0	int_offset	--------------------------------
package irvine.oeis.a048;

import irvine.math.z.Z;
import irvine.oeis.a001.A001203;

/**
 * A048960 5-digit terms in the continued fraction for Pi.
 * @author Sean A. Irvine
 */
public class A048960 extends A001203 {

  private static final Z LOWER = Z.valueOf(10000);
  private static final Z UPPER = Z.valueOf(100000);

  /** Construct the sequence. */
  protected A048960() {
    super(1);
  }

  @Override
  public Z next() {
    while (true) {
      final Z t = super.next();
      if (t.compareTo(LOWER) >= 0 && t.compareTo(UPPER) < 0) {
        return t;
      }
    }
  }
}
#!queue	A048961	0	->	1	A001203	0	int_offset	--------------------------------
package irvine.oeis.a048;

import irvine.math.z.Z;
import irvine.oeis.a001.A001203;

/**
 * A048961 Positions of 5-digit terms in the continued fraction for Pi (3 is position 0).
 * @author Sean A. Irvine
 */
public class A048961 extends A001203 {

  private static final Z LOWER = Z.valueOf(10000);
  private static final Z UPPER = Z.valueOf(100000);
  private long mM = -1;

  /** Construct the sequence. */
  protected A048961() {
    super(1);
  }

  @Override
  public Z next() {
    while (true) {
      ++mM;
      final Z t = super.next();
      if (t.compareTo(LOWER) >= 0 && t.compareTo(UPPER) < 0) {
        return Z.valueOf(mM);
      }
    }
  }
}
#!queue	A052434	0	->	2	A000720	0	int_offset	--------------------------------
package irvine.oeis.a052;

import irvine.math.Mobius;
import irvine.math.cr.CR;
import irvine.math.z.Z;
import irvine.oeis.a000.A000720;

/**
 * A052434 Nearest integer to R(n) - pi(n), where R(x) is the Riemann prime counting function.
 * @author Sean A. Irvine
 */
public class A052434 extends A000720 {

  // This is slow ... and heuristic ...

  private static final long HEURISTIC_TERMS = 10000;
  private long mN = 1;

  /** Construct the sequence. */
  protected A052434() {
    super(2);
    super.next();
  }

  protected CR riemann(final long n) {
    return new CR() {
      @Override
      protected Z approximate(final int precision) {
        final CR ncr = CR.valueOf(n);
        Z sum = Z.ZERO;
        long k = 0;
        while (true) {
          final CR kcr = CR.valueOf(++k);
          final Z t = ncr.pow(kcr.inverse()).li().divide(kcr).getApprox(precision);
          if (t.isZero() || k > HEURISTIC_TERMS) {
            break;
          }
          final int mobius = Mobius.mobius(k);
          if (mobius != 0) {
            sum = sum.signedAdd(mobius == 1, t);
          }
        }
        return sum;
      }
    };
  }

  @Override
  public Z next() {
    final CR r = riemann(++mN);
    //System.out.println(mN + " R=" + r);
    return r.subtract(CR.valueOf(super.next())).round();
  }
}
#!queue	A055507	2	->	1	A210286	3	int_offset,_Function<Long,_Long[]>_range,_Long5Cond_cond	--------------------------------
package irvine.oeis.a055;
// Generated by gen_seq4.pl A210000/parmof3 at 2022-02-02 22:52

import irvine.oeis.a210.A210286;

/**
 * A055507 a(n) = Sum_{k=1..n} d(k)*d(n+1-k), where d(k) is number of positive divisors of k.
 * @author Georg Fischer
 */
public class A055507 extends A210286 {

  /** Construct the sequence. */
  public A055507() {
    super(1, n -> new Long[] {1L, n}, (n, w, x, y, z) -> w * z + x * y == n);
    next();
  }
}
#!queue	A056483	0	->	1	A056477	0	int_offset	--------------------------------
package irvine.oeis.a056;

import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * A056483 Number of primitive (aperiodic) palindromic structures using exactly four different symbols.
 * @author Georg Fischer
 */
public class A056483 extends A056477 {

  private final Sequence mSeq = new A056478();

  /** Construct the sequence. */
  protected A056483() {
    super(1);
    next();
  }

  @Override
  public Z next() {
    return mSeq.next().subtract(super.next());
  }
}
#!queue	A056484	0	->	1	A056478	0	int_offset	--------------------------------
package irvine.oeis.a056;

import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * A056484 Number of primitive (aperiodic) palindromic structures using exactly five different symbols.
 * @author Georg Fischer
 */
public class A056484 extends A056478 {

  private final Sequence mSeq = new A056479();

  /** Construct the sequence. */
  protected A056484() {
    super(1);
    next();
  }

  @Override
  public Z next() {
    return mSeq.next().subtract(super.next());
  }
}

#!queue	A067480	0	->	1	A008952	0	int_offset	--------------------------------
package irvine.oeis.a067;

import irvine.math.z.Z;
import irvine.oeis.a008.A008952;

/**
 * A067480 Powers of 2 with initial digit 2.
 * @author Georg Fischer
 */
public class A067480 extends A008952 {

  protected int mN;
  protected Z mDigit;

  /** Construct the sequence. */
  public A067480() {
    this(1, 2);
  }

  /**
   * Generic constructor with parameters
   * @param digit leading digit
   */
  public A067480(final int digit) {
    this(1, digit);
  }

  /**
   * Generic constructor with parameters
   * @param offset first index
   * @param digit leading digit
   */
  public A067480(final int offset, final int digit) {
    super(offset);
    mN = -1;
    mDigit = Z.valueOf(digit);
  }

  @Override
  public Z next() {
    ++mN;
    while (!super.next().equals(mDigit)) {
      ++mN;
    }
    return Z.ONE.shiftLeft(mN);
  }
}
#!queue	A124574	0	->	1	A052179	2	int_offset,_long_x,_long_y	--------------------------------
package irvine.oeis.a124;
// Generated by gen_seq4.pl A052179/parmof3 at 2023-07-17 11:30

import irvine.oeis.a052.A052179;

/**
 * A124574 Triangle read by rows: row n is the first row of the matrix M[n]^(n-1), where M[n] is the n X n tridiagonal matrix with main diagonal (3,4,4,...) and super- and subdiagonals (1,1,1,...).
 * @author Georg Fischer
 */
public class A124574 extends A052179 {

  /** Construct the sequence. */
  public A124574() {
    super(1, 3, 4);
  }
}
#!queue	A124576	0	->	1	A052179	2	int_offset,_long_x,_long_y	--------------------------------
package irvine.oeis.a124;
// Generated by gen_seq4.pl A052179/parmof3 at 2023-07-17 11:30

import irvine.oeis.a052.A052179;

/**
 * A124576 Triangle read by rows: row n is the first row of the matrix M[n]^(n-1), where M[n] is the n X n tridiagonal matrix with main diagonal (1,4,4,...) and super- and subdiagonals (1,1,1,...).
 * @author Georg Fischer
 */
public class A124576 extends A052179 {

  /** Construct the sequence. */
  public A124576() {
    super(1, 1, 4);
  }
}
#!queue	A124733	0	->	1	A052179	2	int_offset,_long_x,_long_y	--------------------------------
package irvine.oeis.a124;
// Generated by gen_seq4.pl A052179/parmof3 at 2023-07-17 11:30

import irvine.oeis.a052.A052179;

/**
 * A124733 Triangle read by rows: row n is the first row of the matrix M[n]^(n-1), where M[n] is the n X n tridiagonal matrix with main diagonal (2,3,3,...) and super- and subdiagonals (1,1,1,...).
 * @author Georg Fischer
 */
public class A124733 extends A052179 {

  /** Construct the sequence. */
  public A124733() {
    super(1, 2, 3);
  }
}
#!queue	A165342	2	->	0	A061037	1	int_offset,_int_parm	--------------------------------
package irvine.oeis.a165;
// manually 2021-07-05

import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;
import irvine.oeis.a000.A000265;
import irvine.oeis.a061.A061037;

/**
 * A165342 a(n) = A061037(n+2)/A000265(n+4).
 * @author Georg Fischer
 */
public class A165342 extends AbstractSequence {
  
  private final A061037 mSeq1 = new A061037();
  private final A000265 mSeq2 = new A000265();

  /** Construct the sequence. */
  public A165342() {
    super(0);
    mSeq2.skip(3);
  }

  @Override
  public Z next() {
    return mSeq1.next().divide(mSeq2.next());
  }

}
#!queue	A166472	0	->	1	A166470	0	int_offset	--------------------------------
package irvine.oeis.a166;
// Generated by gen_seq4.pl dersimpln at 2021-08-21 22:23

import irvine.math.z.Z;
import irvine.oeis.recur.ConstantOrderRecurrence;

/**
 * A166472 2^F(n+2)*3^F(n+1)/12, where F(n) is the n-th Fibonacci number (A000045(n)).
 * @author Georg Fischer
 */
public class A166472 extends ConstantOrderRecurrence {

  /** Construct the sequence. */
  public A166472() {
    super(1, 2, 0, 1, 6);
  }

  @Override
  protected Z compute(final int n) {
    // a(n)=12*a(n-1)*a(n-2)
    return a(n - 1).multiply(a(n - 2)).multiply(12);
  }
}

#!queue	A204168	2	->	1	A203991	1	int_offset,_Sequence_seq	--------------------------------
package irvine.oeis.a204;

import irvine.oeis.a203.A203991;
import irvine.oeis.triangle.UpperLeftTriangle;

/**
 * A204168 Array:  row n shows the coefficients of the characteristic polynomial of the n-th principal submatrix of (i+j), as in A003057.
 * @author Georg Fischer
 */
public class A204168 extends A203991 {

  /** Construct the sequence. */
  public A204168() {
    super(1, new UpperLeftTriangle(1, 1, -1));
    mRow = 0;
    mCol = mRow;
  }
}
#!queue	A280509	0	->	1	A057889	0	int_offset	--------------------------------
package irvine.oeis.a280;

import irvine.math.z.Z;
import irvine.math.z.ZUtils;
import irvine.oeis.AbstractSequence;
import irvine.oeis.a057.A057889;

/**
 * A280509 a(n) = A051064(A246200(n)); 3-adic valuation of A057889(3*n).
 * @author Georg Fischer
 */
public class A280509 extends AbstractSequence {

  private final A057889 mSeq = new A057889();

  /** Construct the sequence. */
  public A280509() {
    super(1);
    mSeq.next();
  }

  @Override
  public Z next() {
    mSeq.next();
    mSeq.next();
    return Z.valueOf(ZUtils.valuation(mSeq.next(), Z.THREE));
  }
}
#!queue	A999999	0	0	0	0
