# a(n) = if (n<=1, 3^n, 3^n - sumdiv(n, d, moebius(d)*3^(n/d))/n);
A058818	simple	0	mN<=1 ? Z.valueOf(3).pow(mN) : Z.valueOf(3).pow(mN).subtract(Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(3).pow(mN/d).multiply(irvine.math.Mobius.mobius(d))).divide(mN))	
A058819	simple	0	mN<=1 ? Z.valueOf(4).pow(mN) : Z.valueOf(4).pow(mN).subtract(Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(4).pow(mN/d).multiply(irvine.math.Mobius.mobius(d))).divide(mN))	
A058820	simple	0	mN<=1 ? Z.valueOf(5).pow(mN) : Z.valueOf(5).pow(mN).subtract(Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(5).pow(mN/d).multiply(irvine.math.Mobius.mobius(d))).divide(mN))	
A058822	simple	0	mN<=1 ? Z.valueOf(7).pow(mN) : Z.valueOf(7).pow(mN).subtract(Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(7).pow(mN/d).multiply(irvine.math.Mobius.mobius(d))).divide(mN))	
A058823	simple	0	mN<=1 ? Z.valueOf(8).pow(mN) : Z.valueOf(8).pow(mN).subtract(Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(8).pow(mN/d).multiply(irvine.math.Mobius.mobius(d))).divide(mN))	
A058824	simple	0	mN<=1 ? Z.valueOf(9).pow(mN) : Z.valueOf(9).pow(mN).subtract(Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(9).pow(mN/d).multiply(irvine.math.Mobius.mobius(d))).divide(mN))	
A092813	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(mN,k).pow(3).multiply(Binomial.binomial(mN+k,k).pow(3)))	
A092814	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(mN,k).pow(4).multiply(Binomial.binomial(mN+k,k).pow(4)))	
A092815	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(mN,k).pow(5).multiply(Binomial.binomial(mN+k,k).pow(5)))	
A099121	simple	0	Binomial.binomial(Binomial.binomial(mN + 2, mN).add(mN - 1), Z.valueOf(mN))	
A099122	simple	0	Binomial.binomial(Binomial.binomial(mN + 3, mN).add(mN - 1), Z.valueOf(mN))	
A099123	simple	0	Binomial.binomial(Binomial.binomial(mN + 4, mN).add(mN - 1), Z.valueOf(mN))	
A099124	simple	0	Binomial.binomial(Binomial.binomial(mN + 5, mN).add(mN - 1), Z.valueOf(mN))	
A099125	simple	0	Binomial.binomial(Binomial.binomial(mN + 6, mN).add(mN - 1), Z.valueOf(mN))	
A099126	simple	0	Binomial.binomial(Binomial.binomial(mN + 7, mN).add(mN - 1), Z.valueOf(mN))	
A099127	simple	0	Binomial.binomial(Binomial.binomial(mN + 8, mN).add(mN - 1), Z.valueOf(mN))	
A099128	simple	0	Binomial.binomial(Binomial.binomial(mN + 9, mN).add(mN - 1), Z.valueOf(mN))	
A120798	simple	0	Z.THREE.pow(mN * mN).add(Z.ONE.shiftLeft(mN))	
A120799	simple	0	Z.THREE.pow(mN * mN).subtract(Z.ONE.shiftLeft(mN))	
A120838	simple	0	Z.FIVE .pow(mN * mN).add(Z.THREE.pow(mN * mN))	
A120840	simple	0	Z.FIVE .pow(mN * mN).subtract(Z.THREE.pow(mN * mN))	
# A151625 a(n) = 10^n - (2*n + 1)*6^n + binomial(2*n+1, 2)*3^n - binomial(2*n+1, 3)
A151625	simple	0	Z.valueOf( 10).pow(mN).subtract(Z.valueOf( 6).pow(mN).multiply(2*mN + 1)).add(Binomial.binomial(2*mN+1, 2).multiply(Z.valueOf(3 ).pow(mN))).subtract(Binomial.binomial(2*mN+1, 3))	
#                                                                    A151626 a(n) = {15^n - (2*n + 1)*10^n + binomial(2*n+1, 2)*6^n - binomial(2*n+1, 3)*3^n + binomial(2*n+1, 4) }
A151626	simple	0	Z.valueOf( 15).pow(mN).subtract(Z.valueOf(10).pow(mN).multiply(2*mN + 1)).add(Binomial.binomial(2*mN+1, 2).multiply(Z.valueOf(6 ).pow(mN))).subtract(Binomial.binomial(2*mN+1, 3).multiply(Z.THREE.pow(mN))).add(Binomial.binomial(2*mN+1, 4))	
A151633	simple	0	Z.valueOf( 20).pow(mN).subtract(Z.valueOf(10).pow(mN).multiply(3*mN + 1)).add(Binomial.binomial(3*mN+1, 2).multiply(Z.valueOf(4 ).pow(mN))).subtract(Binomial.binomial(3*mN+1, 3))	
A151634	simple	0	Z.valueOf( 35).pow(mN).subtract(Z.valueOf(20).pow(mN).multiply(3*mN + 1)).add(Binomial.binomial(3*mN+1, 2).multiply(Z.valueOf(10).pow(mN))).subtract(Binomial.binomial(3*mN+1, 3).multiply(Z.FOUR. pow(mN))).add(Binomial.binomial(3*mN+1, 4))	
A151641	simple	0	Z.valueOf( 35).pow(mN).subtract(Z.valueOf(15).pow(mN).multiply(4*mN + 1)).add(Binomial.binomial(4*mN+1, 2).multiply(Z.valueOf(5 ).pow(mN))).subtract(Binomial.binomial(4*mN+1, 3))	
A151642	simple	0	Z.valueOf( 70).pow(mN).subtract(Z.valueOf(35).pow(mN).multiply(4*mN + 1)).add(Binomial.binomial(4*mN+1, 2).multiply(Z.valueOf(15).pow(mN))).subtract(Binomial.binomial(4*mN+1, 3).multiply(Z.FIVE. pow(mN))).add(Binomial.binomial(4*mN+1, 4))	
A151648	simple	0	Z.valueOf( 56).pow(mN).subtract(Z.valueOf(21).pow(mN).multiply(5*mN + 1)).add(Binomial.binomial(5*mN+1, 2).multiply(Z.valueOf(6 ).pow(mN))).subtract(Binomial.binomial(5*mN+1, 3))	
A151652	simple	0	Z.valueOf( 84).pow(mN).subtract(Z.valueOf(28).pow(mN).multiply(6*mN + 1)).add(Binomial.binomial(6*mN+1, 2).multiply(Z.valueOf(7 ).pow(mN))).subtract(Binomial.binomial(6*mN+1, 3))	
A151657	simple	0	Z.valueOf(120).pow(mN).subtract(Z.valueOf(36).pow(mN).multiply(7*mN + 1)).add(Binomial.binomial(7*mN+1, 2).multiply(Z.valueOf(8 ).pow(mN))).subtract(Binomial.binomial(7*mN+1, 3))	
A182421	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(mN,k).pow(7))	
A182422	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(mN,k).pow(8))	
A182446	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(mN,k).pow(9))	
A182447	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(mN,k).pow(10))	
A262737	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(5*(mN+1),k).multiply(Binomial.binomial(4*(mN+1)-k-2,(mN+1)-k-1))).divide(mN+1)	
A262738	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(6*(mN+1),k).multiply(Binomial.binomial(5*(mN+1)-k-2,(mN+1)-k-1))).divide(mN+1)	
A262739	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(7*(mN+1),k).multiply(Binomial.binomial(6*(mN+1)-k-2,(mN+1)-k-1))).divide(mN+1)	
A262740	simple	0	Integers.SINGLETON.sum(0, mN, k -> Binomial.binomial(8*(mN+1),k).multiply(Binomial.binomial(7*(mN+1)-k-2,(mN+1)-k-1))).divide(mN+1)	
A289945	simple	0	Integers.SINGLETON.sum(1, mN, k -> MemoryFactorial.SINGLETON.factorial(k).pow(4))	
A289946	simple	0	Integers.SINGLETON.sum(1, mN, k -> MemoryFactorial.SINGLETON.factorial(k).pow(6))	
A289948	simple	0	Integers.SINGLETON.sum(0, mN, k -> MemoryFactorial.SINGLETON.factorial(k).pow(3))	
A289949	simple	0	Integers.SINGLETON.sum(0, mN, k -> MemoryFactorial.SINGLETON.factorial(k).pow(4))	
# A336538 {a(n) = sum(k=0, n, 2^(n-k)*binomial(n, k)*binomial(3*n+k+1, n)/(3*n+k+1))}
A336538	simple	0	Integers.SINGLETON.sum(0, mN, k -> Z.ONE.shiftLeft(mN-k).multiply(Binomial.binomial(  mN  , k)).multiply(Binomial.binomial(3*mN+k+1, mN))  .divide(3*mN+k+1))	
A336539	simple	0	Integers.SINGLETON.sum(0, mN, k -> Z.ONE.shiftLeft(mN-k).multiply(Binomial.binomial(3*mN+1, k)).multiply(Binomial.binomial(4*mN-k, mN-k))  .divide(3*mN+1))	
A336540	simple	0	Integers.SINGLETON.sum(0, mN, k -> Z.ONE.shiftLeft(mN-k).multiply(Binomial.binomial(  mN  , k)).multiply(Binomial.binomial(4*mN+k+1, mN))  .divide(4*mN+k+1))	
A336572	simple	0	Integers.SINGLETON.sum(0, mN, k -> Z.ONE.shiftLeft(mN-k).multiply(Binomial.binomial(4*mN+1, k)).multiply(Binomial.binomial(5*mN-k, mN-k))  .divide(4*mN+1))	
A336578	simple	0	Integers.SINGLETON.sum(0, mN, k -> Z.ONE.shiftLeft(mN-k).multiply(Binomial.binomial(  mN  , k)).multiply(Binomial.binomial(mN*mN+k+1, mN)) .divide(mN*mN+k+1))	
A337152	simple	0	Q.TWO  .pow(mN).multiply(MemoryFactorial.SINGLETON.factorial(mN).square()).multiply(Rationals.SINGLETON.sum(0, mN, k -> new Q(Z.ONE, Z.valueOf(-2).pow(k).multiply(MemoryFactorial.SINGLETON.factorial(k).square())))).num()	
A337153	simple	0	Q.THREE.pow(mN).multiply(MemoryFactorial.SINGLETON.factorial(mN).square()).multiply(Rationals.SINGLETON.sum(0, mN, k -> new Q(Z.ONE, Z.valueOf(-3).pow(k).multiply(MemoryFactorial.SINGLETON.factorial(k).square())))).num()	
A337154	simple	0	Q.FOUR .pow(mN).multiply(MemoryFactorial.SINGLETON.factorial(mN).square()).multiply(Rationals.SINGLETON.sum(0, mN, k -> new Q(Z.ONE, Z.valueOf(-4).pow(k).multiply(MemoryFactorial.SINGLETON.factorial(k).square())))).num()	
A337155	simple	0	Q.FIVE .pow(mN).multiply(MemoryFactorial.SINGLETON.factorial(mN).square()).multiply(Rationals.SINGLETON.sum(0, mN, k -> new Q(Z.ONE, Z.valueOf(-5).pow(k).multiply(MemoryFactorial.SINGLETON.factorial(k).square())))).num()	
A321014	simple	0	Integers.SINGLETON.sumdiv(mN, d -> (d>3) ? Z.ONE : Z.ZERO)	
A338648	simple	0	Integers.SINGLETON.sumdiv(mN, d -> (d>4) ? Z.ONE : Z.ZERO)	
A338649	simple	0	Integers.SINGLETON.sumdiv(mN, d -> (d>5) ? Z.ONE : Z.ZERO)	
A338650	simple	0	Integers.SINGLETON.sumdiv(mN, d -> (d>6) ? Z.ONE : Z.ZERO)	
A338651	simple	0	Integers.SINGLETON.sumdiv(mN, d -> (d>7) ? Z.ONE : Z.ZERO)	
A338652	simple	0	Integers.SINGLETON.sumdiv(mN, d -> (d>8) ? Z.ONE : Z.ZERO)	
A338653	simple	0	Integers.SINGLETON.sumdiv(mN, d -> (d>9) ? Z.ONE : Z.ZERO)	
A284900	simple	0	Integers.SINGLETON.sumdiv(mN, d -> ((((mN/d + 1) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Z.valueOf(d).pow(4)))	
A284926	simple	0	Integers.SINGLETON.sumdiv(mN, d -> ((((mN/d + 1) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Z.valueOf(d).pow(5)))	
A284927	simple	0	Integers.SINGLETON.sumdiv(mN, d -> ((((mN/d + 1) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Z.valueOf(d).pow(6)))	
A283498	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(d).pow(d+1))	
A283533	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(d).pow(2*d+1))	
A283535	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(d).pow(3*d+1))	
# A277543 a(n) = n/5^valuation(n, 5) % 5;
A277543	simple	0	Z.valueOf(mN).divide(Z.FIVE .pow(irvine.math.LongUtils.valuation(mN, 5))).mod(Z.FIVE)	
A277544	simple	0	Z.valueOf(mN).divide(Z.SIX  .pow(irvine.math.LongUtils.valuation(mN, 6))).mod(Z.SIX)	
A277545	simple	0	Z.valueOf(mN).divide(Z.SEVEN.pow(irvine.math.LongUtils.valuation(mN, 7))).mod(Z.SEVEN)	
A277546	simple	0	Z.valueOf(mN).divide(Z.EIGHT.pow(irvine.math.LongUtils.valuation(mN, 8))).mod(Z.EIGHT)	
A277547	simple	0	Z.valueOf(mN).divide(Z.NINE .pow(irvine.math.LongUtils.valuation(mN, 9))).mod(Z.NINE)	
# A339684 sum(k=0, n, (-1)^(n-k)*binomial(n, k)*binomial(4*k, k)/(3*k+1));
A339684	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(4).pow(d-1))	
A339685	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(5).pow(d-1))	
A339686	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(6).pow(d-1))	
A339687	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(7).pow(d-1))	
A339688	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(8).pow(d-1))	
A339689	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Z.valueOf(9).pow(d-1))	
# A346577 a(n) = sumdiv(n, d, moebius(n/d)*binomial(3*d, d))/(3*n);
A346577	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Binomial.binomial(3*d,d).multiply(irvine.math.Mobius.mobius(mN/d))).divide(3*mN)	
A346578	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Binomial.binomial(4*d,d).multiply(irvine.math.Mobius.mobius(mN/d))).divide(4*mN)	
A346579	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Binomial.binomial(5*d,d).multiply(irvine.math.Mobius.mobius(mN/d))).divide(5*mN)	
A346580	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Binomial.binomial(6*d,d).multiply(irvine.math.Mobius.mobius(mN/d))).divide(6*mN)	
A346581	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Binomial.binomial(7*d,d).multiply(irvine.math.Mobius.mobius(mN/d))).divide(7*mN)	
A346582	simple	0	Integers.SINGLETON.sumdiv(mN, d -> Binomial.binomial(8*d,d).multiply(irvine.math.Mobius.mobius(mN/d))).divide(8*mN)	
A346664	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(mN,k)).multiply(Binomial.binomial(4*k,k)).divide(3*k + 1))	
A346665	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(mN,k)).multiply(Binomial.binomial(5*k,k)).divide(4*k + 1))	
A346666	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(mN,k)).multiply(Binomial.binomial(6*k,k)).divide(5*k + 1))	
A346667	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(mN,k)).multiply(Binomial.binomial(7*k,k)).divide(6*k + 1))	
A346668	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(mN,k)).multiply(Binomial.binomial(8*k,k)).divide(7*k + 1))	
A346680	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(4*k, k)).divide(3*k + 1))	
A346681	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(5*k, k)).divide(4*k + 1))	
A346682	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(6*k, k)).divide(5*k + 1))	
A346683	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(7*k, k)).divide(6*k + 1))	
A346684	simple	0	Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(8*k, k)).divide(7*k + 1))	
#   return (k ->    Integers.SINGLETON.sum(0, mN, k -> ((((mN-k) & 1) == 0) ? Z.ONE : Z.NEG_ONE).multiply(Binomial.binomial(4*k, k)).divide(3*k + 1))).apply(++mN)

A062805	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(i).multiply(Z.valueOf(mN).pow(mN-i)))
A062806	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(i).multiply(Z.valueOf(mN).pow(i)))
A062807	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(i).multiply(Z.valueOf(mN-i).pow(i)))
A062808	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(mN).pow(i).multiply(mN-i))
A062809	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(mN-i).pow(1+i))
A062810	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(i).pow(mN-i).add(Z.valueOf(mN-i).pow(i)))
A062811	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(i).pow(mN-i).add(Z.valueOf(i-mN).pow(i)))
A062812	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(i).pow(mN-i).add(((((mN-i) & 1)== 0) ? Z.ONE : Z.NEG_ONE).multiply(Z.valueOf(mN-i).pow(i))))
A062813	simple	0	Integers.SINGLETON.sum(0,mN-1, i -> Z.valueOf(i).multiply(Z.valueOf(mN).pow(i)))
A062814	simple	0	Integers.SINGLETON.sum(0,mN-1, i -> Z.valueOf(i).multiply(Z.valueOf(mN-i).pow(mN-i)))
A062815	simple	0	Integers.SINGLETON.sum(1,mN  , i -> Z.valueOf(i).pow(i+1))
A062817	simple	0	Integers.SINGLETON.sum(0,mN  , i -> Z.valueOf(i).pow(mN-i).multiply(Z.valueOf(mN-i).pow(i)))