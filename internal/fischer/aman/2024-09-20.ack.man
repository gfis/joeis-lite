
---- 2024-09-20 11:57:32
A092826	filter	1	new A005259()	PRIME	Ap√©ry numbers.
A092835	filtpos	1	-1	new A000073()	PRIME	tribonacci numbers, minus 1.
A092838	filter	1	new A046976()	PRIME
A094007	filtpos	1	1	new A007677()	PRIME
A094008	filter	1	new A007677()	PRIME
A094226	dead	3	A000040	erro	NotYetImplemented	Erroneous version of A000040.					Erroneous version of A000040.
A102049	sintrif	0	(term, n) -> Functions.PRIME_PI.z(term)	""	new A094008()	Indices of primes which are denominators of convergents to e.
A104534	filtpos	1	-2	new A000078()	PRIME	tetranacci numbers.
A104535	filter	1	new A000078()	PRIME	tetranacci numbers.
A105759	filter	1	new A001592()	PRIME	hexanacci (or Fibonacci 6-step) numbers J001592 (using offset -4).
# A107037	filtpos	1	1	new A001045()	v -> Predicates.SQUARE_FREE.is(v)	squarefree Jacobsthal numbers.
A114557	lambdan	1	n -> ZV(3).-(Z_1(n)).*(PM((n + 1)/2)).+(Z_1(n).*(5).+(1))./(2)	a(n) = ((3-(-1)^n)*prime(floor((n+1)/2)) + (1+5*(-1)^n))/2};
# A115244	sintrif	0	(term, n) -> Functions.PRIME_PI.z(term.abs())	""	new LambdaSequence(0, n -> ZV(n).*(36*n - 810).+(2753).abs())	abs(36*n^2 - 810* n + 2753))	new A050268()	a(n) = PrimePi(Abs(A050268(n))).generated by Fung and Rubys prime generating polynomial J050268.
A118193	multrar	0	(self, n) -> SU(0, n - 1, j -> ZV(5).^(j*(n - j)).*(self.a(j))).negate()	"1,-1"		a(n) = Sum_{j=0..n-1} 5^(j*(n-j))*a(j) with a(0) = 1 and a(1) = -1.
A121660	dead	1	A118835	dupl	NotYetImplemented	Duplicate of A118835.					Duplicate of A118835.
A123636	lambdan	0	n -> (n == 0) ? ZV(1) : RU(1, n, k -> new Q(FA((k + 1)/2).*(FA(n)), FA(n - k/2))).num()	a(n) = 1 + Sum_{k=1..n} (floor((k + 1)/2)! * n!)/((n - floor(k/2))!))
A129465	lambdan	0	n -> (n == 0) ? ZV(1) : RU(1, n + 2, j -> new Q(ZV(1), ZV(j))).-(2).*(FA(n).negate()).*(FA(n + 2)).num()	, for n >= 1, otherwise a(0) = 1
A130033	lambdan	0	n -> (new Q(2*(n + 2)).-(RU(1, n + 2, j -> new Q(1, j*j)).*(ZV(n + 3)))).*(Z_1(n)).*(FA(n + 2).^(2)).num()	a(n) = (-1)^n * ((n+2)!)^2 * (2*(n+2) - (n+3)*h(n+2, 2)), where h(n,k) = Sum_{j=1..n} 1/j^k is the generalized harmonic number.
A163259	trilambn	1	0	0	(n, k) -> BI(n, k + 1).mod(BI(n, k))
A163260	lambdan	1	n -> (n <= 2) ? ZV(0) : SU(1, n - 2, k -> BI(n - 1, k + 1).mod(BI(n - 1, k)))	T[n_, k_] := Mod[Binomial[n, k + 1], Binomial[n, k]]; Join[{0}, Table[Sum[T[n, k], {k, 1, n - 1}], {n, 1, 20}]]
A174297	lambdan	0	n -> (n < 2) ? Z_1(n) : SU(0, n - 2, j -> Z_1(j - 1).*(BI(n - 2, j)).*(Functions.CATALAN.z(j)))
A289142	parmof3	1	A329963	1	new A373371()
A325438	filtpos	1	1	new A002496()	v -> v.mod(10) == 1	of the form k^2 + 1 ending in 1.
A325439	filtpos	1	1	new A002496()	v -> v.mod(10) == 7	of the form k^2 + 1 ending in 7.
A327934	parmof3	1	A329963	1	new A360111()
A330393	multrar	0	(self, n) -> { final int n2 = n/2; return ((n & 1) == 0) ? ZV(n2 + 1) : self.a(n2).+(1); }	""		a(2n) = n + 1 and a(2n+1) = a(n) + 1 for n >= 0.
A336547	parmof3	1	A329963	1	new A336546()
A339746	parmof3	1	A329963	1	new A372573()
A340380	parmof3	1	A329963	1	new A340370()
A358748	parmof3	1	A329963	0	new A358758()
A358749	parmof3	1	A329963	0	new A358759()
A358756	parmof3	1	A329963	1	new A358754()
A358757	parmof3	1	A329963	1	new A358755()
A358776	parmof3	1	A329963	1	new A358775()
A359151	parmof3	1	A329963	1	new A359150()
A359153	parmof3	1	A329963	1	new A359152()
A359157	parmof3	1	A329963	1	new A359156()
A359159	parmof3	1	A329963	1	new A359158()
A359161	parmof3	1	A329963	1	new A359160()
A359163	parmof3	1	A329963	1	new A359162()
A359171	parmof3	1	A329963	1	new A359170()
A359371	parmof3	1	A329963	1	new A359370()
A359373	parmof3	1	A329963	1	new A359372()
A359468	parmof3	1	A329963	1	new A359467()
A359580	parmof3	1	A329963	1	new A359549()
A359584	parmof3	1	A329963	1	new A359583()
A360110	parmof3	1	A329963	0	new A360109()
A361461	parmof3	1	A329963	1	new A361460()
A363535	recpos	1	new A363533()	,1
A370061	lambdan	1	n -> { final int n2 = n/2; return ((n & 1) == 0) ? BI(5*n2 + 1, n2 - 1).*(6)./(5*n2 + 1) : BI(5*n2 + 4, n2).*(4)./(5*n2 + 4); }	a(2*n) = 6*binomial(5*n+1, n-1)/(5*n+1); a(2*n+1) = 4*binomial(5*n+4, n)/(5*n+4).
A371185	filtpos	1	1	new A001694()	v -> v.equals(Z.ONE) || !Predicates.CUBE_FREE.is(v)	cubefull numbers in the sequence of powerful numbers.
A371188	filtpos	1	1	new A004709()	v -> Predicates.SQUARE_FREE.is(v)	squarefree numbers in the sequence of cubefree numbers.
A373255	parmof3	1	A329963	0	new A373254()
A373257	parmof3	1	A329963	0	new A373256()
A373259	parmof3	1	A329963	1	new A373258()
A373265	parmof3	1	A329963	1	new A373264()
A373339	lambdan	0	n -> (n <= 1) ? ZV(1) : FA(n)./(2).-(Z2(n - 2).*(n - 2))	!/2 - (n-2)*2^(n-2); \\ _Michel Marcus_, Jun 05 2024
A373340	lambdan	0	n -> FA(n)./(2).+(Z2(n - 2).*(n - 2))	!/2 + (n-2)*2^(n-2); \\ _Michel Marcus_, Jun 05 2024
A373482	parmof3	1	A329963	1	new A373481()
A373484	parmof3	1	A329963	1	new A373483()
A373490	parmof3	1	A329963	1	new A373489()
A373602	parmof3	1	A329963	0	new A373601()
A373837	parmof3	1	A329963	1	new A373836()
A373839	parmof3	1	A329963	0	new A373838()
A373841	parmof3	1	A329963	0	new A373840()
A373992	parmof3	1	A329963	0	new A373991()
A374042	parmof3	1	A329963	1	new A374041()
A374044	parmof3	1	A329963	1	new A374043()
A374223	parmof3	1	A329963	1	new A374222()
A374472	parmof3	1	A329963	1	new A374471()
A374965	multrar	1	(self, n) -> (!self.a(n - 1).IPP()) ? self.a(n - 1).*(2).+(1) : PM(n).-(1)	"1"		a(n) = 2*a(n-1) + 1 for a(n-1) not prime, otherwise a(n) = prime(n) - 1 with a(1)=1
A375020	lambdan	0	n -> E068773(ZV(10).^(n))	""		a(n) = E068773(10^n)
A375116	lambdan	4	n -> (n < 10) ? Z.valueOf(new int[] { 16,25,35,45,55,65 }[n - 4]) : ZV(12*n - 43).-(n & 1)	a(n) = 12*n - 43 - (n mod 2) for n >= 10
A375136	lambdan	1	n -> (n == 1) ? ZV(0) : F001222(n).-(F001221(n)).+(1)		For n > 1, a(n) = J046660(n) + 1 = F001222(n) - F001221(n) + 1
A375233	dead	1	A293153	erro	NotYetImplemented	Erroneous version of A293153.					Erroneous version of A293153.
A375826	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(n - 2*k + 1)).^(k - 1).*(S1(n - 2*k, k).abs())./(FA(n - 2*k))).*(FA(n)).num()	n! * Sum_{k=0..floor(n/3)} (n-2*k+1)^(k-1) * |Stirling1(n-2*k,k)|/(n-2*k)!.
A375827	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(n - 2*k + 1)).^(k - 1).*(S2(n - 2*k, k))./(FA(n - 2*k))).*(FA(n)).num()
A375830	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k + 1)).^(n - 2*k - 1).*(S1(k, n - 2*k).abs())./(FA(k))).*(FA(n)).num()
A375831	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k + 1)).^(n - 2*k - 1).*(S2(k, n - 2*k))./(FA(k))).*(FA(n)).num()
A375897	lambdan	0	n -> (n <= 0) ? ZV(1) : RU(0, n, k -> new Q(FA(n + k + 1).*(S2(n, k)), FA(n + 2))).num().*(2)
A375898	lambdan	0	n -> (n <= 0) ? ZV(1) : RU(0, n, k -> new Q(FA(n + k + 2).*(S2(n, k)), FA(n + 3))).num().*(3)
A375987	lambdan	0	n -> SU(0, n, k -> PR(0, k - 1, j -> ZV(2*j - 3)).*(S1(n, k).abs()))	add(mul(2*j-3, j=0..k-1)*abs(stirling1(n, k)), k=0..n)
A375988	lambdan	0	n -> SU(0, n, k -> PR(0, k - 1, j -> ZV(3*j - 4)).*(S1(n, k).abs()))
A375989	lambdan	0	n -> SU(0, n, k -> PR(0, k - 1, j -> ZV(3*j - 5)).*(S1(n, k).abs()))
A375990	lambdan	0	n -> (n <= 0) ? ZV(1) : ZV(-4).*(FA(n - 1)).+(S1(n, 2).abs().*(8))	a(n) = -4 * (n-1)! + 8 * |Stirling1(n,2)| for n > 0.
A375991	lambdan	0	n -> SU(0, n, k -> PR(0, k - 1, j -> ZV(2*j - 3)).*(S2(n, k)))	""		a(n) = Sum_{k=0..n} (Product_{j=0..k-1} (2*j-3)) * S22(n,k)
A375992	lambdan	0	n -> SU(0, n, k -> PR(0, k - 1, j -> ZV(3*j - 4)).*(S2(n, k)))	""		a(n) = Sum_{k=0..n} (Product_{j=0..k-1} (3*j-4)) * S22(n,k)
A375993	lambdan	0	n -> SU(0, n, k -> PR(0, k - 1, j -> ZV(3*j - 5)).*(S2(n, k)))	""		a(n) = Sum_{k=0..n} (Product_{j=0..k-1} (3*j-5)) * S22(n,k)
A376017	lambdan	1	n -> RD(n, d -> new Q(d).^(n/d - d).*(BI(n/d, d))).num()
A376021	lambdan	1	n -> RD(n, d -> new Q(d).^(n/d - d).*(BI(n/d - 1, d - 1))).num()
A376034	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*n - k - 2), FA(3*n - 2*k - 1)).*(S2(n, k))).num()
A376035	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*n + k - 2), FA(3*n - 1)).*(S2(n, k))).num()
A376036	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*n + 2*k - 2), FA(3*n + k - 1)).*(S2(n, k))).num()
A376037	lambdan	0	n -> RU(1, n, k -> new Q(FA(2*n + 2*k - 2), FA(2*n + k - 1)).*(S2(n, k))).num()
A376038	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*n - k - 2), FA(3*n - 2*k - 1)).*(S1(n, k).abs())).num()
A376039	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*n - 2), FA(3*n - k - 1)).*(S1(n, k).abs())).num()
A376040	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*n + k - 2), FA(3*n - 1)).*(S1(n, k).abs())).num()	sum(k=1, n, (3*n+k-2)!/(3*n-1)!*abs(stirling(n, k, 1)))
A376041	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*n + 2*k - 2), FA(3*n + k - 1)).*(S1(n, k).abs())).num()
A376042	lambdan	0	n -> RU(1, n, k -> new Q(FA(2*n + 2*k - 2), FA(2*n + k - 1)).*(S1(n, k).abs())).num()
A376067	lambdan	0	n -> RU(1, n, k -> new Q(FA(2*n - 2), FA(2*n - k - 1)).*(S1(n, k).abs())).num()
