---- 2025-10-21 21:39:08
A106204	polya	0	"[1]"	"x,^3,neg,B,^8,16,x,<1,*,x,^3,neg,B,^8,/,+,^1/8"	new A000700()
A122858	lambdan	0	n -> n == 0 ? ZV(1) : D002129(n).*(8)
A193275	polya	0	"[1]"	"x,^2,C,x,^17,B,*,x,B,<4,x,^34,C,*,-"	new A000122(), new A010054()
A217220	polya	0	"[1]"	"2,x,B,*,x,^4,B,+,3,/"	new A004016()
A226240	polya	0	"[1]"	"x,^4,B,x,^8,B,*,2,x,^2,B,*,<1,x,^8,C,*,+"	new A000122(), new A010054()
A230277	polya	1	"[1],[0,0,2]"	"x,^6,neg,B,^6,x,^3,neg,C,^4,<1,p1,x,^3,neg,C,^4,/,+,*"	new A121373(), new A000700()
A234565	polya	0	"[1]"	"x,^3,B,^2,x,^3,C,*,48,x,^3,B,^10,<1,*,+"	new A010815(), new A004009()
A239913	sintrif	1	(term, n) -> ZV(n).-(term)	""	new A005185()	a(n) = n - Q(n), where Q(n) is Hofstadters Q-sequence M005185.
A254526	polya	0	"[1],[3/2]"	"p1,x,B,^2,x,^3,B,^2,+,*,x,C,x,^2,C,+,-"	new A000122(), new A004016()
A258724	polya	0	"[1]"	"x,neg,B,^11,x,^3,neg,B,/,27,x,^3,neg,B,^11,x,neg,B,/,<1,*,+"	new A121373()
A258739	polya	0	"[1]"	"x,neg,B,^3,x,^2,neg,B,/,^6,64,x,^2,neg,B,^3,x,neg,B,/,^6,<1,*,-"	new A121373()
A265481	filnum	1	1	k -> PP(ZV( 9).^(k).-(ZV(3).^(k)).-(1))	Numbers k such that  9^k - 3^k - 1 is prime.	nonn,more	1..23	nyi	_Vincenzo Librandi_
A265711	filnum	1	1	k -> RD(k, d -> Q.ONE./(SIGMA(d))).floor().equals(ZV(1))	Numbers n such that floor(Sum_{d|n} 1 / sigma(d)) = 1.	nonn	1..9268	nyi	_Jaroslav Krizek_
A265712	filnum	1	1	k -> RD(k, d -> Q.ONE./(SIGMA(d))).floor().equals(ZV(2))	Numbers n such that floor(Sum_{d|n} 1 / sigma(d)) = 2.	nonn	1..7334	nyi	_Jaroslav Krizek_
A265713	filnum	1	1	k -> RD(k, d -> Q.ONE./(SIGMA(d))).floor().equals(ZV(3))	Numbers k such that floor(Sum_{d|k} 1 / sigma(d)) = 3.	nonn	1..10000	nyi	_Jaroslav Krizek_
A267763	filnum	1	0	k -> Predicates.SQUARE.is(new Z(Integer.toString(k, 3)))	Numbers whose base-3 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_M. F. Hasler_
A267764	filnum	1	0	k -> Predicates.SQUARE.is(new Z(Integer.toString(k, 4)))	Numbers whose base-4 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_M. F. Hasler_
A267765	filnum	1	0	k -> Predicates.SQUARE.is(new Z(Integer.toString(k, 5)))	Numbers whose base-5 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_M. F. Hasler_
A267766	filnum	1	0	k -> Predicates.SQUARE.is(new Z(Integer.toString(k, 6)))	Numbers whose base-6 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_M. F. Hasler_
A267767	filnum	1	0	k -> Predicates.SQUARE.is(new Z(Integer.toString(k, 7)))	Numbers whose base-7 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_M. F. Hasler_
A267768	filnum	1	0	k -> Predicates.SQUARE.is(new Z(Integer.toString(k, 8)))	Numbers whose base-8 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_M. F. Hasler_
A267769	filnum	1	0	k -> Predicates.SQUARE.is(new Z(Integer.toString(k, 9)))	Numbers whose base-9 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_M. F. Hasler_   A271931	polyx
A267820	filter	1	new A000040()	p -> Predicates.SQUARE.is(new Z(p.toString(6)))	Primes whose base-6 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_Christopher Cormier_
A267821	filter	1	new A000040()	p -> Predicates.SQUARE.is(new Z(p.toString(9)))	Primes whose base-9 representation is a square in base 10.	nonn,base	1..10000	nyi	_Christopher Cormier_
A268439	trilambn	0	0	0	(n,k) -> BI(2*n, n + k).*(SU(0, k, m -> Z_1(m + k).*(BI(n + k, n + m)).*(S2(n + m, m))))
A273229	filter	1	new A000290()	v -> Predicates.SQUARE.is(v.-(ZV(10).^(Functions.DIGIT_LENGTH.i(v)).-(1)./(9)))	Squares that remain squares if you decrease them by a repunit with the same number of digits.	nonn,easy,base	1..10000	nyi	_Paolo P. Lava_
A273320	polyx	1	"[0,1],[0,0,-1]"	"2,A,^3,*,p1,sub,-,sqrt"	2	0
A274086	lambdan	0	n -> ComputableReals.SINGLETON.tan(CV(n)).*(n).round()	to n*tan(n).	sign	0..10000	nyi	_N. J. A. Sloane_
A274557	filnum	1	1	k -> SIGMA(k).mod(k + 6) == 0
A274561	filnum	1	1	k -> SIGMA(k).mod(k + 8) == 0
A274562	filnum	1	1	k -> k != 8 && SIGMA(k).mod(k - 8) == 0
A274565	filnum	1	1	k -> SIGMA(k).mod(k + 10) == 0
A274566	filnum	1	1	k -> k != 10 && SIGMA(k).mod(k - 10) == 0
A275217	filnum	1	1	k -> (k&1) == 0 && F000005(ZV(k).^(k)).mod(F000005(k)).isZero()	Even numbers n such that F000005(n) divides F000005(n^n).	nonn	1..10000	nyi	_Altug Alkan_
A275286	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k), ZV(2*k + 1).^(2))).*(DF(2*n + 1).^(2)).num()	a(n) = ((2n+1)!!)^2 * Sum_{k=0..n}(-1)^k/(2k+1)^2.	easy,nonn	0..99	nyi	_Daniel Suteu_
A275368	filnum	1	0	k -> PP(F000032(k).+(Z2(k)))	Numbers k such that F000032(k) + 2^k is a prime.	nonn,more	1..16	nyi	_Vincenzo Librandi_
A277582	polya	0	"[1]"	"x,^5,neg,B,x,^7,neg,B,*,x,neg,B,<1,x,^35,neg,B,*,-"	new A121373()
A277585	rambdad	0	A277586	Denominator of Sum_{k=0..n} (2^k * (k!)^2)/(2k + 1)!.	nonn,frac	0..1154	nyi	_Seiichi Manyama_
A277586	rambdan	0	n -> RU(0, n, k -> new Q(Z2(k).*(FA(k).^(2)), FA(2*k + 1)))	Numerator of Sum_{k=0..n} (2^k * (k!)^2)/(2k + 1)!.	nonn,frac	0..1154	nyi	_Seiichi Manyama_
A278055	multia	1	"1,2,3,4,5"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact())).+(self.a(n - self.a(n - 3).intValueExact()))	a(1) = 1, a(2) = 2, a(3) = 3, a(4) = 4, a(5) = 5; a(n) = a(n-a(n-1)) + a(n-a(n-2)) + a(n-a(n-3)) for n > 5.	nonn	1..10000	nyi	_Nathan Fox_
A278056	multia	1	"1,2,3,4"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact()))	a(n) = n for 1 <= n <= 4; a(n) = a(n-a(n-1)) + a(n-a(n-2)) for n > 4.	nonn	1..10000	nyi	_Nathan Fox_
A278057	multia	1	"1,2,3,4,5"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact()))	a(n) = n for 1 <= n <= 5; a(n) = a(n-a(n-1)) + a(n-a(n-2)) for n > 5.	nonn	1..10000	nyi	_Nathan Fox_
A278058	multia	1	"1,2,3,4,5,6"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact()))	a(n) = n for 1 <= n <= 6; a(n) = a(n-a(n-1)) + a(n-a(n-2)) for n > 6.	nonn	1..10000	nyi	_Nathan Fox_
A278059	multia	1	"1,2,3,4,5,6,7"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact()))	a(n) = n for 1 <= n <= 7; a(n) = a(n-a(n-1)) + a(n-a(n-2)) for n > 7.	nonn	1..10000	nyi	_Nathan Fox_
A278060	multia	1	"1,2,3,4,5,6,7,8,"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact()))	a(n) = n for 1 <= n <= 8; a(n) = a(n-a(n-1)) + a(n-a(n-2)) for n > 8.	nonn,fini,full	1..420	nyi	_Nathan Fox_
A278061	multia	1	"1,2,3,4,5,6,7,8,9"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact()))	a(n) = n for 1 <= n <= 9; a(n) = a(n-a(n-1)) + a(n-a(n-2)) for n > 9.	nonn	1..10000	nyi	_Nathan Fox_
A278062	multia	1	"1,2,3,4,5,6,7,8,9,10"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact()))	a(n) = n for 1 <= n <= 10; a(n) = a(n-a(n-1)) + a(n-a(n-2)) for n > 10.	nonn	1..10000	nyi	_Nathan Fox_
A278065	multia	1	"1,2,3,4,5,6,7,8,9,10,11,12,13"	(self, n) -> self.a(n - self.a(n - 1).intValueExact()).+(self.a(n - self.a(n - 2).intValueExact()))	a(n) = n for 1 <= n <= 13; a(n) = a(n-a(n-1)) + a(n-a(n-2)) for n > 13.	nonn	1..10000	nyi	_Nathan Fox_
A279420	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '0'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 0.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279420	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '0'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 0.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279421	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '1'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 1.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279422	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '2'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 2.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279423	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '3'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 3.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279424	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '4'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 4.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279425	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '5'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 5.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279426	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '6'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 6.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279427	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '7'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 7.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279428	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '8'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 8.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279429	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '9'; }	Numbers k such that k^2 has an odd number of digits and the middle digit is 9.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279430	filnum	1	0	k -> { final String sk = ZV(k).^(2).toString(2); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '0'; }	Numbers k such that k^2 has an odd number of digits in base 2 and the middle digit is 0.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A279431	filnum	1	1	k -> { final String sk = ZV(k).^(2).toString(2); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '1'; }	Numbers k such that k^2 has an odd number of digits in base 2 and the middle digit is 1.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280640	filnum	1	0	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '0'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 0.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280641	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '1'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 1.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280642	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '2'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 2.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280643	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '3'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 3.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280644	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '4'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 4.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280645	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '5'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 5.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280646	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '6'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 6.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280647	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '7'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 7.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280648	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '8'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 8.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280649	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '9'; }	Numbers k such that k^3 has an odd number of digits and the middle digit is 9.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280650	filnum	1	0	k -> { final String sk = ZV(k).^(3).toString(2); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '0'; }	Numbers k such that k^3 has an odd number of digits in base 2 and the middle digit is 0.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A280651	filnum	1	1	k -> { final String sk = ZV(k).^(3).toString(2); final int len = sk.length(); return (len&1) == 1 && sk.charAt(len / 2) == '1'; }	Numbers k such that k^3 has an odd number of digits in base 2 and the middle digit is 1.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A335228	multia	0	"1"	(self, n) -> SU(1, n, k -> D002129(k + 1).*(self.a(n - k))).negate()	a(0) = 1; a(n) = -Sum_{k=1..n} A002129(k+1) * a(n-k).
---- 2025-10-21 22:05:25
A262711	filnum	1	1	k -> Functions.DIGIT_SUM.i(ZV(k).*(k)) == 7	Numbers k such that sum of digits of k^2 is 7.	nonn,base	1..37	nyi	_Vincenzo Librandi_
A262712	filnum	1	1	k -> Functions.DIGIT_SUM.i(ZV(k).*(k)) == 9	Numbers k such that sum of digits of k^2 is 9.	nonn,base	1..1000	nyi	_Vincenzo Librandi_
A262713	filnum	1	1	k -> Functions.DIGIT_SUM.i(ZV(k).*(k)) == 10	Numbers k such that the sum of digits of k^2 is 10.	nonn,base	1..244	nyi	_Vincenzo Librandi_
A267819	filter	1	new A000040()	p -> Predicates.SQUARE.is(new Z(p.toString(5)))	Primes whose base-5 representation is a square when read in base 10.	nonn,base	1..10000	nyi	_Christopher Cormier_
A268440	trilambn	0	0	0	(n,k) -> BI(2*n, n + k).*(SU(0, k, m -> Z_1(m + k).*(BI(n + k, n + m)).*(SA(n + m, m))))
A274319	filnum	1	0	k -> Functions.DIGIT_SUM.i(k) % 6 == 0	Numbers whose digit sum is divisible by 6.	base,nonn,easy	1..64	nyi	_Elana Lessing_
---- 2025-10-21 23:16:35
A178453	rambdan	2	n -> RU(0, n, k -> new Q(Z_1(k), FA(k))).*(FA(n))./(ZV(n - 1).^(n))	n!*Sum((-1)^k/k!, k=0..n)/(n-1)^n.	nonn,frac	2..30	nyi	_N. J. A. Sloane_
A178454	rambdad	2	A178453	Denominator of n!*Sum((-1)^k/k!, k=0..n)/(n-1)^n.	nonn,frac	2..30	nyi	_N. J. A. Sloane_
A253284	trilambn	0	0	0	(n,k) -> ZV(k + 1).*(FA(n + 1)).*(FA(n + k))./(FA(k + 1).^(2).*(FA(n - k)))	with n >= 0 and 0 <= k <= n.	nonn,tabl,easy	0..35	nyi	_Peter Luschny_
A253643	filnum	1	1	k -> CNT(1, 3, j -> !Predicates.DIGIT_CONTAINS_ZERO.is(ZV(k).^(j))).equals(ZV(3))	Numbers n such that n^k is zeroless for k=0,...,3.	nonn,base,easy	1..73	nyi	_M. F. Hasler_
A253644	filnum	1	1	k -> CNT(1, 5, j -> !Predicates.DIGIT_CONTAINS_ZERO.is(ZV(k).^(j))).equals(ZV(5))	Numbers n such that n^k is zeroless for k=0,...,5.	nonn,base	1..10000	nyi	_M. F. Hasler_
A253645	filter	1	new A000040()	p -> CNT(1, 5, j -> !Predicates.DIGIT_CONTAINS_ZERO.is(p.^(j))).equals(ZV(5))	Primes p such that p^k is zeroless for k=0,...,5.	nonn,base	1..5300	nyi	_Zak Seidov_ and _M. F. Hasler_
A253647	filnum	1	1	k -> CNT(1, 6, j -> !Predicates.DIGIT_CONTAINS_ZERO.is(ZV(k).^(j))).equals(ZV(6))	Numbers n such that n^k is zeroless for k=0,...,6.	nonn,base	1..191	nyi	_M. F. Hasler_
---- 2025-10-21 23:48:07
A308784	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(ZV(2).*(p.+(1))./(3))	nonn	1..714	nyi	_Jianing Song_
A308785	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(ZV(2).*(p.+(1))./(7))	nonn	1..40	nyi	_Jianing Song_
A308786	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(ZV(2).*(p.+(1))./(9))	nonn	1..40	nyi	_Jianing Song_
A308787	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(p.-(1)./(2))	nonn	1..46	nyi	_Jianing Song_
A308788	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(p.-(1)./(3))	nonn	1..45	nyi	_Jianing Song_
A308789	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(p.-(1)./(4))	nonn	1..41	nyi	_Jianing Song_
A308790	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(p.-(1)./(5))	nonn	1..44	nyi	_Jianing Song_
A308791	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(p.-(1)./(6))	nonn	1..40	nyi	_Jianing Song_
A308792	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(p.-(1)./(7))	nonn	1..10000	nyi	_Jianing Song_
A308793	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(p.-(1)./(8))	nonn	1..38	nyi	_Jianing Song_
A308794	filter	1	new A000040()	p -> ZV(A001175.pisanoPeriod(p.longValueExact())).equals(p.-(1)./(9))	nonn	1..39	nyi	_Jianing Song_
A274101	lambdan	0	n -> { final int k = n/4; final int j = n % 4; return CV(k).sqrt().+(CR.HALF_PI.*(j)).sin().*(k).round(); }	to k*sin(sqrt(k)+j*Pi/2) where n = 4*k+j, 0<=j<4.	sign	0..10000	nyi	_N. J. A. Sloane_
A274102	lambdan	0	n -> { final int k = n/2; final int j = n % 2; return CV(k).sqrt().+(CR.PI.*(j)).sin().*(k).round(); }	to k*sin(sqrt(k)+j*Pi) where n = 2*k+j, j=0 or 1.	sign	0..10000	nyi	_N. J. A. Sloane_A273378	poly	0
A307255	filnum	1	0	k -> Integer.toString(k, 4).startsWith(Integer.toString(k))	3
