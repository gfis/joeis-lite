---- 2025-08-22 07:30:47
---- 2025-08-22 07:34:13
---- 2025-08-22 07:40:01
---- 2025-08-24 21:22:17
---- 2025-08-24 21:34:51
A123472	eulerx	0			new A079457()	~~    ~~next();		. - _Falk HÃ¼ffner_, Jan 15 2016
A131441	holos	0	[[0],[2,-6,4],[2,-4],[1]]	1	0	0
A141314	eulerx	1			new A141313()			.
A153638	lambdan	0	n -> (Functions.DIGIT_SUM.i(2, ZV(n).*(n + 1)./(2)) & 1) == 1 ? ZV(1) : ZV(0)
A153639	lambdan	0	n -> (Functions.DIGIT_SUM.i(2, ZV(n).*(n + 1)./(2)) & 1) == 0 ? ZV(1) : ZV(0)
A270386	holos	0	[[0],[-186,155,-31],[74,-169,66],[5,8,-39],[2,6,4]]	1,2	0	0
A329053	eulerx	0			new A122086()			.
A339532	lingf	1	0,449,108,36,56,52,56,36,108,-1	1,-1,0,0,0,0,0,0,-1,1					0
A373277	lambdan	1	n -> SD(n, d -> GCDi(d, 7) != 1 ? ZV(0) : MU(d).*(ZV(7).^(n/d)))./(7*n)	a(n) = 1/(7*n) * Sum_{d|n, gcd(d,7)=1} mu(d) * 7^(n/d).
A377569	eulerx	0			new A002218().skip(1)			, shifted by 1.
A381055	holos	0	[0,-1,0,2,0,-1]	0,4,-1,10,-2	0	0
A383700	polyx	0	"[1],[1,-4]"	"1,p1,^1/4,/,1,p1,^1/4,/,log,^2,*,2,/"	0	1
A383951	partsun	0	new A340973()			Partial sums of A340973.
A384998	partsun	0	new A077285()			Partial sums of A077285.
A385497	lambdan	0	n -> SU(0, n, k -> BI(6*n+1, k))	""		a(n) = sum(k=0, n, binomial(6*n+1, k))	_	_	_
A385823	lambdan	0	n -> SU(0, n, k -> BI(3*n-3, k))	""		a(n) = sum(k=0, n, binomial(3*n-3, k))	_	_	_
A386006	lambdan	0	n -> SU(0, n, k -> BI(3*n-2, k))	""		a(n) = sum(k=0, n, binomial(3*n-2, k))	_	_	_
A386222	lingf	0	1	1,-5,-9,14					0
A386250	holos	0	[0,-4,4,-1]	0,0,0,0,4,13	0	0
A386270	holos	0	[0,-4,4,-1]	0,1,4,9,22	0	0
A386424	filnum	1	1	k -> D003557(F000203(k)).equals(D003557(k))
A386425	filnum	1	1	k -> (k&1) == 1 && k > 1 && !PP(k) && D003557(F000203(k)).equals(D003557(k))
A386485	holos	0	[0,1,-3,3,-1]	1,2,12,32	0	0
A386647	eulerx	1			new A373277()		poly	0	"[1],[1,-7]"	"x,<6,sub,p1,/,^1/7"
A386796	parmof3	1	A386800	2	1	Numbers that have exactly one exponent in their prime factorization that is equal to 2.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386797	parmof3	1	A386800	2	2	Numbers that have exactly two exponents in their prime factorization that are equal to 2.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386798	parmof3	1	A386800	2	3	Numbers that have exactly three exponents in their prime factorization that are equal to 2.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386799	parmof3	1	A386800	3	0	Numbers without an exponent 3 in their prime factorization.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386801	parmof3	1	A386800	3	2	Numbers that have exactly two exponents in their prime factorization that are equal to 3.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386802	parmof3	1	A386800	3	3	Numbers that have exactly three exponents in their prime factorization that are equal to 3.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386803	parmof3	1	A386800	4	0	Numbers without an exponent 4 in their prime factorization.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386804	parmof3	1	A386800	4	1	Numbers that have exactly one exponent in their prime factorization that is equal to 4.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386805	parmof3	1	A386800	4	2	Numbers that have exactly two exponents in their prime factorization that are equal to 4.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386806	parmof3	0	A386800	4	3	Numbers that have exactly three exponents in their prime factorization that are equal to 4.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386807	parmof3	1	A386800	5	0	Numbers without an exponent 5 in their prime factorization.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386808	parmof3	1	A386800	5	1	Numbers that have exactly one exponent in their prime factorization that is equal to 5.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386809	parmof3	1	A386800	5	2	Numbers that have exactly two exponents in their prime factorization that are equal to 5.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386810	parmof3	0	A386800	5	3	Numbers that have exactly three exponents in their prime factorization that are equal to 5.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A386823	trilambn	1	1	0	(n, k) -> new Q(ZV(n - k).*(n + k), ZV(n).*(n).+(ZV(k).*(k))).num()	Triangle read by rows: T(n,k) = numerator((n^2 - k^2)/(n^2 + k^2)), where 0 <= k < n.	nonn,easy,frac,look,tabl,new	1..78	nyi	_Stefano Spezia_
A386824	trilambn	1	1	0	(n, k) -> new Q(ZV(n - k).*(n + k), ZV(n).*(n).+(ZV(k).*(k))).den()	Triangle read by rows: T(n,k) = denominator((n^2 - k^2)/(n^2 + k^2)), where 0 <= k < n.	nonn,easy,frac,look,tabl,new	1..66	nyi	_Stefano Spezia_
A386875	holos	0	[0,-8,12,4,-12,2,3,-1]	0,0,0,1,3,11,27,71,159	0	0
A386878	holos	0	[0,-4,4,-1]	0,1,3,8,19,45	0	0
A386918	holos	0	[[0],[48,-352,768,-512],[0,6,-27,27]]	1,8	0	0
A386958	holos	0	[[0],[360,-702,324],[-70,183,-113],[0,-8,8]]	1,5	0	0
A386964	multia	1	"2"	(self, n) -> self.a(n - 1).*(10).+(PM(n).mod(10))	a(1) = prime(1) = 2, a(n) = 10*a(n-1) + (prime(n) mod 10).	nonn,base,easy,new	1..1000	nyi	_Michael S. Branicky_
A386991	filnum	1	1	k -> Predicates.SQUARE.is(SOPFR(k).^(2).+(ZV(k).*(k)))	Numbers k such that k^2 + sopfr(k)^2 is a square, where sopfr = F001414.	nonn,new	1..300	nyi	_Robert Israel_
A387007	holos	0	[[0],[48,24,-864,1080],[-6,61,156,-295],[0,-8,-6,20]]	1,6,37	0	0
A387008	holos	0	[[0],[-96,480,-408,-864,1080],[-20,-12,339,156,-295],[4,-6,-36,-6,20]]	1,7	0	0
A387009	holos	0	[[0],[-9600,-2560,123392,-204800,90112],[1416,-1712,-14000,29648,-15136],[-51,117,393,-1053,594]]	1,7	0	0
A387010	holos	0	[[0],[-384,-256,12160,-14080,-34816,45056],[24,-368,-1144,4144,3472,-7568],[0,24,24,-204,-81,297]]	1,8	0	0
A387011	holos	0	[[0],[-1152,9984,-5888,-73216,20480,90112],[-216,480,10448,15856,-8192,-15136],[18,-69,-630,-705,432,594]]	1,9	0	0
A387020	holos	0	[0,1,0,0,0,0,-2,1,-3,0,0,1,-1,2,-2,3,0,0,0,0,0,1,-1]	1,1,1,1,1,1,1,2,3,5,7,10,13,16,20,25,34,46,67,94,130	0	0
A387021	holos	0	[0,-1,0,0,0,0,0,0,3,-1,4,0,0,0,0,-3,2,-6,3,-6,0,0,1,-1,2,-2,3,-3,4,0,0,0,0,0,0,0,1,-1]	1,1,1,1,1,1,1,1,1,2,3,5,7,10,13,17,21,25,30,36,46,59,81,109,153,207,277,361,463,589,743,949,1211,1589,2083,2773	0	0
A387032	filnum	1	2	n -> { final String s = n.toString(); return s.indexOf('1') < 0 && s.indexOf('0') < 0; }	Numbers k with digits different from 0 and 1.	nonn,base,easy,new	1..10000	nyi	_David A. Corneth_
A387033	holos	0	[[0],[2880,-1488,-1944,1080],[-360,234,451,-295],[0,-6,-26,20]]	1,3,16	0	0
A387034	holos	0	[[0],[-6652800,6896640,5882112,-12249088,7189504,-1851392,180224],[415800,-298320,-1166064,1907248,-1132384,301472,-30272],[0,-8295,49902,-71355,42690,-11610,1188]]	1,1,11	0	0
A387035	holos	0	[[0],[-1209600,1511040,1502720,-3751680,2607616,-790528,90112],[75600,-49320,-318992,587760,-408304,128032,-15136],[0,-2820,14067,-22080,15333,-4914,594]]	1,2,16	0	0
A387036	holos	0	[[0],[362880,-199296,-886272,1217024,-565248,90112],[-22680,-10584,145056,-186608,90192,-15136],[0,1440,-5604,6909,-3429,594]]	1,3,22	0	0
A387037	holos	0	[[0],[40320,-41856,-174720,344320,-215040,45056],[-2520,-1608,30024,-52096,33744,-7568],[0,264,-1194,1911,-1269,297]]	1,4,29	0	0
A387048	filnum	1	1	k -> PP(SOPFR(k).^(2).+(ZV(k).*(k)))	Numbers k such that k^2 + sopfr(k)^2 is prime, where sopfr = F001414.	nonn,new	1..10000	nyi	_Robert Israel_
A387049	filnum	1	1	k -> PP(SOPFR(k).^(2).+(ZV(k).*(k))) && PP(SOPFR(k).+(k))	Numbers k such that both k + sopfr(k) and k^2 + sopfr(k)^2 are prime, where sopfr = F001414.	nonn,new	1..10000	nyi	_Robert Israel_
A387050	lambdan	0	n -> Integers.SINGLETON.count(0, n, k -> Binomial.binomial(n, k).mod(16) != 0)
A387051	lambdan	0	n -> Integers.SINGLETON.count(0, n, k -> Binomial.binomial(n, k).mod(32) != 0)
A387084	polya	0	"[1]"	"x,B,1,4,x,B,1,-,*,5,/,+,sqrt,/"	new A001449()
A387085	holos	0	[[0],[8,-16],[6,-8],[0,3]]	1,0	0	0
A387086	holos	0	[[0],[320,-288,64],[116,-96,16],[-34,54,-20],[0,-3,3]]	1,0	0	0
A387091	lambdan	0	n -> BI(9*n + 1, n)
A387092	polya	0	"[1]"	"x,B,1,8,x,B,1,-,*,9,/,+,sqrt,/"	new A169958()
A387108	lambdan	0	n -> Integers.SINGLETON.count(0, n, k -> Binomial.binomial(n, k).mod(25) != 0)
A387109	lambdan	0	n -> Integers.SINGLETON.count(0, n, k -> Binomial.binomial(n, k).mod(27) != 0)
A387138	trilambn	0	0	0	(n, k) -> BI(n, k).*(PR(1, n, j -> RAD(j)))	Product_{k=1..n} radical(k), where radical(n) is the product of distinct prime factors of n, cf. F007947.	nonn,tabl,new	0..44	nyi	_Peter Luschny_
A387149	decexpr	1	() -> REALS.acos(CV(1).-(CR.SQRT2.*(2))./(3))	arccos((1 - 2*sqrt(2))/3)
A387150	decexpr	1	() -> REALS.acos(CV(1).-(CR.SQRT2.*(2)./(3)).sqrt().negate())	arccos(-sqrt(1 - 2*sqrt(2)/3))
A387156	lambdan	1	n -> D003557(SIGMA(n))
A387157	lambdan	1	n -> D173557(SIGMA(n))
A387158	filnum	1	1	k -> D173557(k).equals(D173557(SIGMA(k)))
A387159	filnum	1	1	k -> (k&1) == 1 && D173557(k).equals(D173557(SIGMA(k)))
A387208	holos	0	[[0],[9,-9],[3,10],[0,-1]	1	0	0
A387210	holos	0	[[0],[13,-13],[5,14],[0,-1]	1	0	0
A387211	holos	0	[[0],[12,-12],[0,8],[0,-1]	1	0	0
A387212	holos	0	[[0],[21,-21],[-1,10],[0,-1]	1	0	0
A387228	holos	0	[[0],[0,-5],[6,6],[0,-1]	1	0	0
A387229	holos	0	[[0],[0,-9],[12,10],[0,-1]	1	0	0
A387230	holos	0	[[0],[0,-13],[18,14],[0,-1]	1	0	0
A387233	holos	0	[[0],[0,-12],[6,8],[0,-1]	1	0	0
A387234	holos	0	[[0],[0,-21],[6,10],[0,-1]	1	0	0
A387235	decexp	0	() -> CV(2).log().*(2)./(3)
A387237	holos	0	[[0],[-15,-5],[9,6],[0,-1]	1	0	0
A387238	holos	0	[[0],[-25,-5],[15,6],[0,-1]	1	0	0
A387239	holos	0	[[0],[30,25,5],[-45,-33,-6],[0,6,1]]	1	0	0
---- 2025-08-24 21:45:29
A387140	lambdan	0	n -> n == 0 ? ZV(1) : PR(1, n, k -> RAD(k))./(n)	a(n) = (1/n) * Product_{k=1..n} radical(k) for n >= 1, a(0) = 1, where radical(n) is the product of distinct prime factors of n, cf. F007947.	nonn,new	0..25	nyi	_Peter Luschny_
A387141	lambdan	0	n -> n == 0 ? ZV(1) : PR(1, n, k -> RAD(k)).root(n)	a(n) = floor((Product_{k=1..n} radical(k))^(1/n)) for n >= 1, a(0) = 1, where radical(n) is the product of distinct prime factors of n, cf. F007947.	nonn,new	0..74	nyi	_Peter Luschny_
A387147	decexpr	1	() -> REALS.acos(CV(10).-(CV(5).sqrt().*(2))./(15).sqrt().negate())	arccos(-sqrt((10 - 2*sqrt[5])/15))
A387148	decexpr	1	() -> REALS.acos(CV(1).-(CR.SQRT2).-(CV(2).^(CV(new Q(1, 4))).*(2))./(3))	arccos((1 - sqrt(2) - 2*2^(1/4))/3)
A387151	lambdan	0	n -> FA(n).*(n)./(PR(1, n, k -> RAD(k)))	a(n) = n*n! / Product_{k=1..n} radical(k), where radical(n) is the product of distinct prime factors of n, cf. F007947.	nonn,new	0..3167	nyi	_David A. Corneth_ and _Peter Luschny_
---- 2025-08-24 22:40:18
A145738	sintrif	1	(term, n) -> CORE(term)	""	new A145609()	a(n) = squarefree part of J145609(n).
A204993	lambdan	1	n -> {final Z b = CORE(n); return b.and(ZV(3)).equals(ZV(3)) ? b : b.*(4); }	Let b(n) = F007913(n), then a(n) = b(n) if b(n) == 3 (mod 4) and 4*b(n) otherwise. - _Jianing Song_, May 16 2024
A250093	lambdan	1	n -> CORE(FI(n*n))	Squarefree part of Fibonacci(n^2).
A260198	filnum	1	1	k -> !Predicates.SQUARE_FREE.is(k) && CORE(k + 1).equals(CORE(k).+(1))	Numbers k such that core(k+1) = core(k)+1 and k is not squarefree, where core(k) = F007913(k).
A271187	trilambn	0	0	0	(n, k) -> Functions.CORE.z(BI(n, k))	Triangle T(n,k) read by rows: T(n,k) is the squarefree part of C(n,k).	nonn,tabl	0..104	nyi	_Joerg Arndt_
A331752	filnum	1	1	k -> CORE(SIGMA(k)).equals(CORE(2*k))	Numbers k such that squarefree part of sigma(k) is equal to squarefree part of 2*k.
A363084	filnum	1	1	k -> { final Z d = RAD(k).-(CORE(k)); return d.compareTo(ZV(0)) > 0 && Predicates.SQUARE.is(d); }	Numbers k such that sqrt(F007947(k) - F007913(k)) is an integer m > 0.
A380168	filnum	1	1	k -> !Predicates.SQUARE.is(k) && Functions.CORE.z(k).compareTo(E008833(k)) < 0
A387126	trilambn	0	0	0	(n, k) -> PR(1, n, j -> RAD(j)).*(FA(n))./(FA(n - k))	Product_{k=1..n} radical(k), where radical(n) is the product of distinct prime factors of n, cf. F007947.	nonn,tabl,new	0..44	nyi	_Peter Luschny_
