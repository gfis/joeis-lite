---- 2024-04-05 23:07:51
A069471	stir2	0	new A001247()	, 0	Stirling transform of A001247
A071624	filnum	1	0	n -> Euler.inversePhi(ZV(96*n + 2)).size() > 0	Numbers n such that the set InvPhi[96n+2] is nonempty.
A071629	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(      4)).size())	Number of terms in the set InvPhi(      4*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071630	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(      8)).size())	Number of terms in the set InvPhi(      8*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071631	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(     16)).size())	Number of terms in the set InvPhi(     16*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071632	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(   1024)).size())	Number of terms in the set InvPhi(   1024*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071633	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(  65536)).size())	Number of terms in the set InvPhi(  65536*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071634	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(1048576)).size())	Number of terms in the set InvPhi(1048576*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A072006	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(p.-(1))).size())	Number of terms in InversePhi set of p(n)*(p(n)-1) = phi(p(n)^2), where p(n) is the n-th prime and phi=A000010.	nonn	1..98
A073501	filter	1	new A000040()	p -> JF(p.^(2).+(1)).largestPrimeFactor().compareTo(p) < 0
A074866	filter	1	new A015763()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015763.	nonn	1..45
A074868	filter	1	new A015765()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015765.	nonn	1..42
A077801	filter	1	new A015767()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015767.	nonn	1..51
A077803	filter	1	new A015769()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015769.	nonn	1..44
A078164	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 4 == 0); }	Numbers k such that phi(k) is a perfect biquadrate.	nonn	1..10000
A078165	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 5 == 0); }	Numbers k such that phi(k) is a perfect 5th power.	nonn	1..10000
A078166	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 6 == 0); }	Numbers k such that phi(k) is a perfect sixth power.	nonn	1..10000
A078167	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 7 == 0); }	Numbers k such that phi(k) is a perfect 7th power.	nonn	1..10000
A078168	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 8 == 0); }	Numbers k such that phi(k) is a perfect 8th power.	nonn	1..7500
A078169	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 9 == 0); }	Numbers k such that phi(k) is a perfect 9th power.	nonn	1..10000
A078170	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() %10 == 0); }	Numbers k such that phi(k) is a perfect tenth power.	nonn	1..2250
A078544	filter	1	new A015761()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015761.	nonn	1..10000
A078549	filter	1	new A015771()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015771.	nonn	1..37
A080383	lambdan	0	n -> SU(0, n, j -> ZV(BI(n, n/2).mod(BI(n, j)).isZero() ? 1 : 0))	Number of j (0 <= j <= n) such that the central binomial coefficient C(n,floor(n/2)) = A001405(n) is divisible by C(n,j).
A080384	filtpos	1	0	new A080383()	v -> v.equals(ZV(6))	Numbers k such that there are exactly 6 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., ?080383(k) = 6.	nonn
A080385	filtpos	1	0	new A080383()	v -> v.equals(ZV(7))	Numbers k such that there are exactly 7 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., ?080383(k) = 7.	nonn
A080387	filtpos	1	0	new A080383()	v -> v.equals(ZV(10))	Numbers k such that there are exactly 10 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., ?080383(k) = 10.	nonn
A081402	dirtraf	1	new A008475()	new A000142()	nonn	1.
A081403	dirtraf	1	new A008475()	new A000290()	n^2).	nonn
A081404	dirtraf	1	new A008475()	new A006093()	prime(n)-1).	no
A083528	lambdan	1	n -> ZV(5).^(n).modZ(2*n)	a(n) = 5^n mod 2*n.	easy,nonn	1..1000	nyi
A083529	lambdan	1	n -> ZV(5).^(n).modZ(3*n)	a(n) = 5^n mod 3*n.	easy,nonn	1..1000	nyi
A083530	lambdan	1	n -> ZV(7).^(n).modZ(2*n)	a(n) = 7^n mod (2*n).	easy,nonn	1..1000	nyi
A085507	stir2	0	new PrependSequence(0, new A010051(), 0)	, 0	Stirling transform of A010051
A094416	arrlamb	1	1	1	1	(r, n) -> SU(0, n, k -> FA(k).*(ZV(r).^(k)).*(S2(n, k)))	= 1/(r+1) * Sum_{k>=1} k^n * (r/(r+1))^k, for r>0, n>0.
A094487	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z.FOUR.+(p.^(2)).IPP() && Z2(  4).+(p.^(  4)).IPP()	2^j+p^j are primes for j=1,2,  4	1..34	nyi
A094488	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z.FOUR.+(p.^(2)).IPP() && Z2(  8).+(p.^(  8)).IPP()	2^j+p^j are primes for j=1,2,  8	1..500	nyi
A094489	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z2(4).+(p.^(4)).IPP() && Z2( 32).+(p.^( 32)).IPP()	2^j+p^j are primes for j=1,4, 32	1..400	nyi
A094492	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z2(4).+(p.^(4)).IPP() && Z2( 16).+(p.^( 16)).IPP()	2^j+p^j are primes for j=1,4, 16	1..31	nyi
A094493	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z.FOUR.+(p.^(2)).IPP() && Z2( 16).+(p.^( 16)).IPP()	2^j+p^j are primes for j=1,2, 16	1..27	nyi
A094494	filter	1	new A000040()	p -> Z.FOUR.+(p.^(2)).IPP() && Z2(4).+(p.^(4)).IPP() && Z2(  8).+(p.^(  8)).IPP()	2^j+p^j are primes for j=2,4,  8	1..400	nyi
A096196	lambdan	1	n -> Z2(n).+(1).modZ(n)	a(n) = (1 + 2^n) mod n.	nonn,easy	1..10000	nyi
A102325	filter	1	new A000040()	p -> JF(p.^(3).+(1)).largestPrimeFactor().compareTo(p) < 0	Primes p such that the largest prime divisor of p^3 + 1 is less than p.
A113425	simtraf	1	new A060272()	(n, v) -> { final Z n2 = ZV(n).*(n); final Z n2m = n2.-(v); return n2m.IPP() ? n2m : n2.+(v); }	Smallest prime closest to n^2.	nonn	1..10000
A113426	simtraf	1	new A060272()	(n, v) -> { final Z n2 = ZV(n).*(n); final Z n2p = n2.+(v); return n2p.IPP() ? n2p : n2.-(v); }	Greatest prime closest to n^2.	nonn	1..1000
A118669	filnum	1	1	k -> { final FactorSequence fs = JF(k); return !fs.isSquareFree() && k.toString().indexOf(fs.squareFreeKernel().toString()) >= 0; }	Numbers that are not squarefree, but contain their squarefree kernel in decimal representation.	nonn,base	1..10000
A168224	recpos	1	new A168223()	, 0, false
A246262	prepend	0	new PartialSumSequence(0, new A246260())	0	partial sums of A246260.
A246264	simtraf	0	new A246262()	(n, v) -> ZV(n).-(v)
A263575	stir2	0	new A000032()	, 0	Stirling transform of A000032
A305550	stir2	0	new A088311()	, 0	Stirling transform of A088311
A306022	stir2	0	new A000041()	, 0	Stirling transform of A000041
A306023	stir2	0	new A000009()	, 0	Stirling transform of A000009
A317170	stir2	0	new A001006()	, 0	Stirling transform of A001006
A323631	stir2	0	new A000129()	, 0	Stirling transform of A000129
A371655	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(4).^(n - k).*(BI(n, k)).*(BI(2*n - k, n - 1 - 2*k)))./(n)
A371657	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(3).^(n - k).*(BI(n, k)).*(BI(3*n - k, n - 1 - 2*k)))./(n)
A371658	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(4).^(n - k).*(BI(n, k)).*(BI(3*n - k, n - 1 - 2*k)))./(n)
A371660	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(3).^(n - k).*(BI(n, k)).*(BI(4*n - k, n - 1 - 2*k)))./(n)
A371661	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(4).^(n - k).*(BI(n, k)).*(BI(4*n - k, n - 1 - 2*k)))./(n)
---- 2024-04-05 23:20:22
A051493	parmof3	1	A070080	COUNT	s -> hasCoPrimeSides(s)
A051516	parmof3	1	A070080	COUNT	s -> hasIntArea(s)	Number of triangles with perimeter n having integer sides and area.
A059169	parmof3	1	A070080	COUNT	s -> isIsosceles(s)	Number of partitions of n into 3 parts which form the sides of a nondegenerate isosceles triangle.
A070081	parmof3	1	A070080	SIDE_B	s -> isTriangle(s)	Middle side of integer triangles [A070080(n) <= a(n) <= A070082(n)], sorted by perimeter, sides lexicographically ordered.
A070082	parmof3	1	A070080	SIDE_C	s -> isTriangle(s)	Largest side of integer triangles [A070080(n) <= A070081(n) <= a(n)], sorted by perimeter, sides lexicographically ordered.
A070083	parmof3	1	A070080	PERIMETER	s -> isTriangle(s)	Perimeters of integer triangles, sorted by perimeter, sides lexicographically ordered.	nonn
A070084	parmof3	1	A070080	GCD	s -> isTriangle(s)	Greatest common divisor of sides of integer triangles [A070080(n), A070081(n), A070082(n)], sorted by perimeter, sides lexicographically ordered.	nonn
A070085	parmof3	1	A070080	SHAPE	s -> isTriangle(s)	a(n) = A070080(n)^2 + A070081(n)^2 - A070082(n)^2.	sign
A070086	parmof3	1	A070080	AREA	s -> isTriangle(s)	Areas of integer triangles [A070080(n), A070081(n), A070082(n)], rounded values.	nonn
A070088	parmof3	1	A070080	COUNT	s -> hasPrimeSides(s)	Number of integer-sided triangles with perimeter n and prime sides.	nonn
A070090	parmof3	1	A070080	COUNT	s -> isScalene(s) && hasPrimeSides(s)	Number of xx s  n and xx .
A070091	parmof3	1	A070080	COUNT	s -> isIsosceles(s) && hasCoPrimeSides(s)	Number of xx s  n and xx .
A070092	parmof3	1	A070080	COUNT	s -> isIsosceles(s) && hasPrimeSides(s)	Number of xx s  n and xx .
A070093	parmof3	1	A070080	COUNT	s -> isAcute(s)	Number of xx s  n.
A070094	parmof3	1	A070080	COUNT	s -> isAcute(s) && hasCoPrimeSides(s)	Number of xx s  n and xx .
A070095	parmof3	1	A070080	COUNT	s -> isAcute(s) && hasPrimeSides(s)	Number of xx s  n and xx .
A070096	parmof3	1	A070080	COUNT	s -> isAcute(s) && isScalene(s) && hasCoPrimeSides(s)	Number of s  n and xx  which are both xx and xx.
A070097	parmof3	1	A070080	COUNT	s -> isAcute(s) && isScalene(s) && hasPrimeSides(s)	Number of s  n and xx  which are both xx and xx.
A070098	parmof3	1	A070080	COUNT	s -> isAcute(s) && isIsosceles(s)	Number of s  n which are xx and xx.
A070099	parmof3	1	A070080	COUNT	s -> isAcute(s) && isIsosceles(s) && hasCoPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070100	parmof3	1	A070080	COUNT	s -> isAcute(s) && isIsosceles(s) && hasPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070101	parmof3	1	A070080	COUNT	s -> isObtuse(s)	Number of xx s  n.
A070102	parmof3	1	A070080	COUNT	s -> isObtuse(s) && hasCoPrimeSides(s)	Number of xx s  n and xx .
A070103	parmof3	1	A070080	COUNT	s -> isObtuse(s) && hasPrimeSides(s)	Number of xx s  n and xx .
A070104	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isScalene(s) && hasCoPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070105	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isScalene(s) && hasPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070106	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isIsosceles(s)	Number of s  n which are xx and xx.
A070107	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isIsosceles(s) && hasCoPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070108	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isIsosceles(s) && hasPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070109	parmof3	1	A070080	COUNT	s -> isRight(s) && hasCoPrimeSides(s)	Number of xx s  n and xx .
A070110	parmof3	1	A070080	INDEX	s -> hasCoPrimeSides(s)	an  with xx .
A070111	parmof3	1	A070080	INDEX	s -> hasPrimeSides(s)	an  with xx sides.
A070112	parmof3	1	A070080	INDEX	s -> isScalene(s)	a xx .
A070113	parmof3	1	A070080	INDEX	s -> isScalene(s) && hasCoPrimeSides(s)	a xx  with xx .
A070114	parmof3	1	A070080	INDEX	s -> isScalene(s) && hasPrimeSides(s)	a xx  with xx .
A070115	parmof3	1	A070080	INDEX	s -> isIsosceles(s)	an xx .
A070116	parmof3	1	A070080	INDEX	s -> isIsosceles(s) && hasCoPrimeSides(s)	an xx  with xx .
A070117	parmof3	1	A070080	INDEX	s -> isIsosceles(s) && hasPrimeSides(s)	an xx  with xx .
A070118	parmof3	1	A070080	INDEX	s -> isAcute(s)	an xx .
A070119	parmof3	1	A070080	INDEX	s -> isAcute(s) && hasCoPrimeSides(s)	an xx  with xx .
A070120	parmof3	1	A070080	INDEX	s -> isAcute(s) && hasPrimeSides(s)	an xx  with xx .
A070121	parmof3	1	A070080	INDEX	s -> isAcute(s) && isScalene(s)	an xx xx .
A070122	parmof3	1	A070080	INDEX	s -> isAcute(s) && isScalene(s) && hasCoPrimeSides(s)	an xx xx  with xx .
A070123	parmof3	1	A070080	INDEX	s -> isAcute(s) && isScalene(s) && hasPrimeSides(s)	an xx xx  with xx .
A070124	parmof3	1	A070080	INDEX	s -> isAcute(s) && isIsosceles(s)	an xx xx .
A070125	parmof3	1	A070080	INDEX	s -> isAcute(s) && isIsosceles(s) && hasCoPrimeSides(s)	an xx xx  with xx .
A070126	parmof3	1	A070080	INDEX	s -> isAcute(s) && isIsosceles(s) && hasPrimeSides(s)	an xx xx  with xx .
A070127	parmof3	1	A070080	INDEX	s -> isObtuse(s)	an xx .
A070128	parmof3	1	A070080	INDEX	s -> isObtuse(s) && hasCoPrimeSides(s)	an xx  with xx .
A070129	parmof3	1	A070080	INDEX	s -> isObtuse(s) && hasPrimeSides(s)	an xx  with xx .
A070130	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isScalene(s)	an xx xx .
A070131	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isScalene(s) && hasCoPrimeSides(s)	an xx xx  with xx .
A070132	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isScalene(s) && hasPrimeSides(s)	an xx xx  with xx .
A070133	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isIsosceles(s)	an xx xx .
A070134	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isIsosceles(s) && hasCoPrimeSides(s)	an xx xx  with xx .
A070135	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isIsosceles(s) && hasPrimeSides(s)	an xx xx  with xx .
A070136	parmof3	1	A070080	INDEX	s -> isRight(s)	a xx .
A070137	parmof3	1	A070080	INDEX	s -> isRight(s) && hasCoPrimeSides(s)	a xx  with xx .
A070138	parmof3	1	A070080	COUNT	s -> hasCoPrimeSides(s) && hasIntArea(s)	Number of s with an xx having xx sides a, b and c such that a + b + c = n.
A070139	parmof3	1	A070080	COUNT	s -> isIsosceles(s) && hasIntArea(s)	Number of xx s  n having xx.
A070140	parmof3	1	A070080	COUNT	s -> isAcute(s) && hasIntArea(s)	Number of xx s  n having xx.
A070141	parmof3	1	A070080	COUNT	s -> isObtuse(s) && hasIntArea(s)	Number of xx s  n having xx.
A070142	parmof3	1	A070080	INDEX	s -> hasIntArea(s)	an  with xx.
A070143	parmof3	1	A070080	INDEX	s -> hasCoPrimeSides(s) && hasIntArea(s)	an  with xx, having xx .
A070144	parmof3	1	A070080	INDEX	s -> isScalene(s) && hasIntArea(s)	a xx  with xx.
A070145	parmof3	1	A070080	INDEX	s -> isIsosceles(s) && hasIntArea(s)	an xx  with xx.
A070146	parmof3	1	A070080	INDEX	s -> isAcute(s) && hasIntArea(s)	an xx  with xx.
A070147	parmof3	1	A070080	INDEX	s -> isObtuse(s) && hasIntArea(s)	an xx  with xx.
A070148	parmof3	1	A070080	INDEX	s -> hasTrigonalArea(s)	an integer Heronian triangle having triangular area.
A070149	parmof3	1	A070080	AREA	s -> hasIntArea(s)	Areas of integer Heronian triangles [A070080(A070142(n)), A070081(A070142(n)), A070082(A070142(n))].	nonn
A070150	filter	1	new A070149()	TRIANGULAR	Triangular areas of integer Heronian triangles.	nonn,nice	1..43
A070151	tuptraf	1	(n, s) -> s[0].*(s[1])./(2)	""	new A002330().skip(1), new A002331().skip(1)	a(n) = A002330(n+1)*A002331(n+1)/2	1..1000
A070200	parmof2	1	A070080	INRAD	Inradii of s [A070080(n), A070081(n), A070082(n)], rounded values.
A070201	parmof3	1	A070080	COUNT	s -> hasIntInRadius(s)	Number of s  n having xx.
A070202	parmof3	1	A070080	COUNT	s -> !hasCoPrimeSides(s) && hasIntInRadius(s)	Number of s with xx, perimeter n and xx .
A070203	parmof3	1	A070080	COUNT	s -> isScalene(s) && hasIntInRadius(s)	Number of xx s  n having xx.
A070204	parmof3	1	A070080	COUNT	s -> isIsosceles(s) && hasIntInRadius(s)	Number of xx s  n having xx.
A070205	parmof3	1	A070080	COUNT	s -> isAcute(s) && hasIntInRadius(s)	Number of xx s  n having xx.
A070206	parmof3	1	A070080	COUNT	s -> isObtuse(s) && hasIntInRadius(s)	Number of xx s  n having xx.
A070208	parmof3	1	A070080	COUNT	s -> hasIntArea(s) && !hasIntInRadius(s)	Number of s  n having xx but not xx.
A070209	parmof3	1	A070080	INDEX	s -> hasIntInRadius(s)	Numbers n such that [A070080(n), A070081(n), A070082(n)] is an  with xx.
A070210	parmof3	1	A070080	INRAD	s -> hasIntInRadius(s)	xx of s [A070080(A070209(n)), A070081(A070209(n)), A070082(A070209(n))].
A135622	parmof3	1	A070080	SQUARE16	s -> isTriangle(s)	16*Area^2 of integer triangles [?070080(n),?070081(n),?070082(n)].
