---- 2024-05-23 11:20:08
A000925	ordsum	0	new A010052().skip(1)	2
A002102	ordsum	0	new A010052().skip(1)	3
A002175	ordsum	0	new A080995().skip(1)	2
A005064	parmof2	1	A005063	3	a(n) = Sum_{p|n, p prime} p^3 - _Wesley Ivan Hurt_, Feb 04 2022
A005065	parmof2	1	A005063	4	a(n) = Sum_{p|n, p prime} p^4 - _Wesley Ivan Hurt_, Feb 04 2022A351193 a(n) = Sum_{p|n, p prime} p^5
A007117	#nyi	0		a(0) = a(1) = 0; for n >= 2, a(n)*2^(n + 2)  +  1 is the Least prime factor of the n - th Fermat number F(n) = 2^(2^n)  +  1
A014110	ordsum	0	new A010052().skip(1)	4
A016729	lingf	1	0,1,1,0,0,1,1,-2	1,-1,0,0,0,0,-1,1	0
A023670	ordsum	1	new A023533().skip(2)	2
A038671	ordsum	0	new A010052().skip(1)	5
A038833	parmof2	0	A006988	3	(\d+)^n-th prime	
A045848	ordsum	0	new A010052().skip(1)	6
A045849	ordsum	0	new A010052().skip(1)	7
A045850	ordsum	0	new A010052().skip(1)	8
A045851	ordsum	0	new A010052().skip(1)	9
A045852	ordsum	0	new A010052().skip(1)	10
A045853	ordsum	0	new A010052().skip(1)	12
A045854	ordsum	0	new A010052().skip(1)	24
A051236	multraf	1	(self, n) -> self.s(0).-(1)	""	new A013588()	a(n)=Annn(n)-(\d+)	1	A013588			Largest integer a(n) for which the integer interval [ 0,a(n) ] is a subset of the set of determinants of all n X n 0-1 matrices.
A051296	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(self.a(n - k)))	"1"	new A000142()	
A051343	ordsum	0	new A010057().skip(2)	3	0,0
A051493	parmof3	1	A070080	COUNT	s -> hasCoPrimeSides(s)
A051516	parmof3	1	A070080	COUNT	s -> hasIntArea(s)	Number of triangles with perimeter n having integer sides and area.
A052291	filter	1	new A000040()	p -> p.^(2).*( 4).+(1).IPP()	[(\d+)#^(\d+)+(\d+)]&]	300, 4,2,1
A053603	ordsup	0	new A010054().skip(2)	2	0,0	Number of ways to write n as an ordered sum of two nonzero triangular numbers.	nonn
A053604	ordsup	0	new A010054().skip(2)	3	0,0,0	Number of ways to write n as an ordered sum of 3 nonzero triangular numbers.	nonn
A055680	parmof2	0	A006988	5	((\d+)^n)-th prime	m	i
A057736	filter	1	new A000040()	p -> ZV(  2).^(p).+( 3).IPP()	[(\d+)^#+(\d+)]&]		2,  2, 3
A058192	parmof2	0	A006988	6	((\d+)^n)-th prime	m	i
A058239	parmof2	0	A006988	7	((\d+)^n)-th prime	m	i
A058244	parmof2	0	A006988	11	(\d+)^n-th prime	
A058245	parmof2	0	A006988	12	((\d+)^n)-th prime	m	i
A058246	parmof2	0	A006988	13	((\d+)^n)-th prime	m	i
A059160	ordsum	0	new A080995().skip(1)	5
A059169	parmof3	1	A070080	COUNT	s -> isIsosceles(s)	Number of partitions of n into 3 parts which form the sides of a nondegenerate isosceles triangle.
A063691	ordsup	0	new A010052().skip(2)	3	0,0,0
A063725	ordsup	0	new A010052().skip(2)	2	0,0
A063730	ordsup	0	new A010052().skip(2)	4	0,0,0,0
A067840	factexp	0	CR.TWO.exp()	Factorial expansion of e^2 : exp(2)=sum n=1 to infinity a(n)/n!.
A067881	factexp	0	CR.THREE.sqrt()	Factorial expansion of sqrt(3) = Sum_{n>=1} a(n)/n!.
A067882	factexp	0	CR.TWO.log()	Factorial expansion of log(2) = Sum_{n>=1} a(n)/n!.
A068055	partsum	0	A066425		Partial sums of A066425.	nonn	1..21	nyi	_Antti Karttunen_
A068337	lambdan	0	n -> RU(1, n, k -> new Q(ZV(MU(k)), ZV(k))).*(FA(n)).num()	a(n) = n!*Sum_{k=1..n} mu(k)/k, where mu(k) is the MÃ¶bius function.
A068446	factexp	0	CR.FIVE.sqrt()	Factorial expansion of sqrt(5) = Sum_{n>0} a(n)/n!.
A068447	factexp	0	Zeta.zeta(4)	Factorial expansion:   zeta(4) = Pi^4/90 = Sum_{n>0} a(n)/n!.
A068448	factexp	0	CR.PI.log()	Factorial expansion of log(Pi) = Sum_{n>0} a(n)/n! with a(n) as large as possible.
A068449	factexp	0	CR.PI.divide(CR.TWO).log()	Factorial expansion of log(Pi/2) = sum n>0 a(n)/n!.
A068450	factexp	0	CR.SQRT_PI	Factorial expansion of sqrt(Pi) = Sum_{n>0} a(n)/n!.
A068451	factexp	0	CR.PHI	Factorial expansion of the golden ratio (1+sqrt(5))/2 = Sum_{n>=1} a(n)/n!.
A068452	factexp	0	CR.PI.square()	factoradic             Pi^2 	 (or factorial base, or harmonic) expansion, but the integer part 9 = 3! + 2! + 1! would be [1, 1, 1] in factorial base, cf. A007623(9) = 111. - _M. F. Hasler_, Nov 27 2018
A068453	factexp	0	CR.E.sqrt()	Factorial expansion of sqrt(e) = Sum_{n>=1} a(n)/n!.
A068454	factexp	0	Zeta.zeta(5)	Factorial expansion of zeta(5) = Sum_{n>=1} a(n)/n!, with a(n) as large as possible.
A068455	factexp	0	Zeta.zeta(6)	Factorial expansion of zeta(6) = Sum_{n>=1} a(n)/n!.
A068456	factexp	0	Zeta.zeta(7)	Factorial expansion of zeta(7) = Sum_{n>=1} a(n)/n!.
A068457	factexp	0	Zeta.zeta(8)	Factorial expansion of zeta(8) = Sum_{n>=1} a(n)/n!.
A068458	factexp	0	Zeta.zeta(9)	Factorial expansion of zeta(9) = Sum_{n>=1} a(n)/n!.
A068459	factexp	0	Zeta.zeta(10)	Factorial expansion of zeta(10): zeta(10) = Sum_{n>0} a(n)/n!.
A068460	factexp	0	CR.SEVEN.log()	Factorial expansion of log(7) = Sum_{n>=1} a(n)/n!.
A068461	factexp	0	CR.valueOf(11).log()	Factorial expansion of log(11) = Sum_{n>=1} a(n)/n!, with a(n) as large as possible.
A068462	factexp	0	CR.TWO.pow(new Q(1, 3))	Factorial expansion of 2^(1/3) = Sum_{n>0} a(n)/n!.
A068463	factexp	0	CR.valueOf(new Q(3, 4)).gamma()	Factorial expansion of Gamma(3/4) = Sum_{n>=1} a(n)/n! where Gamma is Euler's gamma function.
A068464	factexp	0	CR.valueOf(new Q(1, 4)).gamma()	Factorial expansion of Gamma(1/4) = Sum_{n>=1} a(n)/n! with largest possible a(n), and Gamma = Euler's gamma function.
A068903	lambdan	0	n -> { final FactorSequence fs = JF(n); return BI(fs.sigma0(), fs.omega()); }
A068904	lambdan	0	n -> { final FactorSequence fs = JF(n); return BI(fs.sigma(), fs.sigma0()); }
A068905	lambdan	0	n -> { final FactorSequence fs = JF(n); return BI(fs.sigma(), fs.omega()); }
A069157	tuptraf	0	(n, s) -> s[0].*(s[1])./(s[1].+(1))	""	new A000005(), new A067029()	a(n) = A000005(n) * A067029(n)/(1+A067029(n))
A069250	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A069192(), new A004086().skip(1)
A069264	moetrafi	1	new A001222()	, 0		bigomega(n).
A069324	filter	1	new A068949()	PRIME	.
A069354	simtraf	1	new A059958()	v -> v.+(1)	for 0 < n < 19. - _Robert G. Wilson v_, Feb 18 2014
A069471	stir2	0	new A001247()	, 0	Stirling transform of A001247
A069535	filnum	1	1	n -> { final String fas = FA(n).toString(); return fas.indexOf(Integer.toString(n)) >= 0 && fas.indexOf(String.valueOf(Functions.REVERSE.l(n))) >= 0; }	Treated as strings, n and its reversal are substrings of n!.	base,nonn	1..10000
A069536	simtraf	0	new A077495()	v -> v.*(8)	a(n) = 8 * A077495(n).
A069853	filter	0	new A007418()	(k, v) -> (k & 1) == 0	1
A069879	partsun	0	new SimpleTransformSequence(0, new A060715(), v -> v.*(2))			Partial sums of 2*A060715(n).
A069897	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A006530(), new A020639()
A069930	multraf	1	(self, n) -> self.s(0).+(self.s(1))	""	new A032741().skip(1), new A069283().skip(1)
A069958	multraf	0	(self, n) -> self.s(0).^(3).-(self.s(1))	""	new A007953(), new A055012()	a(n)=Annn(n)^(\d+)-Annn(n)
A070002	filnum	0	1	k -> JF(LPF(k)).phi().-(JF(JF(k).phi()).largestPrimeFactor()).equals(1)	Numbers k such that phi(P(k))  -  P(phi(k)) = 1, where P(k) is the largest prime factor of k
A070071	simtraf	0	new A000110()	(n, v) -> v.*(n)	a(n) = n*B(n), where B(n) are the Bell numbers, A000110
A070075	stir2	0	new A021009()	, 0	Stirling transform of A021009
A070081	parmof3	1	A070080	SIDE_B	s -> isTriangle(s)	Middle side of integer triangles [A070080(n) <= a(n) <= A070082(n)], sorted by perimeter, sides lexicographically ordered.
A070082	parmof3	1	A070080	SIDE_C	s -> isTriangle(s)	Largest side of integer triangles [A070080(n) <= A070081(n) <= a(n)], sorted by perimeter, sides lexicographically ordered.
A070083	parmof3	1	A070080	PERIMETER	s -> isTriangle(s)	Perimeters of integer triangles, sorted by perimeter, sides lexicographically ordered.	nonn
A070084	parmof3	1	A070080	GCD	s -> isTriangle(s)	Greatest common divisor of sides of integer triangles [A070080(n), A070081(n), A070082(n)], sorted by perimeter, sides lexicographically ordered.	nonn
A070085	parmof3	1	A070080	SHAPE	s -> isTriangle(s)	a(n) = A070080(n)^2 + A070081(n)^2 - A070082(n)^2.	sign
A070086	parmof3	1	A070080	AREA	s -> isTriangle(s)	Areas of integer triangles [A070080(n), A070081(n), A070082(n)], rounded values.	nonn
A070087	filnum	1	1	k -> LPF(k).compareTo(LPF(k + 1)) > 0	P(n) > P(n + 1) where P(n) (A006530) is the largest prime factor of n
A070088	parmof3	1	A070080	COUNT	s -> hasPrimeSides(s)	Number of integer-sided triangles with perimeter n and prime sides.	nonn
A070089	filnum	1	1	k -> LPF(k).compareTo(LPF(k + 1)) < 0	P(n) < P(n + 1) where P(n) (A006530) is the largest prime factor of n
A070090	parmof3	1	A070080	COUNT	s -> isScalene(s) && hasPrimeSides(s)	Number of xx s  n and xx .
A070091	parmof3	1	A070080	COUNT	s -> isIsosceles(s) && hasCoPrimeSides(s)	Number of xx s  n and xx .
A070092	parmof3	1	A070080	COUNT	s -> isIsosceles(s) && hasPrimeSides(s)	Number of xx s  n and xx .
A070093	parmof3	1	A070080	COUNT	s -> isAcute(s)	Number of xx s  n.
A070094	parmof3	1	A070080	COUNT	s -> isAcute(s) && hasCoPrimeSides(s)	Number of xx s  n and xx .
A070095	parmof3	1	A070080	COUNT	s -> isAcute(s) && hasPrimeSides(s)	Number of xx s  n and xx .
A070096	parmof3	1	A070080	COUNT	s -> isAcute(s) && isScalene(s) && hasCoPrimeSides(s)	Number of s  n and xx  which are both xx and xx.
A070097	parmof3	1	A070080	COUNT	s -> isAcute(s) && isScalene(s) && hasPrimeSides(s)	Number of s  n and xx  which are both xx and xx.
A070098	parmof3	1	A070080	COUNT	s -> isAcute(s) && isIsosceles(s)	Number of s  n which are xx and xx.
A070099	parmof3	1	A070080	COUNT	s -> isAcute(s) && isIsosceles(s) && hasCoPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070100	parmof3	1	A070080	COUNT	s -> isAcute(s) && isIsosceles(s) && hasPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070101	parmof3	1	A070080	COUNT	s -> isObtuse(s)	Number of xx s  n.
A070102	parmof3	1	A070080	COUNT	s -> isObtuse(s) && hasCoPrimeSides(s)	Number of xx s  n and xx .
A070103	parmof3	1	A070080	COUNT	s -> isObtuse(s) && hasPrimeSides(s)	Number of xx s  n and xx .
A070104	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isScalene(s) && hasCoPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070105	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isScalene(s) && hasPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070106	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isIsosceles(s)	Number of s  n which are xx and xx.
A070107	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isIsosceles(s) && hasCoPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070108	parmof3	1	A070080	COUNT	s -> isObtuse(s) && isIsosceles(s) && hasPrimeSides(s)	Number of s  n and xx  which are xx and xx.
A070109	parmof3	1	A070080	COUNT	s -> isRight(s) && hasCoPrimeSides(s)	Number of xx s  n and xx .
A070110	parmof3	1	A070080	INDEX	s -> hasCoPrimeSides(s)	an  with xx .
A070111	parmof3	1	A070080	INDEX	s -> hasPrimeSides(s)	an  with xx sides.
A070112	parmof3	1	A070080	INDEX	s -> isScalene(s)	a xx .
A070113	parmof3	1	A070080	INDEX	s -> isScalene(s) && hasCoPrimeSides(s)	a xx  with xx .
A070114	parmof3	1	A070080	INDEX	s -> isScalene(s) && hasPrimeSides(s)	a xx  with xx .
A070115	parmof3	1	A070080	INDEX	s -> isIsosceles(s)	an xx .
A070116	parmof3	1	A070080	INDEX	s -> isIsosceles(s) && hasCoPrimeSides(s)	an xx  with xx .
A070117	parmof3	1	A070080	INDEX	s -> isIsosceles(s) && hasPrimeSides(s)	an xx  with xx .
A070118	parmof3	1	A070080	INDEX	s -> isAcute(s)	an xx .
A070119	parmof3	1	A070080	INDEX	s -> isAcute(s) && hasCoPrimeSides(s)	an xx  with xx .
A070120	parmof3	1	A070080	INDEX	s -> isAcute(s) && hasPrimeSides(s)	an xx  with xx .
A070121	parmof3	1	A070080	INDEX	s -> isAcute(s) && isScalene(s)	an xx xx .
A070122	parmof3	1	A070080	INDEX	s -> isAcute(s) && isScalene(s) && hasCoPrimeSides(s)	an xx xx  with xx .
A070123	parmof3	1	A070080	INDEX	s -> isAcute(s) && isScalene(s) && hasPrimeSides(s)	an xx xx  with xx .
A070124	parmof3	1	A070080	INDEX	s -> isAcute(s) && isIsosceles(s)	an xx xx .
A070125	parmof3	1	A070080	INDEX	s -> isAcute(s) && isIsosceles(s) && hasCoPrimeSides(s)	an xx xx  with xx .
A070126	parmof3	1	A070080	INDEX	s -> isAcute(s) && isIsosceles(s) && hasPrimeSides(s)	an xx xx  with xx .
A070127	parmof3	1	A070080	INDEX	s -> isObtuse(s)	an xx .
A070128	parmof3	1	A070080	INDEX	s -> isObtuse(s) && hasCoPrimeSides(s)	an xx  with xx .
A070129	parmof3	1	A070080	INDEX	s -> isObtuse(s) && hasPrimeSides(s)	an xx  with xx .
A070130	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isScalene(s)	an xx xx .
A070131	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isScalene(s) && hasCoPrimeSides(s)	an xx xx  with xx .
A070132	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isScalene(s) && hasPrimeSides(s)	an xx xx  with xx .
A070133	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isIsosceles(s)	an xx xx .
A070134	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isIsosceles(s) && hasCoPrimeSides(s)	an xx xx  with xx .
A070135	parmof3	1	A070080	INDEX	s -> isObtuse(s) && isIsosceles(s) && hasPrimeSides(s)	an xx xx  with xx .
A070136	parmof3	1	A070080	INDEX	s -> isRight(s)	a xx .
A070137	parmof3	1	A070080	INDEX	s -> isRight(s) && hasCoPrimeSides(s)	a xx  with xx .
A070138	parmof3	1	A070080	COUNT	s -> hasCoPrimeSides(s) && hasIntArea(s)	Number of s with an xx having xx sides a, b and c such that a + b + c = n.
A070139	parmof3	1	A070080	COUNT	s -> isIsosceles(s) && hasIntArea(s)	Number of xx s  n having xx.
A070140	parmof3	1	A070080	COUNT	s -> isAcute(s) && hasIntArea(s)	Number of xx s  n having xx.
A070141	parmof3	1	A070080	COUNT	s -> isObtuse(s) && hasIntArea(s)	Number of xx s  n having xx.
A070142	parmof3	1	A070080	INDEX	s -> hasIntArea(s)	an  with xx.
A070143	parmof3	1	A070080	INDEX	s -> hasCoPrimeSides(s) && hasIntArea(s)	an  with xx, having xx .
A070144	parmof3	1	A070080	INDEX	s -> isScalene(s) && hasIntArea(s)	a xx  with xx.
A070145	parmof3	1	A070080	INDEX	s -> isIsosceles(s) && hasIntArea(s)	an xx  with xx.
A070146	parmof3	1	A070080	INDEX	s -> isAcute(s) && hasIntArea(s)	an xx  with xx.
A070147	parmof3	1	A070080	INDEX	s -> isObtuse(s) && hasIntArea(s)	an xx  with xx.
A070148	parmof3	1	A070080	INDEX	s -> hasTrigonalArea(s)	an integer Heronian triangle having triangular area.
A070149	parmof3	1	A070080	AREA	s -> hasIntArea(s)	Areas of integer Heronian triangles [A070080(A070142(n)), A070081(A070142(n)), A070082(A070142(n))].	nonn
A070150	filter	1	new A070149()	TRIANGULAR	Triangular areas of integer Heronian triangles.	nonn,nice	1..43
A070151	tuptraf	1	(n, s) -> s[0].*(s[1])./(2)	""	new A002330().skip(1), new A002331().skip(1)	a(n) = A002330(n+1)*A002331(n+1)/2	1..1000
A070179	insect2	1	new A040028( 2, 2, true)	new A040028(  4, 2, false)	x^ 2 = 2 has a solution mod p, but x^( 2^2) = 2 has no solution mod p.
A070180	insect2	1	new A040028( 3, 2, true)	new A040028(  9, 2, false)	x^ 3 = 2 has a solution mod p, but x^( 3^2) = 2 has no solution mod p.
A070181	insect2	1	new A040028( 4, 2, true)	new A040028( 16, 2, false)	x^ 4 = 2 has a solution mod p, but x^( 4^2) = 2 has no solution mod p.
A070182	insect2	1	new A040028( 5, 2, true)	new A040028( 25, 2, false)	x^ 5 = 2 has a solution mod p, but x^( 5^2) = 2 has no solution mod p.
A070183	insect2	1	new A040028( 6, 2, true)	new A040028( 36, 2, false)	x^ 6 = 2 has a solution mod p, but x^( 6^2) = 2 has no solution mod p.
A070184	insect2	1	new A040028( 8, 2, true)	new A040028( 64, 2, false)	x^ 8 = 2 has a solution mod p, but x^( 8^2) = 2 has no solution mod p.
A070185	insect2	1	new A040028( 9, 2, true)	new A040028( 81, 2, false)	x^ 9 = 2 has a solution mod p, but x^( 9^2) = 2 has no solution mod p.						Primes p such that x^9 = 2 has a solution mod p, but x^(9^2) = 2 has no solution mod p.
A070186	insect2	1	new A040028(10, 2, true)	new A040028(100, 2, false)	x^10 = 2 has a solution mod p, but x^(10^2) = 2 has no solution mod p.
A070187	insect2	1	new A040028(11, 2, true)	new A040028(121, 2, false)	x^11 = 2 has a solution mod p, but x^(11^2) = 2 has no solution mod p.						Primes p such that x^11 = 2 has a solution mod p, but x^(11^2) = 2 has no solution mod p.
A070188	insect2	1	new A040028(12, 2, true)	new A040028(144, 2, false)	x^12 = 2 has a solution mod p, but x^(12^2) = 2 has no solution mod p.
A070191	filnum	1	1	k -> ZV(3*k).gcd(ZV(Z.EIGHT.^(k).+(1))).equals(ZV(3))	Numbers k such that gcd(3*k, 8^k+1) = 3.	nonn	1..10000
A070200	parmof2	1	A070080	INRAD	Inradii of s [A070080(n), A070081(n), A070082(n)], rounded values.
A070201	parmof3	1	A070080	COUNT	s -> hasIntInRadius(s)	Number of s  n having xx.
A070202	parmof3	1	A070080	COUNT	s -> !hasCoPrimeSides(s) && hasIntInRadius(s)	Number of s with xx, perimeter n and xx .
A070203	parmof3	1	A070080	COUNT	s -> isScalene(s) && hasIntInRadius(s)	Number of xx s  n having xx.
A070204	parmof3	1	A070080	COUNT	s -> isIsosceles(s) && hasIntInRadius(s)	Number of xx s  n having xx.
A070205	parmof3	1	A070080	COUNT	s -> isAcute(s) && hasIntInRadius(s)	Number of xx s  n having xx.
A070206	parmof3	1	A070080	COUNT	s -> isObtuse(s) && hasIntInRadius(s)	Number of xx s  n having xx.
A070208	parmof3	1	A070080	COUNT	s -> hasIntArea(s) && !hasIntInRadius(s)	Number of s  n having xx but not xx.
A070209	parmof3	1	A070080	INDEX	s -> hasIntInRadius(s)	Numbers n such that [A070080(n), A070081(n), A070082(n)] is an  with xx.
A070210	parmof3	1	A070080	INRAD	s -> hasIntInRadius(s)	xx of s [A070080(A070209(n)), A070081(A070209(n)), A070082(A070209(n))].
A070220	filter	1	new LambdaSequence(1, k -> { final Z p10 = Z.TEN.^(k); return ZV(k).*(p10).+(p10.-(1)./(9)); })	PRIME	Primes of the form n (written in base 10) followed by n 1s.	base,nonn	1..8
A070221	lambdan	2	n -> JF(n + 1).largestPrimeFactor().-(JF(n).largestPrimeFactor())	a(n)=LPF(n+1)-LPF(n), where LPF(n) denotes the largest prime factor of n.	sign	2..83	nyi
A070222	filnum	1	1	k -> { final FactorSequence fs = JF(k); return fs.sigma().mod(fs.sopf()).isZero(); }	Numbers k such that the sum of prime divisors of k divides the sum of divisors of k.	easy,nonn	1..10000	nyi	_Benoit Cloitre_		Numbers k such that the sum of prime divisors of k divides the sum of divisors of k.
A070224	filtpos	1	1	new A005063().skip(1)	(k, v) -> JF(k).sigma(2).mod(v).isZero()	Numbers k such that the sum of p^2, where p are the prime divisors of k, divides the sum of d^2, where d are the divisors of k.	easy,nonn	1..10000	nyi	_Benoit Cloitre_	Numbers k such that the sum of p^2, where p are the prime divisors of k, divides the sum of d^2, where d are the divisors of k.
A070225	filnum	1	1	k -> JF(k).sigma().-(k).-(SD(k, d -> ZV(d).IPP() ? ZV(d).^(2) : Z.ZERO)).equals(Z.NEG_ONE)	Numbers k such that (sigma(k)-k) - Sum_{p|k} p^2 = -1.	easy,nonn	1..30	nyi	_Benoit Cloitre_		Numbers k such that (sigma(k)-k) - Sum_{p|k} p^2 = -1.
A070226	filnum	1	1	k -> { final FactorSequence fs = JF(k); return fs.sigma0().equals(fs.squareFreeKernel()); }	Numbers n such that the squarefree kernel of n is equal to the number of divisors of n.	nonn	1..150
A070238	lambdan	1	n -> { final FactorSequence fs = JF(n); return ZV(fs.core().-(fs.phi()).signum()); }	Sign of core(n)-phi(n)
A070246	multraf	1	(self, n)-> self.s(0).lcm(ZV(n))./(self.s(0).gcd(ZV(n)))	""	new A004086()	nyi t	a(n)= lcm(n, R(n))/ gcd(n, R(n)), where R(n)(A004086)is the digit reversal of n.
A070247	filter	0	new A002385()	v -> Functions.DIGIT_SUM.l(v) == 5
A070248	filter	0	new A002385()	v -> Functions.DIGIT_SUM.l(v) == 7
A070249	filter	0	new A002385()	v -> Functions.DIGIT_SUM.l(v) == 8
A070250	filter	1	new A002385()	v -> Functions.DIGIT_SUM.l(v) == 10	Palindromic primes with digit sum 10.
A070257	recval	1	new A070562()		Fecundity of n sets a new record.						Fecundity of n sets a new record.
A070268	filnum	1	0	k -> MU(k) + MU(k + 1) + MU(k + 2) == -3	Numbers n such that mu(n) + mu(n+1) + mu(n+2) = -3.	nonn	1..10000
A070271	lambdan	1	n -> ZV(n).^(ZUtils.reverse(ZV(n)))	a(n) = n^reverse(n) (ignore leading 0s).	base,nonn	1..100	nyi
A070272	filnum	1	0	k -> { final FactorSequence fs = JF(k); return fs.phi().+(fs.sigma()).equals(ZUtils.reverse(ZV(k))); }	Numbers n such that reverse(n) = phi(n) + sigma(n).	base,nonn	1..8	nyi	_Joseph L. Pe_		Numbers n such that reverse(n) = phi(n) + sigma(n).
A070274	filnum	1	0	k -> ZV(ZUtils.digitSum(k)).equals(JF(k).squareFreeKernel())	Numbers n such that sum of digits of n equals the squarefree part of n.	nonn,base	1..10000	nyi	_Benoit Cloitre_		Numbers n such that sum of digits of n equals the squarefree part of n.
A070275	filnum	1	1	k -> ZV(ZUtils.digitSum(k)).equals(JF(k).sopf())	Numbers k such that the sum of the digits of k equals the sum of the prime divisors of k.	easy,nonn,base	1..10000
A070276	filnum	1	0	k -> ZUtils.digitSum(k) == ZUtils.digitSum(ZV(k).^(3))	Numbers n such that sum of digits of n equals the sum of digits of n^3.	easy,nonn,base	1..100
A070279	filnum	1	1	n -> ZUtils.digitSum(n) == ZUtils.digitSum(2*n)	Sum of digits of n equals the sum of digits of 2n.	easy,nonn,base	1..10000
A070288	lambdan	1	n -> SD(n, d -> ZV(JF(d).omega()).*(JF(n/d).omega()))	a(n) = Sum_{d|n} omega(d)*omega(n/d).	easy,nonn	1..10000	nyi
A070293	lambdan	1	n -> ZV(n).lcm(ZV(30))./(ZV(n).gcd(ZV(30)))	a(n) = lcm(30,n)/gcd(30,n).	easy,nonn	1..50	nyi
A070306	lambdan	1	n -> ZV(PHI(n)).*(2)./(Z2(JF(n).omega()))	2*phi(n)/2^omega(n).	easy,nonn	1..10000	nyi	_Benoit Cloitre_			a(n) = 2*phi(n)/2^omega(n).
A070314	lambdan	1	n -> JF(FA(n).add(1)).largestPrimeFactor().-(JF(Z2(n).+(1)).largestPrimeFactor())	P(n!+1)-P(2^n+1) where P(x) is the largest prime factor in x.	easy,sign	1..25	nyi
A070319	dirtral	0	new A002183()	new A261100()	(n, v) -> (n >= 4) ? v.+(1) : v		A002183(A261100(n))
A070323	multraf	1	(self, n) -> self.s(0).*(2)./(self.s(1))	""	new A037169() , new A000040()	2*A037169(n) /prime(n) for n > 1
A070325	filnum	1	1	k -> { final Z b = ZV(k); return b.+(1).IPP() && b.^(2).+(1).IPP() && b.^(4).+(1).IPP(); }	Numbers n such that n+1, n^2+1, n^4+1 are primes.	nonn	1..29
A070418	filnum	1	1	k -> { final FactorSequence fs = JF(k); return fs.sigma0().equals(JF(fs.phi()).sigma0()); }	Numbers k such that k and phi(k) have the same number of divisors.	easy,nonn,changed	1..8407
A070552	filnum	1	1	k -> JF(k).isSemiprime() && JF(k + 1).isSemiprime()	Semiprimes k such that k+1 is also a semiprime.	nonn	1..10000
A070553	tablamb	1	0	n -> new Integer[] { 0, 6 }	(n, k)-> Z.TEN.pow(n).*(k).mod(Z.SEVEN)	Rectangular array read by rows: n-th row gives the 7 numbers k*10^n mod 7 for 0 <= k < 7.
A070554	filter	0	new A058026()	(k, v) -> (k & 1) == 1
A070560	simtraf	0	new A070562()	(n, v) -> n == 0 ? Z.ONE : v.+(2)	a(0) = 1; for n > 0, a(n) = (fecundity of n) + 2.
A070561	simtraf	0	new A070562()	(n, v) -> n == 0 ? Z.ZERO : v.+(1)	a(0) = 1; for n > 0, a(n) = (fecundity of n) + 1.
A070565	lambdan	0	n -> ZV(n).-(Functions.DIGIT_PRODUCT.z(n))	n - product of digits of n.
A070600	multraf	1	(self, n)-> self.s(0).^(n)	"0"	new A007917()	a(n)= A007917(n)^n for n>1
A070610	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A000203()	new A074754()	a(n)=Annn(Annn(n))
A070639	lambdan	1	n -> SU(1, n, k -> ZV(PHI(n * k)))./(PHI(n))	a(n) = (1/phi(n))*Sum_{k=1..n} phi(n*k).	easy,nonn,look	1..2000	nyi
A070647	simtraf	1	new A006881()	v -> LPF(v)	a(n)=P(A006881(n)) where P(x) is the largest prime factor of x
A070655	filnum	1	1	k -> { final Z b = ZV(k); return b.+(1).IPP() && b.^(2).+(1).IPP() && b.^(4).+(1).IPP() && b.^(8).+(1).IPP(); }	Numbers n such that n+1, n^2+1, n^4+1 and n^8+1 are primes.	nonn	1..29
A070689	filnum	1	1	k -> { final Z b = ZV(k); return b.+(1).IPP() && b.^(2).+(1).IPP(); }	Numbers k such that k+1 and k^2+1 are primes.	nonn	1..10000
A070694	filnum	1	1	k -> { final Z b = ZV(k); return b.+(1).IPP() && b.^(2).+(1).IPP() && b.^(4).+(1).IPP() && b.^(8).+(1).IPP() && b.^(16).+(1).IPP(); }	Numbers b such that b+1, b^2+1, b^4+1, b^8+1 and b^16+1 are primes.	nonn					Numbers b such that b+1, b^2+1, b^4+1, b^8+1 and b^16+1 are primes.
A070751	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) < 0
A070752	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) > 0
A070753	filter	1	new A000040()	p -> CV(p).sin().compareTo(CR.ZERO) < 0
A070754	filter	1	new A000040()	p -> CV(p).sin().compareTo(CR.ZERO) > 0
A070770	multraf	0	(self, n) -> self.s(0).+(self.s(1)).+(self.s(2))	""	new A056556(), new A056557(), new A056558()	a(n)=Annn(n)+Annn(n)+Annn(n)
A070781	lambdan	0	n -> BI(n*n + 2*n + 1, n*n)	binomial((n+1)^2, n^2)
A070810	filtpos	1	1	new A054571()	(n, v)-> v.bitCount()== 1 && !ZV(n).IPP()	Numbers n such that phi(n-phi(n))=A054571(n)is a power of 2 and n is not a prime number.	nonn
A070811	filtpos	1	1	new A054571()	(n, v)-> n == 1 || v.bitCount()>  1 && !ZV(n).IPP()	Numbers n such that phi(n-phi(n))=A054571(n)is not a power of 2 and n is not a prime number.	nonn
A070818	#nyi	0		Least argument m such that commutator[phi(n), gpf(n)] = 2*n - 1, where phi(n) = A000010(n) and gpf(n) = A006530(n), the largest prime factor of n
A070819	#nyi	0		a(n) = phi(gpf(prime(n))  -  gpf(phi(prime(n))) = A070812(A000040(n)) where phi(w) = Euler totient of w and gpf(w) is the largest prime factor of w. So a(n) = prime(n)  -  1  -  q. See also A070813 when q = 2
A070821	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A032742(), new A006530()
A070823	multrar	1	(self, n)-> { final String s1 = self.a(n-1).toString(); final String s2 = self.a(n-2).toString(); return new Z(s1 + s2).-(new Z(s2 + s1)).abs(); }	"0,1"	a(1)=0, a(1)=1, a(n+2)=abs(concatenate(a(n+1)a(n))-concatenate(a(n)a(n+1)))
A070827	dirtrali	0	new A001414()	new A000032().skip(2)	"null"	2,1	A001414(A000032(n)) for n != 1
A070828	multraf	0	(self, n)-> Functions.SOPFR.z(self.s(0))	"1,1"	new A000108()	Sum of prime factors of Catalan numbers A000108(n), n>=2, with n=0 and n=1 terms added.	nonn,easy
A070831	filter	1	new A002385()	v -> Functions.DIGIT_SUM.l(v) == 11
A070869	tuptraf	1	(n, s) -> s[0].+(ZUtils.reverse(new Z(s[0].toString(2))))	"16"	PREVIOUS	a(1) = 16; a(n+1) = sum of a(n) and (a(n) written in base 2 and reversed).	nonn,easy,base	1..32	nyi	_N. J. A. Sloane_	a(1) = 16; a(n+1) = sum of a(n) and (a(n) written in base 2 and reversed).
A070870	tuptraf	1	(n, s) -> s[0].testBit(0) ? s[0].+(1)./(2) : s[0]./(2).*(5)	"6"	PREVIOUS	a(1) = 6; a(n+1) = (a(n)+1)/2 if a(n) odd, or 5*a(n)/2 if a(n) even.	nonn,easy,nice
A070871	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A002487().skip(1), PREVIOUS	a(n) = A002487(n) * A002487(n+1)
A070872	filtpos	0	1	new A070871()	(n, v) -> v.equals(ZV(n))	Numbers n such that Annnnnn(n)= n
A070873	filter	1	new A070871()	(k, v) -> v.compareTo(ZV(k)) > 0	nonn	1..62	nyi	_N. J. A. Sloane_			A070871(n) > n.
A070874	filter	1	new A070871()	(k, v) -> v.compareTo(ZV(k)) < 0	nonn	1..58	nyi	_N. J. A. Sloane_			A070871(n) < n.
A070914	arrlamb0	0	(n, k) -> BI(n*(k + 1), n)./(n*k + 1)
A070923	lambdan	0	n -> CV(n).^(new Q(2, 3)).ceil().^(3).-(ZV(n).^(2))	a(n) = ceiling(n^(2/3))^3 - n^2 = ?077107(n)-n^2.
A070928	lambdan	1	n -> CV(n).^(new Q(3, 4)).ceil().^(4).-(ZV(n).^(3))	a(n) = ceiling(n^(3/4))^4 - n^3.
A070929	lambdan	0	n -> CV(n).^(new Q(3, 2)).ceil().^(2).-(ZV(n).^(3))	a(n) = ceiling(n^(3/2))^2 - n^3 = ?077115(n) - n^3.
A070930	lambdan	1	n -> CV(n).^(new Q(4, 3)).ceil().^(3).-(ZV(n).^(4))	a(n) = ceiling(n^(4/3))^3 - n^4.
A071011	filter	0	new A001481()	v -> JF(v).sigma().and(Z.THREE).isZero()	
A071017	moetraf	1	new A002487()	, 1	#
A071018	moetrafi	1	new A002487()	, 1	#
A071122	multrar	1	(self, n)-> self.a(n - 1).+(Functions.DIGIT_SUM.z(Z2(n)))	""	a(n)= a(n-1)+ sum of decimal digits of 2^n.	base,easy,nonn	1..51
A071123	multrar	1	(self, n)-> self.a(n - 1).+(Functions.DIGIT_SUM.z(FA(n)))	""	a(n)= a(n-1)+ sum of decimal digits of n!.	base,easy,nonn	1..49
A071166	simtraf	0	new A000203()	(n, v) -> ZV(n).-(LPF(v))	a(n) = n  -  A006530(A000203(n)), difference between n and largest prime factor of the sum of its divisors
A071182	lambdan	2	n -> SPF(n + 1).-(SPF(n))	where SPF(n) denotes the Least prime factor of n
A071217	#nyi	0		Numbers k such that the largest prime factor of the sum of successive primes p(k)  +  p(k + 1) is greater than k
A071218	#nyi	0		Numbers k such that the largest prime factor of the sum of the two consecutive primes prime(k)  +  prime(k + 1) is at most k
A071220	simtraf	1	new A061308()	v -> Puma.primePiZ(v)	a(n)=primepi(Annn(n))
A071224	multraf	1	(self, n) -> ZV(n).*(self.s(0))./(self.s(1))	""	new A002808(), new A064814()
A071303	parmof2	1	A071302	4
A071304	parmof2	1	A071302	5
A071305	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A003053(), new A071302()	a(n)=Annn(n)*Annn(n)
A071306	lambdan	1	n -> { final Z p = ZV( 7); final int k = n/2; return p.^(k).+((n & 1)== 1 ? Z.ZERO : Z_1(k + 1)).*(PR(((n & 1)== 1 ? 0 : 1), k - 1, i -> p.^(2*k).-(p.^(2*i)))); }	a(n)= (1/2)* (number of n X n 0..6 matrices M with MM' mod 7 = I, where M' is the transpose of M and I is the n X n identity matrix).	nonn	1..11	nyi
A071307	parmof2	1	A071302	9
A071308	parmof2	1	A071302	10
A071309	lambdan	1	n -> { final Z p = ZV(11); final int k = n/2; return p.^(k).+((n & 1)== 1 ? Z.ZERO : Z_1(k + 1)).*(PR(((n & 1)== 1 ? 0 : 1), k - 1, i -> p.^(2*k).-(p.^(2*i)))); }	a(n)= (1/2)* (number of n X n 0..10 matrices with MM' mod 11 = I).	nonn	1..10	nyi
A071310	parmof2	1	A071302	12
A071312	#nyi	0		Squarefree numbers k such that the largest prime factor of k is equal to the sum of the other prime factors of k
A071324	moetraf	1	new A134871()	, 1	; i.e., Moebius transform of [1, 2, 3, 5, 5, 8, 7, 10, 10, 12, 11, ...]. - _Gary W. Adamson_, Nov 14 2007
A071388	filnum	1	0	n -> ZV(Euler.inversePhi(ZV(n)).size()).IPP()	Card[InvPhi(n)] is a prime number
A071392	#nyi	0		Reverse of Least prime factor of n = largest prime factor of n + 1; a(1)=1
A071393	#nyi	0		Reverse of largest prime factor of n = Least prime factor of n + 1; a(1)=1
A071394	#nyi	0		Numbers n divisible by pi(n) [A057809] with prime pi(n); i.e., largest prime factor of n equals pi(n)
A071413	multrar	0	(self,n)-> self.a(n/2).+(Z_1(n & 1).*(n))	"0"		a(n)= if n=0 then 0 else a(floor(n/2))+n*(-1)^(n mod 2).	sign
A071418	multrar	0	(self,n) -> { final Z an1 = self.a(n - 1).+(n - 1); return an1.testBit(0) ? an1./(2) : an1.*(3).+(1)./(2); }	"0"		a(1)=0, a(n+1)=(a(n)+n)/2 if a(n)+n is even, a(n+1)=(3*(a(n)+n)+1)/2 otherwise.	easy,nonn	1..1000	nyi	_Benoit Cloitre_
A071419	multrar	0	(self,n) -> { final Z an1 = self.a(n - 1).+(n - 1); return an1.testBit(0) ? an1./(2) : an1.*(3).+(1)./(2); }	"1"		a(1)=1, a(n+1)=(a(n)+n)/2 if a(n)+n is even, a(n+1)=(3*(a(n)+n)+1)/2 otherwise.	easy,nonn	1..58	nyi	_Benoit Cloitre_
A071607	multraf	0	(self, n) -> self.s(0)./(self.s(1))	""	new A007705()	a(n)=Annn(n)/((\d+)*n+(\d+))	2,1	A007705			Number of strong complete mappings of the cyclic group Z_{2n+1}.
A071624	filnum	1	0	n -> Euler.inversePhi(ZV(96*n + 2)).size() > 0	Numbers n such that the set InvPhi[96n+2] is nonempty.
A071629	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(      4)).size())	Number of terms in the set InvPhi(      4*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071630	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(      8)).size())	Number of terms in the set InvPhi(      8*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071631	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(     16)).size())	Number of terms in the set InvPhi(     16*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071632	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(   1024)).size())	Number of terms in the set InvPhi(   1024*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071633	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(  65536)).size())	Number of terms in the set InvPhi(  65536*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071634	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(1048576)).size())	Number of terms in the set InvPhi(1048576*p(n)), where p(n) is the n-th prime.	nonn	1..1000
A071648	lambdan	1	n -> { final int[] c = ZUtils.digitCounts(n); return ZV(c[2]*2 + c[4]*4 + c[6]*6 + c[8]*8); }
A071649	lambdan	1	n -> { final int[] c = ZUtils.digitCounts(n); return ZV(c[1] + c[3]*3 + c[5]*5 + c[7]*7 + c[9]*9); }	Sum of odd decimal digits of n.	nonn,base,easy	1..92	nyi
A071650	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A071649(), new A071648()
A071708	lambdan	1	n -> RU(1, n, k -> new Q(PHI(k), k)).num()
A071778	lambdan	1	n -> SU(1, n, k -> ZV(n/k).^(3).*(MU(k)))	a(n)=sum(k=1, n, moebius(k)*(n\k)^3)
A071783	filter	1	new A002385()	v -> { final String s = v.toString(); return s.indexOf('0')>= 0; }	Palindromic primes with at least one zero digit.
A071823	#nyi	0		Number of numbers x <= n with largest prime factor of the form 4k + 3
A071824	#nyi	0		Number of x with largest prime factor of the form 4k + 1 less than or equal to n
A071825	#nyi	0		(Number of x with largest prime factor of the form 4k + 3 less than or equal to n) minus (Number of x with largest prime factor of the form 4k + 1 less than or equal to n)
A071835	#nyi	0		Numbers k such that the largest prime factor of k is equal to floor(sqrt(k))
A071836	#lpf	0	n = prime(tau(n))
A071838	lambdan	1	n -> SU(1, n, i -> (ZV(i).IPP() ? Z.ONE : Z.ZERO).*(KS(2, i))).negate()
A071856	factexp	0	CR.TWO.log().multiply(Z.TWO).sqrt()	Factorial expansion of sqrt(2ln(2)) : sqrt(2ln(2)) = sum( n>=1, a(n)/n! ).
A071861	#nyi	0		Numbers k such that the largest prime factor of k is equal to the sum of primes dividing k + 1 (with repetition)
A071863	#nyi	0		Numbers n such that sum of primes dividing n (with repetition) is equal to the largest prime factor of n + 1
A071869	#nyi	0		Numbers k such that gpf(k) < gpf(k + 1) < gpf(k + 2) where gpf(k) denotes the largest prime factor of k
A071870	#nyi	0		Numbers k such that gpf(k) > gpf(k + 1) > gpf(k + 2) where gpf(k) denotes the largest prime factor of k
A071881	lambdir	0	n -> SEQ.a(n).*(SEQ.a(n + 1))	new A002487()
A071883	lambdir	0	n -> SEQ.a(n).*(SEQ.a(n + 2))	new A002487()	A002487(n)*A002487(n+2).
A071900	parmof2	1	A071302	8
A071906	lambdan	0	n -> Functions.DIGIT_SUM.z(Z2(n)).modZ(2)
A071908	lambdir	0	n -> SEQ.a(n).*(SEQ.a(n + 1)).*(SEQ.a(n + 2))	new A002487()	A002487(n)*A002487(n+1)*A002487(n+2).
A071909	simtraf	0	new A071908()	v -> v./(2)	A002487(n)*A002487(n+1)*A002487(n+2)/2.
A071911	filtpos	0	0	new A002487()	v -> v.mod(3) == 0	Numbers m such that Sterns diatomic A002487(m) is divisible by 3.
A071929	#nyi	0		Numbers k such that the sum of exponents of k is equal to the Largest prime factor of k; a(1)=1
A071964	#nyi	0		Numbers n such that n = Lpf(n)*Lpf(phi(n)) where Lpf(x) = A006530(x) is the largest prime factor of x
A071965	#nyi	0		Numbers k such that k = Gpf(k) * Gpf(sigma(k)) where Gpf(k) = A006530(k) is the Largest prime factor of k
A071974	simtraf	1	new A350388()	v -> v.sqrt()	a(n)=sqrt(Annn(n))		A350388
A072006	simtraf	1	new A000040()	p -> ZV(Euler.inversePhi(p.*(p.-(1))).size())	Number of terms in InversePhi set of p(n)*(p(n)-1) = phi(p(n)^2), where p(n) is the n-th prime and phi=A000010.	nonn	1..98
A072057	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A072055()	new A000203()	a(n)=Annn(Annn(n))
A072081	filamb	0	1	v -> v.mod(ZV(ZUtils.digitSum(v, 10)).^(2)).isZero()	Numbers divisible by the square of the sum of their digits in base 10.
A072082	filamb	0	1	v -> v.mod(ZV(ZUtils.digitSum(v, 10)).^(3)).isZero()	Numbers divisible by the cube of the sum of their digits in base 10.
A072083	filamb	0	1	v -> v.mod(ZV(ZUtils.digitSum(v, 10)).^(4)).isZero()	Numbers divisible by the 4th power of the sum of their digits in base 10.
A072155	lambdan	1	n -> RU(1, n, k -> new Q(PHI(k), ZV(k))).den()
A072156	lambdan	1	n -> RU(1, n, k -> new Q(PHI(k), ZV(k).^(2))).num()
A072157	lambdan	1	n -> RU(1, n, k -> new Q(PHI(k), ZV(k).^(2))).den()
A072158	lambdan	1	n -> RU(1, n, k -> new Q(PHI(k), ZV(k).^(3))).num()
A072159	lambdan	1	n -> RU(1, n, k -> new Q(PHI(k), ZV(k).^(3))).den()
A072160	lambdan	1	n -> RU(1, n, k -> new Q(PHI(k), ZV(k).^(4))).num()
A072161	lambdan	1	n -> RU(1, n, k -> new Q(PHI(k), ZV(k).^(4))).den()
A072196	lambdan	1	n -> ZV(64).^(n-1).*(10).-(1)./(3)	a(n) = (10*64^(n-3)-1)/3.
A072213	lambdir	0	n -> SEQ.a(n*n)	new A000041()	a(n)=Annn(n^(\d+))	2	D000041
A072255	lambdan	0	n -> n <= 1 ? Z.ONE.-(n) : SU(1, n/2, d -> FI(n/d).^(n % d).*(FI(n/d - 1).^(d - n%d)))
A072268	#nyi	0		a(0) = 1; a(n + 1) = 1  +  f(a(n))^2, where f(x) is the largest prime factor of x (A006530)
A072285	arrlamb0	0	(n, m) -> BI(new Q(n + 1).-(new Q(m, 2)), n - m + 1).-(BI(new Q(n).-(new Q(m, 2)), n - m + 1)).num()	a(n, m) = binomial(n-m/2, n-m);
A072286	arrlamb0	0	(n, m) -> BI(new Q(n + 1).-(new Q(m, 2)), n - m + 1).-(BI(new Q(n).-(new Q(m, 2)), n - m + 1)).den()	a(n, m) = binomial(n-m/2+1, n-m+1) - binomial(n-m/2, n-m+1)
A072379	lambdan	1	n -> SU(1, n, k -> SIGMA(k).^(2))
A072490	multraf	1	(self, n) -> self.s(0).-(1)	"0"	new A013928()	v -> v.-(1)	, n > 1.
A072585	filamb	0	1	v -> v.mod(10) == JF(v).phi().mod(10)	Numbers k such that k and phi(k) end with the same digit in base 10.
A072600	filamb	0	1	v -> { final int[] c = ZUtils.digitCounts(v, 2); return c[0] <  c[1];}	Numbers which in base 2 have fewer 0's than 1's.
A072601	filamb	0	1	v -> { final int[] c = ZUtils.digitCounts(v, 2); return c[0] <= c[1];}	Numbers which in base 2 have at least as many 1's as 0's.
A072602	filamb	0	1	v -> { final int[] c = ZUtils.digitCounts(v, 2); return c[0] >= c[1];}	Numbers such that in base 2 the number of 0's is >= the number of 1's.
A072603	filamb	0	1	v -> { final int[] c = ZUtils.digitCounts(v, 2); return c[0] >  c[1];}	Numbers which in base 2 have more 0's than 1's.
A072604	filamb	0	1	v -> v.mod(10) == 0 && JF(v).phi().mod(10) == 0 && JF(v).sigma().mod(10) == 0 	Last digit of n, phi(n) and sigma(n) is 0 in base 10.
A072623	filtpos	1	1	new A065863()	v -> v.equals(Z.ONE)	Numbers n such that A065863(n) = 1, i.e., prime(n) mod (n - Pi(n)) = 1.
A072641	simtraf	0	new A072638()	v -> ZV(v.bitLength())	Binary widths of the terms of A072638.	nonn	0..10	nyi	_Antti Karttunen_
A072815	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A363031(), new A016921()	a(n)=Annn(n)-Annn(n)=Annn(Annn(n))
A072848	lpf	1	Z.TEN.^(6*n).+(1)
A072874	filtpos	1	0	new A000213()	(k, v) -> v.mod(k) == 1	Numbers k such that Annnnnn(k)==(\d+)(mod k)
A072972	lambdan	0	n -> new Q(ZV(50*n - 6) , BI(3*n, n).*(Z2(n))).num()
A072973	lambdan	0	n -> new Q(ZV(50*n - 6) , BI(3*n, n).*(Z2(n))).den()
A073019	filnum	0	1	n -> new Zi(1, 2).pow(n).re().isProbablePrime()	Numbers n such that the absolute value of the real part of (1+2*I)^n is prime
A073118	multrad2	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(SEQ.a(n - k)))	""	new A008472()	new A000041()	a(n)=Sum_{k=(\d+),n}Annn(k)*Annn(n-k)	1	D008472,D000041   
A073119	multrad2	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(SEQ.a(n - k)))	""	new A007814()	new A000041()	a(n)=Sum_{k=(\d+),n}Annn(k)*Annn(n-k)	1	D007814,D000041   
A073187	tablamb	1	0	n -> new Integer[] { 0, n/3 }	(n, k) -> BI(n + 1, k).*(BI(2*n - 3*k, n - 3*k))./(n + 1)	Triangle of C(n+1,k)*C(2*n-3*k,n-3*k)/(n+1) by rows.					Triangle of C(n+1,k)*C(2*n-3*k,n-3*k)/(n+1) by rows.
A073189	tablamb	0	0	n -> new Integer[] { 0, n/3 }	(n, k) -> ZV(k)	Integers 0..k three times, then 0..k+1 three times, etc.					Integers 0..k three times, then 0..k+1 three times, etc.
A073224	tuptraf	0	(n, s) -> Z.TEN.^(n).+(1).*(s[0]).-(s[1])	""	new A006880(), new A046731()
A073267	ordsup	0	new A036987().skip()	2	0,0
A073342	tuptraf	1	(n, s) -> new Q(s[0], s[1]).round()	""	new A007605(), new A097944()	v -> a(n)=round(Annn(n)/Annn(n))
A073409	simtraf	1	new A002445().skip(1)	v -> LPF(v)	the denominator of the Bernoulli number B(2*n) (A002445)
A073411	dirtral	1	new A051953()	new A046315()	(n, v) -> v.-(1)	A051953(A046315(n)) - 1
A073458	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A000040(), new A002808()
A073501	filter	1	new A000040()	p -> JF(p.^(2).+(1)).largestPrimeFactor().compareTo(p) < 0
A073539	filnum	1	1	k -> Functions.PHI.z(k).*(Functions.CARMICHAEL_LAMBDA.z(k)).mod(k) == 0	Numbers k for which phi(k)*lambda(k) == 0 (mod k), where lambda(k) = A002322(k) is the Carmichael fun
A073575	#lambdan	0	a(n) = A007489(A055881(n)). - _Antti Karttunen_, Dec 19 2018
A073610	ordsup	1	new A010051().skip(2)	2	0,0,0
A073719	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A033844().skip(1), new A065856().skip(1)
A073753	#nyi	0		a(n) = A073752(A073752(n)), where A073752(n) = gcd(n/spf(n), n/gpf(n)), with spf(n) as the Least and gpf(n) as the Largest prime factor of n (see A020639, A006530)
A073775	lambdan	0	n -> ZV(n).^(3).*(2).+(ZV(n).^(2).*(27)).+(ZV(n).*(85))./(6).-(2)	Polynomial (1/3)*n^3 + (9/2)*n^2 + (85/6)*n - 2.	sign	0..48	nyi	_Antti Karttunen_
A073826	insect2	1	new A001923()	new A000040()							Primes of the form Sum_{k=1..n} k^k, i.e., primes in A001923.
A073837	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A034387(2*n) - A034387(n-1); a(n) <= â¬179213(n). [_Reinhard Zumkeller_, Jul 05 2010]
A073838	#tuptraf	0	(n, s) -> s[0]./(s[1])	a(n) = A034386(2*n) / A034386(n-1)
A073849	tuptraf	0	(n, s) -> s[0].+(Integer.toString(n, 3).charAt(0) - '0')	"0"	PREVIOUS	Cumulative sum of initial digits of (n base 3).
A073850	tuptraf	0	(n, s) -> s[0].+(Integer.toString(n, 4).charAt(0) - '0')	"0"	PREVIOUS	Cumulative sum of initial digits of (n base 4).
A073851	tuptraf	0	(n, s) -> s[0].+(Integer.toString(n, 5).charAt(0) - '0')	"0"	PREVIOUS	Cumulative sum of initial digits of (n base 5).  a(n+1) = a(n) + first-digit-of((n+1) (base 5))
A073862	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A003618(), new A003617()
A073882	multraf	1	(self, n) -> self.s(0).-(self.s(1)).+(self.s(2))	""	new A038107(), new A000720(), new A010051()	a(n)=Annn(n)-Annn(n)+Annn(n)
A074037	#nyi	0		Sum of the composites between the Least prime factor of n and the largest prime factor of n
A074050	inverse	1	new A074049()	0	0
A074053	#nyi	0		Numbers n such that A001414(n) = sum of composites from the Least prime factor of n to the largest prime factor of n
A074054	#nyi	0		Numbers n such that sum of composites from Least prime factor of n to largest prime factor of n is prime
A074115	multraf	0	(self, n) -> FA(n)./(self.s(0))	""	new A000793()	n!/new A000793()
A074181	multraf	1	(self, n) -> ZV(n).^(self.s(0))	"1,2"	new A060151()	n^new A060151()
A074182	multraf	1	(self, n) -> ZV(n).^(self.s(0))	""	new A039960()	n^new A039960()
A074196	#nyi	0		Sum of palindromes from the Least prime factor of n to the largest prime factor of n
A074210	#nyi	0		Numbers k such that the number of primes <= k is equal to the sum of primes from the Least prime factor of k to the largest prime factor of k
A074251	#nyi	0		Sum of the squarefree numbers from the Least prime factor of n to the largest prime factor of n
A074252	#nyi	0		Number of primes <= n is equal to the sum of squarefree numbers from the Least prime factor of n to the largest prime factor of n
A074253	#nyi	0		Numbers n such that the sum of squarefree numbers from the Least prime factor of n to the largest prime factor of n is a square
A074255	#nyi	0		Numbers n such that the sum of composites from the Least prime factor of n to the largest prime factor of n is equal to the sum of squarefree numbers from the Least prime factor of n to the largest prime factor of n
A074256	#nyi	0		Sum of factorials of digits of n equals sum of the primes from the Least prime factor of n to the largest prime factor of n
A074257	#nyi	0		Sum of factorials of digits of n equals the largest prime factor of n
A074272	altsum	1	new A000002()	"+-"	Partial alternating sums of the Kolakoski sequence A000002.
A074288	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A000002(), new A054353()
A074301	#nyi	0		Numbers n such that (i) the largest prime factor of n is not a palindrome and (ii) the sum of the factorials of the digits of n is equal to the largest prime factor of n reversed
A074302	#nyi	0		Sum of squares of digits of n is equal to the largest prime factor of n
A074303	#nyi	0		Sum of squares of digits of n is equal to the largest prime factor of n reversed, where the largest prime factor is not a palindrome
A074310	#nyi	0		Digital sum of n = sum of palindromes from the Least prime factor of n to the largest prime factor of n
A074347	#nyi	0		Least number requiring n steps to reach 0 when iterating the function: f(n)=abs(lpd(n) - Lpf(n)), where lpd(n) is the largest proper divisor of n and Lpf(n) is the largest prime factor of n
A074348	#nyi	0		Least number requiring n steps to reach 0 or  - 1 when iterating the function: f(n)=lcd(n) - lpf(n), where lcd(n) is the largest common difference between consecutive divisors of n (ordered by size) and lpf(n) is the largest prime factor of n
A074389	simtraf	1	new A009223()	(n, v) -> v.gcd(n)	a(n)=gcd(n,Annn(n))
A074452	filnum	0	1	n -> { final FactorSequence fs = JF(n); return fs.phi().toString(10).indexOf(fs.sigma().toString(10)) >= 0; }	Treated as strings, phi(n) is a substring of sigma(n).
A074638	lambdan	1	n -> RU(1, n, i -> new Q(1, (4*i-1))).den()
A074707	multrar	0	(self, n) -> RU(1, n - 1, k -> new Q(self.a(k), FA(k).^(2))./(n - k)).*(FA(n).^(2))./(n).num()	"1,1"		a(n)=n!^2/n*sum(k=0, n-1, a(k)/k!^2/(n-k))
A074754	lambdan	1	n -> { final int s = Functions.SIGMA.i(n); return SU(1, s, k -> ZV(n).mod(SIGMA(k)).isZero()? Z.ONE : Z.ZERO); }		Number of integers k such that sigma(k)divides n.
A074767	#nyi	0		Least m > n with spf(m) = gpf(n), where gpf(n) is the Largest prime factor of n and spf(m) is the Least prime factor of m
A074789	partsun	0	new SimpleTransformSequence(1, new A034448(), v -> v.^(2))			Partial sums of usigma(n)^2: square of the sum of unitary divisors of n.
A074793	lambdan	1	n -> SU(1, n, k -> Functions.OMEGA .i(k)     == 1 ? Z.ZERO : ZV(k))	a(n)=sum(k=1, n, k*if(omega(k)-1, 0, 1))
A074794	lambdan	1	n -> SU(1, n, k -> Functions.SIGMA0.i(k) % 3 == 1 ? Z.ZERO : Z.ONE)
A074795	lambdan	1	n -> SU(1, n, k -> Functions.SIGMA0.i(k) % 3 == 0 ? Z.ZERO : Z.ONE)
A074796	lambdan	1	n -> n == 0 ? Z.ZERO : SU(1, n, k -> Functions.SIGMA0.i(k) % 3 == 2 ? Z.ZERO : Z.ONE)
A074801	lambdan	0	n -> SU(0, n, k -> JF(BI(n, k)).sigma())
A074810	#nyi	0		Number of primes between n and 2*n (inclusive) = largest prime factor of n
A074866	filter	1	new A015763()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015763.	nonn	1..45
A074868	filter	1	new A015765()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015765.	nonn	1..42
A074919	lambdan	1	n -> SU(1, Functions.PHI.i(n), k -> IntegerUtils.gcd(k, n) == 1 ? Z.ONE : Z.ZERO)
A074924	simtraf	0	new A062703()	v -> v.sqrt()	a(n) = sqrt(A062703(n))
A074944	lambdan	1	n -> SU(1, n, k -> IntegerUtils.gcd(n, k) == Functions.SIGMA0.i(k) ? Z.ONE : Z.ZERO)
A074945	lambdan	1	n -> SU(1, n, k -> IntegerUtils.gcd(n, k) == n/k ? Z.ONE : Z.ZERO)
A074947	lambdan	1	n -> RU(1, n, i -> new Q(1, IntegerUtils.lcm(n, i))).num()
A074949	lambdan	1	n -> RU(1, n, i -> new Q(1, IntegerUtils.lcm(n, i))).den()
A074988	lambdan	1	n -> SU(1, n, i -> MU(i).^(2).*(Z2(n - i)))
A075181	trilambn	1	1	0	(n, m) -> S1(n, n - m).abs().*(FA(n - m))	a(n, m) = (n-m)!*|S1(n, n-m)|, n>=m+1>=1, else 0, with S1(n, m) := A008275(n, m) (Stirling1).
A075183	lambdan	0	n -> S1(n + 3, n + 1).*(FA(n + 1))./(2 )	a(n)=  (n+1)!*S1(n+3, n+1)/2  with S1(n, m) := A008275(n, m) (Stirling1).
A075184	lambdan	0	n -> S1(n + 4, n + 1).*(FA(n + 1))./(-2)	a(n)= -(n+1)!*S1(n+4, n+1)/2  with S1(n, m) := A008275(n, m) (Stirling1).
A075185	lambdan	0	n -> S1(n + 5, n + 1).*(FA(n + 1))./(4 )	a(n)=  (n+1)!*S1(n+5, n+1)/4  with S1(n, m) := A008275(n, m) (Stirling1).
A075186	lambdan	0	n -> S1(n + 6, n + 1).*(FA(n + 1))./(-24)	a(n)= -(n+1)!*S1(n+6, n+1)/24 with S1(n, m) := A008275(n, m) (Stirling1).
A075187	lambdan	0	n -> S1(n + 7, n + 1).*(FA(n + 1))./(24)	a(n)=  (n+1)!*S1(n+7, n+1)/24 with S1(n, m) := A008275(n, m) (Stirling1).
A075254	simtraf	1	new A001414()	(n, v) -> v.+(n)
A075484	lambdir	0	n -> SEQ.a(ZV(n).^(5))	new A008908()	a(n)=Annn((\d+)^n)	5	D008908
A075485	lambdir	1	n -> SEQ.a(ZV(2).^(n).-(1)).+(1)	new A008908()	a(n)=Annn((\d+)^n-(\d+))	2,1	D008908 ??? +1
A075486	lambdir	1	n -> SEQ.a(ZV(2).^(n).+(1)).+(1)	new A008908()	a(n)=Annn((\d+)^n+(\d+))	2,1	D008908 ??? +1
A075487	lambdir	0	n -> SEQ.a(ZV(3).^(n).+(1)).+(1)	new A008908()	a(n)=Annn((\d+)^n+(\d+))	3,1	D008908 ??? +1
A075488	lambdir	1	n -> SEQ.a(ZV(3).^(n).-(1)).+(1)	new A008908()	a(n)=Annn((\d+)^n-(\d+))	3,1	D008908 ??? +1
A075543	multrar	0	(self, n) -> self.a(n - 1).+(Functions.DIGIT_SUM.z(ZV(n + 2)))	"2"		a[n] = a[n-1] + digit sum(n + 2)
A075660	#nyi	0		Let f(n) = abs(lpd(n) - gpf(n)), where lpd(n) is the largest proper divisor of n and gpf(n) is the Largest prime factor of n. Sequence gives number of iterations for f(n) to reach zero
A075661	#nyi	0		Let f(n) = lcd(n) - lpf(n), where lcd(n) is the largest common difference between consecutive divisors of n (ordered by size) and lpf(n) is the largest prime factor of n. Sequence gives number of iterations for f(n) to reach 0 or  - 1
A075680	filter	1	new A006667()	(k, v) -> (k & 1) == 1
A075704	filter	0	new A000040()	p -> p.*(12).+( 1).IPP()	[(\d+)#+(\d+)]&]		300,12, 1
A075753	simtraf	0	new A014493()	v -> SPF(v)	n - th odd triangular number
A075874	prepend	1	new A007514().skip(2)	3
A075897	lambdan	0	n -> (n == 0) ? Z.ZERO : ZV(n).bitCount() <= 2 ? Z.ONE : Z.ZERO	1 if binary weight of n is 1 or 2, otherwise 0.
A075898	filnum	1	0	n -> ZV(3 ).^(n).+(ZV(n).^(2)).IPP()		isprime(3^n+n^2)
A075982	filnum	0	0	n -> ZV(n).^(5).+(4).^(n).IPP()		isprime(n^5+4^n)
A075985	filnum	0	0	n -> ZV(n).^(5).+(6).^(n).IPP()		isprime(n^5+6^n)
A076050	simtraf	1	new A007001()	v -> v.+(1)	.
A076100	filter	1	new A003418()	(k, v) -> (k & 1) == 1
A076126	tablamb	2	2	n -> new Integer[] { 1, n/2 }	(n, k) -> BI(n - k - 1, k - 1).*(FA(n))./(FA(k))	T(n, k) = n!/k!*binomial(n-k-1, k-1), n>=2, k=1..floor(n/2).					Triangle T(n,k) of associated Lah numbers, n>=2, k=1..floor(n/2).
A076249	diffs	0	new A065385()	First differences of A065385, indices of records in A051953. - _Michael D
A076358	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).num()	""	new A000142().skip(1), new A048855().skip(1)
A076359	lambdan	0	n -> {Z fa = FA(n); return new Q(fa, JF(fa).phi()).den(); }	a(n) = denominator(n!/phi(n!)).
A076367	simtraf	1	new A060646()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A060646
A076380	filamb	0	2	v -> JF(v).sopf().mod(ZV(ZUtils.digitSum(v, 2))).isZero()	Sum of digits in base 2 is a divisor of sum of prime divisors (A008472).        nonn,base       0..1000 nyi     _Floor van Lamoen_
A076381	filamb	0	2	v -> JF(v).sopf().mod(ZV(ZUtils.digitSum(v, 3))).isZero()	Numbers n such that sum of digits in base 3 is a divisor of sum of prime divisors (A008472). sopf      1..56   nyi     _Floor van Lamoen_
A076382	filamb	0	2	v -> JF(v).sopf().mod(ZV(ZUtils.digitSum(v, 4))).isZero()	Numbers n such that sum of digits in base 4 is a divisor of sum of prime divisors (A008472). sopf      1..57   nyi     _Floor van Lamoen_
A076383	filamb	0	2	v -> JF(v).sopf().mod(ZV(ZUtils.digitSum(v, 5))).isZero()	Numbers n such that sum of digits in base 5 is a divisor of sum of prime divisors (A008472). sopf      1..54   nyi     _Floor van Lamoen_
A076384	filamb	0	2	v -> JF(v).sopf().mod(ZV(ZUtils.digitSum(v, 6))).isZero()	Numbers n such that sum of digits in base 6 is a divisor of sum of prime divisors (A008472). sopf      1..56   nyi     _Floor van Lamoen_
A076385	filamb	0	2	v -> JF(v).sopf().mod(ZV(ZUtils.digitSum(v, 7))).isZero()	Numbers n such that sum of digits in base 7 is a divisor of sum of prime divisors (A008472). sopf      1..55   nyi     _Floor van Lamoen_
A076386	filamb	0	2	v -> JF(v).sopf().mod(ZV(ZUtils.digitSum(v, 8))).isZero()	Numbers n such that sum of digits in base 8 is a divisor of sum of prime divisors (A008472). sopf      1..56   nyi     _Floor van Lamoen_
A076387	filamb	0	2	v -> JF(v).sopf().mod(ZV(ZUtils.digitSum(v, 9))).isZero()	Numbers n such that sum of digits in base 9 is a divisor of sum of prime divisors (A008472). sopf      1..5189 nyi     _Floor van Lamoen_
A076423	#nyi	0		Number of iterations of the mapping k -> abs(reverse(lpd(k)) - reverse(gpf(k))) to reach zero, or  - 1 if zero is never reached. lpd(k) is the largest proper divisor and gpf(k) is the Largest prime factor of k
A076424	#nyi	0		Least number that requires n steps to reach 0 when iterating the mapping k -> abs(reverse(lpd(k)) - reverse(Lpf(k))). lpd(k) is the largest proper divisor and Lpf(k) is the largest prime factor of k
A076425	#nyi	0		Numbers n such that zero is never reached by iterating the mapping k -> abs(reverse(lpd(k)) - reverse(gpf(k))). lpd(k) is the largest proper divisor and gpf(k) is the largest prime factor of k
A076426	#nyi	0		Fixed points of the mapping k -> abs(reverse(lpd(k)) - reverse(Lpf(k))). lpd(k) is the largest proper divisor and Lpf(k) is the largest prime factor of k
A076541	lambdan	0	n -> SU(1, n, k -> BI(n, k).modZ(k))
A076552	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n, k -> { bs.nextQ(); return bs.nextQ().*(new Q(16).^(k)).*(BI(2*n + 1, 2*k)); }).*(Z_1(n + 1))./(ZV(3*(2*n+1))).num(); }
A076554	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n, k -> { bs.nextQ(); return bs.nextQ().*(new Q(64).^(k)).*(BI(2*n + 1, 2*k)); }).*(Z_1(n + 1))./(ZV(  (2*n+1))).num(); }
A076606	lambdan	3	n -> LPF(n - 1).min(LPF(n + 1))	Min { largest prime factor of n - 1, largest prime factor of n + 1 }
A076608	ordsup	1	new A005171().skip()	2	0
A076611	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '2' || md == '3' || md == '5' || md == '7'; }	Palindromic primes with prime middle digit.
A076613	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return s.length()>= 3 && md != '2' && md != '3' && md != '5' && md != '7'; }	Palindromic primes with nonprime middle digit.
A076688	lambdan	2	n -> Z2(Z2(n).-(n+2))
A076728	lambdan	1	n -> ZV(n-1).^(2).*(ZV(n).^(n-2))
A076787	simtraf	1	new A046974()	v -> Puma.primeZ(v)					Pisumprimes: prime(k), where k is the sum of the first n digits of Pi.
A076934	simtraf	0	new A055881()	(n, v) -> ZV(n)./(FA(v.intValueExact()))
A077073	#nyi	0		a(1) = 2, a(n + 1) is Least prime factor of (2 * Product_{k=1..n} a(k))  +  1
A077100	multraf	1	(self, n)-> self.s(0).lcm(self.s(1))	""	new A051612(), new A065387()
A077115	lambdan	0	n -> CV(n).^(new Q(3, 2)).ceil().^(2)	a(n) = ceiling(n^(3/2))^2. - _Benoit Cloitre_, Nov 01 2002
A077146	multraf	1	(self, n) -> self.s(0)./(self.s(1))	"23"	new A053067().skip(1), PREVIOUS	a(n)=floor(Annn(n+(\d+))/Annn(n))	1
A077197	lambdan	1	n -> Functions.CARMICHAEL_LAMBDA.z(Functions.PHI.z(n))	a(n) = lambda(phi(n)) where lambda(n) (A002322) is the Carmichael lambda function which gives the sma
A077385	tablamb	1	1	n -> new Integer[] { 0, 2*n - 2 }	(n, k) -> (k < n) ? ZV(n).^(k) : ZV(n).^(2*n - k - 2)	T(n, k) = n^k for k < n, otherwise n^(2*n-k-2), for n >= 1, 0 <= k <= 2*n-2.					Triangle read by rows in which n-th row contains 2n-1 terms starting from n^0 to n^(n-1) in increasing order and then in decreasing order to n^0.
A077644	dirtraf	0	new A055642()	new A070177()			0	Number of digits in the decimal expansion of the number of partitions of 2^n.
A077801	filter	1	new A015767()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015767.	nonn	1..51
A077803	filter	1	new A015769()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015769.	nonn	1..44
A078164	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 4 == 0); }	Numbers k such that phi(k) is a perfect biquadrate.	nonn	1..10000
A078165	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 5 == 0); }	Numbers k such that phi(k) is a perfect 5th power.	nonn	1..10000
A078166	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 6 == 0); }	Numbers k such that phi(k) is a perfect sixth power.	nonn	1..10000
A078167	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 7 == 0); }	Numbers k such that phi(k) is a perfect 7th power.	nonn	1..10000
A078168	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 8 == 0); }	Numbers k such that phi(k) is a perfect 8th power.	nonn	1..7500
A078169	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() % 9 == 0); }	Numbers k such that phi(k) is a perfect 9th power.	nonn	1..10000
A078170	filnum	1	1	k -> { final Z p = JF(k).phi(); return p.equals(Z.ONE) || (p.isPower() != null && p.auxiliary() %10 == 0); }	Numbers k such that phi(k) is a perfect tenth power.	nonn	1..2250
A078315	dirtraf	1	new A051904()	new A078310()	"null"		1				Minimal exponent in prime factorization of n*rad(n)+1, where rad=A007947 (the radical or squarefree kernel).
A078379	dirtraf	1	new A051904()	new A055394()	"null"		1				Minimal exponent in prime factorization of numbers which can be written as sum of a positive square and a positive cube.
A078392	multrad	1	(self, n) -> SU(1, n, k -> SEQ.a(IntegerUtils.gcd(n, k)))	""	new A000041()	a(n)=Sum_{k=(\d+),n}Annn(gcd(n,k))	1
A078406	filter	0	new A035294()	(k, v) -> (k & 1) == 0
A078407	filter	0	new A035294()	(k, v) -> (k & 1) == 1
A078409	filter	0	new A078408()	(k, v) -> (k & 1) == 0
A078410	filter	0	new A078408()	(k, v) -> (k & 1) == 1
A078535	lambdan	0	n -> BI(new Q(7*n-5, 6), n)./(ZV(n + 1)).*(ZV(6).^(2*n)).num()
A078544	filter	1	new A015761()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015761.	nonn	1..10000
A078549	filter	1	new A015771()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015771.	nonn	1..37
A078550	filter	0	new A015773()	v -> { final FactorSequence fs = JF(v); return !fs.sigma().mod(fs.phi()).isZero(); }	Non-balanced numbers in A015773.	nonn	1..52	nyi	_Labos Elemer_     
A078572	dirtraf	1	new A051904()	new A014574()	"null"		1				Minimal exponent in prime factorization of the average of n-th twin prime pair.
A078591	multraf	0	(self, n) -> self.s(0)./(2)	"1,1"	new A005315()	v -> v./(2)	for n >= 2. - _Andrew Howroyd_, Nov 23 2015
A078603	simtraf	0	new A002816()	(n, v) -> (n == 1) ? Z.ONE : v.*(2)	For n>1, a(n) = 2 * A002816(n).
A078739	tablamb	1	1	n -> new Integer[] { 2, n*2 }	(n, k) -> SU(0, k, i -> Z_1(k - i).*(BI(k, i).*(ZV(i*(i - 1)/2).^(n)))).*(Z2(n))./(FA(k))
A078791	tuptraf	0	(n, s) -> s[0].*(s[1])./(2)	""	new PrependSequence(0, new A098118(), 0), new A000984()	2 * a(n) = A098118(n) * A000984(n). - _Michael Somos_, Apr 14 2015
A078834	#lpf	0	n also contained as binary substring in binary representation of n; a(n)=1, if no such factor exists
A078896	#nyi	0		Number of times the Least prime factor of n is a factor in all numbers <=n; a(1)=1
A078897	#nyi	0		Number of times the Largest prime factor of n is a factor in all numbers <=n; a(1)=1
A078937	triprodn	0	new A056857()	new A056857()
A078938	triprodn	0	new A078937()	new A056857()
A079068	#nyi	0		Largest prime less than Largest prime factor of n but not dividing n, or 1 if no such prime exists
A079084	lpf	1	Puma.primeZ(n).+(1).*(Puma.primeZ(n + 1).+(1))./(4)
A079092	dirtraf	1	new A000010()	new A079079()	"null"		1				Euler s totient of (prime(n)+1)*(prime(n+1)+1)/4.
A079108	simtraf	0	new A077722()	v -> { final int[] c = ZUtils.digitCounts(v, 8); return ZV(c[1]); }	Number of 1s in the base 8 form of A077722(n).
A079109	simtraf	0	new A077722()	v -> { final int[] c = ZUtils.digitCounts(v, 8); return ZV(c[0]); }	Number of zeros in the base 8 form of A077722(n).
A079248	moetrafi	1	new A001318()	, 1	#
A079491	lambdan	0	n -> SU(0, n, k -> BI(n, k).*(Z2(n*(n - 1)/2 - k*(k - 1)/2)))
A079597	lambdan	0	n -> ZV(2).^(ZV(n-1).*(Z2(n).-(1)))
A079617	simtraf	2	new A101296().skip(1)	v -> v.-(1)	. - _David Wasserman_, Dec 27 2004
A079623	multrar	1	(self, n) -> self.a(n - 1).-(self.a(n - 2)).-(self.a(n - 3)).abs()	"1,1,4"	a(1)=a(2)=1, a(3)=4, a(n)=abs(a(n-1)-a(n-2)-a(n-3)).
A079624	multrar	1	(self, n) -> self.a(n - 1).-(self.a(n - 2)).-(self.a(n - 3)).abs()	"1,1,6"	a(1)=a(2)=1, a(3)=6, a(n)=abs(a(n-1)-a(n-2)-a(n-3)).
A079697	simtraf	1	new A005277()	v -> v.makeOdd()	Odd part of A005277(n)
A079728	lambdan	0	n -> SU(0, Puma.primeZ(n).intValueExact(), k -> BI(2*k, k)).mod(Puma.primeZ(n))
A079747	#nyi	0		Numbers k such that gpf(k - 1) < gpf(k) < gpf(k + 1), where gpf(k) is the Largest prime factor of k (A006530)
A079750	multrar	3	(self, n) -> self.a(n - 1).*(n).+(n)	"0"	a(3)=0, a(n) = n * a(n-1) + n for n >= 4.
A079752	multrar	3	(self, n) -> self.a(n - 1).*(n).+(n - 2)	"0"	a(3)=0, a(n) = n * a(n-1) + n - 2 for n>=4
A079753	multrar	3	(self, n) -> self.a(n - 1).*(n).+((n - 1)*(n - 2)/2)	"0"	a(3)=0, a(n)= n*a(n-1) + (n-1)*(n-2)/2 for n>=4 a(n) = ?079752(n) + ?079754(n)
A079754	multrar	3	(self, n) -> self.a(n - 1).*(n).+((n - 2)*(n - 3)/2)	"0"	a(3)=0, a(n) = n*a(n-1) + (n-2)*(n-3)/2 for n>=4 a(n) = ?079753(n) - ?079752(n)
A079780	simtraf	1	new A057855()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A057855
A079944	#simtraf	0	a(n) = A000035(A004526(A030101(n+2))). - _Reinhard Zumkeller_, Mar 04 2010
A080087	simtraf	1	new A000040()	p -> ZV(ZUtils.valuation(FA(p), ZV(5)))
A080210	#nyi	0		a(n) = floor(Lpf(n)*phi(n)/n)  +  1 where Lpf(n) is the largest prime factor of n and phi is the Euler totient function
A080214	lambdan	1	n -> BI(LPF(n), SPF(n))	Binomial(Largest prime factor of n, Least prime factor of n)
A080225	lambdan	1	n -> SD(n, d -> Functions.SIGMA.i(d) == 2*d ? Z.ONE : Z.ZERO)
A080306	lambdan	1	n -> RU(1, n, k -> new Q(k).^(Functions.MOEBIUS.i(k))).num()
A080326	lambdan	1	n -> RU(1, n, k -> new Q(k).^(Functions.MOEBIUS.i(k))).den()
A080383	lambdan	0	n -> SU(0, n, j -> ZV(BI(n, n/2).mod(BI(n, j)).isZero() ? 1 : 0))	Number of j (0 <= j <= n) such that the central binomial coefficient C(n,floor(n/2)) = A001405(n) is divisible by C(n,j).
A080384	filtpos	1	0	new A080383()	v -> v.equals(ZV(6))	Numbers k such that there are exactly 6 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., ?080383(k) = 6.	nonn
A080385	filtpos	1	0	new A080383()	v -> v.equals(ZV(7))	Numbers k such that there are exactly 7 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., ?080383(k) = 7.	nonn
A080386	filtpos	1	0	new A080383()	v -> v.equals(ZV(8))	Numbers k such that there are exactly 8 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., â¬080383(k) = 8.	nonn	1..260	nyi	_Labos Elemer_
A080387	filtpos	1	0	new A080383()	v -> v.equals(ZV(10))	Numbers k such that there are exactly 10 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., ?080383(k) = 10.	nonn
A080785	#nyi	0		Least p - smooth number not less n, where p is the Least prime factor of n
A081066	simtraf	0	new A055882()	(n, v) -> RQ(0, n - 1, j -> new Q(2*j + 1, 2)).*(v).num()	*Pochhammer(1/2, n)
A081088	tuptraf	0	(n, s) -> s[0].*(s[1])	"2,2"	new A081090().skip(1), PREVIOUS	a(n) = A081090(n) * A081090(n-1) for n>2, where A081090(n)^2 + 1 = a(n+1)/a(n).
A081165	simtraf	0	new A060114()	v -> JF(v).largestPrimeFactor()	Largest prime factor of A060114.        nonn
A081166	simtraf	0	new A060114()	v -> ZV(JF(v).omega())	 Number of distinct primes dividing A060114(n).
A081173	#nyi	0		a(1) = 2, then a(n) = Largest prime factor of (a(n - 1)^2 + 2)
A081221	simtraf	1	new A067535()	(n, v) -> v.-(n)	. -
A081238	tuptraf	0	(n, s) -> s[0].*(s[1]).*(2)	""	new A070548(), new A070549()	a(n) = 2*A070548(n)*A070549(n). - _Robert Israel_, Jan 08 2018
A081303	lambdan	1	m -> LPF(m).-(SPF(m).*(2))	gpf(m)  -  2*spf(m), where gpf(m) is the Largest and spf(m) is the Least prime factor of m (A006530, A020639)
A081304	#nyi	0		Number of numbers m <= n with prime factors less than 2*spf(m), where spf(m) is the Least prime factor of m (A020639)
A081305	#nyi	0		Number of numbers m <= n with at least one prime factor greater than 2*spf(m), where spf(m) is the Least prime factor of m (A020639)
A081306	#nyi	0		Numbers n with prime factors less than 2*spf(n), where spf(m) is the Least prime factor of m (A020639)
A081318	#nyi	0		Integers n such that the reciprocal of the largest prime factor of 10^n - 1 is not a repeating decimal fraction with a period of n
A081387	dirtraf	1	new A001221()	new A000984().skip(1)	null		0				Number of non-unitary prime divisors of central binomial coefficient, C(2n,n) = A000984(n), i.e., number of prime factors in C(2n,n) whose exponent is greater than one.
A081402	dirtraf	1	new A008475()	new A000142()	nonn	1.
A081403	dirtraf	1	new A008475()	new A000290()	n^2).	nonn
A081404	dirtraf	1	new A008475()	new A006093()	prime(n)-1).	no
A081703	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A002997(), new A141710()	a(n)=Annn(n)/Annn(n)
A082021	#nyi	0		a(0) = 7; for n > 0, a(n) is the Largest prime factor of PP(PP(a(n - 1)))*a(n - 1) + 2 where PP(n) is an abbreviation for PreviousPrime(n)
A082132	#nyi	0		a(0) = 5; for n > 0, a(n) is the Largest prime factor of PP(a(n - 1))*a(n - 1) - 2 where PP(n) is an abbreviation for PreviousPrime(n)
A082375	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, k) -> ZV(n).-(2*k)	T(n, m) = n - 2*m, m = 0, 1, ..., floor(n/2), n >= 0					Irregular triangle read by rows: row n begins with n and decreases by 2 until 0 or 1 is reached, for n >= 0.
A082417	#nyi	0		Numbers k such that P(k) < P(k + 1) > P(k + 2), where P(k) is the largest prime factor of k (A006530)
A082418	#nyi	0		Numbers n such that P(n) > P(n + 1) < P(n + 2), where P(n) = largest prime factor of n (A006530)
A082419	#nyi	0		Numbers n such that P(n + 2) < P(n) < P(n + 1), where P(n) = largest prime factor of n (A006530)
A082420	#nyi	0		Numbers n such that P(n) < P(n + 2) < P(n + 1), where P(n) = largest prime factor of n (A006530)
A082421	#nyi	0		Numbers n such that P(n + 1) < P(n) < P(n + 2), where P(n) = largest prime factor of n (A006530)
A082422	#nyi	0		Numbers n such that P(n) > P(n + 2) > P(n + 1), where P(n) = largest prime factor of n (A006530)
A082426	simtraf	1	new A074143()	(n, v) -> n == 1 ? Z.ONE : v.+(1)
A082427	multrar	1	(self, n) -> SU(1, n - 1, k -> self.a(k)).*(n).-(2)	"1,0,1,6"	a(1)=1, a(n)=n*(a(n-1)+a(n-2)+...+a(2)+a(1)) - 2.
A082428	multrar	1	(self, n) -> SU(1, n - 1, k -> self.a(k)).*(n).+(3)	"1"	a(1)=1, a(n)=n*(a(n-1)+a(n-2)+...+a(2)+a(1)) + 3.
A082430	multrar	1	(self, n) -> SU(1, n - 1, k -> self.a(k)).*(n).+(4)	"1"	a(n) = n*(a(n-1) + a(n-2) + ... + a(2) + a(1)) + 4.
A082435	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '0'; }	Palindromic primes with middle digit 0.
A082436	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return s.length()>= 3 && md == '1'; }	Palindromic primes with middle digit 1.
A082438	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '2'; }	Palindromic primes with middle digit 2.
A082439	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '3'; }	Palindromic primes with middle digit 3.
A082440	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '4'; }	Palindromic primes with middle digit 4.
A082441	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '5'; }	Palindromic primes with middle digit 5.
A082442	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '6'; }	Palindromic primes with middle digit 6.
A082443	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '7'; }	Palindromic primes with middle digit 7.
A082444	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '8'; }	Palindromic primes with middle digit 8.
A082445	filter	1	new A002385()	v -> { final String s = v.toString(); final char md = s.charAt(s.length()/2); return md == '9'; }	Palindromic primes with middle digit 9.
A082454	multrar	0	(self, n) -> PM(n).+(PM(n - 1)).-(self.a(n - 1))	"0,0"	a(n) = prime(n) + prime(n-1) - a(n-1) with a(0) = a(1) = 0.
A082455	multrar	0	(self, n) -> PM(n).+(PM(n - 1)).-(self.a(n - 1))	"0,4"	a(n) = prime(n) + prime(n-1) + a(n-1), a(0) = 0, a(1) = 4.
A082456	multrar	0	(self, n) -> PM(n).+(PM(n - 1)).-(self.a(n - 1))	"0,127"	a(n) = prime(n) + prime(n-1) - a(n-1), with a(0)=0, a(1)=127, and prime(i) is the i-th prime.
A082460	multrar	1	(self, n) -> PPI(n).-(self.a(n - 1))	"0"	a(n) = pi(n) - a(n - 1) where pi(n) = A000720(n).
A082471	multraf	1	(self, n) -> self.s(1).+(1).*(self.a(n - 1))	"1,1,2,6"	new A000045(),PREVIOUS	For n >= 2, a(n) = (F(n-1) + 1)*a(n-1); a(n) = (1/2)*Product_{k=1..n-1} (F(k)+1).
A082497	multrar	0	(self, n2) -> (n2 & 1) == 0 ? self.a(n2/2).*(2) : self.a(n2/2).+(self.a(n2/2 - 1))	"0,1"	a(0)=0, a(1)=1, a(2n)=2a(n), a(2n+1)=a(n)+a(n-1).
A082498	multrar	0	(self, n2) -> (n2 & 1) == 0 ? self.a(n2/2) : self.a(n2/2).+(self.a(n2/2 - 1))	"0,1"	a(0)=0, a(1)=1, a(2n)=a(n), a(2n+1)=a(n)+a(n-1).
A082511	lambdan	1	n -> ZV(3).^(n).modZ(2*n)
A082540	lambdan	1	n -> SU(1, n, k -> ZV(n/k).^(4).*(MU(k)))
A082544	lambdan	1	n -> SU(1, n, k -> ZV(n/k).^(5).*(MU(k)))
A082551	simtraf	1	new A033880()	v -> ZV(v.signum())	a(n)=sign(Annn(n))		A033880
A082570	multrar	1	(self, n) -> new Q(ZV(1), self.a(n - 1)).+(self.a(n - 1)).*(n).ceiling()	"1"	a(1)=1, a(n)=ceiling(n*(a(n-1)+1/a(n-1))).
A082573	multrar	1	(self, n) -> new Q(ZV(3), self.a(n - 1)).+(self.a(n - 1)).*(n).ceiling()	"1"	a(1)=1, a(n)=ceiling(n*(a(n-1)+3/a(n-1))).
A082588	multrar	1	(self, n) -> SD(n, d -> d < n ? self.a(d).^(2) : Z.ZERO)	"1"
A082604	tuptraf	0	(n, s) -> s[0].-(s[1]).*(6).-(8)	""	new A004194(), new A066761()
A082650	#nyi	0		Number of primes < n of form 1 + k*spf(n), where spf(n) is the Least prime factor of n (A020639)
A082681	lambdan	1	n -> RU(n*(n - 1)/2 + 1, n*(n + 1)/2, i -> new Q(1, i)).den()
A082687	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, ZV(n + k))).num()	Numerator of Sum_{k=0..n-1} 1/((k+1)(2k+1))
A082688	lambdan	1	n -> RU(1, n, k -> new Q(1, n + k)).den()
A082693	tablamb	1	1	n -> new Integer[] { 1, 2*n - 1 }	(n, k) -> Z2((k <= n) ? ZV(n - k) : ZV(k - n))	Pyramidal sequence built with powers of 2.					Pyramidal sequence built with powers of 2.
A082694	partsun	1	new A082693()			Partial sums of A082693.					Partial sums of A082693.
A082914	multraf	1	(self, n) -> FA(n)./(self.s(0))	""	new A003040()	n! / new A003040()
A082934	lambdan	1	n -> SU(1,   n, k -> ZV(k).IPP() ? ZV(k + 1) : ((k & 1) == 1 ? ZV(k) : ZV(k/2)))	a(n)={sum(k=1, n, if(isprime(k), k+1, if(k%2, k, k/2)))};
A082938	multraf	0	(self, n) -> self.s(0).+(self.s(1))./(2)	""	new A047749(), new A054423()	)/2
A082946	dead	1	dead								Duplicate of A082945.
A082998	lambdan	1	n -> SU(1, n, i -> Functions.OMEGA.i(i) == 3 ? Z.ONE : Z.ZERO)
A083007	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n - 1, k -> new Q( 3).^(k).*(BI(n, k)).*(bs.nextQ())).num(); }
A083008	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n - 1, k -> new Q( 4).^(k).*(BI(n, k)).*(bs.nextQ())).num(); }
A083009	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n - 1, k -> new Q( 5).^(k).*(BI(n, k)).*(bs.nextQ())).num(); }
A083010	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n - 1, k -> new Q( 6).^(k).*(BI(n, k)).*(bs.nextQ())).num(); }
A083011	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n - 1, k -> new Q( 7).^(k).*(BI(n, k)).*(bs.nextQ())).num(); }
A083012	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n - 1, k -> new Q( 8).^(k).*(BI(n, k)).*(bs.nextQ())).num(); }
A083013	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n - 1, k -> new Q( 9).^(k).*(BI(n, k)).*(bs.nextQ())).num(); }
A083014	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n - 1, k -> new Q(10).^(k).*(BI(n, k)).*(bs.nextQ())).num(); }
A083218	lambdan	1	n -> ZV(n).mod(SPF(n + 1).+(1))	a(n) = n mod (spf(n + 1) + 1), where spf(n) is the Least prime factor of n (A020639)
A083228	lambdan	0	n -> Z.TWO.pow(BI(n + 2, 2))./(3)
A083345	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A003415().skip(1), new A085731()
A083397	#lpf	0	n!  +  k where k is the least positive integer such that n!  +  k is a square
A083402	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A002884()	a(n)=Annn(n)/(\d+)^(n-(\d+))	2,1	A002884			Let A_n be the upper triangular matrix in the group GL(n,2) that has zero entries below the main diagonal and 1 elsewhere; a(n) is the size of the conjugacy class of this matrix in GL(n,2).
A083482	multraf	1	(self, n) -> self.s(0).*(self.s(1)).sqrt()	""	new A002378().skip(1), new A083481()
A083528	lambdan	1	n -> ZV(5).^(n).modZ(2*n)	a(n) = 5^n mod 2*n.	easy,nonn	1..1000	nyi
A083529	lambdan	1	n -> ZV(5).^(n).modZ(3*n)	a(n) = 5^n mod 3*n.	easy,nonn	1..1000	nyi
A083530	lambdan	1	n -> ZV(7).^(n).modZ(2*n)	a(n) = 7^n mod (2*n).	easy,nonn	1..1000	nyi
A083548	multraf	1	(self, n)-> self.s(0).lcm(self.s(1))	""	new A051953().skip(), PREVIOUS
A083551	multraf	1	(self, n)-> self.s(0).lcm(self.s(1))	"2"	new A001223().skip(1), PREVIOUS
A083552	multraf	1	(self, n)-> self.s(0)./(self.s(1))	"2"	new A083551(), new A057467()	a(n)= A083551(n)/A057467(n).
A083554	multraf	1	(self, n)-> self.s(0).lcm(self.s(1))	"2"	new A006093().skip(1), PREVIOUS
A083555	multraf	1	(self, n)-> self.s(0)./(self.s(1))	"2,2,6"	new A083554(), new A058263()	a(n)= A083554(n)/A058263(n).
A083557	tuptraf	1	(n, s) -> JF(s[0].*(3).+(2)).largestPrimeFactor()	"3"	PREVIOUS	a(n) is the Largest prime factor of 3*a(n - 1) + 2
A083714	lambdan	0	n -> Puma.prevPrimeZ(ZV(n + 1)).-(JF(n).largestPrimeFactor())	(Largest prime <= n)  -  (Largest prime factor of n)
A083715	lambdan	1	n -> Puma.prevPrimeZ(ZV(n + 1)).mod(JF(n).largestPrimeFactor())	(Largest prime <= n) mod (Largest prime factor of n)
A083716	lambdan	1	n -> (n == 1) ? Z.ONE : Puma.prevPrimeZ(ZV(n + 1))./(JF(n).largestPrimeFactor())	a(n) = integer part of (Largest prime <= n)/(Largest prime factor of n); a(1) = 1
A083717	multraf	1	(self, n) -> self.s(0).*(self.s(1))	"1"	new A007917(), new A006530()	a(n) = A007917(n)*D006530(n);
A083718	lambdan	0	n -> Puma.prevPrimeZ(ZV(n + 1)).+(JF(n).largestPrimeFactor())	(Largest prime <= n)  +  (Largest prime factor of n)
A083720	#nyi	0		Product of primes less than Largest prime factor of n but not dividing n
A083721	#nyi	0		Number of primes greater than the Largest prime factor of n but not greater than n
A083722	#nyi	0		Product of primes greater than the Largest prime factor of n but not greater than n
A083727	lambdan	0	n -> ZV(n).*(Z2(n).-(8))
A083813	lambdan	1	n -> ZV(3).*(Z.TEN.^(n).-(1))
A083888	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 1 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083889	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 2 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083890	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 3 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083891	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 4 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083892	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 5 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083893	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 6 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083894	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 7 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083895	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 8 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083896	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) == 9 ? Z.ONE : Z.ZERO)	1..10000	nyi	_Reinhard Zumkeller_
A083897	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) <= 2 ? Z.ONE : Z.ZERO)	1..105	nyi	_Reinhard Zumkeller_
A083898	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) <= 3 ? Z.ONE : Z.ZERO)	1..1000	nyi	_Reinhard Zumkeller_
A083899	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) <= 4 ? Z.ONE : Z.ZERO)	1..105	nyi	_Reinhard Zumkeller_
A083900	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) <= 5 ? Z.ONE : Z.ZERO)	1..105	nyi	_Reinhard Zumkeller_
A083901	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) <= 6 ? Z.ONE : Z.ZERO)	1..105	nyi	_Reinhard Zumkeller_
A083902	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) <= 7 ? Z.ONE : Z.ZERO)	1..105	nyi	_Reinhard Zumkeller_
A083903	lambdan	1	n -> SD(n, d -> ZUtils.sortDigitsAscending(ZV(d)).mod(10) <= 8 ? Z.ONE : Z.ZERO)	1..1000	nyi	_Reinhard Zumkeller_
A083910	lambdan	0	n -> SD(n, d -> (d % 10 == 0) ? Z.ONE : Z.ZERO)	0,10	Number of divisors of n that are congruent to (\d+) modulo (\d+)
A083911	lambdan	0	n -> SD(n, d -> (d % 10 == 1) ? Z.ONE : Z.ZERO)	1,10	Number of divisors of n that are congruent to (\d+) modulo (\d+)
A083912	lambdan	0	n -> SD(n, d -> (d % 10 == 2) ? Z.ONE : Z.ZERO)	Number of divisors of n that are congruent to 2 modulo 10.	1..65537_
A083913	lambdan	0	n -> SD(n, d -> (d % 10 == 3) ? Z.ONE : Z.ZERO)	3,10	Number of divisors of n that are congruent to (\d+) modulo (\d+)
A083914	lambdan	0	n -> SD(n, d -> (d % 10 == 4) ? Z.ONE : Z.ZERO)	Number of divisors of n that are congruent to 4 modulo 10.	1..10000_
A083915	lambdan	0	n -> SD(n, d -> (d % 10 == 5) ? Z.ONE : Z.ZERO)	5,10	Number of divisors of n that are congruent to (\d+) modulo (\d+)
A083916	lambdan	0	n -> SD(n, d -> (d % 10 == 6) ? Z.ONE : Z.ZERO)	6,10	Number of divisors of n that are congruent to (\d+) modulo (\d+)
A083917	lambdan	0	n -> SD(n, d -> (d % 10 == 7) ? Z.ONE : Z.ZERO)	7,10	Number of divisors of n that are congruent to (\d+) modulo (\d+)
A083918	lambdan	0	n -> SD(n, d -> (d % 10 == 8) ? Z.ONE : Z.ZERO)	8,10	Number of divisors of n that are congruent to (\d+) modulo (\d+)
A083919	lambdan	0	n -> SD(n, d -> (d % 10 == 9) ? Z.ONE : Z.ZERO)	9,10	Number of divisors of n that are congruent to (\d+) modulo (\d+)
A083925	inverse	0	new A057548()	0	0	Inverse function of N -> N injection A057548.
A083927	inverse	0	new A057123()	0	0	Inverse function of N -> N injection A057123.
A083990	filter	0	new A083989()	PRIME	Primes arising in Annnnnn
A084052	lambdan	0	n -> ZUtils.reverse(ZV(2*n)).modZ(2)	2,2	(\d+)*n digit-reversed mod (\d+)	m	i     
A084053	lambdan	0	n -> ZUtils.reverse(ZV(4*n)).modZ(4)	4,4	(\d+)*n digit-reversed mod (\d+)	m	i     
A084054	lambdan	0	n -> ZUtils.reverse(ZV(5*n)).modZ(5)	5,5	(\d+)*n digit-reversed mod (\d+)	m	i     
A084055	lambdan	0	n -> ZUtils.reverse(ZV(6*n)).modZ(6)	6,6	(\d+)*n digit-reversed mod (\d+)	m	i     
A084109	filter	0	new A022544()	v -> v.and(Z.THREE).equals(Z.ONE)	n is congruent to 1 (mod 4) and is not the sum of two squares.
A084116	union2	1	new A000040()	new A007422().skip(1)		Union of primes and multiplicatively perfect numbers (A000040, A007422).					Numbers m such that A084115(m) = 1.
A084236	lambdan	0	n -> Functions.MERTENS.z(Z2(n))	a(n) = M(2^n), where M(n) is Mertens's function, A002321.
A084237	lambdir	0	n -> SEQ.a(ZV(n).^(10))	new A002321()	a(n)=Annn((\d+)^n)	10	D002321
A084293	multraf	0	(self, n) -> ZV(2*n).+(self.s(0))	""	new A054905()	2*n + new A054905()
A084320	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A067850().skip(1), new A067850()	a(n)=Annn(n+(\d+))-Annn(n)
A084339	lambdan	0	n -> ZUtils.reverse(ZV(7*n)).modZ(7)	7,7	(\d+)*n digit-reversed mod (\d+)	m	i     
A084340	lambdan	0	n -> ZUtils.reverse(ZV(8*n)).modZ(8)	8,8	(\d+)*n digit-reversed mod (\d+)	m	i   
A084438	filnum	0	0	n -> FM(n, 3).-(1).isProbablePrime()	Positive integers n such that n!!! - 1 is prime.
A084595	lambdan	0	n -> (n==0) ? ZV(1) : SU(0, (1 << (n - 1)) - 1, r ->  BI(Z2(n), 2*r + 1).*(ZV(3).^(r)))
A084598	#nyi	0		a(1) = 2, a(2) = 3; for n >= 2, a(n + 1) is Least prime factor of (Product_{k = 1..n} a(k))  -  1
A084599	#nyi	0		a(1) = 2, a(2) = 3; for n >= 2, a(n + 1) is largest prime factor of (Product_{k=1..n} a(k))  -  1
A084608	tablamb	0	0	n -> new Integer[] { 0, n*2 }	(n, k) -> SU(0, k, j -> BI(n, k - j).*(BI(k - j, j)).*(Z2(k - 2*j)).*(ZV(3).^(j)))
A084610	tablamb	0	0	n -> new Integer[] { 0, n*2 }	(n, k) -> SU(0, k, j -> BI(n, k - j).*(BI(k - j, j)).*(ZV(-1).^(j)))	T(n, k) = Sum_{j=0..k} binomial(n, k-j)*binomial(k-j, j)*(-1)^j.
A084612	tablamb	0	0	n -> new Integer[] { 0, n*2 }	(n, k) -> SU(0, k, j -> BI(n, k - j).*(BI(k - j, j)).*(ZV(-2).^(j)))	T(n, k) = Sum_{j=0..k} binomial(n, k-j)*binomial(k-j, j)*(-2)^j, for 0 <= k <= 2*n.
A084614	tablamb	0	0	n -> new Integer[] { 0, n*2 }	(n, k) -> SU(0, k, j -> BI(n, k - j).*(BI(k - j, j)).*(ZV(-3).^(j)))	T(n, k) = Sum_{j=0..k} binomial(n, k-j)*binomial(k-j, j)*(-3)^j, for 0 <= k <= 2*n.
A084765	multrar	0	(self, n) -> self.a(n - 1).^(2).*(2).-(1)	"1,5"	a(n) = 2*a(n-1)^2 - 1, a(0)=1, a(1)=5.
A084950	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, k) -> n <= 1 ? ZV(1) : FA(n - k).*(BI(n - k, k))./(FA(k))	_Wouter Meeussen_, Aug 08 2010					Array of coefficients of denominator polynomials of the n-th approximation of the continued fraction x/(1+x/(2+x/(3+..., related to Laguerre polynomial coefficients.
A085115	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, Z2(k))./(2)./(RU(0, k - 1, j -> new Q(Z.ONE, BI(Z2(k-j).+(j), j))))).num()
A085116	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, Z2(k))./(2)./(RU(0, k - 1, j -> new Q(Z.ONE, BI(Z2(k-j).+(j), j))))).den()
A085147	filnum	0	0	n -> FM(n, 4).-(1).isProbablePrime()	n!!!!-1 is prime.
A085149	filnum	0	0	n -> FM(n, 5).-(1).isProbablePrime()	n!!!!!-1 is prime.
A085233	filnum	0	1	n -> { final FactorSequence fs = JF(n); final Z pf  = fs.leastPrimeFactor(); return fs.getExponent(pf) > LongUtils.sqrt(n); }	SPF(n); (Largest power of Least prime factor of n)   > square root(n)
A085234	filnum	0	1	n -> { final FactorSequence fs = JF(n); final Z pf  = fs.leastPrimeFactor(); return fs.getExponent(pf) < LongUtils.sqrt(n); }	SPF(n); (Largest power of Least prime factor of n)   < square root(n)
A085235	filnum	0	1	n -> { final FactorSequence fs = JF(n); final Z pf  = fs.largestPrimeFactor(); return fs.getExponent(pf) > LongUtils.sqrt(n); }	LPF(n); (Largest power of Largest prime factor of n) > square root(n)
A085236	filnum	0	1	n -> { final FactorSequence fs = JF(n); final Z pf  = fs.largestPrimeFactor(); return fs.getExponent(pf) < LongUtils.sqrt(n); }	LPF(n); (Largest power of Largest prime factor of n) < square root(n)
A085269	lambdan	0	n -> ZV(n).*(100)./(254)	f(n) = n/2.54.
A085283	lambdan	0	n -> ZV(n).^(n).*(n).-(ZV(n-1).^(n).*(n-1))	a(n) = n*n^n - (n-1)*(n-1)^n
A085359	ordsum	0	new A085357().skip()	3
A085411	moetraf	1	new A007318()	, 1	* [1,2,3,...]. - _Gary W. Adamson_, Jun 11 2007
A085507	stir2	0	new PrependSequence(0, new A010051(), 0)	, 0	Stirling transform of A010051
A085602	filter	1	new A014566()	(k, v) -> (k & 1) == 1
A085611	simtraf	0	new FilterSequence(0, new A007678(), (k, v) -> (k & 1) == 0)	(n, v) -> v./(2*n).-((n - 1)*(n - 1))	a(n) = A007678(2*n) / (2*n) - (n-1)^2. - _M. F. Hasler_, Aug 06 2021
A085625	filtpos	0	0	new A000161()	v -> v.equals(Z.TWO)	Numbers that are the sum of 2 squares in exactly 2 ways.
A085831	lambdan	0	n -> SU(1, 1 << n, k -> Functions.SIGMA0.z(k))	a(n) = Sum_{k=1..2^n} d(k)
A086131	#lpf	0	arithmetic derivative of n if it exists, or a(n)=0 for n=1 and n=prime
A086133	#spf	0	arithmetic derivative of n equals that of n
A086134	#spf	0	arithmetic derivative of n or a(n)=0 if no such prime exists
A086257	prepend	0	new FilterSequence(0, new A086251(), (n, v) -> n > 0 && (n & 1) == 0)	1	For n > 0, a(n) = A086251(2*n). - _Max Alekseyev_, Sep 06 2022
A086290	dirtraf	1	new A051904()	new A002473()	"null"		1				Minimal exponent in prime factorization of 7-smooth numbers.
A086414	dirtraf	1	new A051904()	new A003586()	"null"		1				Minimal exponent in prime factorization of 3-smooth numbers.
A086459	lambdan	1	n -> Z.ONE.-(Z2(n)).^(n-1)	a(n) = (-2^n + 1)^(n-1).
A086501	multraf	1	(self, n) -> FA(n).^(2).-(self.s(0))	""	new A053529()	n!^2 - new A053529()
A086555	multrar	1	(self, n) -> SU(1, n - 1, k -> SA(n, k).*(self.a(k)))	"1"
A086597	moetrafi	1	new A022307()	, 1	Inverse Moebius transform of A022307.
A086738	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A000041().skip(1), new A000203()	Annnnnn(n)- Annnnnn(n)
A087023	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A004042().skip(1)	new A051903()	a(n)=Annn(Annn(n+(\d+)))
A087040	#nyi	0		2*nd largest prime factor of n - th composite number
A087057	multraf	1	(self, n) -> self.s(0).+(1)	""	new A001951()	1 + new A001951()
A087172	simtraf	0	new A066628()	(n, v) -> ZV(n).-(v)
A087177	multraf	0	(self, n) -> ZV(n + 1).-(self.s(0))	""	new A071754()	n + 1 - new A071754()
A087218	lambdir	0	n -> SEQ.a(2*n)	new A078932()	a(n)=Annn((\d+)*n)	2	D078932
A087219	lambdir	0	n -> SEQ.a(2*n + 1)	new A078932()	a(n)=Annn((\d+)*n+(\d+))	2,1	D078932
A087222	lambdir	0	n -> SEQ.a(3*n)	new A087221()	a(n)=Annn((\d+)*n)	3	D087221
A087223	lambdir	0	n -> SEQ.a(3*n + 1)	new A087221()	a(n)=Annn((\d+)*n+(\d+))	3,1	D087221
A087224	lambdir	0	n -> SEQ.a(3*n + 2)	new A087221()	a(n)=Annn((\d+)*n+(\d+))	3,2	D087221
A087262	simtraf	1	new A025586()	(n, v) -> v./(n)	a(n)=floor(Annn(n)/n)
A087273	simtraf	1	new A000040()	v -> JF(v.*(3).+(1)).largestPrimeFactor()	3*prime(n).+(1)
A087274	#nyi	0		Prime index of largest prime factor of 3*prime(n) + 1
A087298	lambdan	1	n -> Z.valueOf(ZUtils.valuation(FA(3*n), Z.TWO))	Exponent of 2 in factorization of (3n)!.
A087678	filnum	1	9	n -> ZV(n).+(9).IPP() && ZV(n).-(9).IPP()	Numbers n such that n +(\d+) and n -(\d+) are both prime
A087681	filnum	1	6	n -> ZV(n).+(6).IPP() && ZV(n).-(6).IPP()	Numbers n such that n +(\d+) and n -(\d+) are both prime
A087682	filnum	1	8	n -> ZV(n).+(8).IPP() && ZV(n).-(8).IPP()	Numbers n such that n +(\d+) and n -(\d+) are both prime
A087683	filnum	1	10	n -> ZV(n).+(10).IPP() && ZV(n).-(10).IPP()	Numbers n such that n +(\d+) and n -(\d+) are both prime
A087696	filnum	1	5	n -> ZV(n).+(5).IPP() && ZV(n).-(5).IPP()	Numbers n such that n +(\d+) and n -(\d+) are both prime
A087697	filnum	1	7	n -> ZV(n).+(7).IPP() && ZV(n).-(7).IPP()	Numbers n such that n +(\d+) and n -(\d+) are both prime
A087794	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A338912(), new A338913()	a(n) = A003963(A001358(n)) = A338912(n) * A338913(n). - _Gus Wiseman_, Dec 04 2020
A087987	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A002110()	new A002321()	a(n)=Annn(Annn(n))		D002321,D002110
A088308	prepend	0	new SimpleTransformSequence(1, new A002808(), v -> v.modZ(10))	2	2 followed by list of composite numbers mod 10
A088311	simtraf	0	new A000009()	(n, v) -> FA(n).*(v)
A088417	simtraf	0	new A088339()	v -> v./(3)	a(n)= Annnnnn(n)/(\d+)
A088441	lambdan	0	n -> ZV(n % 3 == 0 ? n : (n % 3 == 2 ? 1 : (n - 2)/2))	a(n) = n if n == 0 (mod 3), a(n) = 1 if n == 2 (mod 3), otherwise a(n) = floor((n-2)/2).
A088450	#nyi	0		Numbers k such that â¬088444(k) = Least prime factor of k
A088451	#nyi	0		Numbers k such that â¬088444(k) = Largest prime factor of k
A088679	multrar	0	(self, n) -> self.a(n - 1).^(2).*(n)./(n - 1)	"0,1"	a(n) = a(n-1)^2 * n / (n-1), n>1, a(0) = 0, a(1) = 1.
A088765	simtraf	1	new A087696()	v -> v./(2)	.
A088767	simtraf	1	new A087697()	v -> v./(2)	.
A088769	simtraf	1	new A087678()	v -> v./(2)	.
A088781	simtraf	0	new A068164()	v -> Puma.primePiZ(v)	A000040	Annnnnn indexed by Annnnnn
A088806	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A066060(), new A000688()	a(n) = A066060(n) -   A000688(n).
A088835	multraf	1	(self, n)-> self.s(0).lcm(self.s(1))	""	new A020639(), new A006530()
A088841	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).num()	""	new A283078(), new A000203()
A088860	multraf	1	(self, n) -> self.s(0).*(2)	""	new A002110()	2*new A002110()
A088922	multraf	1	(self, n) -> self.s(0).+(self.s(1)).-(2)	""	new A000005(), new A110654().skip(1)
A088953	multraf	0	(self, n) -> self.s(0).*(2)./(3)	"1,3"	new A006156()	v -> v.*(2)./(3)	for n>1 [Corrected by _RâÄÃ¶Â¬Â©my Sigrist_, Aug 19 2020].
A088988	multraf	1	(self, n) -> Puma.primeZ(self.s(0).+(1))	""	new A000230()	prime(1 + new A000230())
A089027	simtraf	0	new A001223()	(n, v) -> ZV(v.compareTo(Z.TWO) <= 0 ? 1 : n + 1)	a(n) =1 if the prime gap A001223(n) is <=2, otherwise a(n)=n+1
A089029	simtraf	0	new A081827()	(n, v) -> ZV(v.compareTo(Z.ZERO) > 0 ? n : 1)	a(n) = n if A081827(n-1)>0; a(n) = 1 if A081827(n-1) <=0.
A089082	spf	2	ZV(3).^(n).-(Z2(n))
A089118	filter	0	new SimpleTransformSequence(1, new A005836(), v -> v.*(3).-(1))	v -> v.compareTo(Z.ZERO) >= 0	Nonnegative numbers in (3*A005836 - 1) [A005836 are the numbers with base representation containing no 2].
A089120	spf	1	ZV(n).^(2).+(1)
A089123	spf	1	ZV(n).^(2).+(3)	numbers of the form A^2  +  3
A089124	lpf	1	ZV(n).^(2).+(3)	numbers of the form A^2  +  3
A089205	lambdan	1	n -> ZV(n).^(n).*(n-1)
A089344	simtraf	1	new A066496()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A066496
A089379	filnum	1	0	n -> ZV(10).^(n).+(n).IPP()		isprime(10^n+n)
A089384	multraf	1	(self, n) -> self.s(0).*(self.s(1)).+(Z.ONE.-(self.s(0)).*(self.s(2)))	""	new A008966(), new A032742(), new A007947()	a(n) = D008966(n)*A032742(n) + (1-D008966(n))*D007947(n).
A089389	tuptraf	0	(n, s) -> ZV(n).isProbablePrime() ? Z.ZERO : s[0].+(s[1])	"0"	new A020639(), new A032742()	a(1) = 0, for n > 1, if n is prime, a(n) = 0, otherwise a(n) = A020639(n) + A032742(n). - _Antti Karttunen_, Feb 25 2018
A089439	filter	2	new A000040()	p -> p.*( 6).+(13).IPP()	[(\d+)#+(\d+)]&]		200, 6,13
A089440	filter	1	new A000040()	p -> p.*(14).+(13).IPP()	[(\d+)#+(\d+)]&]		250,14,13
A089443	filter	1	new A000040()	p -> p.*(12).+(13).IPP()	[(\d+)#+(\d+)]&]		200,12,13
A089462	lambdan	0	n -> SU(0, n + 1, m -> RU(0, m, j -> new Q(BI(m, j)).*(BI(n, n - m - j + 1)).*(new Q(n + 2).^(n - m - j + 1)).*(FA(m + j))./(ZV(-2).^(j)))./(FA(m)).num())
A089465	lambdan	0	n -> SU(0, n + 1, m -> RU(0, m, j -> new Q(BI(m, j)).*(BI(n, n - m - j + 1)).*(new Q(n + 3).^(n - m - j + 1)).*(FA(m + j))./(ZV(-2).^(j)))./(FA(m)).num())	
A089466	lambdan	0	n -> SU(0, n    , m -> RU(0, m, j -> new Q(BI(m, j)).*(BI(n, n - m - j    )).*(new Q(n - 1).^(n - m - j    )).*(FA(m + j))./(ZV(-2).^(j)))./(FA(m)).num())
A089467	lambdan	0	n -> SU(0, n    , m -> RU(0, m, j -> new Q(BI(m, j)).*(BI(n, n - m - j    )).*(new Q(n    ).^(n - m - j    )).*(FA(m + j))./(ZV(-2).^(j)))./(FA(m)).num())
A089468	lambdan	0	n -> SU(0, n    , m -> RU(0, m, j -> new Q(BI(m, j)).*(BI(n, n - m - j    )).*(new Q(n + 1).^(n - m - j    )).*(FA(m + j))./(ZV(-2).^(j)))./(FA(m)).num())
A089482	simtraf	0	new A003024()	(n, v) -> FA(n).*(v)
A089530	simtraf	0	new A023204()	v -> Puma.primePiZ(v)	A000040	Annnnnn indexed by Annnnnn
A089532	simtraf	0	new A089531()	v -> Puma.primePiZ(v)	A000040	Annnnnn indexed by Annnnnn
A089535	multraf	1	(self, n) -> ZV(2).^(self.s(0)).+(self.s(1))	""	new A085745(), new A085745()
A089536	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A089535()	new A020639()	a(n)=Annn(Annn(n))
A089538	simtraf	0	new A085747()	v -> v.IPP() ? Puma.primePiZ(v) : Z.ZERO	A000040	Annnnnn indexed by Annnnnn
A089539	simtraf	1	new A085747()	(n, v) -> FA(n).+(v)
A089619	lpf	0	ZV(n).^(2).+((n + 1)*(n + 1))
A089638	lambdan	0	n -> new Q(5, 2).*(RU(1, n, k -> new Q(Z_1(k+1), ZV(k).^(3).*(BI(2*k, k))))).num()
A089639	lambdan	0	n -> new Q(5, 2).*(RU(1, n, k -> new Q(Z_1(k+1), ZV(k).^(3).*(BI(2*k, k))))).den()
A089709	multrar	1	(self, n) -> self.a(n - 1).*(Z2(n - 2).+(2))	"1,2,6"	a(n) = (2^(n-2)+2)*a(n-1), n>3. - _Vladeta Jovovic_, Nov 17 2003
A089716	filter	1	new A000040()	p -> p.mod(10) == 1 && p.mod(9) <= 2	Primes that are both congruent to 1 mod 10 and congruent to 1 or 2 mod 9
A089730	#lpf	0	all differences prime(n) - q, q prime and q<prime(n); a(1)=0
A089836	invtrac	0	new A089835()	1	
A089890	simtraf	1	new A089887()	(n, v) -> { final Z x = ZV(n).sqrt().-(1); return v.*(x.*(x.+(1))./(2)); }	A000217(A000196(n)-1)*A089887(n);
A089948	simtraf	1	new A089933()	v -> SPF(v)	the concatenation of the first n odd primes
A090077	lambdan	0	n -> new Z(ZV(n).toString(2).replaceAll("1+", "1"), 2)	nyi Fto	In binary expansion of n: reduce contiguous blocks of 1s to 1.	nonn,base	0..10000
A090078	lambdan	0	n -> new Z(ZV(n).toString(2).replaceAll("0+", "0"), 2)	nyi Fo	In binary expansion of n, reduce contiguous blocks of 0s to 0.	nonn,base,easy	0..73
A090079	lambdan	0	n -> new Z(ZV(n).toString(2).replaceAll("0+", "0").replaceAll("1+", "1"), 2)	nyi Fto	In binary expansion of n: reduce contiguous blocks of 0's to 0 and contiguous blocks of 1's to 1.	nonn,base	0..10000
A090080	simtraf	1	new A000040()	v -> new Z(v.toString(2).replaceAll("0+", "0").replaceAll("1+", "1"), 2)	nyi	In binary expansion of n-th prime: reduce contiguous blocks of 0's to 0 and contiguous blocks of 1's to 1.	nonn,base
A090103	lambdan	1	n -> (n == 1) ? Z.ZERO : new Z(ZV(n).toString(JF(n).omega()))
A090368	filter	1	new A020639()	(k, v) -> (k & 1) == 1
A090410	lambdan	0	n -> SU(1, Z.TEN.^(n).intValueExact(), i -> Z_1(Functions.BIG_OMEGA.i(i)))
A090498	lambdan	1	n -> SU(n*(n - 1)/2 + 1, n*(n + 1)/2, k -> Functions.SIGMA0.z(k))
A090529	multraf	0	(self, n) -> self.s(0).+(1)	"1,1,2"	new A084558()
A090541	lambdan	1	n -> RU(1, n, k -> new Q(1, k)).*(n*(n + 1)/2).floor()	a(n) = floor((Sum_{r=1..n} r)*(Sum_{r=1..n} 1/r)).
A090585	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A000217(), new A069268()	a(n)=Annn(n)/Annn(n)
A090603	lambdan	1	n -> ZV(n).^((n-1)*(n-1))
A090633	lambdan	1	n -> new Q(2).-(new Q(2).^(1 - n))./(ZV(n)).num()
A090947	simtraf	0	new A000367()	v -> v.equals(Z.ONE) ? Z.ONE : LPF(v)	numerator of Bernoulli(2*n) (or 1 if the numerator is 1)
A090973	simtraf	1	new A000040()	(n, v) -> new Q(v, ZV(n)).ceiling()	a(n) = ceiling(prime(n)/n).                                                                  -
A091020	filnum	0	1	n -> Puma.primeZ(n).toString(2).indexOf(ZV(n).toString(2)) >= 0	Numbers n such that in binary representation n is a substring of the n-th prime.
A091021	filter	1	new A000040()	(k, v) -> v.toString(2).indexOf(Long.toString(k, 2)) >= 0	Primes p=prime(k) such that in binary representation k is a substring of p.
A091138	multraf	1	(self, n) -> FA(n).*(self.s(0))./(self.s(1))	""	new A030274(),new A030275()	n!* new A030274()/new A030275()
A091179	simtraf	0	new A088878()	v -> Puma.primePiZ(v)	A000040	Annnnnn indexed by Annnnnn
A091233	multraf	1	(self, n) -> self.s(0).-(self.s(1)).+(1)	""	new A005518(), new A005517()	)+1
A091248	multrad	1	(self, n) -> SD(n, d -> SEQ.a(d))	""	new A318622()	a(n)=Sum_{d|n}Annn(d)
A091279	simtraf	0	new A091278()	v -> v.sqrt()	Square roots of Annnnnn
A091375	#nyi	0		Numbers k with property that the number of prime factors of k (counted with repetition) exceeds the Least prime factor of k
A091376	#nyi	0		Numbers k with property that the number of prime factors of k (counted with repetition) equals the Least prime factor of k
A091478	tablamb	0	0	n -> new Integer[] { 0, n*(n - 1)/2 }	(n, k) -> n == 0 ? Z.ONE : BI(n*(n - 1)/2, k).*(FA(k))	a(n, k) = k!*binomial(binomial(n, 2), k).					Table of graphs with n (>=0) nodes and k (>=0) edges. Each type of object labeled from its own label set.
A091535	lambdan	0	n -> FM(3*n - 2, 3).*(FM(3*n - 1, 3))./(2)	The scaled sequence (2/(3n-1)!!!)*a(n) = (3*n-2)!!! = A007559(n), n>=1.
A091539	lambdan	0	n -> new Q(3).^(2*n    ).*(RQ(0, n - 1, j -> new Q(3*j + 2, 3))).*(new Q(FA(n)).-(RQ(0, n - 1, j -> new Q(3*j + 1, 3)).*(ZV(3))))./(FA(3).*(10)).num()	(3^(2*n))*risefac(2/3, n)*(n!-3*risefac(1/3, n))/(3!*10) with risefac(x, n)=Pochhammer(x, n).
A091544	lambdan	0	n -> new Q(2).^(4*n - 1).*(RQ(0, n - 1, j -> new Q(4*j + 1, 4))).*(RQ(0, n - 1, j -> new Q(2*j + 1, 2)))         .num()   	, n>=1, with risefac(x, n) = Pochhammer(x, n).
A091546	lambdan	0	n -> new Q(6).^(2*n    ).*(RQ(0, n - 1, j -> new Q(6*j + 1, 6))).*(RQ(0, n - 1, j -> new Q(3*j + 1, 3)))./(Z.TWO).num()   	, n>=1, with risefac(x, n) = Pochhammer(x, n).
A091550	lambdan	0	n -> new Q(2).^(4*n    ).*(RQ(0, n - 1, j -> new Q(2*j + 1, 2))).*((RQ(0, n - 1, j -> new Q(4*j + 1, 4))).*(ZV(-3)).+(RQ(0, n - 1, j -> new Q(4*j + 3, 4))))./(ZV(6*12)).num()	(2^(4*n))*risefac(1/2, n)*(-3*risefac(1/4, n) + risefac(3/4, n))/(3!*12), n>=2
A091551	lambdan	0	n -> PR(0, n + 1, j -> ZV(5*j + 2)).*(PR(0, n + 1 , j -> ZV(5*j + 1)).*(-3).+(PR(0, n + 1, j -> ZV(5*j + 3))))./(84)
A091552	lambdan	0	n -> (PR(0, n - 1, j -> ZV(6*j + 1)).*(-3).+(PR(0, n - 1, j -> ZV(6*j + 3)))).*(PR(0, n - 1, j -> ZV(3*j + 1))).*(Z2(n))./(96)	
A091627	lambdan	1	n -> SU(1, n, i -> SU(i, n - i, j -> ZV(i*j <= n ? 1 : 0)))	a(n) = sum(i=1, n, sum(j=i, n-i, i*j<=n));
A091735	simtraf	1	new A007310()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A007310
A091738	simtraf	1	new A047235()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A047235
A091740	lambdan	2	n -> new Q(3).^(2*n    ).*(RQ(0, n - 1, j -> new Q(3*j + 2, 3))).*(RQ(0, n - 1, j -> new Q(3*j + 1, 3))).*(ZV(6)).-(RQ(0, n - 1, j -> new Q(3*j + 2, 3)).*(FA(n)).*(4)).+(RQ(0, n - 1, j -> new Q(3*j + 4, 3)).*(FA(n)))./(FA(4)).num()	, with risefac(x, n)=Pochhammer(x, n).							Third column (k=4) sequence of array A091534 ((5,2)-Stirling2).
A091785	filter	0	new A003159()	(n, v) -> (n & 1) == 0
A091796	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A061431()	a(n)=Annn(n)-n*(n+(\d+))/(\d+)	1,2	A061431			Smallest k such that for 0 <= i < n, n*(n+1)/2-i divides k+i.
A091873	simtraf	0	new A068165()	v -> v.sqrt()	Square roots of Annnnnn
A091877	simtraf	0	new A068178()	v -> v.sqrt()	Square roots of Annnnnn
A091880	simtraf	0	new A049232()	v -> Puma.primePiZ(v)	A000040	Annnnnn indexed by Annnnnn
A091913	tablamb	0	0	n -> new Integer[] { 0, (n == 0) ? 0 : n - 1 }	(n, k) -> BI(n, k).*(Z2(n - k).-(1))	Triangle read by rows: a(n,k) = C(n,k)*(2^(n-k) - 1) for k<n, a(n,k) = 0 for k >= n, where k=0..max(n-1,0).
A092053	multraf	1	(self, n) -> ZV(2).^(self.s(0)).-(self.s(1))	""	new A092054(), new A001902().skip(1)
A092280	partsun	0	new A051626().skip(1)			Partial sums of periods of reciprocals.
A092282	multraf	1	(self, n) -> self.s(0).^(2).-(self.s(1).^(3))	""	new A000196(), new A048766()	a(n)=Annn(n)^(\d+)-Annn(n)^(\d+)	2,3
A092293	multraf	0	(self, n) -> ZV(3*n).+(self.s(0))	""	new A090239()	3*n + new A090239()
A092296	multraf	0	(self, n) -> ZV(3*n).+(self.s(0))	""	new A090193()	3*n + new A090193()
A092316	tuptraf	0	(n, s) -> s[0].*(2).-(s[1])	""	new A067619().skip(1), new A000700().skip(1)	a(n) = 2* A067619(n) -    A000700(n). - _Seiichi Manyama_, Jan 19 2022
A092466	lambdan	0	n -> RU(0, n, i -> RU(0, i, j -> RU(0, j, k -> i + j + k != n ? Q.ZERO : new Q(FA(n+k)  , FA(i)  .*(FA(j)  ).*(FA(2*k)))))).num()	a(n) = Sum_{i+j+k=n, 0<=j<=i<=k<=n} (n+k)!/(i! * j! * (2*k)!).
A092468	lambdan	0	n -> RU(0, n, i -> RU(0, i, j -> RU(0, j, k -> i + j + k != n ? Q.ZERO : new Q(FA(n+2*k), FA(i)  .*(FA(j)  ).*(FA(3*k)))))).num()
A092469	lambdan	0	n -> RU(0, n, i -> RU(0, i, j -> RU(0, j, k -> i + j + k != n ? Q.ZERO : new Q(FA(n+2*j), FA(i)  .*(FA(2*j)).*(FA(k  )))))).num()
A092470	lambdan	0	n -> RU(0, n, i -> RU(0, i, j -> RU(0, j, k -> i + j + k != n ? Q.ZERO : new Q(FA(n+2*i), FA(2*i).*(FA(j)  ).*(FA(k  )))))).num()
A092473	lambdan	0	n -> RU(0, n, i -> RU(0, i, j -> RU(0, j, k -> i + j + k != n ? Q.ZERO : new Q(FA(2*n)  , FA(i+j).*(FA(j+k)).*(FA(k+i)))))).num()
A092509	moetraf	1	new A008475()	, 0	#
A092524	#nyi	0		Binary representation of n interpreted in base p, where p is the Least prime factor of n: p = A020639(n)
A092552	central	0	new A136126()	%F A136126 Central terms of triangle equals A092552. - _Paul D. Hanna_, Feb 01 2013
A092684	multrar	0	(self, n) -> SU(0, n/2, k -> BI(n-k,k).*(self.a(k)))	"1"
A092756	partsun	0	new A000227().skip(1)			Partial sums of round(exp(n)).
A092779	simtraf	0	new A003267()	v -> Z.valueOf(ZUtils.valuation(v, Z.TWO))	Exponent of 2 in central fibonomial coefficient A003267.
A092975	#nyi	0		When n=3m then a(n)=3^m; otherwise, a(n)=q^(n/q), q being the Least prime factor of n.  -  _Stanislav Sykora_, Jun 04 2014
A093018	lambdan	0	n -> new Z(Integer.toString(n) + A093017.check(ZV(n)))	Natural numbers with appended Luhn mod 10 check digit.	easy,nonn,base	0..10000	nyi
A093019	simtraf	0	new A093018()	v -> v.modZ(10)	a(n) = A093018(n) mod 10.0..10000	_Ray Chandler_
A093020	filtpos	1	0	new A093019()	v -> v.equals(ZV(0))	Indices of terms in A093019 with value 0.	easy,nonn,base
A093021	filtpos	1	0	new A093019()	v -> v.equals(ZV(1))	Indices of terms in A093019 with value 1.	easy,nonn,base
A093022	filtpos	1	0	new A093019()	v -> v.equals(ZV(2))	Indices of terms in A093019 with value 2.	easy,nonn,base
A093023	filtpos	1	0	new A093019()	v -> v.equals(ZV(3))	Indices of terms in A093019 with value 3.	easy,nonn,base
A093024	filtpos	1	0	new A093019()	v -> v.equals(ZV(4))	Indices of terms in A093019 with value 4.	easy,nonn,base
A093025	filtpos	1	0	new A093019()	v -> v.equals(ZV(5))	Indices of terms in A093019 with value 5.	easy,nonn,base
A093026	filtpos	1	0	new A093019()	v -> v.equals(ZV(6))	Indices of terms in A093019 with value 6.	easy,nonn,base
A093027	filtpos	1	0	new A093019()	v -> v.equals(ZV(7))	Indices of terms in A093019 with value 7.	easy,nonn,base
A093028	filtpos	1	0	new A093019()	v -> v.equals(ZV(8))	Indices of terms in A093019 with value 8.	easy,nonn,base
A093029	filtpos	1	0	new A093019()	v -> v.equals(ZV(9))	Indices of terms in A093019 with value 9.	easy,nonn,base
A093046	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A058328()	new A000040()	a(n)=Annn(Annn(n))		D000040,D058328
A093052	lambdan	0	n -> Z.valueOf(ZUtils.valuation(ZV(6).^(n).-(Z2(n)), Z.TWO))	Exponent of 2 in 6^n - 2^n.
A093179	#simtraf	0	new A007117()	(n, v) -> (n < 2) ? ZV(3 + 2*n) : JF(v.*(Z2(n + 2)).+(1)).leastPrimeFactor()	A007117(n)*2^(n+2) + 1 for n >= 2
A093349	lambdan	1	n -> SU(1, n-1, i -> Z_1(i).*(ZV(7).^(ZUtils.valuation(ZV(i), ZV(7))))).negate()
A093433	multraf	0	(self, n) -> self.s(0).+(self.s(1))	""	new A002110(), new A107712()	a(n)=Annn(n)+Annn(n)
A093460	lambdan	1	n -> ZV(n).^(n-1).*(2).-(1)	a(n) = 2n^(n-1) - 1.
A093526	lambdan	0	n -> new Q(ZV(n+1).*(n+2), BI(2*n + 2, n + 1)).den()
A093647	recval	0	new A093101()		Records in Annnnnn
A093651	recpos	0	new A093101()	,0	Where records occur in Annnnnn
A093708	multraf	1	(self, n) -> Z.TEN.^(n)./(2).-(self.s(0).*(2)).+(self.s(1)).+(1)	""	new A006880().skip(1), new A007508()	a(n) = 10^n/2 - 2*A006880(n) + A007508(n) + 1
A093808	filter	1	new A002385()	v -> { final int[] dc = ZUtils.digitCounts(v); return Functions.DIGIT_SUM.z(v).IPP()&& ZV(dc[2] + dc[3] + dc[5] + dc[7]).IPP(); }	Palindromic primes with property that sum of digits is prime and number of prime digits is prime.
A093868	multraf	1	(self, n)-> self.s(0).min(self.s(1))	""	new A034694(), new A038700()
A093905	arrlamb0	0	(n, k) -> RQ(n - k, n, i -> new Q(i)).*(RU(n - k, n, i -> new Q(1, i))).num()
A094057	simtraf	0	new A001566()	v -> ZV(ZUtils.decimalLength(v))	Number of digits of A001566(n).
A094102	tablamb	1	1	n -> new Integer[] { 1, 2*n - 1 }	(n, k) -> (k <= n) ? FI(k) : FI(2*n - k)	Triangle read by rows in which row n contains Fib(1), ..., Fib(n-1), Fib(n), Fib(n-1), ...,					Triangle read by rows in which row n contains Fib(1), ..., Fib(n-1), Fib(n), Fib(n-1), ..., Fib(1).
A094114	lambdan	1	n -> SU(1, n-1, i -> Z_1(i).*(ZV(2).^(ZUtils.valuation(ZV(i), ZV(3))))).negate()
A094115	lambdan	1	n -> SU(1, n  , k -> SU(1, k-1, i -> Z_1(i).*(ZV(3).^(ZUtils.valuation(ZV(i), ZV(3)))))).negate()
A094116	lambdan	1	n -> SU(1, n  , k -> SU(1, k-1, i -> Z_1(i).*(ZV(5).^(ZUtils.valuation(ZV(i), ZV(5)))))).negate()
A094117	lambdan	1	n -> SU(1, n  , k -> SU(1, k-1, i -> Z_1(i).*(ZV(7).^(ZUtils.valuation(ZV(i), ZV(7)))))).negate()
A094120	lambdan	0	n -> SU(1, n  , k -> SU(1, k,   i -> ZV(-2).^(ZUtils.valuation(ZV(i), ZV(2)))))
A094207	lambdir	0	n -> SEQ.a(4*n - 4)	new A034963()	a(n)=Annn((\d+)*n-(\d+)) 	4,4 	D034963                           
A094416	arrlamb	1	1	1	1	(r, n) -> SU(0, n, k -> FA(k).*(ZV(r).^(k)).*(S2(n, k)))	= 1/(r+1) * Sum_{k>=1} k^n * (r/(r+1))^k, for r>0, n>0.
A094487	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z.FOUR.+(p.^(2)).IPP() && Z2(  4).+(p.^(  4)).IPP()	2^j+p^j are primes for j=1,2,  4	1..34	nyi
A094488	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z.FOUR.+(p.^(2)).IPP() && Z2(  8).+(p.^(  8)).IPP()	2^j+p^j are primes for j=1,2,  8	1..500	nyi
A094489	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z2(4).+(p.^(4)).IPP() && Z2( 32).+(p.^( 32)).IPP()	2^j+p^j are primes for j=1,4, 32	1..400	nyi
A094490	filter	1	new A000040()	p -> Z.FOUR.+(p.^(2)).IPP() && Z2(4).+(p.^(4)).IPP() && Z2( 64).+(p.^( 64)).IPP()	2^j+p^j are primes for j=2,4, 64	1..26	nyi	_Labos Elemer_ 
A094491	filter	1	new A000040()	p -> Z2(4).+(p.^(4)).IPP() && Z2(8).+(p.^(8)).IPP() && Z2(128).+(p.^(128)).IPP()	2^j+p^j are primes for j=4,8,128	1..22	nyi	_Labos Elemer_ 
A094492	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z2(4).+(p.^(4)).IPP() && Z2( 16).+(p.^( 16)).IPP()	2^j+p^j are primes for j=1,4, 16	1..31	nyi
A094493	filter	1	new A000040()	p -> Z.TWO.+(p).IPP() && Z.FOUR.+(p.^(2)).IPP() && Z2( 16).+(p.^( 16)).IPP()	2^j+p^j are primes for j=1,2, 16	1..27	nyi
A094494	filter	1	new A000040()	p -> Z.FOUR.+(p.^(2)).IPP() && Z2(4).+(p.^(4)).IPP() && Z2(  8).+(p.^(  8)).IPP()	2^j+p^j are primes for j=2,4,  8	1..400	nyi
A094498	spf	1	Z2(4*n).+(Z.THREE.^(4*n))	= 16^n  +  81^n
A094499	spf	0	Z2(Z2(n)).+(ZV(3).^(Z2(n)))	, i.e., exponents are powers of 2
A094647	lambdan	1	n -> ZV(n).^(2*n).-(ZV(2*n).^(n))
A094918	lambdan	1	n -> ZV(3).^(n).-(1)./(2).modZ(n)
A094919	lambdan	1	n -> ZV(4).^(n).-(1)./(3).modZ(n)
A094920	lambdan	1	n -> ZV(5).^(n).-(1)./(4).modZ(n)
A094922	lambdan	1	n -> ZV(7).^(n).-(1)./(6).modZ(n)
A094924	lambdan	1	n -> ZV(9).^(n).-(1)./(8).modZ(n)
A094941	holose	0	[[0],[-2],[0],[0,1]]	1,2	0	1	E.g.f. A(x) satisfies Ad(x) = 2+2*x*A(x), A(0)=1.
A094946	tuptraf	0	(n, s) -> s[0].*(Z.TEN.^(n + 2)).+(Z.TEN.^(n + 1).-(1)./(9))	"1"	PREVIOUS	a(n) = a(n-1)*10^(n+1) + (10^n-1)/9
A095070	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	One-bit dominant primes, i.e., primes whose binary expansion contains more 1's than 0's.	nonn,easy,base	1..20000	nyi	_Antti Karttunen_
A095124	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A001146()	new A000040()	a(n)=Annn(Annn(n))		D000040,A001146
A095743	filter	0	new A000040()	v -> new A037888().a(v).equals(Z.valueOf(1))	Primes p for which A037888(p) == 1, i.e., primes whose binary expansion is almost symmetric, needing just a one-bit flip to become palindrome.	nonn,base	1..10000	nyi	_Antti Karttunen_
A095744	filter	0	new A000040()	v -> new A037888().a(v).equals(Z.valueOf(2))	Primes p for which A037888(p) == 2, i.e., primes whose binary expansion needs flips of just two bits to become palindrome.	nonn,base	1..10000	nyi	_Antti Karttunen_
A095745	filter	0	new A000040()	v -> new A037888().a(v).equals(Z.valueOf(3))	Primes p for which A037888(p) == 3, i.e., primes whose binary expansion needs flips of just three bits to become palindrome.	nonn,base	1..44	nyi	_Antti Karttunen_
A095746	filter	0	new A000040()	v -> new A037888().a(v).equals(Z.valueOf(4))	Primes p for which A037888(p) == 4, i.e., primes whose binary expansion needs flips of just four bits to become palindrome.	nonn,base	1..41	nyi	_Antti Karttunen_
A095791	dirtraf	0	new A070939()	new A104326()	a(n)=Annn(Annn(n))		D070939,A104326
A095906	filnum	1	0	n -> ZV(3 ).^(n).-(Z2(n -1)).IPP()		isprime(3^n-2^(n-1))
A095996	multraf	1	(self, n) -> FA(n)./(self.s(0))	""	new A051696()	n!/new A051696()
A096006	simtraf	1	new FilterSequence(0, new A007318(), v -> !v.equals(Z.ONE))	v -> LPF(v)	Scan Pascals triangle (A007318) from left to right, record largest prime factor of each entry
A096007	simtraf	1	new FilterSequence(0, new A007318(), v -> !v.equals(Z.ONE))	v -> SPF(v)	Scan Pascals triangle (A007318) from left to right, record Least prime factor of each entry
A096068	#nyi	0		Concatenated in binary representation: largest proper divisor of n and Least prime factor of n
A096089	lambdan	1	n -> Functions.DIGIT_SORT_DESCENDING.z(n)./(Functions.DIGIT_SORT_ASCENDING.z(n))	floor( A004186(n)/A004185(n)) ;
A096091	filnum	1	1	n -> Functions.DIGIT_SORT_DESCENDING.z(n).mod(Functions.DIGIT_SORT_ASCENDING.z(n)).isZero()	Numbers n with property that largest number formed from digits of n (A004186(n)) is divisible by smallest number formed from digits of n (A004185(n)).
A096172	lpf	1	ZV(n).^(4).+(1)
A096196	lambdan	1	n -> Z2(n).+(1).modZ(n)	a(n) = (1 + 2^n) mod n.	nonn,easy	1..10000	nyi
A096209	filter	1	new A198700()	PRIME
A096226	lambdan	1	n -> { final Z nz = ZV(n); return nz.IPP() ? nz : (Predicates.SQUARE_FREE.is(nz) ? Functions.CARMICHAEL_LAMBDA.z(n).+(1) : Z.ONE); }	If n is squarefree, a(n) = 1+A002322(n) = 1+A011773(n). Otherwise a(n) = 1. a(n) = n iff n is prime.
A096313	lambdan	0	n -> n <= 1 ? ZV(n + 1) : FA(n + 1).*(PR(1, n - 1, k -> FA(k)))	a(0)=1, a(1)=2; for n > 1, a(n) = (n+1)!*Product_{k=1..n-1} k!; for n > 1, a(n) = D000142(n+1)*D000178(n-1).
A096317	#nyi	0		a(n) is the minimal product of the Least prime factor of each composite number in a prime gap of 2*n
A096318	#nyi	0		a(n) is the prime the precedes the first occurrence of a prime gap of 2*n where the product of the Least prime factor of each composite number in the gap is minimal
A096393	simtraf	1	new A000668()	v -> ZUtils.leastPrimitiveRoot(v)	Least primitive root of n-th Mersenne prime.
A096396	lambdan	1	n -> SU(1, n, i -> KS(n, i) == +1 ? Z.ONE : Z.ZERO)
A096397	lambdan	1	n -> SU(1, n, i -> KS(n, i) == -1 ? Z.ONE : Z.ZERO)
A096622	factexp	0	CR.GAMMA	Harmonic expansion (or factorial expansion) of the Euler-Mascheroni constant.
A096655	multraf	0	(self, n) -> self.s(1).*(self.a(n - 1)).+(self.s(0).*(self.a(n - 2)))	"1,1"	new A000045().skip(1), PREVIOUS	a(n) = F(n+1)*a(n-1) + F(n)*a(n-2), where F = A000045 (Fibonacci numbers), a(0)=1, a(1)=1.	nonn
A096656	multraf	0	(self, n) -> self.s(1).*(self.a(n - 1)).+(self.s(0).*(self.a(n - 2)))	"1,2"	new A000045().skip(2), PREVIOUS	a(n) = F(n+2)*a(n-1) + F(n+1)*a(n-2), where F = A000045 (Fibonacci numbers), a(0)=1, a(1)=2.	nonn
A096657	multrar	0	(self, n) -> self.a(n - 1).*(Z2(n)).+(self.a(n - 2).*(Z2(n - 1))	"1,3"	a(n) = (2^n)*a(n-1) + (2^(n-1))*a(n-2), a(0)=1, a(1)=3.
A096677	simtraf	0	new A060254()	v -> Puma.primePiZ(v)	A000040	Annnnnn indexed by Annnnnn
A096848	filter	1	new A096847()	PRIME
A096868	recpos	0	new A068189()	,1	Where records occur in Annnnnn
A097011	simtraf	1	new A000203()	(n, v) -> v.modZ(30)	a(n)=mod(Annn(n),(\d+))	30
A097360	#nyi	0		Number of partitions of n into parts not less than the Least prime factor of n
A097378	multraf	1	(self, n) -> self.s(0).*(self.s(1)).+(1)	""	new A007947(), new A007948()
A097462	tablamb	0	0	n -> new Integer[] { 0, 10 }	(n, k) -> ZV(n).*(k)	Multiplication table for numbers 0 through 10 read by rows.
A097471	diffs	0	new A076678()	First differences of A076678.
A097684	simtraf	1	new A056655()	v -> v.+(1)	for all n >= 0.
A097702	simtraf	0	new A063880()	v -> v.-(108)./(216)	a(n)= (Annnnnn(n)- (\d+))/(\d+)	
A097934	filter	1	new A000040()	v -> { final long m = v.mod(24); return m == 1 || m == 5 || m == 9 || m == 23; }	Primes p that divide 3^((p-1)/2) - 2^((p-1)/2).
A098035	lambdan	1	n -> SD(n, d -> MU(d + 1))	a(n) = Sum_{k|n} mu(k+1), where mu() is the Moebius function.
A098204	simtraf	1	new A007691()	(n, v) -> v.gcd(JF(v).phi())	a(n)=gcd(Annn(n),Annn(Annn(n)))	A007691,A000010,A007691
A098219	simtraf	1	new A051027()	(n, v) -> v./(n)	a(n) = floor(sigma(sigma(n))/n) = floor(A051027(n)/n).
A098235	ordsup	1	new A008966().skip(1)	2	0
A098238	ordsup	0	new A010051().skip(2)	3	0,0,0,0,0,0
A098365	filter	0	new A000404()	v -> v.mod(17) == 0
A098474	trilambn	0	0	0	(n, k) -> Z_1(k).*(Binomial.catalan(k)).*(PR(0, k - 1, j -> ZV(j - n)))./(FA(k))
A098622	lambdan	0	n -> SU(0, n, k -> S2(n, k).*(Functions.BELL.z(2*k)))	a(n)=Sum_{k=(\d+),n}Stirling(\d+)(n,k)*Bell((\d+)*k)	0,2,2
A098713	lambdan	0	n -> ZV(2*n+1).*(Z2(2*n+1)).-(1)
A098735	simtraf	1	new A098077()	(n, v) -> new Q(v, FA(n)).num()	a(n)=numerator(Annn(n)/n!)
A098809	lambdan	0	n -> Z2(n+23).-(23)
A098913	simtraf	0	new FilterSequence(0, new A008965(), (k, v) -> (k & 1) == 0)	(n, v) -> v.-(Z2(n))	a(n) = A008965(2*n) - 2^n.
A098961	filter	1	new A001481()	(k, v) -> k > 1 && v.mod(13) == 0
A098974	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(24))	Primes p such that q-p =(\d+), where q is the next prime after
A098991	filtpos	1	1	new A098035()	v -> v.isZero()
A099027	lambdan	0	n -> SU(0, n, k -> ZV((n - k) & (k ^ 0x7fffffff)))
A099033	lambdan	1	n -> SU(1, n, k -> Z_1(Integer.bitCount(3*k)))
A099034	lambdan	1	n -> SU(1, n, k -> Z_1(Integer.bitCount(5*k)))
A099137	tuptraf	0	(n, s) -> s[0].*(3).-(1).*(s[0])./(2)	"2"	PREVIOUS	n*(3*n-1)/2	Iterated pentagonal numbers starting with 2.
A099147	prepend	1	new TupleTransformSequence(1, (n, s) -> s[0].*(2).-(1).*(s[0]), "6", TupleTransformSequence.PREVIOUS)	1	n*(2*n-1)	Iterated hexagonal numbers, starting at 1. 1,6,66
A099153	prepend	0	new TupleTransformSequence(0, (n, s) -> s[0].*(5).-(3).*(s[0])./(2), "7", TupleTransformSequence.PREVIOUS)	1	n*(5*n-3)/2	Iterated heptagonal numbers (A000566), starting at 7.
A099179	tuptraf	1	(n, s) -> s[0].*(s[0].+(1)).*(s[0].+(2))./(6)	"2"	PREVIOUS	Iterated tetrahedral numbers. n*(n+1)*(n+2)/6
A099442	filter	0	new A000295()	SEMIPRIME	---- 2024-04-10 21:21:08
A099553	holos	0	[[0],[-2016840,2559466,-1205302,249704,-19208],[-439530,522977,-205016,26215,98],[31260,-84195,77973,-29493,3879],[0,324,-1566,1944,-486]]	1,2,10,42	0	0	diffeqtorec(0 = x^3*(2*x + 1)*(49*x - 18)*(196*x - 27)*diff(y(x),x$4) + x^2*(96040*x^3 - 27587*x^2 - 9297*x + 972)*diff(y(x),x$3) + (72030*x^4 - 36309*x^3 + 2010*x^2 - 864*x)*diff(y(x),x$2) - 6*(8*x + 3)*(49*x + 12)*diff(y(x),x$1) + (2352*x + 576)*y(x),y(x),a(n));
A099555	tablamb	0	0	n -> new Integer[] { 0, n == 0 ? 0 : 2*n }	(n, k) -> ZV(n - k/2).^(k)	Triangle, read by rows, where T(n,k) = (n-floor(k/2))^k for k = 0..2*n.
A099556	lambdan	0	n -> SU(0, 2*(n + 1), k -> ZV(n +  1 - k/2).^(k))  	a(n)=sum(k=0, 2*n, (n-k/2)^k)
A099563	simtraf	0	new A007623()	v -> ZV(v.toString().charAt(0) - '0')	The most significant digit in the factorial expansion of n (A007623). Proof: The algorithm that computes the factorial expansion of n, generates the successive digits by repeatedly dividing the previous quotient with successively larger divisors (the remainders give the digits), starting from n itself and divisor 2. As a corollary we find that A001563 indeed gives the positions of the records. - _Antti Karttunen_, Jan 01 2007.
A099634	#nyi	0		a(n) = gcd(P + p, P*p) where P is the largest and p the Least prime factor of n
A099659	tuptraf	0	(n, s) -> Puma.nextPrimeZ(s[0])	""	new A002279().skip(1)	a(n) is the least prime following A002279[n] repdigits.	base,nonn	0..17	nyi	_Labos Elemer_	a(n) is the least prime following A002279[n] repdigits.
A099665	tuptraf	1	(n, s) -> Puma.prevPrimeZ(s[0])	""	new A002279().skip(1)	a[n] is the largest prime before  A002279[n] repdigits.	base,nonn	1..18	nyi	_Labos Elemer_	a[n] is the largest prime before A002279[n] repdigits.
A099667	tuptraf	1	(n, s) -> Puma.prevPrimeZ(s[0])	""	new A002281().skip(1)	a(n) is the largest prime before  A002281(n) repdigits repeating 7.	base,nonn	1..1000	nyi	_Labos Elemer_	a(n) is the largest prime before A002281(n); repdigits repeating 7.
A099677	filter	0	new A032682()	PRIME	Primes arising in Annnnnn
A099726	simtraf	1	new A000040()	(n, p) -> SU(1, n, k -> p.modZ(k))
A099739	lambdan	1	n -> SU(1, n, k -> MU(k).*(FA(k)))
A099779	lambdan	2	n -> RU(0,n-1, j -> new Q(BI(n, j).*(BI(n,j + 1)), Z2(n + 1))).+(Q.HALF).ceiling()
A099811	multrar	1	(self, n) -> self.a(n - 1).xor(SU(1, n - 1, k -> self.a(k)))	"1,3"
A099812	lambdan	0	n -> ZV(JF(2*n).omega())	Number of distinct primes dividing 2n (i.e., omega(2n)).
A099960	ileave	0	new A005439()	new A110501()	An interleaving of the Genocchi numbers of the first and second kind, A110501 and A005439.
A100006	filter	1	new A001414()	(k, v) -> (k & 1) == 0	1
A100107	moetrafi	1	new A000032()	, 1	 Lucas numbers (A000032) 1,3,4,7,11,..
A100307	lambdan	0	n -> SU(0, n, k -> BI(n, k).and(Z.ONE).*(ZV(3).^(k)))	a(n) = Sum_{k=0..n} (binomial(n, k) mod 2)*3^k.
A100308	lambdan	0	n -> SU(0, n, k -> BI(n, k).and(Z.ONE).*(ZV(5).^(k)))	a(n) = Sum_{k=0..n} (binomial(n, k) mod 2)*5^k.
A100309	lambdan	0	n -> SU(0, n, k -> BI(n, k).and(Z.ONE).*(ZV(6).^(k)))	a(n) = Sum_{k=0..n} (binomial(n, k) mod 2)*6^k.
A100310	lambdan	0	n -> SU(0, n, k -> BI(n, k).and(Z.ONE).*(ZV(7).^(k)))	a(n) = Sum_{k=0..n} (binomial(n, k) mod 2)*7^k.
A100311	lambdan	0	n -> SU(0, n, k -> BI(n, k).and(Z.ONE).*(ZV(8).^(k)))	a(n) = Sum_{k=0..n} (binomial(n, k) mod 2)*8^k.
A100383	#nyi	0		Numbers k such that gpf(k) < gpf(k + 1) < ... < gpf(k + 9), where gpf(x) = A006530(x), the Largest prime factor of x. Numbers initiating an uphill gpf run of length 10
A100407	filnum	1	1	n -> ZV(n).^(n).+(2).IPP()		isprime(n^n+2)
A100512	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(2*n, 2*k))).num()	Numerator of Sum_{k=0..n} 1/C(2*n, 2*k).
A100513	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(2*n, 2*k))).den()	Denominator of Sum_{k=0..n} 1/C(2*n,2*k).
A100514	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(3*n, 3*k))).num()	Numerator of Sum_{k=0..n} 1/C(3*n, 3*k).
A100515	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(3*n, 3*k))).den()	Denominator of Sum_{k=0..n} 1/C(3*n, 3*k).
A100516	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(n, k).^(2))).num()	Numerator of Sum_{k=0..n} 1/binomial(n,k)^2.
A100517	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(n, k).^(2))).den()	Denominator of Sum_{k=0..n} 1/binomial(n,k)^2.
A100518	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(n, k).^(3))).num()	Numerator of Sum_{k=0..n} 1/binomial(n,k)^3.
A100519	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(n, k).^(3))).den()	Denominator of Sum_{k=0..n} 1/binomial(n,k)^3.
A100520	lambdan	0	(n) -> RU(0, 2*n, k -> new Q(Z_1(k), BI(2*n, k).^(2))).num()	Numerator of Sum_{k=0..2*n} (-1)^k/binomial(2*n, k)^2.
A100521	lambdan	0	(n) -> RU(0, 2*n, k -> new Q(Z_1(k), BI(2*n, k).^(2))).den()	Denominator of Sum_{k=0..2*n} (-1)^k/binomial(2*n, k)^2.
A100560	lambdan	0	(n) -> RU(0, n/2, k -> new Q(Z.ONE, BI(n, k))).num()	Numerator of Sum_{k=0..[n/2]} 1/binomial(n,k).
A100561	lambdan	0	(n) -> RU(0, n/2, k -> new Q(Z.ONE, BI(n, k))).den()	Denominator of Sum_{k=0..[n/2]} 1/binomial(n,k).
A100680	lambdan	0	n -> ZV(2).^(ZV(n).^(n))
A100731	lambdan	0	n -> ZV(3).^(FA(n))	(\d+)^(n!)  
A100755	simtraf	1	new A003590().skip(1)	v -> SPF(v)	the concatenation of terms in the n - th row of Pascal's Triangle
A100756	simtraf	1	new A003590().skip(1)	v -> LPF(v)	the concatenation of terms in the n - th row of Pascal's Triangle
A100829	filter	0	new A000404()	v -> v.mod(17) != 0
A100938	convprod	0	2	new A092684()
A100948	tablamb	2	2	n -> new Integer[] { 1, 3 }	(n, k) -> k == 1 ? (n <= 2 ? ZV(1) : FA(n)./(3)) : (k == 2 ? (n <= 2 ? ZV(1) : FA(n)./(2)) : (FA(n)))	Flatten[Table[{If[n < 3, 1, n!/3], If[n < 2, 1, n!/2], n!}, {n, 1, 10}]]					Irregular triangle with T(n,1) = floor(n!/3), T(n,2) = n!/2, T(n,3) = n!, read by rows.
A100953	moetraf	0	new A000837()	, 0		Number of partitions of n into relatively prime parts such that multiplicities of parts are also relatively prime.
A100993	simtraf	1	new A069104()	v -> v.+(1)	. - _T. D. Noe_, Dec 13 2004
A101041	multraf	1	(self, n) -> self.s(0).+(self.s(1)).+(1)	""	new A000720(), new A072000()
A101256	multraf	1	(self, n) -> self.s(0).-(self.s(1)).-(1)	""	new A000217().skip(1), new A034387()
A101322	multraf	1	(self, n) -> ZV(n).+(self.s(0)).-(self.s(1))	""	new A033676(),new A033677()	n + new A033676() - new A033677()
A101407	lambdan	0	n -> ZV(4).^(FA(n))
A101413	arrlamb0	0	(n, k) -> BI(2*n + 1, k).*(2*(n - k + 1))./(2*n - k + 2)
A101445	#nyi	0		Numbers n such that n is the largest prime factor of 1  +  prime(n)
A101471	filnum	1	0	n -> ZV(100*n + 11).IPP()		isprime(100*n+11)
A101472	filnum	1	0	n -> ZV(100*n + 33).IPP()		isprime(100*n+33)
A101550	#nyi	0		Lopsided (or biased) numbers: numbers n such that the largest prime factor of n is > 2*sqrt(n)
A101597	simtraf	0	new A006562()	v -> v.-(Puma.prevPrimeZ(v)).-(1)
A101627	lambdan	1	n -> RU(1, n, k -> new Q(1, (3*k - 1)*(3*k)*(3*k + 1))).*(24).num()
A101628	lambdan	1	n -> RU(1, n, k -> new Q(1, (3*k - 1)*(3*k)*(3*k + 1))).*(24).den()
A101650	simtraf	0	new A002487().skip(1)	v -> v.-(1).mod(ZV(3))	a(n)=mod(-1+A002487(n+1), 3).
A101682	holose	0	[[0],[-8,4],[-12,26,-18,4],[0,-2,3,-1]]	1,2,0	0	1
A101871	filter	0	new A000688()	(k, v) -> (k & 1) == 1
A101909	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A099802(2*n) - A099802(n). - _R. J. Mathar_, Oct 02 2019
A102048	#nyi	0		a(n) = 1  +  Sum_{k=1..floor(log(n - 1)/log(P))} floor((n - 1)/P^k) for n > 1, where P = A006530(n) is the Largest prime factor of n
A102050	#nyi	0		a(n) = 1 if 10^(2^n) + 1 is prime, otherwise Least prime factor of 10^(2^n) + 1
A102067	#nyi	0		Numbers k such that k does not divide P(k)! even though P(k)^2 is not a factor of k, where P(k) is the largest prime factor of k
A102108	filter	1	new A000607().skip(2)	(k, v) -> (k & 1) == 0	1
A102325	filter	1	new A000040()	p -> JF(p.^(3).+(1)).largestPrimeFactor().compareTo(p) < 0	Primes p such that the largest prime divisor of p^3 + 1 is less than p.
A102326	filter	1	new A000040()	p -> JF(p.^(4).+(1)).largestPrimeFactor().compareTo(p) < 0	Primes p such that the largest prime divisor of p^4+1 is less than p.	
A102327	#nyi	0		Primes p such that the largest prime factor of p^5  +  1 is less than p
A102328	filter	1	new A000040()	p -> JF(p.^(6).+(1)).largestPrimeFactor().compareTo(p) < 0	Primes p such that the largest prime divisor of 1+p^6 is less than p.	
A102339	filnum	1	0	n -> ZV(1000).*(n).+(333).IPP()		isprime(1000*n+333)
A102343	filnum	1	0	n -> ZV(n).*(1000).+(777).IPP()		isprime(n*10^3+777)
A102350	lambdan	1	n -> Puma.primeZ(n*144)	Prime((\d+)*n)
A102426	tablamb	0	0	n -> new Integer[] { 0, (n == 0) ? 0 : (n - 1)/2 }	(n, k) -> (n == 0) ? Z.ZERO : BI(n/2 + k, (n - 1)/2 - k)	T(n, k) = binomial(floor(n/2)+k, floor((n-1)/2-k) 
A102468	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A061354()	new A002034()	a(n)=Annn(Annn(n))
A102478	simtraf	1	new A068700()	v -> v./(2)	. - _Reinhard Zumkeller_, Jun 27 2015
A102547	tablamb	0	0	n -> new Integer[] { 0, n/3 }	(n, k) -> BI(n - 2*k, k)						Triangle read by rows, formed from antidiagonals of the antidiagonals (A011973) of Pascals triangle (A007318).
A102550	lambdan	0	n -> SP(n, p -> BI(n, p).and(Z.ONE))	a(n) = Sum_{p|n} (binomial(n,p) mod 2), where p is a prime - _Ridouane Oudra_, May 03 2019
A102611	filnum	1	0	n -> ZV(100*n + 77).IPP()		isprime(100*n+77)
A102624	filnum	1	0	n -> ZV(100*n + 23).IPP()		isprime(100*n+23)
A102847	filter	0	new A065653()	(k, v) -> (k & 1) == 1
A102861	filamb	0	1	v -> ZUtils.digitSum(new Z(v.toString(5))) == 4	 Numbers which in base 5 have digit-sum 4.
A102926	#nyi	0		a(n) = least prime factor of b(n)^2 - 1, where b(n) = product a(k), 0<k<n, = â¬102927
A103448	lambdan	0	n -> SU(0, n, k -> ZV(JF(BI(n, k)).mobius()))
A103487	tuptraf	0	(n, s) -> s[1].+(s[2]).+(s[3]).abs()	"7,11,13,17"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a(0)=7; a(1)=11; a(2)=13; a(3)=17; a(n) = |a(n-2)+a(n-3)-a(n-4)|
A103564	filter	1	new A000040()	p -> p.^(2).*( 3).+(2).IPP()	[(\d+)#^(\d+)+(\d+)]&]	600, 3,2,2
A103601	filnum	0	0	n -> new Z("10" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A103602	filnum	0	0	n -> new Z("10100" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A103629	filnum	0	0	n -> new Z("2357" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A103630	filnum	0	0	n -> new Z("235" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A103673	lambdan	0	n -> FA(n).toString(2).indexOf("1111000") >= 0 ? Z.ONE : Z.ZERO	If in binary representation n! contains 5! then 1 else 0.	nonn,base	0..104	nyi
A103674	lambdan	0	n -> FA(n).toString(2).indexOf("1011010000") >= 0 ? Z.ONE : Z.ZERO	If in binary representation n! contains 6! then 1 else 0.	nonn,base	0..104	nyi
A103675	lambdan	0	n -> FA(n).toString(2).indexOf("1001110110000") >= 0 ? Z.ONE : Z.ZERO	a(n) = 1 if the binary representation of n! contains 7! (bit string "1001110110000"), otherwise a(n) = 0.	base,nonn	0..10080	nyi
A103676	filnum	1	1	k -> FA(k).toString(2).indexOf("1111000") >= 0	m! contains 5!.	nonn,base	1..70
A103677	filnum	1	0	k -> FA(k).toString(2).indexOf("1111000") < 0	m! doesnot contain 5!.	nonn,base	1..30
A103678	filnum	1	1	k -> FA(k).toString(2).indexOf("1011010000") >= 0	m! contains 6!.	nonn,base	1..10000
A103679	filnum	1	0	k -> FA(k).toString(2).indexOf("1011010000") < 0	m! doesnot contain 6!.	nonn,base	1..72
A103680	filnum	1	1	k -> FA(k).toString(2).indexOf("1001110110000") >= 0	m! contains 7!.	base,nonn	1..52
A103681	filnum	1	0	k -> FA(k).toString(2).indexOf("1001110110000") < 0	m! doesnot contain 7!.	base,nonn	1..72
A103758	filnum	0	0	n -> new Z("100" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A103806	prepend	1	new FilterSequence(0, new A000040(), p -> { final Z pp = p.*( 2); return pp.+(33).IPP() && pp.-(33).IPP(); })	2,5,7,13		400, 2,33,33
A103839	simtraf	0	new A051239()	(n, v) -> (n == 1) ? Z.ONE : v.*(2)	For n>1, a(n) = 2 * A051239(n).
A103853	filnum	0	0	n -> new Z("1000" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A103855	multraf	1	(self, n) -> self.s(0).-(self.s(1)).+(1)	""	new A039716(), new A002110().skip(1)
A103856	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A103855()	new A020639()	a(n)=Annn(Annn(n))
A103857	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A103855()	new A006530()	a(n)=Annn(Annn(n))
A103858	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A103855()	new A001221()	a(n)=Annn(Annn(n))
A103859	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A103855()	new A000005()	a(n)=Annn(Annn(n))
A103861	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A103855()	new A000010()	a(n)=Annn(Annn(n))
A103862	filnum	0	0	n -> new Z("10000" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A104080	simtraf	1	new A000290().skip(1)	v -> Puma.nextPrimeZ(v)	2	Smallest prime >=(\d+)^n
A104081	simtraf	1	new A000578().skip(1)	v -> Puma.nextPrimeZ(v)	3	Smallest prime >=(\d+)^n
A104082	simtraf	1	new A000583().skip(1)	v -> Puma.nextPrimeZ(v)	4	Smallest prime >=(\d+)^n
A104083	simtraf	1	new A000584().skip(1)	v -> Puma.nextPrimeZ(v)	5	Smallest prime >=(\d+)^n
A104084	simtraf	1	new A001015().skip(1)	v -> Puma.nextPrimeZ(v)	7	Smallest prime >=(\d+)^n
A104087	simtraf	1	new A008455().skip(1)	v -> Puma.nextPrimeZ(v)	11	Smallest prime >=(\d+)^n
A104106	simtraf	1	new A089242()	v -> v.modZ(2)	a(n)=Annn(n)mod(\d+)	2	A089242
A104132	simtraf	1	new A006450()	v -> JF(v.^(v).-(1)).largestPrimeFactor()	pip(n)^pip(n) - 1 where pip(n) is the n - th prime - indexed prime
A104149	simtraf	1	new A065900()	v -> v.-(2)	. - _R. J. Mathar_, Aug 19 2010
A104163	filter	1	new A000040()	p -> { final Z pp = p.*( 2).+(1); return pp.mod( 3) == 0 && pp./( 3).IPP(); }	[((\d+)#+(\d+))/(\d+)]&]	400, 2,1,3
A104235	filtpos	0	1	new A102370()	(n, v) -> v.equals(ZV(n))	Numbers n such that Annnnnn(n)= n
A104254	lambdan	1	n -> ZV(n).^(n).-(Z_1(n).*(FA(n+1)))
A104435	lingf	1	0,1,2,-1	1,-1	0
A104481	filter	0	new A104477()	(n, v) -> (n & 1) == 1		Bisection of Annnnnn
A104635	simtraf	1	new A002145()	v -> v./(2)	a(n)=floor(Annn(n)/(\d+))	2
A104803	multrar	1	(self, n) -> CV(self.a(n - 1).^(2).+(self.a(n - 2).^(2))).sqrt().floor()	"1,3"	a(n) = floor(sqrt(a(n-1)^2 + a(n-2)^2)), a(1)=1, a(2)=3.
A104805	multrar	1	(self, n) -> CV(self.a(n - 1).^(2).+(self.a(n - 2).^(2))).sqrt().ceil()	"1,3"	a(n) = ceil (sqrt(a(n-1)^2 + a(n-2)^2)), a(1)=1, a(2)=3.
A104863	multrar	1	(self, n) -> CV(self.a(n - 1).^(2).+(self.a(n - 2).^(2))).sqrt().floor()	"10,30"	a(n) = floor(sqrt(a(n-1)^2 + a(n-2)^2)), a(1)=10, a(2)=30.
A104908	multrar	1	(self, n) -> CV(self.a(n - 1).^(2).+(self.a(n - 2).^(2))).sqrt().floor()	"100,300"	a(n) = floor(sqrt(a(n-1)^2 + a(n-2)^2)), a(1)=100, a(2)=300.
A104976	rowsum	0	new A104975()
A104978	trilamb0	0	(n, k) -> BI(2*n + k, n + 2*k).*(BI(n + 2*k, k))./(n + k + 1)	binomial(2*n+k, n+2*k)*binomial(n+2*k, k)/(n+k+1)
A105080	lambdan	0	n -> Z.valueOf(Jaguar.factor(ZV(10000).^(n).-(3)).omega())	10000,3	Number of distinct prime divisors of (\d+)^n -(\d+)	m	i 
A105221	multraf	1	(self, n) -> self.s(0).-((self.s(1)).*(n))	""	new A008472(), new A010051()	a(n) = A008472(n) - A010051(n) * n
A105224	lambdan	0	n -> ZV(2*n).sqrt().-(ZV(n - 1).sqrt())	a(n) = A000196(2*n) - A000196(n-1).
A105522	trinvn	0	new A105438()	Inverse of number triangle
A105651	#nyi	0		Numbers n such that n  +  Least prime factor of n  +  largest prime factor of n = next prime after n
A105734	dead	1	dead								Duplicate of A076839.
A105861	lambdan	0	n -> RU(0, n, k -> new Q(BI(n, k), ZV(n).gcd(ZV(k)))).*(ZV(n))./(Z.TWO).num()
A105862	lambdan	0	n -> (n < 1)  ? ZV(0) : RD(n, d -> new Q(BI(n, d), ZV(n).gcd(d))).*(n).num()
A105961	filter	1	new A000040()	p -> p.*(20).+( 3).IPP()	[(\d+)#+(\d+)]&]		120,20, 3
A106015	filter	1	new A000040()	p -> { final Z pp = p.*( 4); return pp.+( 3).IPP() && pp.-( 3).IPP(); }		600, 4, 3, 3
A106019	filter	1	new A000040()	p -> { final Z pp = p.*(26); return pp.+( 3).IPP() && pp.-( 3).IPP(); }		800,26, 3, 3
A106057	filter	1	new A000040()	p -> p.*(1).+( 4).IPP() && p.*( 4).+(1).IPP()	Primes p such that 1*p +  4 and  4*p + 1 are primes.	nonn	1..48	nyi	_Zak Seidov_
A106059	filter	1	new A000040()	p -> p.*(1).+( 6).IPP() && p.*( 6).+(1).IPP()	Primes p such that 1*p +  6 and  6*p + 1 are primes.	nonn	1..10000	nyi	_Zak Seidov_
A106060	filter	1	new A000040()	p -> p.*(1).+( 8).IPP() && p.*( 8).+(1).IPP()	Primes p such that 1*p +  8 and  8*p + 1 are primes.	nonn	1..46	nyi	_Zak Seidov_
A106061	filter	1	new A000040()	p -> p.*(1).+(10).IPP() && p.*(10).+(1).IPP()	Primes p such that 1*p + 10 and 10*p + 1 are primes.	nonn	1..1000	nyi	_Zak Seidov_
A106062	filter	1	new A000040()	p -> p.*(1).+(12).IPP() && p.*(12).+(1).IPP()	Primes p such that 1*p + 12 and 12*p + 1 are primes.	nonn	1..48	nyi	_Zak Seidov_
A106063	filter	1	new A000040()	p -> p.*(1).+(14).IPP() && p.*(14).+(1).IPP()	Primes p such that 1*p + 14 and 14*p + 1 are primes.	nonn	1..49	nyi	_Zak Seidov_
A106064	filter	1	new A000040()	p -> p.*(1).+(16).IPP() && p.*(16).+(1).IPP()	Primes p such that 1*p + 16 and 16*p + 1 are primes.	nonn	1..46	nyi	_Zak Seidov_
A106065	filter	1	new A000040()	p -> p.*(1).+(18).IPP() && p.*(18).+(1).IPP()	Primes p such that 1*p + 18 and 18*p + 1 are primes.	nonn	1..47	nyi	_Zak Seidov_
A106066	filter	1	new A000040()	p -> p.*(1).+(20).IPP() && p.*(20).+(1).IPP()	Primes p such that 1*p + 20 and 20*p + 1 are primes.	nonn	1..48	nyi	_Zak Seidov_
A106067	filter	1	new A000040()	p -> p.*(3).+( 2).IPP() && p.*( 2).+(3).IPP()	Primes p such that 3*p +  2 and  2*p + 3 are primes.	nonn	1..1000	nyi	_Zak Seidov_
A106068	filter	1	new A000040()	p -> p.*(3).+( 4).IPP() && p.*( 4).+(3).IPP()	Primes p such that 3*p +  4 and  4*p + 3 are primes.	nonn	1..534	nyi	_Zak Seidov_
A106069	filter	1	new A000040()	p -> p.*(3).+( 8).IPP() && p.*( 8).+(3).IPP()	Primes p such that 3*p +  8 and  8*p + 3 are primes.	nonn	1..10000	nyi	_Zak Seidov_
A106070	filter	1	new A000040()	p -> p.*(3).+(10).IPP() && p.*(10).+(3).IPP()	Primes p such that 3*p + 10 and 10*p + 3 are primes.	nonn	1..10000	nyi	_Zak Seidov_
A106071	filter	1	new A000040()	p -> p.*(3).+(14).IPP() && p.*(14).+(3).IPP()	Primes p such that 3*p + 14 and 14*p + 3 are primes.	nonn	1..10000	nyi	_Zak Seidov_
A106072	filter	1	new A000040()	p -> p.*(3).+(16).IPP() && p.*(16).+(3).IPP()	Primes p such that 3*p + 16 and 16*p + 3 are primes.	nonn	1..47	nyi	_Zak Seidov_
A106073	filter	1	new A000040()	p -> p.*(3).+(20).IPP() && p.*(20).+(3).IPP()	Primes p such that 3*p + 20 and 20*p + 3 are primes.	nonn	1..50	nyi	_Zak Seidov_
A106074	filter	1	new A000040()	p -> p.*(3).+(22).IPP() && p.*(22).+(3).IPP()	Primes p such that 3*p + 22 and 22*p + 3 are primes.	nonn	1..50	nyi	_Zak Seidov_
A106075	filter	1	new A000040()	p -> p.*(3).+(26).IPP() && p.*(26).+(3).IPP()	Primes p such that 3*p + 26 and 26*p + 3 are primes.	nonn	1..46	nyi	_Zak Seidov_
A106076	filter	1	new A000040()	p -> p.*(3).+(28).IPP() && p.*(28).+(3).IPP()	Primes p such that 3*p + 28 and 28*p + 3 are primes.	nonn	1..50	nyi	_Zak Seidov_
A106077	filter	1	new A000040()	p -> p.*(5).+( 2).IPP() && p.*( 2).+(5).IPP()	Primes p such that 5*p +  2 and  2*p + 5 are primes.	nonn	1..50	nyi	_Zak Seidov_
A106078	filter	1	new A000040()	p -> p.*(5).+( 4).IPP() && p.*( 4).+(5).IPP()	Primes p such that 5*p +  4 and  4*p + 5 are primes.	nonn	1..47	nyi	_Zak Seidov_
A106079	filter	1	new A000040()	p -> p.*(5).+( 6).IPP() && p.*( 6).+(5).IPP()	Primes p such that 5*p +  6 and  6*p + 5 are primes.	nonn,easy	1..10000	nyi	_Zak Seidov_
A106080	filter	1	new A000040()	p -> p.*(5).+( 8).IPP() && p.*( 8).+(5).IPP()	Primes p such that 5*p +  8 and  8*p + 5 are primes.	nonn	1..47	nyi	_Zak Seidov_
A106081	filter	1	new A000040()	p -> p.*(5).+(12).IPP() && p.*(12).+(5).IPP()	Primes p such that 5*p + 12 and 12*p + 5 are both primes.	nonn	1..10000	nyi	_Zak Seidov_
A106082	filter	1	new A000040()	p -> p.*(5).+(14).IPP() && p.*(14).+(5).IPP()	Primes p such that 5*p + 14 and 14*p + 5 are primes.	nonn	1..48	nyi	_Zak Seidov_
A106083	filter	1	new A000040()	p -> p.*(5).+(16).IPP() && p.*(16).+(5).IPP()	Primes p such that 5*p + 16 and 16*p + 5 are primes.	nonn	1..48	nyi	_Zak Seidov_
A106084	filter	1	new A000040()	p -> p.*(5).+(18).IPP() && p.*(18).+(5).IPP()	Primes p such that 5*p + 18 and 18*p + 5 are primes.	nonn	1..51	nyi	_Zak Seidov_
A106085	filter	1	new A000040()	p -> p.*(5).+(22).IPP() && p.*(22).+(5).IPP()	Primes p such that 5*p + 22 and 22*p + 5 are primes.	nonn	1..47	nyi	_Zak Seidov_
A106086	filter	1	new A000040()	p -> p.*(7).+( 2).IPP() && p.*( 2).+(7).IPP()	Primes p such that 7*p +  2 and  2*p + 7 are primes.	nonn	1..10000	nyi	_Zak Seidov_
A106087	filter	1	new A000040()	p -> p.*(7).+( 4).IPP() && p.*( 4).+(7).IPP()	Primes p such that 7*p +  4 and  4*p + 7 are primes.	nonn	1..44	nyi	_Zak Seidov_
A106088	filter	1	new A000040()	p -> p.*(7).+( 6).IPP() && p.*( 6).+(7).IPP()	Primes p such that 7*p +  6 and  6*p + 7 are primes.	nonn	1..48	nyi	_Zak Seidov_
A106089	filter	1	new A000040()	p -> p.*(7).+( 8).IPP() && p.*( 8).+(7).IPP()	Primes p such that 7*p +  8 and  8*p + 7 are primes.	nonn	1..48	nyi	_Zak Seidov_
A106091	filter	1	new A000040()	p -> p.*(12).+( 7).IPP() && p.*(7).+(12).IPP()	[(\d+)#+(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	220,12, 7,7,12
A106093	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) == 9	Primes with maximal digit = 9.	nonn,base	1..10000	nyi	_Zak Seidov_ and _Robert G. Wilson v_
A106094	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) == 8	Primes with maximal digit = 8.	nonn,base	1..10000	nyi	_Zak Seidov_
A106095	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) == 7	Primes with maximal digit = 7.	nonn,base	1..10000	nyi	_Zak Seidov_
A106096	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) == 6	Primes with maximal digit   6.	nonn,base,easy	1..45	nyi	_Zak Seidov_
A106097	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) == 5	Primes with maximal digit = 5.	nonn,base	1..10000	nyi	_Zak Seidov_
A106098	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) == 4	Primes with maximal digit = 4.	nonn,base	1..10000	nyi	_Zak Seidov_
A106099	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) == 3	Primes with maximal digit = 3.	nonn,base	1..10000	nyi	_Zak Seidov_
A106100	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) == 2	Primes with maximal digit = 2.	nonn,base	1..10000	nyi	_Zak Seidov_
A106101	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) == 1	Primes with minimal digit = 1.	nonn,base	1..53	nyi	_Zak Seidov_
A106102	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) == 2	Primes with minimal digit   2.	nonn,base,easy	1..46	nyi	_Zak Seidov_
A106103	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) == 3	Primes with minimal digit = 3.	nonn,base	1..38	nyi	_Zak Seidov_
A106104	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) == 4	Primes with minimal digit = 4.	nonn,base	1..36	nyi	_Zak Seidov_
A106105	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) == 5	Primes with minimal digit = 5.	nonn,base	1..44	nyi	_Zak Seidov_
A106106	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) == 6	Primes with minimal digit = 6.	nonn,base	1..40	nyi	_Zak Seidov_
A106107	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) == 7	Primes with minimal digit = 7.	nonn,base	1..10000	nyi	_Zak Seidov_
A106108	tuptraf	1	(n, s) -> s[0].+(ZV(n).gcd(s[0]))	"7"	PREVIOUS	Rowlands prime-generating sequence: a(1) = 7; for n > 1, a(n) = a(n-1) + gcd(n, a(n-1)).	nonn	1..25000	nyi	_N. J. A. Sloane_
A106110	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) > 6	Primes with minimal digit > 6.	nonn,base	1..37	nyi	_Zak Seidov_
A106111	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) > 5	Primes with minimal digit > 5.	nonn,base	1..46	nyi	_Zak Seidov_
A106112	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) > 4	Primes with minimal digit > 4.	nonn,base	1..49	nyi	_Zak Seidov_
A106114	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) > 3	Primes with minimal digit > 3.	nonn,base	1..10000	nyi	_Zak Seidov_
A106115	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) > 2	Primes with minimal digit > 2.	nonn,base	1..56	nyi	_Zak Seidov_
A106116	filter	1	new A000040()	p -> ZUtils.sortDigitsDescending(p).mod(10) > 1	Primes with minimal digit > 1.	nonn,base	1..50000	nyi	_Zak Seidov_
A106118	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) > 1	Primes with maximal digit > 1.	nonn,base	1..58	nyi	_Zak Seidov_
A106119	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) > 2	Primes with maximal digit > 2.	nonn,base	1..58	nyi	_Zak Seidov_
A106120	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) > 3	Primes with maximal digit > 3.	nonn,base	1..57	nyi	_Zak Seidov_
A106121	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) > 4	Primes with maximal digit > 4.	nonn,base	1..56	nyi	_Zak Seidov_
A106122	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) > 5	Primes with maximal digit > 5.	nonn,base	1..55	nyi	_Zak Seidov_
A106123	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) > 6	Primes with maximal digit > 6.	nonn,base	1..55	nyi	_Zak Seidov_
A106124	filter	1	new A000040()	p -> ZUtils.sortDigitsAscending(p).mod(10) > 7	Primes with maximal digit > 7.	nonn,base	1..37	nyi	_Zak Seidov_
A106125	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  0	Numbers k such that k divides the k-th semiprime.	nonn,hard,more	1..17	nyi	_Shyam Sunder Gupta_
A106126	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  1	k-th semiprime ==  1 (mod k).	hard,nonn	1..44	nyi	_Shyam Sunder Gupta_
A106127	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  2	k-th semiprime ==  2 (mod k).	hard,nonn	1..33	nyi	_Shyam Sunder Gupta_
A106128	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  3	k-th semiprime ==  3 (mod k).	hard,nonn	1..47	nyi	_Shyam Sunder Gupta_
A106129	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  4	k-th semiprime ==  4 (mod k).	hard,more,nonn	1..27	nyi	_Shyam Sunder Gupta_
A106130	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  5	k-th semiprime ==  5 (mod k).	nonn,hard	1..31	nyi	_Shyam Sunder Gupta_
A106131	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  6	k-th semiprime ==  6 (mod k).	hard,nonn	1..41	nyi	_Shyam Sunder Gupta_
A106132	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  7	k-th semiprime ==  7 (mod k).	hard,nonn	1..29	nyi	_Shyam Sunder Gupta_
A106133	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  8	k-th semiprime ==  8 (mod k).	nonn,hard,more	1..20	unkn	_Shyam Sunder Gupta_
A106134	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) ==  9	k-th semiprime ==  9 (mod k).	nonn,hard	1..42	nyi	_Shyam Sunder Gupta_
A106135	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) == 10	k-th semiprime == 10 (mod k).	nonn,hard,more	1..28	nyi	_Shyam Sunder Gupta_
A106136	filtpos	0	1	new A001358()	(k, v) -> v.mod(k) == 11	k-th semiprime == 11 (mod k).	nonn,hard	1..38	nyi	_Shyam Sunder Gupta_
A106137	simtraf	0	new A001358()	(n, v) -> v.modZ(n)	n-th semiprime mod n.	nonn	1..1000	nyi	_Shyam Sunder Gupta_
A106138	simtraf	0	new A001358()	v -> v.modZ(2)	Semiprimes (mod 2).	nonn	1..105	nyi	_Shyam Sunder Gupta_
A106139	simtraf	0	new A001358()	v -> v.modZ(3)	Semiprimes (mod 3).	nonn	1..105	nyi	_Shyam Sunder Gupta_
A106140	simtraf	0	new A001358()	v -> v.modZ(4)	Semiprimes (mod 4).	nonn	1..105	nyi	_Shyam Sunder Gupta_
A106141	simtraf	0	new A001358()	v -> v.modZ(5)	Semiprimes (mod 5).	nonn	1..105	nyi	_Shyam Sunder Gupta_
A106142	simtraf	0	new A001358()	v -> v.modZ(6)	Semiprimes (mod 6).	nonn	1..105	nyi	_Shyam Sunder Gupta_
A106143	simtraf	0	new A001358()	v -> v.modZ(7)	Semiprimes (mod 7).	nonn	1..105	nyi	_Shyam Sunder Gupta_
A106144	simtraf	0	new A001358()	v -> v.modZ(8)	Semiprimes (mod 8).	nonn	1..105	nyi	_Shyam Sunder Gupta_
A106145	simtraf	0	new A001358()	v -> v.modZ(9)	Semiprimes (mod 9).	nonn	1..105	nyi	_Shyam Sunder Gupta_
A106146	simtraf	0	new A001358()	v -> v.modZ(10)	Semiprimes (mod 10).	nonn	1..10000	nyi	_Shyam Sunder Gupta_
A106189	holos	0	[[0],[-4,8],[0,-2],[2,-4],[0,1]]	1	0	0
A106319	union2	1	new A106318()	new A106321()	Cf. A106320, A106322. Non-sorted union of A106318 and A106321.		Values a of a Bhaskara pair (a,b), a<=b, sorted by value of b. A Bhaskara pair (a,b) is such that a^2 + b^2 = X^3 and a^3 + b^3 = Y^2.
A106320	union2	1	new A106318()	new A106322()
A106365	lambdan	1	n -> n == 1 ? ZV(3) : SD(n, d -> PHI(n/d).*(Z_1(d).*(2).+(Z2(d))))./(n)	a(n) = if(n==1, 3, sumdiv(n, d, eulerphi(n/d)*(2*(-1)^d + 2^d))/n)
A106366	lambdan	1	n -> n == 1 ? ZV(4) : SD(n, d -> PHI(n/d).*(Z_1(d).*(3).+(ZV(3).^(d))))./(n)
A106367	lambdan	1	n -> n == 1 ? ZV(5) : SD(n, d -> PHI(n/d).*(Z_1(d).*(4).+(ZV(4).^(d))))./(n)
A106368	lambdan	1	n -> n == 1 ? ZV(6) : SD(n, d -> PHI(n/d).*(Z_1(d).*(5).+(ZV(5).^(d))))./(n)
A106464	lambdan	0	n -> SU(0, n/2, k -> ZV(n - 2*k + 1).gcd(ZV(k + 1)))
A106484	tuptraf	0	(n, s) -> s[0].*(s[0].^(2).*(2).-(1))	"2"	PREVIOUS	Iterated Stella Octangula numbers A007588. a(n+1) = a(n)*(2*a(n)^2 - 1)
A106519	lambdan	1	n -> (BI(2*n - 2, n - 1).*(2).-(SD(n, d -> BI(2*n/d, n/d).*(MU(d)))./(2)))./(n)
A106564	filter	1	new A269345()	SQUARE	; see also the Mathematica code. - _Waldemar
A106836	diffs	0	new A060833()	First differences of A060833 and (from a(2) onward) also of A091067 and â¬
A106844	simtraf	1	new A093641().skip(2)	v -> Z.valueOf(ZUtils.valuation(v, Z.TWO))	Exponent of 2 in A093641(n).
A107074	filnum	0	0	n -> new Z("53" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A107251	lambdan	0	n -> PR(n + 2, 2*n, k -> FA(k))./(PR(2, n, k -> FA(k)))	a(n) = (n+2)!*(n+3)!*...*(2n)!/(2!*3!*...*n!) = D000178(2n)/(D000178(n)*D000178(n+1)) = D079478(n)/D000142(n+1).
A107254	lambdan	0	n -> PR(n, 2*n - 1, k -> FA(k))./(PR(0, n - 1, k -> FA(k)))	a(n) = n!*(n+1)!*(n+2)!*...*(2n-1)!/(0!*1!*2!*3!*...*(n-1)!) = D000178(2n-1)/D000178(n-1)^2 = D079478(n)/A000984(n) = D079478(n-1)*A009445(n-1) = A107252(n)*D000142(n) = A088020(n)/A039622(n).
A107289	simtraf	1	new A065408()	v -> v.sqrt()	a(n)=sqrt(Annn(n))		A065408
A107306	filnum	1	0	n -> ZV(( 17*n - 19)).IPP()		isprime((17*n-19))
A107308	filnum	1	0	n -> ZV(( 29*n - 31)).IPP()		isprime((29*n-31))
A107323	tuptraf	0	(n, s) -> s[0].+(s[1].*(2))	""	new A000040().skip(2), new A173950().skip(2)	a(n) = A000040(n) + 2*A173950(n). - _R. J. Mathar_, Dec 17 2017
A107325	simtraf	0	new A063655()	v -> new Q(v, Z.TWO).ceiling()	,2	a(n)= ceiling(Annnnnn(n)/(\d+))   
A107349	multraf	1	(self, n) -> Puma.primePiZ(self.s(0))	""	new A106807()	pi(new A106807())					Indices of primes with digit sum = 67.
A107365	simtraf	1	new A030284()	v -> Puma.primePiZ(v)	A030284
A107482	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A007539()	new A001222()	a(n)=Annn(Annn(n))		D001222,A007539
A107636	multraf	1	(self, n) -> Puma.primeZ(self.s(0)).-(self.s(1))	""	new A064403(),new A064403()	prime(new A064403()) - new A064403()
A107637	multraf	1	(self, n) -> Puma.primeZ(self.s(0)).+(self.s(1))	""	new A064403(),new A064403()	prime(new A064403()) + new A064403()
A107644	filnum	0	0	n -> new Z("1113" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A107645	filnum	0	0	n -> new Z("1311" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A107744	spf	1	6*n + 1
A107745	spf	1	6*n - 1
A107746	#nyi	0		Numbers n such that the least prime factor of 6*n + 1 > the least prime factor of 6*n - 1, â¬107744(n) > â¬107745(n)
A107747	#nyi	0		Numbers n such that the least prime factor of 6*n + 1 < the least prime factor of 6*n - 1, â¬107744(n) < â¬107745(n)
A107799	multraf	1	(self, n) -> Puma.primePiZ(self.s(0))	""	new A030284()	pi(new A030284())
A108031	moetrafi	1	new A000032()	, 0	).
A108101	filnum	0	0	n -> new Z("1131" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A108106	filnum	0	0	n -> new Z("1119" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A108107	filnum	0	0	n -> new Z("1123" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A108114	filnum	0	0	n -> new Z("3731" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A108144	#nyi	0		Numbers n such that (n - 1)/P(n - 1) is a power of two > 1, where P(n) is the largest prime factor of n
A108288	lambdan	0	n -> BI(ZV(n+1).^(2).-(1), ZV(n*(n+1)))
A108289	lambdan	0	n -> SU(0, n, k -> BI(n + (n - k)*k,(n - k)*k + k))
A108429	tablamb	0	0	n -> new Integer[] { 0, 2*n }	(n, k) -> (n == 0) ? Z.ZERO : BI(n, 2*n - k).*(BI(n + k, n - 1))./(n)	T(n,k) = binomial(n,2n-k)*binomial(n+k, n-1)/n.
A108504	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A025487()	new A038548()	a(n)=Annn(Annn(n))		D038548,A025487
A108604	simtraf	1	new A006512()	v -> v.^(2)	.
A108605	simtraf	0	new A001359()	v -> v.*(2)	a(n) = 2 * A001359(n).
A108767	trilambn	1	1	1	(n, k) -> BI(n, k).*(BI(2*n, k - 1))./(n)	T(n, k) = R(n,k,3) with R(n,k,m)= binomial(n,k)*binomial(m*n,k-1)/n, 1<=k<=n.
A108873	filtpos	1	0	new A007089()	SEMIPRIME	Numbers n whose base 3 representations, interpreted as base 10 integers, are semiprimes.
A108954	lambdan	0	n -> Puma.primePiZ(2*n).-(Puma.primePiZ(n))	a(n) = A000720(2*n) - A000720(n).
A109184	filter	1	new A002385()	v -> Functions.DIGIT_SUM.l(v)== 20	Palindromic primes with digit sum 20.
A109185	filter	1	new A002385()	v -> Functions.DIGIT_SUM.l(v)== 40	Palindromic primes with digit sum = 40.
A109207	filter	0	new A002385()	v -> Functions.DIGIT_SUM.l(v) == 50	 Palindromic primes with digit sum = 50.
A109273	#nyi	0		Numbers k such that k + 1 is the Least prime factor of k^3  +  3^k
A109304	filtpos	1	1	new A000040()	(n, v) -> v.toString().indexOf(ZUtils.reverse(ZV(n)).toString()) >= 0	Numbers n such that string reversal of n is a substring of n-th prime.
A109339	filter	0	new A011762()	(k, v) -> (k & 1) == 0	1
A109369	filnum	0	0	n -> new Z("33" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A109370	filnum	0	0	n -> new Z("22"+String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A109373	simtraf	1	new A070552()	v -> v.+(1)	.
A109395	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).den()	""	new A173557(), new A007947()
A109446	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, k) -> BI(n, 2*k + (n & 1))	
A109652	multraf	1	(self, n) -> Puma.primeZ(self.s(0))	""	new A000201()	prime(new A000201())
A109779	lambdan	1	n -> RU(1, n, k -> RU(1, k, j -> new Q(1, j)).*(FA(n+1-k)) ).*(FA(n)).num()
A109780	lambdan	1	n -> RU(1, n, k -> RU(1, k, j -> new Q(1, j)).*(FA(n-k))   ).*(FA(n)).num()
A109789	lambdan	1	n -> SU(1, n, k -> Functions.PRIME.z(k*k*k))
A109791	dirtrali	0	new A000040()	new A000583().skip(1)	"null"	2	A000040(A000583(n)) for n > 0
A109830	filter	1	new A002385()	v -> { final Z nd = ZV(v.toString().length()); final Z sd = Functions.DIGIT_SUM.z(v); return ZUtils.isPalindrome(nd, 10) && ZUtils.isPalindrome(sd, 10) && nd.IPP() && sd.IPP(); }	Palindromic primes with both the number of digits and the digit sum also palindromic primes.
A109840	simtraf	1	new A038395().skip(1)	v -> LPF(v)	the reverse concatenation of the first n consecutive odd numbers
A109972	lambdan	0	n -> (n==0) ? ZV(1) : RU(0, n - 1, k -> new Q(k, (n-k)).*(BI(3*n - 4*k - 1, n - 2*k))).num()
A109983	tablamb	0	0	n -> new Integer[] { 0, n*2 }	(n, k) -> (k < n) ? Z.ZERO : BI(n, 2*n - k).*(BI(k, n))	T(n, k) (0<=k<=2n); Row n has 2*n+1 terms, the first n of which are 0.
A110016	filnum	1	0	n -> { final Z v = ZV(n).^(2).-(7)      ; return v.mod(6 ) == 0 && v./(6 ).IPP(); }		isprime((n^2-7)/6)
A110023	trilambd	1	0	0	(n, m) -> mSeq.a(m + 6).*(mSeq.a(n + 6 - m)).*(BI(n, m))	new A000931()	a(n)=a(n-2)+a(n-3); t(n,m)=a(n - m + 1)*a(m + 1)*Binomial[n, m].
A110053	filnum	0	0	n -> new Z("111" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A110054	filnum	0	0	n -> new Z("222" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A110055	filnum	0	0	n -> new Z("333" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A110085	filnum	1	1	k -> { final FactorSequence fs = JF(k); return fs.sigma().-(fs.phi()).compareTo(fs.tau().^(fs.omega())) < 0; }	Numbers n such that sigma(n) - phi(n) < tau(n)^omega(n),
A110086	filnum	1	1	k -> { final FactorSequence fs = JF(k); return fs.sigma().-(fs.phi()).compareTo(fs.tau().^(fs.omega())) <= 0; }	Numbers n such that sigma(n) - phi(n) <= tau(n)^omega(n),
A110087	filnum	1	1	k -> { final FactorSequence fs = JF(k); return fs.sigma().-(fs.phi()).compareTo(fs.tau().^(fs.omega())) > 0; }	Numbers n such that sigma(n) - phi(n) > tau(n)^omega(n),
A110089	tuptraf	0	(n, s) -> s[0].min(s[1])	""	new A005602(), new A005603()	a(n)=min(Annn(n),Annn(n))		A005602,A005603
A110102	trilambd	1	0	0	(n, m) -> mSeq.a(m + 6).*(mSeq.a(n + 6 - m))	new A000931()	a(n) = a(n - 2) + a(n - 3); t(n,m) := a(n - m + 1)*a(m + 1).
A110129	central	0	new A110124()	Central coefficients of a scaled Legendre triangle.
A110201	lambdan	0	n -> BI(n - 2, n/2).+((Z2(n).-(1)).^(2)).*(BI(n - 2, n/2 - 1)).*(Z.FOUR.^(n).-(1))./(3)
A110361	trilambd	1	0	0	(n, m) -> mSeq.a(m + 6).*(mSeq.a(n + 6 - m)).*(Functions.FIBONACCI.z(m + 6)).*(Functions.FIBONACCI.z(n + 6 - m))	new A000931()	a(n) = a(n - 2) + a(n - 3); t(n,m) := a(n - m + 1)*a(m + 1)*Fibonacci[(n - m + 1)]*Fibonacci[(m + 1)].
A110480	filnum	1	0	n -> { final Z v = ZV(n).^(2).+(6)      ; return v.mod(5 ) == 0 && v./(5 ).IPP(); }		isprime((n^2+6)/5)
A110530	multrar	0	(self, n) -> SU(0, n - 1, k -> BI(2*n - 2, n -k - 1).*(self.a(k)))	"1"
A110531	multrar	0	(self, n) -> SU(0, n - 1, k -> BI(2*n - 1, n -k - 1).*(self.a(k)))	"1"
A110602	parmof2	0	A108873	4	Numbers n whose base 4 representations, interpreted as base 10 integers, are semiprimes.
A110603	parmof2	0	A108873	5	Numbers n whose base 5 representations, interpreted as base 10 integers, are semiprimes.
A110604	parmof2	0	A108873	6	Numbers n whose base 6 representations, interpreted as base 10 integers, are semiprimes.
A110605	parmof2	0	A108873	7	Numbers n whose base 7 representations, interpreted as base 10 integers, are semiprimes.
A110606	parmof2	0	A108873	8	Numbers n whose base 8 representations, interpreted as base 10 integers, are semiprimes.
A110607	parmof2	0	A108873	9	Numbers n whose base 9 representations, interpreted as base 10 integers, are semiprimes.
A110618	lambdan	0	n -> Functions.PARTITIONS.z(n).-(SU(0, (n & 1) == 0 ? n/2 : n/2 - 1, i -> Functions.PARTITIONS.z(i)))
A110625	lambdan	1	n -> RU(1, n, k -> new Q(2*Integer.bitCount(k) - IntegerUtils.floorLog2(k) - 1, 2*k*(2*k + 1))).num()
A110626	lambdan	1	n -> RU(1, n, k -> new Q(2*Integer.bitCount(k) - IntegerUtils.floorLog2(k) - 1, 2*k*(2*k + 1))).den()
A110675	filnum	0	0	n -> new Z("2222" + String.valueOf(n)).IPP()	Numbers n such that the string (\d+)n is the decimal expansion of a prime number
A110805	lambdan	1	n -> Functions.DIGIT_SUM.z(n).*(Functions.DIGIT_LENGTH.z(n))
A110872	simtraf	1	new A067186()	v -> v.*(2).+(1)	= Sqrt(A110873(n)).
A110912	filnum	0	-1	n -> ZV(23*n*n - 36).IPP()		isprime(23*n^2-36)
A110934	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A014612().skip(2), new A014612()	a(n)=Annn(n+(\d+))-Annn(n)
A110958	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A248873(), new A000045()	a(n)=Annn(n)-Annn(n)
A111018	filtpos	1	0	new A000108()	v -> v.mod(3) == 0	Indices of Catalan numbers that are divisible by 3.
A111019	filtpos	0	0	new A000108()	v -> v.mod(3) == 1	Indices of Catalan numbers that are == 1 mod 3 (cf. A000108
A111020	filtpos	1	0	new A000108()	v -> v.mod(3) == 2	Indices of Catalan numbers (A000108) that are == 2 mod 3.
A111043	partsun	0	new SimpleTransformSequence(0, new A001622(), v -> v.^(2))			Partial sums of squares of digits of golden ratio phi (A001622).
A111093	lingf	0	0,1,5,4,0,5,0,-5,0,5,0,6,5,9	1,-1,0,0,0,-1,1,0,0,0,1,-1,0,0,0,-1,1	0
A111111	multraf	1	(self, n) -> self.s(0).negate().+(Z_1(n + 1).*(2))	"1,2"	new A059372()	-A059372(n) +2Z_1(n+1)
A111185	#nyi	0		Let f(k) denote the largest prime factor of k which is not a palindrome. Sequence gives numbers k such that the sum of the factorials of the digits of k is equal to f(k) reversed
A111353	lambdir	0	n -> SEQ.a(6*n + 1)	new A087175()	a(n)=Annn((\d+)*n+(\d+)) 	6,1 	D087175                           
A111401	diffs	0	new A273399()	f(f(n+1))-f(f(n)), where f() = Catalan() = A000108.
A111426	#nyi	0		Difference between largest and Least prime factor of the n - th composite number
A111517	filnum	1	1	n -> { final Z v = ZV(n).*(7).+(1); return v.mod(2) == 0 && v./(2).IPP(); }	ZV((7*n + 1)/2).IPP()		isprime((7*n+1)/2)
A111565	#lpf	0	prime power > 1 that divides the n - th composite number; or a(n) = 0 iff n - th composite number is equal to the product of distinct primes
A111743	#nyi	0		Numbers n such that the largest prime factor p of n is also the largest prime factor of n.p, where the dot means concatenation
A111851	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 1 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=1 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111852	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 2 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=2 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111853	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 3 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=3 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111854	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 4 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=4 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111855	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 5 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=5 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111856	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 6 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=6 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111857	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 7 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=7 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111858	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 8 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=8 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111859	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.TEN).floor().mod(10) == 9 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if A023961(n)=9 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111863	#nyi	0		a(n) is the Least prime factor of 6*n - 1 that is congruent to 5 modulo 6
A111876	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, ZV(k + 1).*(2*k + 1))).den()	Denominator of Sum_{k = 0..n} 1/((k+1)*(2*k+1)).
A111877	lambdan	0	(n) -> RU(0, n + 1, k -> new Q(Z.THREE, ZV(2*k + 1))).den()	a(n) = denominator of 3*Sum_{j=0..n+1} 1/(2*j+1).
A111878	simtraf	0	new A111877().skip(1)	v -> v./(5)	a(n) = A111877(n+1)/5.	easy,nonn	0..1000
A111886	lambdan	0	n -> RU(1, 6, j -> new Q(Z_1(j).*(BI(6, j)), ZV(j).^(n))).*(FA(6).^(n)).num().negate()
A111887	lambdan	0	n -> RU(1, 7, j -> new Q(Z_1(j).*(BI(7, j)), ZV(j).^(n))).*(FA(7).^(n)).num().negate()
A111888	lambdan	0	n -> RU(1, 8, j -> new Q(Z_1(j).*(BI(8, j)), ZV(j).^(n))).*(FA(8).^(n)).num().negate()
A111891	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.valueOf(100)).floor().mod(10) == 1 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if ?111862(n)=1 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111892	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.valueOf(100)).floor().mod(10) == 2 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if ?111862(n)=2 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111893	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.valueOf(100)).floor().mod(10) == 3 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if ?111862(n)=3 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111895	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.valueOf(100)).floor().mod(10) == 5 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if ?111862(n)=5 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111896	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.valueOf(100)).floor().mod(10) == 6 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if ?111862(n)=6 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111897	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.valueOf(100)).floor().mod(10) == 7 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if ?111862(n)=7 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111898	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.valueOf(100)).floor().mod(10) == 8 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if ?111862(n)=8 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111899	multrar	1	(self, n) -> CR.valueOf(n).sqrt().multiply(CR.valueOf(100)).floor().mod(10) == 9 ? self.a(n - 1).+(1) : self.a(n - 1)	"0"	For n > 1: if ?111862(n)=9 then a(n) = a(n-1) + 1, otherwise a(n) = a(n-1)
A111918	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(k).makeOdd(), ZV(k).^(3))).num()	Numerator of x(n) = Sum_{k=1..n} ((odd part of k)/(k^3)).
A111919	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(k).makeOdd(), ZV(k).^(3))).den()	nominator of x(n) = Sum_{k=1..n} ((odd part of k)/(k^3)).
A111920	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(k).makeOdd(), ZV(k).^(4))).num()	Numerator of x(n) = Sum_{k=1..n} ((odd part of k)/(k^4)).
A111921	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(k).makeOdd(), ZV(k).^(4))).den()	nominator of x(n) = Sum_{k=1..n} ((odd part of k)/(k^4)).
A111922	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(k).makeOdd(), ZV(k).^(5))).num()	Numerator of x(n) = Sum_{k=1..n} ((odd part of k)/(k^5)).
A111923	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(k).makeOdd(), ZV(k).^(5))).den()	nominator of x(n) = Sum_{k=1..n} ((odd part of k)/(k^5)).
A111928	lambdan	0	(n) -> Rationals.SINGLETON.product(1, n, k -> new Q(JF(k).sigma(), ZV(k))).num()	Numerator of f(n) := Product_{i=1..n} sigma(i)/i.
A111929	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(k).makeOdd(), ZV(k).^(2))).num()	Numerator of x(n) = Sum_{k=1..n} ((odd part of k)/(k^2)).
A111930	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(k).makeOdd(), ZV(k).^(2))).den()	nominator of x(n) = Sum_{k=1..n} ((odd part of k)/(k^2)).
A111934	lambdan	0	(n) -> Rationals.SINGLETON.product(1, n, k -> new Q(JF(k).sigma(), ZV(k))).den()	nominator of f(n) := Product_{i=1..n} sigma(i)/i.
A111963	holos	0	[[0],[672,-208,16],[-1344,416,-32],[-1836,528,-36],[-372,208,-28],[-1182,456,-42],[24,-31,7],[-198,118,-16],[12,-19,7],[-6,8,-2],[0,-1,1]]	1	0	0
A111967	trinvn	0	new A101688()	Inverse of number triangle
A112093	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.THREE, ZV(k*k).*(BI(2*k, k)))).num()	Numerator of 3*Sum_{i=1..n} 1/(i^2*C(2*i,i)).
A112094	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.THREE, ZV(k*k).*(BI(2*k, k)))).den()	nominator of 3*Sum_{i=1..n} 1/(i^2*C(2*i,i)).
A112097	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, BI(2*k, k))).num()	Numerator of Sum_{i=1..n} 1/C(2*i,i).
A112098	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, BI(2*k, k))).den()	nominator of Sum_{i=1..n} 1/C(2*i,i).
A112099	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, BI(2*k, k).*(k))).num()	Numerator of Sum_{i=1..n} 1/(i*C(2*i,i)).
A112100	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, BI(2*k, k).*(k))).den()	nominator of Sum_{i=1..n} 1/(i*C(2*i,i)).
A112102	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, BI(2*k, k).*(ZV(k).^(3)))).num()	Numerator of Sum_{i=1..n} 1/(i^3*C(2*i,i)).
A112103	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, BI(2*k, k).*(ZV(k).^(3)))).den()	nominator of Sum_{i=1..n} 1/(i^3*C(2*i,i)).
A112288	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, S1(n, k).abs())).num()	Numerator of sum{k=1 to n} 1/s(n,k), where s(n,k) is an unsigned Stirling number of the first kind.
A112289	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, S1(n, k).abs())).den()	Denominator of sum{k=1 to n} 1/s(n,k), where s(n,k) is an unsigned Stirling number of the first kind.
A112290	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, S2(n, k))).num()	Numerator of sum{k=1 to n} 1/S(n,k), where S(n,k) is a Stirling number of the second kind.
A112291	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, S2(n, k))).den()	Denominator of sum{k=1 to n} 1/S(n,k), where S(n,k) is a Stirling number of the second kind.
A112334	trilamb0	0	(n, k) -> (n == k) ? Z.ONE : (n - 1 == k ? ZV(- n*3 + 1) : Z.ZERO)	Inverse of number triangle
A112405	filnum	1	0	n -> ZV(n).^(9).-(3).IPP()		isprime(n^9-3)
A112419	insect2	1	new A036057()	new A000040()							Prime Friedman numbers.
A112448	lambdan	0	n -> ZV(2*n+1).isProbablePrime() ? Z_1((n+1)*(n+2)/2) : Z.ZERO
A112594	lambdan	0	n -> ZV(n).sqrt().*(2).+(n)
A112634	setdiff	1	new A000043()	new A112633()
A112678	simtraf	0	new A000322()	v -> ZV(ZUtils.digitSum(v))	a(0)=a(1)=a(2)=a(3)=a(4)=1. a(n) = SumDigits(a(n-1)+a(n-2)+a(n-3)+a(n-4)+a(n-5)). a(n) = SumDigits(A000322(n)).
A112695	multraf	1	(self, n) -> self.s(0).-(2)	"1,2"	new A006577()	v -> v.-(2)	, n >= 3, a(1)=1, a(2)=2.
A112762	multraf	1	(self, n) -> self.s(0).-(self.s(1)).-(self.s(2))	""	new A112759(), new A112760(), new A112761()	a(n)=Annn(n)-Annn(n)-Annn(n)
A113025	trilambn	0	0	0	(n, k) -> BI(n + k, 2*k).*(FA(2*k))./(FA(k))	binomial(n+k, 2*k)*(2*k)!/k!
A113178	lambdan	0	n -> SP(n, p -> FI(p))	a(n) = Sum_{p|n} F(p), where F(p) is the p-th Fibonacci number and where the sum is over the distinct prime divisors of n
A113183	lambdan	0	n -> SD(n, d -> BI(n/d - 1, n/(2*d)).^(2).*(JF(d).phi()))./(n)
A113207	serrev	1	1	[0,1,-2]	[1,3,3,1]	G.f.: series reversion of -(2*t^2-t)/(1+t)^3.
A113291	holos	0	[[0],[-4,1],[-8,2],[-7,1],[-5],[-2]]	0,0,0,1,-2	0	0	diffeqtorec(-A(x)*(2+3*x+2*x^2)*(1+x)+x^3*(2+x)+x^3*(1+x)^2*diff(A(x),x),A(x),a(n));
A113425	simtraf	1	new A060272()	(n, v) -> { final Z n2 = ZV(n).*(n); final Z n2m = n2.-(v); return n2m.IPP() ? n2m : n2.+(v); }	Smallest prime closest to n^2.	nonn	1..10000
A113426	simtraf	1	new A060272()	(n, v) -> { final Z n2 = ZV(n).*(n); final Z n2p = n2.+(v); return n2p.IPP() ? n2p : n2.-(v); }	Greatest prime closest to n^2.	nonn	1..1000
A113453	tablamb	2	2	n -> new Integer[] { n, n*2 }	(n, k) -> Z2((k - n)/2)	for(n=2,25, for(k=n,2*n, print1(2^(floor((k-n)/2)),
A113542	filnum	1	1	n -> { final Z v = ZV(n).^(2).*(18).+(1); return v.mod(19) == 0 && v./(19).IPP(); }	ZV(( 18*n*n + 1)/19).IPP()		isprime((18*n^2+1)/19)
A113621	filter	0	new A000142()	(k, v) -> v.toString().indexOf(ZV(k).^(2).toString(10)) >= 0	Numbers k such that the representation of k^2 is a substring of that of k!, in base 10.
A113622	filter	0	new A000010()	(k, v) -> ZUtils.reverse(v).toString().indexOf(k.toString()) >= 0	Numbers k such that the reverse of the representation of phi(k) is a substring of k, in base 10.
A113634	lambdir	0	n -> SEQ.a(ZV(n).^(6))	new A007504()	a(n)=Annn((\d+)^n)	6	D007504
A113705	moetrafi	0	new A011557()	, 0	powers of 10.						Inverse Moebius transform of powers of 10.
A113784	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A001358().skip(2), new A001358()	a(n)=Annn(n+(\d+))-Annn(n)
A113788	simtraf	1	new MobiusTransformSequence(1, new A001608(), 0)	(n, v) -> v./(n)	n * a(n) is the Moebius transform of A001608.
A113972	lpf	0	Z2(n).*(29).-(1)	Define b(0)=28, b(n + 1)=2*b(n) + 1; sequence gives largest prime factor of b(n)
A114089	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A006128().skip(1), new A115995().skip(1)	a(n) = A006128(n) -   A115995(n). - _Vladeta Jovovic_, Feb 18 2006
A114317	tuptraf	1	(n, s) -> s[0].^(2).+(2*(n - 1))	"1"	PREVIOUS	a(n)=a(n-1)^2+2*(n-1)
A114320	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, k) -> RU(0, n/2 - k, j -> new Q(-1, 2).^(j)./(FA(j))).*(FA(n))./(Z2(k).*(FA(k))).num()	T(n,k) = n!/(2^k*k!) * Sum_{j=0..floor(n/2)-k} (-1/2)^j/j!. - _Alois P. Heinz_, Nov 30 2011
A114322	lambdan	1	n -> CV(Z.TEN.^(n)).^(new Q(1, 4)).ceil().-(1)	a(n) = ceiling((10^n)^(1/4)) - 1.
A114323	lambdan	0	n -> Z.TEN.pow(n).subtract(1).root(5)
A114378	lambdan	1	n -> CR.PI.*(ZV(n).^(3)).floor()	a(n) = floor(Pi*n^3). - _Robert Israel_, Nov 24 2014
A114382	multraf	1	(self, n) -> self.s(0).+(self.s(1)).+(self.s(2))	""	new A000040(), new A001358(), new A014612()	a(n)=Annn(n)+Annn(n)+Annn(n)
A114390	multrad	1	(self, n) -> SEQ.a(n * n)	"1"	new A065621()	""	a(n) = A065621(n^2).
A114398	filtpos	0	0	new A000695()	SQUARE	Positions where A000695 is a square.	nonn	0..48	nyi	_Antti Karttunen_
A114400	simtraf	0	new A114399()	v -> v.sqrt()	Square roots of Annnnnn
A114401	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A114398(), new A114400()
A114439	filtpos	1	0	new A000326()	v -> JF(v).bigOmega() == 2	Indices of semiprime pentagonal numbers.
A114441	filtpos	1	0	new A000326()	v -> JF(v).bigOmega() == 3	Indices of 3-almost prime pentagonal numbers.
A114443	filtpos	1	0	new A000326()	v -> JF(v).bigOmega() == 4	Indices of 4-almost prime pentagonal numbers.
A114445	filtpos	1	0	new A000326()	v -> JF(v).bigOmega() == 5	Indices of 5-almost prime pentagonal numbers.
A114446	filtpos	1	0	new A000326()	v -> JF(v).bigOmega() == 7	Indices of 7-almost prime pentagonal numbers.
A114447	filtpos	1	0	new A000326()	v -> JF(v).bigOmega() == 6	Indices of 6-almost prime pentagonal numbers.
A114452	filnum	1	0	n -> ZV(n).^(9).-(7).IPP()		isprime(n^9-7)
A114454	filtpos	1	0	new A000384()	v -> JF(v).bigOmega() == 3	Numbers n such that the n-th hexagonal number is a 3-almost prime.
A114455	filtpos	1	0	new A000384()	v -> JF(v).bigOmega() == 4	Numbers n such that the n-th hexagonal number is a 4-almost prime.
A114456	filtpos	1	0	new A000384()	v -> JF(v).bigOmega() == 5	Numbers n such that the n-th hexagonal number is a 5-almost prime.
A114458	lambdan	1	n -> CV( 9*n +  8).sqrt().floor()
A114459	lambdan	1	n -> CV(16*n + 20).sqrt().floor()
A114460	lambdan	1	n -> CV(25*n + 49).sqrt().floor()
A114504	filtpos	1	0	new A000384()	v -> JF(v).bigOmega() == 6	Numbers n such that the n-th hexagonal number is a 6-almost prime.
A114505	filtpos	1	0	new A000384()	v -> JF(v).bigOmega() == 7	Numbers n such that the n-th hexagonal number is a 7-almost prime.
A114517	filtpos	1	0	new A000566()	v -> JF(v).bigOmega() == 2	Numbers n such that n-th heptagonal    number is   2 emiprime.
A114548	filtpos	1	0	new A000566()	v -> JF(v).bigOmega() == 3	Numbers n such that n-th heptagonal    number is   3-almost prime.
A114554	filtpos	1	0	new A000566()	v -> JF(v).bigOmega() == 4	Numbers n such that n-th heptagonal    number is   4-almost prime.
A114556	filtpos	1	0	new A000566()	v -> JF(v).bigOmega() == 5	Numbers n such that n-th heptagonal    number is   5-almost prime.
A114558	filtpos	1	0	new A000566()	v -> JF(v).bigOmega() == 6	Numbers n such that n-th heptagonal    number is   6-almost prime.
A114559	filtpos	1	0	new A000566()	v -> JF(v).bigOmega() == 7	Numbers n such that n-th heptagonal    number is   7-almost prime.
A114593	tablamb	2	2	n -> new Integer[] { 1, n/2 }	(n, k) -> Z2(n - 2*k).*(BI(n + 1, k)).*(BI(n - k - 1, k - 1))./(n + 1)	 (1 <= k <= floor(n/2)). Triangle read by rows: T(n,k) is the number of hill-free Dyck paths of semilength n, having k ascents of length at least 2 (1 <= k <= floor(n/2), n >= 2).G.f. = 
A114606	filtpos	1	0	new A000567()	v -> JF(v).bigOmega() == 3	Numbers n such that n-th octagonal     number is   3-almost prime.
A114618	filtpos	1	0	new A000567()	v -> JF(v).bigOmega() == 4	Numbers n such that n-th octagonal     number is   4-almost prime.
A114621	filtpos	1	0	new A000567()	v -> JF(v).bigOmega() == 5	Numbers n such that n-th octagonal     number is   5-almost prime.
A114634	filtpos	1	0	new A000567()	v -> JF(v).bigOmega() == 6	Numbers n such that n-th octagonal     number is   6-almost prime.
A114635	filtpos	1	0	new A000567()	v -> JF(v).bigOmega() == 7	Numbers n such that n-th octagonal     number is   7-almost prime.
A114636	filtpos	1	0	new A000567()	v -> JF(v).bigOmega() == 8	Numbers n such that n-th octagonal     number is   8-almost prime.
A114699	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A000799(), new A064355()	Annnnnn(n)- Annnnnn(n)
A114778	lambdan	0	n -> PR(0, n, j -> FM(j, 3))	a(n) = Prod[i=0 to n] n!!!
A114779	lambdan	0	n -> PR(0, n, j -> FM(j, 4))	a(n) = Prod[i=0 to n] n!!!!
A114790	lambdan	0	n -> PR(0, n, j -> FM(j, 5))	a(n) = Product_{j=0..n} j!!!!!.
A114796	lambdan	0	n -> PR(0, n, j -> FM(j, 6))	a(n) = Product_{j=0..n} j!!!!!!.
A114828	filtpos	1	0	new A000567()	v -> JF(v).bigOmega() == 9	Numbers n such that n-th octagonal     number is   9-almost prime.
A114915	tuptraf	0	(n, s) -> s[0].xor(s[1])	""	new A004601().skip(1), new A004593().skip(1)	Bitwise XOR of Pi base 2 (A004601) and e base 2 (A004593).
A114954	multrar	0	(self, n) -> CV(self.a(n-1)).^(new Q(3, 2)).+(CV(self.a(n - 2)).^(new Q(3, 2))).ceil()	"1,1"	a(n) = ceiling(a(n-1)^(3/2) + a(n-2)^(3/2)).
A114957	multrar	0	(self, n) -> CV(self.a(n-1)).^(new Q(4, 3)).+(CV(self.a(n - 2)).^(new Q(4, 3))).ceil()	"1,1"	a(n) = ceiling(a(n-1)^(4/3) + a(n-2)^(4/3)) for n > 1 with a(0) = a(1) = 1.
A115058	filter	1	new A000040()	v -> !v.*(3).+(2).IPP()
A115090	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A115074(), new A117183()	a(n) = A115074(n) -   A117183(n).
A115139	tablamb	1	1	n -> new Integer[] { 0, ((n & 1) == 1) ? n/2 : n/2 - 1 }	(n, m) -> Z_1(m).*(BI(n - 1 - m, m))
A115155	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A030220(), new PrependSequence(1, new A136599(), 0)	a(n) = A030220(n) +   A136599(n). - _Michael Somos_, Oct 13 2015
A115218	tablamb	0	0	n -> new Integer[] { 0, (1 << (n + 1)) - 2 }	(n, k) -> ZV(k)	Cf. A126646 (length of n-th row). 2^(n+1) - 1.
A115343	filnum	0	0	n -> Functions.OMEGA.l(n) == 9 && Functions.BIG_OMEGA.l(n) == 9
A115402	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A014612().skip(3), new A014612()	a(n)=Annn(n+(\d+))-Annn(n)
A115415	lambdan	0	n -> new Zi(n, 1).pow(n).re()	Real part of (n + i)^n, with i=sqrt(-1).
A115416	lambdan	0	n -> new Zi(n, 1).pow(n).im()	Imaginary part of (n + i)^n, with i=sqrt(-1).
A115526	trinvn	0	new A115524()	Inverse of number triangle
A115752	lambdan	0	n -> SU(0, (n - 2)/3, i -> BI(n + 1, i).*(SU(i + 1, (n - i)/2, j -> BI(n + 1 - i, j))))	seq(add(binomial(n+1, i)*add(binomial(n+1-i, j), j=i+1..floor((n-i)/2)), i=0..floor((n-2)/3)), n=0..30);
A115788	lambdan	1	n -> CR.PI.*(n).floor().and(Z.ONE)	a(n) = floor(n*Pi) mod 2.
A115845	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n such that there is no bit position where the binary expansions of n and 8n are both 1.	nonn	1..10000	nyi	_Antti Karttunen_
A115968	holos	0	[[0],[317249019360,-62714289528,4647864888,-153055008,1889568],[-2317649630400,484678915920,-38012596920,1325059560,-17321040],[851129924040,-160916188248,11235830598,-341749368,3792258],[-4073611788360,1033963990092,-97717075812,4079008692,-63501732],[677479849560,-344684375946,46082145051,-2397895326,43644501],[-217776415320,-128674472940,29491318350,-1965301380,42367050],[-16344431262000,4328076001374,-429883334379,18992570094,-315097209],[5568079355640,-1517116542768,153959114448,-6896077128,114997968],[11499281691840,-3267769283928,350109831528,-16779153528,303830208],[-7423399927080,2287929523824,-264847744704,13649162544,-264278904],[-1977109830000,607849346400,-71010366900,3756298440,-76343340],[2988402382440,-1043884595952,138018393312,-8193543792,184410792],[-472652569440,179264189868,-25971496578,1701567228,-42437358],[-392443463160,167838911632,-26969275612,1932510632,-52188692],[160373733840,-76046995836,13655695386,-1101227676,33654486],[4257423720,-1785538720,194772800,2957800,-960560],[-15003898560,8681298000,-1859676120,174506760,-6042840],[3865474440,-2569044144,633372344,-68587224,2750584],[-444439800,344786232,-98637162,12314112,-564942],[22826880,-21168396,7093236,-1010916,51036],[-290520,305118,-96993,7218,657],[-6480,14796,-11826,3996,-486],[0,-162,297,-162,27]]	1,3,13,57	0	0	
A116366	simtraf	1	new A065305()	v -> v.*(2)
A116368	central	1	new A116366()	%N A116368 Central terms of the triangle in A116366.
A116419	lambdan	0	(n) -> new Q(Z2(1 + n).-(Z.ONE).*(Z.TWO), ZV(1 + n).*(2 + n)).num()	numerators of 2*(2^(1+n)-1)/(1+n)/(2+n).
A116420	lambdan	0	(n) -> new Q(Z2(1 + n).-(Z.ONE).*(Z.TWO), ZV(1 + n).*(2 + n)).den()	xxxinators of 2*(2^(1+n)-1)/(1+n)/(2+n).
A116566	simtraf	0	new GeneratingFunctionSequence(0, "[1, -59]", "[1, -60, -930, -899]")	v -> v.mod(ZV(37))	(-59*x + 1)/(-899*x^3 - 930*x^2 - 60*x + 1), modulo 37
A116579	simtraf	1	new A000040()	(n, v) -> (n <= 2) ? Z.ONE : v./(6)	a(1) = a(2) = 1; a(n) = floor(prime(n)/6) for n > 2.
A116590	multraf	0	(self, n) -> self.s(0).+(self.s(2))	"1,3,4"	new A005185().skip(2), PREVIOUS, PREVIOUS	a(n)=Annn(n+(\d+))+Annn(n)forn>=(\d+)	2,1
A116591	multraf	0	(self, n) -> self.s(0).+(self.s(2))	"1,3,4"	new A005229().skip(2), PREVIOUS, PREVIOUS	a(n)=Annn(n+(\d+))+Annn(n)forn>=(\d+)	2,1
A116592	multraf	0	(self, n) -> self.s(0).+(self.s(2))	"1,3,3"	new A004001().skip(2), PREVIOUS, PREVIOUS	a(n)=Annn(n+(\d+))+Annn(n)forn>=(\d+)	2,1
A116593	multraf	0	(self, n) -> self.s(0).+(self.s(2))	"3,6,12"	new A006046().skip(2), PREVIOUS, PREVIOUS	a(n)=Annn(n+(\d+))+Annn(n)forn>=(\d+)	2,1
A116637	lambdan	0	m -> { if (m == 0) return Z.valueOf(m + 1); final int n = m/2; return ((m & 1) == 1) ? BI(3*n + 1, n)./(n + 1).*(2) : BI(3*n, n)./(2*n + 1).*(2); }	a(2*n+1) = 2*(3*n+1)!/((n+1)!*(2*n+1)!) = 2*A006013(n), with a(0)=1 and a(2*n+2) = 2*(3*n+3)!/((n+1)!*(2*n+3)!) 
A116895	spf	2	ZV(n).^(n).-(1)
A116963	moetrafi	1	new A000292().skip(1)	, 0	the shifted tetrahedral numbers.
A116989	moetrafi	1	new A000579()	, 0	#
A117112	filter	0	new A020756()	PRIME	
A117129	multraf	1	(self, n) -> Puma.primeZ(self.s(0).-(1))	""	new A112877()	prime(new A112877() - 1)
A117283	filtpos	1	1	new A051953()	v -> ZUtils.isCube(v)	Numbers k for which the cototient k-phi(k) is a cube.
A117284	filtpos	1	1	new A051953()	v -> ZUtils.isPolygonal(v, 3)	Numbers k for which the cototient k-phi(k) is a triangular number.
A117285	filtpos	1	1	new A051953()	v -> v.isZero() || ZUtils.isPolygonal(v, 5)	Numbers k for which the cototient k-phi(k) is a pentagonal number.
A117286	filtpos	1	1	new A051953()	v -> v.isZero() || ZUtils.isPolygonal(v, 6)	Numbers k for which the cototient k-phi(k) is a hexagonal number.
A117287	filtpos	1	1	new A051953()	v -> v.isZero() || ZUtils.isPolygonal(v, 7)	Numbers k for which the cototient k-phi(k) is a heptagonal number.
A117288	filtpos	1	1	new A051953()	v -> v.isZero() || ZUtils.isPolygonal(v, 8)	Numbers k for which the cototient k-phi(k) is an octagonal number.
A117289	filtpos	1	1	new A051953()	v -> v.isZero() || ZUtils.isPolygonal(v, 9)	Numbers k for which the cototient k-phi(k) is an enneagonal number (A001106).
A117305	filter	1	new A000217()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 5)	Triangular numbers for which the sum of the digits is a pentagonal number.
A117309	filter	0	new A000217()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 6)	Triangular numbers for which the sum of the digits is a hexagonal number.
A117310	filter	0	new A000217()	v -> ZUtils.isPolygonal(ZUtils.digitProduct(v), 6)	Triangular numbers for which the product of the digits is a hexagonal number.
A117312	filter	0	new A000217()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 7)	Triangular numbers for which the sum of the digits is a heptagonal number.
A117327	filter	0	new A000217()	v -> ZUtils.isPolygonal(ZUtils.digitProduct(v), 7)	Triangular numbers for which the product of the digits is a heptagonal number.
A117342	recval	0	new A113436()		Records in Annnnnn
A117482	filamb	0	0	n -> n.toString(3).indexOf('1') < 0 && n.toString(4).indexOf('1') < 0 && n.toString(5).indexOf('1') < 0	Numbers with no 1s in their base-3, base-4, and base-5 expansions. Intersection of A005823, A023709, and A023725.
A117496	filamb	0	0	n -> n.toString(3).indexOf('1') < 0 && n.toString(4).indexOf('1') < 0	Numbers with no 1s in base 3 & 4 expansions.
A117509	filamb	0	0	n -> n.toString(3).indexOf('1') < 0 && n.toString(4).indexOf('1') < 0 && n.toString(5).indexOf('1') < 0 && n.toString(6).indexOf('1') < 0	Numbers whose base-3, base-4, base-5, and base-6 expansions contain no 1s.
A117523	filter	1	new A000217()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 8)	Triangular numbers for which the sum of the digits is an octagonal number.
A117529	parm2	0	A114823	14	Indices of Fibonacci numbers with (\d+) distinct prime factors
A117530	trilambn	1	1	1	(n, k) -> ZV(k).*(k).-(k).+(Puma.prime(n))	Triangle read by rows: T(n,k) = k^2 - k + prime(n), 1<=k<=n.	nonn,tabl
A117550	parm2	0	A114823	16	Indices of Fibonacci numbers with (\d+) distinct prime factors
A117551	parm2	0	A114823	15	Indices of Fibonacci numbers with (\d+) distinct prime factors
A117564	filamb	0	0	n -> n.toString(3).indexOf('1') < 0 && n.toString(4).indexOf('1') < 0 && n.toString(10).indexOf('1') < 0	Numbers with no 1s in base 3, 4 & 10 expansions.
A117590	tuptras	1	(self, n) -> new Q(self.s(0), self.s(1)).ceiling()	""	new A008776(), new A000079()
A117631	#nyi	0		a(1) = 433640083; a(n + 1)= the largest prime factor of a(n) + b(n) + c(n), where a(n)<b(n)<c(n) and a(n),b(n) and c(n) are three consecutive primes
A117650	filter	0	new A000566()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 7)	Heptagonal numbers for which the sum of the digits is also a heptagonal number.
A117663	lingf	1	0,0,1,6,27,21,178,39,63,24,46	1,-1,0,0,-2,2,0,0,1,-1	0						Heptagonal numbers for which the digital root is also a heptagonal number.
A117697	simtraf	0	new A016041()	v -> new Z(v.toString(2))	Palindromic primes in base 2 (written in base 2).
A117698	simtraf	0	new A029971()	v -> new Z(v.toString(3))	Palindromic primes in base 3 (written in base 3).
A117699	simtraf	0	new A029972()	v -> new Z(v.toString(4))	Palindromic primes in base 4 (written in base 4).
A117700	simtraf	0	new A029973()	v -> new Z(v.toString(5))	Palindromic primes in base 5 (written in base 5).
A117701	simtraf	0	new A029974()	v -> new Z(v.toString(6))	Palindromic primes in base 6 (written in base 6).
A117702	simtraf	0	new A029975()	v -> new Z(v.toString(7))	Palindromic primes in base 7 (written in base 7).
A117703	simtraf	0	new A029977()	v -> new Z(v.toString(9))	Palindromic primes in base 9 (written in base 9).
A117709	filter	0	new A000326()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 5)	Pentagonal numbers for which the sum of the digits is also a pentagonal number.
A117710	filter	0	new A000326()	v -> ZUtils.isPolygonal(ZUtils.digitProduct(v), 5)	Pentagonal numbers for which the product of the digits is also a pentagonal number.
A117711	filter	1	new A000326()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 5) && ZUtils.isPolygonal(ZUtils.digitProduct(v), 5)	Pentagonal numbers for which both the sum of the digits and the product of the digits are pentagonal numbers.
A117799	filter	1	new A051872()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 20)	Icosagonal numbers for which the sum of the digits is also an icosagonal number. 20 A051872
A117811	interleave	0	A007913	A000188
A117812	lambdan	0	n -> ZV(n).^(2*n).-(1)	a(n) = n^(2*n) - 1.	nonn	0..14	nyi
A117818	lambdan	1	n -> (n <= 3 || ZV(n).IPP()) ? ZV(n) : ZV(n)./(SPF(n))	a(n) = n if n is 1 or a prime, otherwise a(n) = n divided by the least prime factor of n (A032742(n))
A117832	filter	1	new A000217()	v -> ZUtils.isPolygonal(ZUtils.digitProduct(v), 8)	Triangular numbers for which the product of the digits is an octagonal number.
A117876	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A066495().skip(1)	new A000040()	a(n)=Annn(Annn(n+(\d+)))
A117921	insect2	1	new A098878()	new A000040()							Primes of the form (2^k - 1)^3 - 2.
A117930	filter	0	new A064986()	(n, v) -> (n & 1) == 0
A117948	simtraf	1	new A000326().skip(1)	v -> JF(v).sigma()	Sum of the divisors of pentagonal numbers.
A117949	filtpos	1	1	new A000326().skip(1)	v -> JF(v).sigma().isSquare()	Index of pentagonal numbers whose sum of divisors is square.
A117962	partsun	0	new A117961()			Partial sums of hexagonal numbers with prime indices.
A117985	filter	1	new A000326()	v -> v.toString().matches("[13579]+")	Pentagonal numbers with only odd digits.
A117989	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(2))	""	new A056823().skip(1), new A056823()	a(n)=Annn(n+(\d+))-(\d+)*Annn(n)	1,2
A117990	filter	1	new A000326()	v -> v.toString().matches("[02468]+")	Pentagonal numbers with only even digits.
A117993	filter	1	new A000566()	v -> v.toString().matches("[13579]+")	Heptagonal numbers with only odd digits.
A117994	filter	1	new A000566()	v -> v.toString().matches("[02468]+")	Heptagonal numbers with only even digits.
A118013	trilambn	1	1	1	(n, k) -> ZV(n*n)./(k)	Triangle read by rows: T(n,k) = floor(n^2/k), 1<=k<=n.	nonn,easy,tabl
A118014	lambdan	0	n -> SU(1, n, k -> ZV(n*n)./(k))	Sum_{k=1..n} floor(n^2/k).	nonn	0..47	nyi
A118083	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A000700(2*n) + A000009(n), n>0. - _Vladeta Jovovic_, Jul 03 2007
A118255	tuptraf	1	(n, s) -> (n > 1 && ZV(n).isProbablePrime()) ? s[0].*(2) : s[0].*(2).+(1)	"1"	PREVIOUS	a(1)=1, then a(n)=2*a(n-1) if n is prime, a(n)=2*a(n-1)+1 if n not prime.
A118333	lpf	0	FD(n).+(FD(n + 1))	!!  +  (n + 1)!!
A118366	multraf	1	(self, n) -> self.a(n - 1).^(2).+(Z2(Functions.MOEBIUS.i(self.a(n - 1)) + 1))	"1"	PREVIOUS	a(1) = 1, a(n+1) = a(n)^2 + 2^(1+mu(a(n))), where mu is the Moebius function (A008683).	nonn
A118384	trilamb0	0	(n, k) -> SU(0, n - k, i -> BI(n, i).*(BI(n, n - k - i)).*(Z2(i)))	[Sum[Binomial[n, i]Binomial[n, n-k-i]2^i, {i, 0, n-k}], {n,
A118394	tablamb	0	0	n -> new Integer[] { 0, n/3 }	(n, k) -> FA(n)./(FA(k).*(FA(n - 3*k)))	Triangle T(n,k) = n!/(k!*(n-3*k)!), for n >= 3*k >= 0, read by rows.
A118397	multrar	0	(self, n) -> SU(0, n/2, k -> Z2(k).*(BI(n+1,2*k+1)).*(self.a(k)))	"1"
A118398	multrar	0	(self, n) -> SU(0, n/2, k -> Z2(k).*(BI(n  ,2*k  )).*(self.a(k)))	"1"
A118482	partsun	0	new PrependSequence(0, new A109611(), 1)			Partial sums of Chen primes (starting with 1).
A118594	simtraf	0	new A014190()	v -> new Z(v.toString(3))	Palindromes in base 3 (written in base 3).
A118595	simtraf	0	new A014192()	v -> new Z(v.toString(4))	Palindromes in base 4 (written in base 4).
A118596	simtraf	0	new A029952()	v -> new Z(v.toString(5))	Palindromes in base 5 (written in base 5).
A118597	simtraf	0	new A029953()	v -> new Z(v.toString(6))	Palindromes in base 6 (written in base 6).
A118598	simtraf	0	new A029954()	v -> new Z(v.toString(7))	Palindromes in base 7 (written in base 7).
A118599	simtraf	0	new A029803()	v -> new Z(v.toString(8))	Palindromes in base 8 (written in base 8).
A118600	simtraf	0	new A029955()	v -> new Z(v.toString(9))	Palindromes in base 9 (written in base 9).
A118601	partsun	1	new A058129().skip(1)			Partial sums of A058129.					Partial sums of A058129.
A118623	tuptraf	0	(n, s) -> s[0].^(2).+(JF(s[0]).sigma0())	"1"	PREVIOUS	a(0) = 1, a(n+1) = a(n)^2 + number of divisors of a(n).	nonn
A118668	lambdan	0	n -> ZV(ZUtils.distinctDigitCount(ZV(n).*(n + 1)./(2), 10))	nyi to	Number of distinct digits needed to write the n-th triangular number in decimal representation.	nonn,base	0..10000
A118669	filnum	1	1	k -> { final FactorSequence fs = JF(k); return !fs.isSquareFree() && k.toString().indexOf(fs.squareFreeKernel().toString()) >= 0; }	Numbers that are not squarefree, but contain their squarefree kernel in decimal representation.	nonn,base	1..10000
A118851	dirtraf	0	new A005361()	new A036035()		T(n,k) = A005361(A036035(n,k)). - _Andrew Howroyd_, Oct 19 2020 A005361=DirectSequence
A118918	filter	1	new A000040()	p -> p.^( 2).+(11)./(12).IPP()	[(#^(\d+)+(\d+))/(\d+)]&]	400, 2,11,12
A118919	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, k) -> BI(2*n + 2, n - 2*k).*(2*k + 1)./(n + 1)	
A118935	multrar	0	(self, n) -> RU(0, n/4, k -> new Q(FA(n), FA(k).*(FA(n - 4*k)).*(ZV(4).^(k))).*(self.a(k))).num()	"1"		Sum_{k=0..[n/4]} n!/[k!*(n-4*k)!*4^k] * a(k), with a(0)=1.
A118939	filter	1	new A000040()	p -> p.^( 2).+( 3)./( 4).IPP()	[(#^(\d+)+(\d+))/(\d+)]&]	200, 2, 3, 4
A118940	filter	1	new A000040()	p -> p.^( 2).+( 7)./( 8).IPP()	[(#^(\d+)+(\d+))/(\d+)]&]	200, 2, 7, 8
A118965	simtraf	1	new A066853()	(n, v) -> ZV(n).-(v)
A118977	parmof4	0	A151568	1	1	"0,1"	a(0)=0, a(1)=1; a(2^i+j) = a(j) + a(j+1) for 0 <= j < 2^i.
A119029	simtraf	1	new A120267()	(n, v) -> v./(n)	.
A119245	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, k) -> BI(2*n + 1, n - 2*k).*(4*k + 1)./(2*n + 1)	T(n,k) = (4*k+1)*binomial(2*n+1, n-2*k)/(2*n+1) for n >= 2*k >= 0.
A119262	multrar	0	(self, n) -> SU(1, n/2, k -> self.a(k).*(BI(n - k - 1, n - 2*k)))	"0,1"
A119272	tuptraf	1	(n, s) -> s[0].*(s[1])	""	new A007305(), new PrependSequence(0, new A047679(), 0, 0)	 Also, a(n) = A007305(n-1)*A047679(n-3) for n>=3
A119364	lambdan	0	n -> n == 0 ? Z.ZERO : SU(0, n, k -> BI(n + 1, 3*k).*(BI(n - 1, 3*k)))	Central coefficients of number triangle A119335.
A119383	multraf	0	(self, n) -> FA(n).-(self.s(0))	"0"	new A088921()	n!- new A088921()
A119416	lambdan	1	n -> Puma.nextPrimeZ(LPF(n)).*(n)	n * (Least prime greater than largest prime factor of n)
A119432	filnum	1	1	k -> Euler.phiAsLong(k)*2 <= k	Numbers k such that 2*phi(k) <= k.
A119434	setdiff	1	new A119432()	new A299174()
A119547	filter	1	new A001107()	v -> ZUtils.isPolygonal(ZV(ZUtils.digitSum(v)), 10)	10-gonal   numbers for which the sum of the digits is also a 10-gonal number.
A119548	filter	1	new A001107()	v -> !v.isZero() && v.mod(ZUtils.digitSum(v)) == 0	10-gonal numbers which are divisible by the sum of their digits.
A119571	lambdan	0	n -> ZV(2).^(Z2(n).-(1)).+(ZV(2).^(Z2(n+1).-(1))).+(1)
A119629	inverse	1	new A014631()	1	1
A119641	filter	0	new A000055()	PRIME	
A119735	filnum	1	1	k -> ZUtils.distinctDigitCount(ZV(k).pow(3), 10) == 10	Numbers n such that every digit occurs at least once in n^3.
A119761	#nyi	0		Values n such that the largest prime factor of repunit R_n=(10^n  - 1)/9 is a unique prime,i.e.,whose reciprocal has unique decimal period length
A119772	parmof2	0	A006988	4	((\d+)^n)-th prime	m	i
A119773	parmof2	0	A006988	8	((\d+)^n)-th prime	m	i
A119774	parmof2	0	A006988	9	(\d+)^n-th prime	
A119775	parmof2	0	A006988	14	((\d+)^n)-th prime	m	i
A119776	parmof2	0	A006988	15	((\d+)^n)-th prime	m	i
A119777	parmof2	0	A006988	16	(\d+)^n-th prime	
A119778	parmof2	0	A006988	32	((\d+)^n)-th prime	m	i
A119779	parmof2	0	A006988	64	(\d+)^n-th prime	
A119781	parmof2	0	A006988	128	(\d+)^n-th prime	
A119784	lambdan	0	n -> RU(1, n, j -> RU(1, n, i -> new Q(Z_1(i + 1), ZV(i*j).^(2)))).num()	a(n) = numerator[Sum[Sum[(-1)^(i+1)*1/(i*j)^2, {i, 1, n}], {j, 1, n}]]. a(n) = A119682(n)*A007406(n).
A119791	tuptraf	1	(n, s) -> s[0].*(JF(s[0].*(n)).sigma0())	"1"	PREVIOUS	a(1) = 1, a(n) = number of divisors of n*a(n-1).	nonn	1..10000	nyi	_Reinhard Zumkeller_
A119797	filnum	1	0	k -> ZUtils.distinctDigitCount(ZV(k), 10) == ZUtils.distinctDigitCount(ZV(k + 1), 10)	Numbers m such that m and m+1 have the same number of distinct digits in decimal representation.	nonn,base	1..10000
A119798	filnum	1	0	k -> ZUtils.distinctDigitCount(ZV(k), 10) == ZUtils.distinctDigitCount(ZV(2*k), 10)	Numbers m such that m and 2*m have the same number of distinct digits in decimal representation.	nonn,base	1..10000
A119799	filnum	1	1	k -> { final int k1 = ZUtils.distinctDigitCount(ZV(k + 1), 10); return ZUtils.distinctDigitCount(ZV(k), 10) == k1 && k1 == ZUtils.distinctDigitCount(ZV(k + 2), 10); }	Numbers m such that m, m+1 and 2*m have the same number of distinct digits in decimal representation.	nonn,base	1..10000
A119823	tuptraf	0	(n, s) -> s[0].+(ZUtils.distinctDigitCount(s[0], 10))	"0"	PREVIOUS	a(n) = a(n-1) + number of distinct digits of a(n-1) in decimal representation, a(0)=0.	nonn,base
A120068	simtraf	1	new A049097()	v -> Puma.primePiZ(v)	a(n)=primepi(Annn(n))
A120258	trilambn	0	0	0	(n, k) -> PR(0, k - 1, j -> BI(2*n - 2*k + j, n - k))./(PR(0, k - 1, j -> BI(n - k + j, j)))	[k<=n]*Product{j=0..k-1, C(2n-2k+j, n-k)/C(n-k+j, j)}					Triangle of central coefficients of generalized Pascal-Narayana triangles.
A120264	lambdan	0	(n) -> RU(1, n, k -> new Q(Z_1(k + 1), ZV(k).^(k))).num()	Numerator of Sum[ (-1)^(k+1)/k^k, {k,1,n} ].
A120266	lambdan	0	(n) -> RU(0, n, k -> new Q(ZV(n).^(k), FA(k))).num()	Numerator of Sum_{k=0..n} n^k/k!.
A120267	lambdan	0	(n) -> RU(1, n, k -> new Q(ZV(n).^(k), FA(k))).num()	Numerator of Sum_{k=1..n} n^k/k!.
A120268	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, ZV(2*k - 1).^(2))).num()	Numerator of Sum_{k=1..n} 1/(2*k-1)^2.
A120269	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, ZV(2*k - 1).^(4))).num()	Numerator of Sum_{k=1..n} 1/(2k-1)^4.
A120274	simtraf	0	new A038003().skip(2)	v -> LPF(v)	the odd Catalan number A038003(n)
A120275	simtraf	0	new A038003().skip(2)	v -> SPF(v)	the odd Catalan number A038003(n)
A120307	filter	0	new SimpleTransformSequence(0, new A163085(), (n, v) -> v./(FA(n)))	(k, v) -> (k & 1) == 0	a(n) = A163085(2*n) / (2*n)!. - _Peter Luschny_, Sep 18 2012
A120314	#nyi	0		First occurrence of consecutive refactorable numbers a(n) - 1, a(n) where the Least prime factor of a(n) is the n - th prime prime(n)
A120355	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A007677()	new A002034()	a(n)=Annn(Annn(n))		D002034,A007677
A120385	tablamb	1	1	n -> new Integer[] { 1, IU.log2(n) }	(n, k) -> (n == 1) ? Z.ONE : ZV(n)./(Z2(k - 1))	T(n,k) = floor(n/2^(k-1)).  
A120454	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).ceiling()	""	new A006530(), new A020639()
A120536	filter	1	new A064826()	SEMIPRIME	Numbers which are the sum of two pentagon
A120633	multraf	1	(self, n) -> self.s(0).-(self.s(1)).+(1)	""	new A062234(), new A070046()
A120672	prepend	0	new SimpleTransformSequence(2, new A285917(), v -> v.multiply2())	0, 0	for n >=2, a(0) = a(1) = 0.
A120684	#nyi	0		Integers m such that the sequence defined by f(0)=m and f(n + 1)=1 + gpf(f(n)), with gpf(n) being the Largest prime factor of n (A006530), ends up in the repetitive cycle 3 -> 4 -> 3 -> ..
A120685	#nyi	0		Integers m such that the sequence defined by f(0)=m and f(n + 1)=1 + gpf(f(n)), with gpf(n) being the Largest prime factor of n (A006530), ends up in the repetitive cycle 4 -> 3 -> 4 -> ..
A120686	#nyi	0		Let f(0)=m; f(n + 1)= c  +  d lpf(f(n)), where lpf(n) is the largest prime factor of n (A006530). For any m, for sufficiently large n the sequence f(n) oscillates. In â¬120684,â¬120685 the values d=c=1 were considered. Here we consider d=1, c=2 and this allows us to divide integers in 4 classes: C4 (m such that f(n)=4, which is a fixed point); C5 (m such that f(n)=5, then oscillates between 5,7,9); C7 (m such that f(n)=7, then oscillates between 7,9,5); C9 (m such that f(n)=9, then oscillates between 9,5,7); In â¬120686 (here) we present C5 as the one that includes 5. In â¬120687 we present C7 as the one that includes 7. In â¬120688 we present C9 as the one that includes 9
A120687	#nyi	0		Let f(0)=m; f(n + 1)= c  +  d lpf(f(n)), where lpf(n) is the largest prime factor of n (A006530). For any m, for sufficiently large n the sequence f(n) oscillates. In â¬120684,â¬120685 the values d=c=1 were considered. Here we consider d=1, c=2 and this allows us to divide integers in 4 classes: C4 (m such that f(n)=4, which is a fixed point); C5 (m such that f(n)=5, then oscillates between 5,7,9); C7 (m such that f(n)=7, then oscillates between 7,9,5); C9 (m such that f(n)=9, then oscillates between 9,5,7); In â¬120686 we present C5 as the one that includes 5. In â¬120687 (here) we present C7 as the one that includes 7. In â¬120688 we present C9 as the one that includes 9
A120688	#nyi	0		Let f(0)=m; f(n + 1)= c  +  d lpf(f(n)), where lpf(n) is the largest prime factor of n (A006530). For any m, for sufficiently large n the sequence f(n) oscillates. In â¬120684,â¬120685 the values d=c=1 were considered. Here we consider d=1, c=2 and this allows us to divide integers in 4 classes: C4 (m such that f(n)=4, which is a fixed point); C5 (m such that f(n)=5, then oscillates between 5,7,9); C7 (m such that f(n)=7, then oscillates between 7,9,5); C9 (m such that f(n)=9, then oscillates between 9,5,7); In â¬120686 we present C5 as the one that includes 5. In â¬120687 we present C7 as the one that includes 7. In â¬120688 (here) we present C9 as the one that includes 9
A120777	lambdan	0	(n) -> RU(0, n, k -> new Q(-1,  4).^(k).*(BI(2*k, k)./(k + 1))).den()	Numerators of partial sums of Catalan numbers scaled by powers of 1/4.  nonn,easy,frac  0..100  nyi     _Wolfdieter Lang_
A120778	lambdan	0	(n) -> RU(0, n, k -> new Q(+1,  4).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/4.  nonn,easy,frac  0..100  nyi     _Wolfdieter Lang_
A120780	lambdan	0	(n) -> RU(0, n, k -> new Q(+1,  8).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/8.  nonn,easy,frac  0..19   nyi     _Wolfdieter Lang_
A120781	lambdan	0	(n) -> RU(0, n, k -> new Q(+1,  8).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of 1/8.        nonn,easy,frac  0..19   nyi     _Wolfdieter Lang_
A120782	lambdan	0	(n) -> RU(0, n, k -> new Q(1,  12).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/12. nonn,frac,easy  0..17   nyi     _Wolfdieter Lang_
A120783	lambdan	0	(n) -> RU(0, n, k -> new Q(1,  12).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of 1/12.       nonn,frac,easy  0..925  nyi     _Wolfdieter Lang_
A120784	lambdan	0	(n) -> RU(0, n, k -> new Q(1,  16).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/16. nonn,easy,frac  0..15   nyi     _Wolfdieter Lang_
A120785	lambdan	0	(n) -> RU(0, n, k -> new Q(1,  16).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of 1/16.       nonn,easy,frac  0..15   nyi     _Wolfdieter Lang_
A120786	lambdan	0	(n) -> RU(0, n, k -> new Q(1,  20).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/20. nonn,easy,frac  0..15   nyi     _Wolfdieter Lang_
A120787	lambdan	0	(n) -> RU(0, n, k -> new Q(1,  20).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of 1/20.       nonn,easy,frac  0..15   nyi     _Wolfdieter Lang_
A120788	lambdan	0	(n) -> RU(0, n, k -> new Q(-1,  4).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of -1/4. nonn,easy,frac  0..1000 nyi     _Wolfdieter Lang_
A120789	lambdan	0	(n) -> RU(0, n, k -> new Q(-1,  8).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of -1/8. nonn,easy,frac  0..19   nyi     _Wolfdieter Lang_
A120791	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 20).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of -1/20.        nonn,easy,frac  0..15   nyi     _Wolfdieter Lang_
A120792	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 12).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of -1/12.        nonn,easy,frac  0..17   nyi     _Wolfdieter Lang_
A120793	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 12).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of -1/12.      nonn,easy,frac  0..17   nyi     _Wolfdieter Lang_
A120794	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 16).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of -1/16.        nonn,easy,frac  0..15   nyi     _Wolfdieter Lang_
A120796	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 20).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of -1/20.      nonn,easy,frac  0..15   nyi     _Wolfdieter Lang_
A120800	lambdan	0	n -> ZV(3).^(n*n).+(Z2(n*n))
A120891	filter	1	new A024361()	(k, v) -> (k & 1) == 1
A120905	lambdan	0	n -> new Zi(1, 2).pow(1 << n).re()	Real part of (1 + 2i)^(2^n) where i is sqrt(-1).
A120983	tablamb	0	0	n -> new Integer[] { 0, n/3 }	(n, k) -> BI(n + 1, k).*(SU(0, n + 1 - k, j -> Z.THREE.^(j).*(BI(n + 1 - k, j)).*(BI(j, n - 3*k - j))))./(n + 1)	
A120986	trilamb0	0	(n, k) -> BI(n + 1, k).*(BI(2*(n + 1), n - k))./(n + 1)
A120996	lambdan	0	(n) -> RU(0, n, k -> new Q(+1,  9).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/9.  nonn,frac,easy  0..18   nyi     _Wolfdieter Lang_
A120997	lambdan	0	(n) -> RU(0, n, k -> new Q(+1,  9).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of 1/9.        nonn,frac,easy  0..18   nyi     _Wolfdieter Lang_
A120998	lambdan	0	(n) -> RU(0, n, k -> new Q(1,  49).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/49. nonn,frac,easy  0..14   nyi     _Wolfdieter Lang_
A120999	lambdan	0	(n) -> RU(0, n, k -> new Q(1,  49).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of 1/49.       nonn,frac,easy  0..14   nyi     _Wolfdieter Lang_
A121000	lambdan	0	(n) -> RU(0, n, k -> new Q(1, 324).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/324.       nonn,frac,easy  0..11   nyi     _Wolfdieter Lang_
A121001	lambdan	0	(n) -> RU(0, n, k -> new Q(1, 324).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of 1/324.     nonn,frac,easy  0..11   nyi     _Wolfdieter Lang_
A121002	lambdan	0	(n) -> RU(0, n, k -> new Q(+1,  5).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/5.  nonn,frac,easy  0..20   nyi     _Wolfdieter Lang_
A121003	lambdan	0	(n) -> RU(0, n, k -> new Q(+1,  5).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial sums of Catalan numbers scaled by powers of 1/5.        nonn,frac,easy  0..20   nyi     _Wolfdieter Lang_
A121004	lambdan	0	(n) -> RU(0, n, k -> new Q(1, 125).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial sums of Catalan numbers scaled by powers of 1/125.      nonn,frac,easy  0..12   nyi     _Wolfdieter Lang_
A121005	lambdan	0	(n) -> RU(0, n, k -> new Q(1, 125).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial alternating sums of Catalan numbers scaled by powers of 1/125.  nonn,frac,easy  0..12
A121006	lambdan	0	(n) -> RU(0, n, k -> new Q(-1,   5).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial alternating sums of Catalan numbers scaled by powers of 1/5.      nonn,frac,easy  0..20
A121007	lambdan	0	(n) -> RU(0, n, k -> new Q(-1,   5).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial alternating sums of Catalan numbers scaled by powers of 1/5.    nonn,frac,easy  0..20
A121008	lambdan	0	(n) -> RU(0, n, k -> new Q(-1,  45).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial alternating sums of Catalan numbers scaled by powers of 1/45. nonn,frac,easy
A121009	lambdan	0	(n) -> RU(0, n, k -> new Q(-1,  45).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial alternating sums of Catalan numbers scaled by powers of 1/45.       nonn,f
A121010	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 320).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial alternating sums of Catalan numbers scaled by powers of 1/320.        nonn,f
A121011	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 320).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial alternating sums of Catalan numbers scaled by powers of 1/320.      nonn,f
A121012	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 121).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial alternating sums of Catalan numbers scaled by powers of 1/121. nonn,frac,easy
A121013	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 121).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial alternating sums of Catalan numbers scaled by powers of 1/121.       nonn,f
A121280	multraf	1	(self, n) -> self.s(0).-(1)	""	new A068987()	a(n)=Annn(n)-(\d+)	1	A068987			Position where concatenate(1,...,n) occurs for the first time in the decimals of Pi (where 3, 1, 4,... are at position 0, 1, 2,...).
A121316	lambdan	0	n -> SU(0, 2*n, j -> BI(BI(j, 2).+(n-1), n).*(SU(j, 2*n, i -> Z_1(i-j).*(BI(i, j)))))
A121321	filnum	1	1	k -> ZUtils.distinctDigitCount(ZV(k).pow(4), 10) == 10	Numbers k such that every digit occurs at least once in k^4.
A121463	tablamb	1	1	n -> new Integer[] { 0, n/2 }	(n, k) -> SU(0, n - 2*k, j -> BI(n, 2*k + j).*(BI(k - 1 + j, k - 1)))
A121498	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 841).^(k).*(BI(2*k, k)./(k + 1))).num()	Numerators of partial alternating sums of Catalan numbers scaled by powers of 1/841. nonn,frac,easy
A121499	lambdan	0	(n) -> RU(0, n, k -> new Q(-1, 841).^(k).*(BI(2*k, k)./(k + 1))).den()	xxxinators of partial alternating sums of Catalan numbers scaled by powers of 1/841.       nonn,f
A121549	ordsup	1	new A010056().skip(2)	2	0
A121550	ordsup	1	new A010056().skip(2)	3	0,0
A121563	lambdan	0	(n) -> RU(1, n, i -> new Q(FA(i), ZV(i).^(i))).num()	Numerator of Sum[i=1..n] i!/(i^i).
A121564	lambdan	0	(n) -> RU(1, n, i -> new Q(FA(i), ZV(i).^(i))).den()	xxxinator of Sum[i=1..n] i!/(i^i).
A121565	lambdan	0	(n) -> RU(1, n, i -> new Q(FA(i), ZV(i).^(2))).num()	a(n) is the numerator of Sum_{i=1..n} i!/(i^2).
A121566	lambdan	0	(n) -> RU(1, n, i -> new Q(FA(i), ZV(i).^(2))).den()	a(n) is the xxxinator of Sum_{i=1..n} i!/(i^2).
A121625	lambdan	0	n -> new Zi(n, n).pow(n).re()	Real part of (n + n*i)^n.
A121626	lambdan	0	n -> new Zi(1, n).pow(n).re()	Real part of (1 + n*i)^n, where i=sqrt(-1).
A121702	lambdan	1	n -> ZV(2).^(ZV(n).^(3).-(1))
A121773	lambdan	0	n -> n == 0 ? Z.ONE : SD(n, d -> PHI(n/d).*(ZV(n + 1).^(d)))./(n)
A121774	lambdan	0	n -> n == 0 ? Z.ONE : SD(n, d -> PHI(n/d).*(ZV(n + 1).^(d - 1)))./(n)
A121776	lambdan	0	n -> (n == 0) ? ZV(1) : SU(0, n/2, k -> SD(n - k, d -> JF((n-k)/d).phi().*(BI(d,k))))
A121805	parmof2	1	A121805	1
A121835	multraf	0	(self, n) -> self.s(0).*(self.s(1))	""	new A000178(), new A057863()	a(n)=Annn(n)*Annn(n)
A121842	simtraf	0	new A000578()	v -> Puma.nextPrimeZ(v).-(v)
A121870	multraf	0	(self, n) -> self.s(0).^(2).+(self.s(1).^(2))	""	new A121867(), new A121868()	a(n)=Annn(n)^(\d+)+Annn(n)^(\d+)	2,2
A122037	#lpf	0	number equal to the arithmetic mean of four successive primes
A122055	tuptraf	0	(n, s) -> s[0].*(3).*(s[7]).-(s[3].*(s[4]))./(s[8])	"1,1,1,1,1,1,1,1,1"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a(n)=(3*a(n-1)*a(n-8)-a(n-4)*a(n-5))/a(n-9)
A122119	spf	0	Z2(Z2(n)).+(ZV(5).^(Z2(n)))
A122131	filnum	0	0	n -> ZV(n).^(12).+(488669).IPP()		isprime(n^12+488669)
A122155	lambdan	0	n -> { final int m = Integer.highestOneBit(n); final int j = n - m; return (j == 0) ? ZV(n) : ZV(2*m - j); }
A122193	tablamb	1	1	n -> new Integer[] { 2, n*2 }	(n, k) -> SU(0, k, i -> Z_1(k - i).*(BI(k, i).*(ZV(i*(i - 1)/2).^(n))))	
A122196	tablamb	1	1	n -> new Integer[] { 1, (n + 1)/2 }	(n, k) -> ZV(n - 2*k + 2)	T(n, k) = n - 2*k + 2, for n >= 1 and 1 <= k <= floor((n+1)/2)
A122197	tablamb	1	1	n -> new Integer[] { 1, (n + 1)/2 }	(n, k) -> ZV(k)	T(n, k) = k for n >= 1 and 1 <= k <= (n+1)/2; T(n, k) = 0 elsewhere.
A122379	#nyi	0		Numbers n such that S(n)! > n^2 > P(n)!, where S(n)! is the Least factorial divisible by n and P(n) is the Largest prime factor of n
A122380	#nyi	0		Numbers n such that n^2 > P(n)!, where P(n) is the Largest prime factor of n
A122408	filtpos	0	1	new A067824()	(n, v) -> v.equals(ZV(n))	Numbers n such that Annnnnn(n)= n
A122411	lambdan	0	n -> RP(n, p -> new Q(p, p - 1)).*(JF(n).phi()).num()	a(n) = phi(n) * Sum_{p|n} p/(p-1), where p is prime
A122412	simtraf	1	new A031133()	v -> Puma.primePiZ(v)	A031133
A122413	simtraf	1	new A031134()	v -> Puma.primePiZ(v)	A031134
A122428	#nyi	0		Numbers m such that in decimal representation the lexicographically Largest divisor of m equals the Largest prime factor of m
A122443	#nyi	0		a(n) = A020639(â¬085155(n)) = least prime factor of â¬085155 powers of semiprimes
A122444	#nyi	0		a(n) = A006530(â¬085155(n)) = Largest prime factor of â¬085155 powers of semiprimes
A122464	#nyi	0		Smooth Power Trios: a(n) is the largest of three successive numbers a(n) - j, j=0..2, such that the largest prime factor of a(n) - j is <= the n - th root of a(n) - j
A122465	#nyi	0		Smooth Power Quartets: The m - th number in the sequence, n, is part of the minimum quartet of numbers n through n - 3 such that the highest prime factor of each number x <= floor(x^(1/m))
A122590	tuptraf	1	(n, s) -> s[0].*(2).-(s[1]).-(s[0].^(2)).-(s[1].^(2))	"1,1"	PREVIOUS,PREVIOUS	a(n)=2*a(n-1)-a(n-2)-(a(n-1)^2+a(n-2)^2)
A122591	tuptraf	1	(n, s) -> s[0].*(2).-(s[1]).+(s[0].^(2)).+(s[1].^(2))	"1,1"	PREVIOUS,PREVIOUS	a(n)=2*a(n-1)-a(n-2)+(a(n-1)^2+a(n-2)^2)
A122593	tuptraf	0	(n, s) -> s[0].negate().+(s[2]).-(s[0].-(s[1]).^(2)).+(s[1].-(s[2]).^(2))	"1,1,1,0,0,2"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a(n) = -a(n-1) - a(n-3) - (a(n-1) - a(n-2))^2 + (a(n-2) - a(n-3))^2.
A122728	filter	0	new A003327()	PRIME	
A122729	filter	0	new A003328()	PRIME	
A122730	filter	0	new A003329()	PRIME	
A122731	filter	0	new A003330()	PRIME	
A122732	insect2	1	new A003325()	new A014612()
A122739	simtraf	3	new A038380().skip(3)	v -> v	Numbers of perifusenes with one internal vertex (see Cyvin et al. for precise definition).
A122832	trilambn	0	0	0	(n, k) -> Rationals.SINGLETON.sum(0, n - k, i -> new Q(BI(i, n - k - i), FA(i))).*(FA(n))./(FA(k)).num()	(n!/k!)sum{i=0..n-k, C(i,n-k-i)/i!}					Exponential Riordan array (e^(x(1+x)),x).
A122833	trilambn	0	0	0	(n, k) -> Rationals.SINGLETON.sum(0, n - k, i -> new Q(Z_1(i).*(BI(i, n - k - i)), FA(i))).*(FA(n))./(FA(k)).num()						Exponential Riordan array (e^(-x(1+x)),x).
A122880	lambdan	1	n ->  CAT(n).-(FI(2*n - 1))	A000108(n) - A001519(n), n > 0; A000108 = Catalan numbers, A001519 = odd-indexed Fibonacci numbers.
A122967	tuptraf	1	(n, s) -> LPF(s[0]).max(LPF(s[1]))	""	new A002025(), new A002046()	max(A006530(A002025(n)), A006530(A002046(n)))the pair of amicable numbers. Amicable numbers are sorted by the smaller number in the pair
A123033	filter	0	new A003349()	PRIME	
A123034	filter	0	new A003350()	PRIME	
A123035	filter	0	new A003351()	PRIME	
A123036	filter	0	new A003352()	PRIME	
A123037	filter	0	new A003353()	PRIME	
A123038	filter	0	new A003354()	PRIME	
A123039	filter	0	new A003356()	PRIME	
A123040	filter	0	new A003357()	PRIME	
A123043	filter	0	new A003355()	PRIME	
A123048	insect2	1	new A001358()	new A055394()
A123101	filnum	1	1	k -> Functions.PHI.z(Functions.CARMICHAEL_LAMBDA.z(k)).equals(Functions.CARMICHAEL_LAMBDA.z(Functions.PHI.z(k)))	A000010(A002322(n))=A002322(A000010(n))
A123300	filter	0	new A123295()	PRIME	
A123323	moetraf	1	new A002620().skip(2)	,0 	?	of b(n) = floor((n+1)^2/4).
A123528	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A001414().skip(1), new A001222().skip(1)	a(n) = sopfr(n) / bigomega(n) = A001414(n) / A001222(n).
A123539	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, m) -> BI(ZV(n - m), ZV(n).-(BI(m, m/2)))	T(n,m) = binomial(n-m, n-binomial(m, floor(m/2))), read by rows, 0 <= m <= n/2.
A123554	tablamb	1	1	n -> new Integer[] { 0, (n - 1)*n }	(n, k) -> BI(n*(n - 1), k)	
A123610	trilamb0	0	(n, k) -> k == 0 ? Z.ONE : SD(n, d -> k % d != 0 ? Z.ZERO : BI(n/d, k/d).^(2).*(PHI(d)))./(n)	Triangle read by rows, where T(n,k) = (1/n)*Sum_{d|(n,k)} phi(d) * binomial(n/d,k/d)^2 for n >= k > 0, with T(n,0) = 1 for n >= 0.
A123617	central	0	new A123610()
A123736	tablamb	1	1	n -> new Integer[] { 0, n*2 - 1 }	(n, k) -> SU(0, k/2, j -> BI(n - j - 1, k - 2*j))	seq(seq(sum(binomial(n-j-1, k-2*j), j=0..floor(k/2)), k=0..2*n-1), n=1..10)
A123746	lambdan	0	(n) -> RU(0, n, k -> new Q(BI(2*k, k), ZV(-4).^(k))).num()	numer(add(binomial(2*k, k)/(-4)^k, k=0..n));
A123747	lambdan	0	(n) -> RU(0, n, k -> new Q(BI(2*k,k), Z.FIVE.^(k))).num()	numer(sum(binomial(2*k, k)/5^k, k=0..n))
A123748	lambdan	0	(n) -> RU(0, n, k -> new Q(BI(2*k,k), Z.FIVE.^(k))).den()	denom(sum(binomial(2*k, k)/5^k, k=0..n));
A123749	lambdan	0	(n) -> RU(0, n, k -> new Q(BI(2*k,k), Z.NINE.^(k))).num()	numer(sum(binomial(2*k, k)/9^k, k=0..n));
A123903	lambdan	0	n -> ZV(n).*(Z2((n-1)*(n-2)/2))	a(n) = n*2^((n-1)*(n-2)/2).
A123975	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A064173(), new A101198()	a(n) = A064173(n) -   A101198(n).
A124134	insect2	1	new A000045()	new A001481()							Positive integers n such that Fibonacci(n) = a^2 + b^2, where a, b are integers.
A124252	simtraf	0	new A007623()	v -> v.*(10)
A124326	filter	0	new TupleTransformSequence(0, (n, s) -> s[0].-(s[1]), "", new A007318(), new A077028())	NONZERO
A124354	lambdan	3	n -> n == 3 ? ZV(48) : ZV(n).shiftLeft(2)
A124396	lambdan	0	(n) -> RU(0, n, k -> new Q(BI(2*k,k), Z.NINE.^(k))).den()	denom(add(binomial(2*k, k)/9^k, k=0..n))
A124397	lambdan	0	(n) -> RU(0, n, k -> new Q(Z_1(k).*(BI(2*k, k)), Z.FIVE.^(k))).num()
A124398	lambdan	0	(n) -> RU(0, n, k -> new Q(Z_1(k).*(BI(2*k, k)), Z.FIVE.^(k))).den()
A124401	setdiff	1	new A127936()	new A006093()
A124428	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, k) -> BI(n/2, k).*(BI((n + 1)/2, k))
A124447	multraf	1	(self, n)-> self.s(0).lcm(self.s(1))	""	new A066840(), new A124440()
A124594	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(26))	Primes p such that q-p =(\d+), where q is the next prime after
A124595	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(28))	Primes p such that q-p =(\d+), where q is the next prime after
A124596	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(30))	Primes p such that q-p =(\d+), where q is the next prime after
A124636	lingf	0	1,0,-1,0,1	1,0,-4,-4,6,16,2,-24,-23,12,36,12,-23,-24,2,16,6,-4,-4,0,1	0						PoincarâÂ© series [or Poincare series] P(C_{3,2}(0); t).
A124637	lingf	0	1,-1,-1,0,2,2,0,-4,0,2,2,0,-1,-1,1	1,-1,-4,-1,6,19,6,-31,-54,-31,80,145,75,-120,-300,-176,146,434,356,-126,-500,-490,0,490,500,126,-356,-434,-146,176,300,120,-75,-145,-80,31,54,31,-6,-19,-6,1,4,1,-1	0						PoincarâÂ© series [or Poincare series] P(C_{4,2}(0); t).
A124644	trilambn	0	0	0	(n, k) -> Z_1(n - k).*(Binomial.catalan(n - k)).*(PR(0, n - k - 1, j -> ZV(j - n)))./(FA(n - k))
A124833	#nyi	0		A055932(n) divided by product of all primes less than the Largest prime factor of A055932(n)
A124882	tuptraf	1	(n, s) -> s[0].max(s[1])	""	new A048280(), new A002308()	a(n)=max(Annn(n),Annn(n))
A124981	filter	0	new A022544()	ODD
A125055	multraf	0	(self, n) -> self.s(0).-(self.s(1).*(2))	""	new A125054().skip(1), new A125054()	a(n)=Annn(n+(\d+))-(\d+)*Annn(n)	1,2
A125144	diffs	0	new A210434().skip(1)	First differences of A210434.
A125255	lambdir	1	n -> SEQ.a(4*n - 1)	new A020639()	a(n)=Annn((\d+)*n-(\d+))	4,1	D020639
A125262	filnum	1	0	n -> ZV(n).^(7).+(6).IPP()		isprime(n^7+6)
A125263	filnum	1	0	n -> ZV(n).^(8).+(7).IPP()		isprime(n^8+7)
A125264	filnum	1	0	n -> ZV(n).^(10).+(9).IPP()		isprime(n^10+9)
A125265	filnum	1	0	n -> ZV(n).^(11).+(10).IPP()		isprime(n^11+10)
A125271	tuptraf	0	(n, s) -> s[0].*(2).-(s[1])	""	new A062327(), new A000005()	a(n) = 2* A062327(n) -    A000005(n). - _T. D. Noe_, Feb 21 2007
A125272	filter	1	new A000040()	p -> { final Z pp = p.*( 3); return pp.+( 2).IPP() && pp.-( 2).IPP(); }		600, 3, 2, 2
A125273	multrar	0	(self, n) -> SU(0, n-1, k -> self.a(k).*(BI(n+k-1, n-k-1)))	"1"
A125274	multrar	0	(self, n) -> SU(0, n-1, k -> self.a(k).*(BI(n+k, n-k-1)))	"1"
A125275	multrar	0	(self, n) -> RU(0, n-1, k -> new Q(self.a(k).*(BI(2*n-1, n-k-1)).*(2*k+1), (2*n-1))).num()	"1"
A125276	multrar	0	(self, n) -> RU(0, n-1, k -> new Q(self.a(k).*(BI(2*n, n-k-1)).*(k+1), n)).num()	"1"
A125291	multraf	1	(self, n) -> ZV(1).+(ZV(n/2).*(ZV(1).-(self.s(0).*(self.s(1)).isZero() ? Z.ONE : Z.ZERO)))	""	new A062756().skip(1), new A081603().skip(1)	a(n) = 1 + floor(n/2) * (1 - 0^(A062756(n)*A081603(n)))
A125571	spf	2	SU(0, n - 1, k -> ZV(n).^(k))	Sum_{k=0..n - 1} n^k
# A125812	multraf	0	(self, n) -> 	q-Bell numbers for q=2; eigensequence of A022166, which is the triangle of Gaussian binomial coefficients [n,k] for q=2.		6
A125911	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A007955(), new A136655()
A125959	tablamb	1	1	j -> new Integer[] { 1, 9 }	(j, k) -> ZV(ZUtils.digitSumRoot(j*k))	Infinite array of nine columns, read by rows: A(j,k) = digital root of j*k for j >= 1, 1 <= k <= 9
A126107	filter	1	new A000040()	p -> p.*( 2).+( 1).IPP() && p.*(2).+( 3).IPP()	[(\d+)#+(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	100, 2, 1,2, 3
A126137	simtraf	1	new A037028()	v -> Puma.primePiZ(v)	pi(new A037028())
A126177	tablamb	1	1	n -> new Integer[] { 1, n/2 + 1 }	(n, k) -> ZV(3).^(n - 2*k + 2).*(BI(2*k - 2, k - 1)).*(BI(n, 2*k - 2))./(k)	 T:=(n,k)->3^(n-2*k+2)*binomial(2*k-2,k-1)*binomial(n,2*k-2)/k: for n from 1 to 13 do seq(T(n,k),k=1..1+floor(n/2)) od;
A126179	trilambn	1	1	1	(n, k) -> (k & 1) == 1 ? ZV(3).^(n - k + 1).*(BI(n - 1, k - 1)).*(CAT((k - 1)/2)) : ZV(3).^(n - k).*(BI(n - 1, k - 1)).*(CAT(k/2))	= 3^(n-k+1)*binomial(n-1,k-1)*c((k-1)/2) if k is odd; T(n,k) = 3^(n-k)*binomial(n-1,k-1)*c(k/2) if k is even;
A126443	multrar	0	(self, n) -> SU(0, n-1, k -> BI(n-1, k).*(self.a(k)).*(Z2(k)))	"1"
A126444	multrar	0	(self, n) -> SU(0, n-1, k -> BI(n-1, k).*(self.a(k)).*(self.a(n-1-k)).*(Z2(k)))	"1"
A126588	lambdan	0	n -> Puma.primeZ(13*n)	a(n)= prime((\d+)*n)	
A126594	multraf	2	(self, n) -> self.s(0)./(self.s(1))	""	new A001414().skip(1), new A001222().skip(1)
A126607	#nyi	0		a(1) = 2, a(2) = 3; for n>2, a(n) = least prime such that a(n - 2) is the largest prime factor of a(n) + a(n - 1)
A126720	simtraf	1	new A098974()	v -> v.+(24)	4. - _Amiram Eldar_, Mar 13 2020
A126721	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(40))	Primes p such that q-p =(\d+), where q is the next prime after
A126722	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(80))	Primes p such that q-p =(\d+), where q is the next prime after
A126724	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(150))	Primes p such that q-p =(\d+), where q is the next prime after
A126771	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(60))	Primes p such that q-p =(\d+), where q is the next prime after
A126784	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(32))	Primes p such that q-p =(\d+), where q is the next prime after
A126812	simtraf	0	new A000594()	v -> v.compareTo(Z.ZERO) >= 0 ? v.modZ(  4) : v.modZ(  4).+(  4)	Ramanujan numbers (Annnnnn) read mod (\d+)
A126813	simtraf	0	new A000594()	v -> v.compareTo(Z.ZERO) >= 0 ? v.modZ(  8) : v.modZ(  8).+(  8)	Ramanujan numbers (Annnnnn) read mod (\d+)
A126832	simtraf	0	new A000594()	v -> v.compareTo(Z.ZERO) >= 0 ? v.modZ(  5) : v.modZ(  5).+(  5)	Ramanujan numbers (Annnnnn) read mod (\d+)
A126833	simtraf	0	new A000594()	v -> v.compareTo(Z.ZERO) >= 0 ? v.modZ( 25) : v.modZ( 25).+( 25)	Ramanujan numbers (Annnnnn) read mod (\d+)
A126834	simtraf	0	new A000594()	v -> v.compareTo(Z.ZERO) >= 0 ? v.modZ(125) : v.modZ(125).+(125)	Ramanujan numbers (Annnnnn) read mod (\d+)
A126835	simtraf	0	new A000594()	v -> v.compareTo(Z.ZERO) >= 0 ? v.modZ(625) : v.modZ(625).+(625)	Ramanujan numbers (Annnnnn) read mod (\d+)
A126836	simtraf	0	new A000594()	v -> v.compareTo(Z.ZERO) >= 0 ? v.modZ(  7) : v.modZ(  7).+(  7)	Ramanujan numbers (Annnnnn) read mod (\d+)
A126894	filnum	0	0	n -> ZV(n).^(12).+(4094).IPP()		isprime(n^12+4094)
A127032	lambdan	1	n -> CV(FA(n)).log()./(CV( 5).log()).floor()	5^m <= n! : a(n) = floor( log(n!) / log(5) ).
A127033	lambdan	1	n -> CV(FA(n)).log()./(CV( 7).log()).floor()	7^m <= n! : a(n) = floor( log(n!) / log(7) ).
A127034	lambdan	1	n -> CV(FA(n)).log()./(CV(11).log()).floor()	11^m <= n! : a(n) = floor( log(n!) / log(11) ).
A127035	lambdan	1	n -> CV(FA(n)).log()./(CV(13).log()).floor()	13^m <= n! : a(n) = floor( log(n!) / log(13) ).
A127037	lambdan	1	n -> CV(FA(n)).log()./(CV(19).log()).floor()	19^m <= n! : a(n) = floor( log(n!) / log(19) ).
A127038	lambdan	1	n -> CV(FA(n)).log()./(CV(23).log()).floor()	23^m <= n! : a(n) = floor( log(n!) / log(23) ).
A127039	lambdan	1	n -> CV(FA(n)).log()./(CV(29).log()).floor()	29^m <= n! : a(n) = floor( log(n!) / log(29) ).
A127041	lambdan	1	n -> CV(FA(n)).log()./(CV(31).log()).floor()	31^m <= n! : a(n) = floor( log(n!) / log(31) ).
A127233	lambdan	0	n -> FA(n).*(FA(n*(n+1)/2))
A127331	filter	1	new A000040()	p -> p.*( 6).-( 7).IPP() && p.*(6).+( 7).IPP()	[(\d+)#-(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	300, 6, 7,6, 7
A127332	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A126988(), new A002321()	Annnnnn * Annnnnn
A127443	filter	1	new A000040()	p -> { final Z pp = p.*( 6); return pp.+(11).IPP() && pp.-(11).IPP(); }		500, 6,11,11
A127464	filter	1	new A000040()	p -> { final Z pp = p.*(12); return pp.+(11).IPP() && pp.-(11).IPP(); }		600,12,11,11
A127537	tablamb	2	2	n -> new Integer[] { 0, 2*n - 3 }	(n, k) -> BI(3*n - 3, n + k).*(BI(k - 1, k - n + 1))./(n - 1)	T(n,k) = C(3n-3,n+k)C(k-1,k-n+1)/(n-1) (n >= 2, 0 <= k <= 2n-3).
A127688	lambdan	0	n -> ZV(n+1).^(n).-(DF(n))		a(n) = (n+1)^n - (2n)!!.
A127691	lambdan	0	n -> ZV(2*n+1).^(n).-(ZV(2*n-1).^(n)).-(ZV(2*n).^(n))
A127696	lambdan	0	n -> ZV(2*n).^(n).+(ZV(2*n+1).^(n)).-(ZV(2*n+2).^(n))
A127807	simtraf	1	new A000040()	p -> p == Z.TWO ? Z.THREE : ZUtils.leastPrimitiveRoot(p.^(2))	Least positive primitive root of (n-th prime)^2.
A127808	simtraf	2	new A000040().skip(1)	p -> ZUtils.leastPrimitiveRoot(p.^(3))	Least positive primitive root of (n-th prime)^3.
A127809	simtraf	2	new A000040().skip(1)	p -> ZUtils.leastPrimitiveRoot(p.^(4))	Least positive primitive root of (n-th prime)^4.
A127810	simtraf	2	new A000040().skip(1)	p -> ZUtils.leastPrimitiveRoot(p.^(5))	Least positive primitive root of (n-th prime)^5.
A127859	lambdan	1	n -> ZV(12).^(n).-(1).*(6)./(11).+(1)	a(n) = 6*(12^n - 1)/11 + 1
A127861	simtraf	1	new A127859()	v -> v.^(2)	.
A127948	multraf	0	(self, n) -> self.s(0).*(2).-(self.s(1).^(2))	""	new A000027(), new A002024()
A127974	multraf	0	(self, n) -> new Q(FA(n), self.s(0)).den()	""	new A008544()	denominator(n!/new A008544())
A128053	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A128056(), new A128055()	a(n) = A128056(n) / A128055(n).
A128100	tablamb	0	0	n -> new Integer[] { 0, n/2 }	(n, k) -> SU(k, n/2, i -> BI(n - i, i).*(BI(i, k)))
A128161	filter	0	new A000045()	(n, v) -> Z2(n).mod(v).IPP()		isprime(2^n%fibonacci(n))
A128376	filter	1	new A002385()	v -> v.toString().matches("[4689]+")	Palindromic primes with only composite digits (i.e.,4,6,8,9).
A128413	trilambn	0	0	0	(n, k) -> (k == 0) ? Z2(n).*(BI(2*n, n))./(2).+((n == 0) ? 1 : 0) : Z2(n - k).*(BI(2*n, n - k))	; Column k has g.f. if(k=0, 4*x/(sqrt(1 - 8*x)(1 - sqrt(1 - 8*x))), (1/sqrt(1 - 8*x))*((1 - 4*x - sqrt(1 - 8*x))/(8*x))^k);					Inverse of number triangle A128412.
A128437	lambdan	1	n -> RU(1, n, k -> new Q(1, k)).num()./(n)		a(n) = floor((numerator of H(n))/n)
A128456	#nyi	0		a(n) = A020639(((p + 1)^p  -  1)/p^2), i.e., the Least prime factor of ((p + 1)^p  -  1)/p^2, where p = A000040(n)
A128492	lambdan	1	n -> RU(1, n, k -> new Q(1, (2*k - 1)*(2*k - 1))).den()
A128503	tablamb	0	0	n -> new Integer[] { 0, n/2 }	 (n, m) -> BI(n - m + 2, 2).*(BI(n - m, m)).*(Z_1(m))
A128505	tablamb	0	0	n -> new Integer[] { 0, n/2 }	 (n, m) -> BI(n - m + 3, 3).*(BI(n - m, m)).*(Z_1(m))	
A128630	#nyi	0		Let gpf(1)=1 and gpf(n)=Largest prime factor of n, n>1. Then a(n)=minimum sum of gpf of the parts of a partition of n
A128727	tablamb	0	0	n -> new Integer[] { 0, (n-1)/2 }	(n, k) -> (n == 0) ? Z.ONE : new Q(BI(n, k).*(BI(n - k, k + 1))).*(new Q(ZV(3)).^(n - 1 - 2*k))./(ZV(n)).num()	T:=(n, k)->3^(n-1-2*k)*binomial(n, k)*binomial(n-k, k+1)/n: 1;
A128734	holos	0	[[0],[420,-245,35],[-1296,888,-152],[984,-959,219],[-120,342,-118],[-48,-32,16]]	0, 0, 0, 1, 8	0	0
A128737	holos	0	[[0],[240,-140,20],[-807,536,-89],[734,-641,132],[-140,273,-73],[-40,-30,10]]	0, 0, 0, 0, 1, 10	0	0
A128740	holos	0	[[0],[15,-50,30,-5],[-40,126,-88,16],[15,-52,60,-13],[10,0,-8,2]]	0,0,1	0	0	Number of DDs in all skew Dyck paths of semilength n.
A128958	filnum	1	0	n -> ZV(n).^(2).+(ZV(n + 1).^(3)).IPP()		isprime(n^2+(n+1)^3)
A129155	holos	0	[[0],[14593500000,-2512162500,162137500,-4650000,50000],[-1273909050000,231522155000,-15772147500,477332500,-5415000],[5330563605000,-986374907500,68396061875,-2106342500,24308125],[697842720000,-385708263900,46594180175,-2115849600,33159325],[-89884354111500,19438271456050,-1573714436625,56525868050,-760014375],[405208567335900,-90208877810990,7530956814955,-279378168610,3885313145],[-1002487038482820,236402550816144,-20882518488568,818969235576,-12031750772],[1644988687628580,-417529421717768,39571467479910,-1660576550476,26044584666],[-1759661023713948,491430358398844,-50832581681654,2313058412972,-39129734782],[791133982760772,-275855660139060,33752025384768,-1757499735612,33266812980],[911955944502348,-201426166614072,15874804296861,-519558296220,5782886211],[-1974094282568172,573787299616560,-63158907757455,3133155001368,-59340679197],[1579132881833184,-524116181975742,66091322401693,-3759183033762,81453107027],[-473478518386680,189355586363882,-28905256749663,1988862161530,-51845715021],[-233344019487432,74067166663700,-7678668317440,244718587408,1578635500],[320443399984656,-130280780357628,19364119843978,-1235643057780,28106737766],[-168342512522688,78997299292772,-13683689503146,1033293650044,-28550745654],[53243495872128,-28857366144640,5787091438424,-507897272936,16411883104],[-10921183901280,6940740521904,-1631722083136,167958400032,-6374541680],[1450145225280,-1108766421968,312766529352,-38551683712,1749807048],[-118585501440,113684574784,-39935097680,6094966448,-340938208],[5298585984,-6860902944,3197834736,-638340864,46162992],[-94870656,198844704,-140496624,40649184,-4126608],[0,-1275264,2350080,-1293408,218592],[0,-10368,5184,10368,-5184]]	1, 0, 1, 4	0	0	Number of skew Dyck paths of semilength n that have no primitive Dyck factors.
A129229	multrar	0	(self, n) -> CR.PHI.*(n).floor().-(self.a(n - 1))	"0"	a(n) = floor(n*r)-a(n-1), where r is the golden mean, (1+sqrt(5))/2.	nonn	0..73
A129344	diffs	0	new A067497()	First differences of A067497.
A129412	filnum	0	0	n -> ZV(n).^(2).+(6).*(n).+(13).IPP()		isprime(n^2+6*n+13)
A129438	simtraf	0	new A125096()	v -> v	a(n)=Annn(n)unlessn=(\d+)	0	A125096				Expansion of (phi(q) * phi(q^2) + phi(-q^2) * phi(q^4)) / 2 in powers of q where phi() is a Ramanujan theta function.
A129470	#nyi	0		Primes p such that the largest prime factor of p + 1 has ErdÅs - Selfridge class +  < N - 1 if p is of class N + 
A129471	#nyi	0		Primes p of Erdos - Selfridge class 3 +  with largest prime factor of p + 1 not of class 2 + 
A129472	#nyi	0		Primes p of Erdos - Selfridge class 4 +  with largest prime factor of p + 1 not of class 3 + 
A129473	#nyi	0		Primes p of Erdos - Selfridge class 5 +  with largest prime factor of p + 1 not of class 4 + 
A129477	#nyi	0		Primes p of Erdos - Selfridge class 6 +  with largest prime factor of p + 1 not of class 5 + 
A129478	#nyi	0		Primes p of Erdos - Selfridge class 7 +  with largest prime factor of p + 1 not of class 6 + 
A129542	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(2)).+(1)	""	new A006880(), new A007508()	a(n)=Annn(n)-(\d+)*Annn(n)+(\d+)	2,1
A129543	multrafd	0	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A003188()	new A000040()	a(n)=Annn((\d+)+Annn(n))
A129560	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A054523(), new A128174()	Annnnnn * Annnnnn
A129597	lambdan	1	n -> n == 1 ? Z.ONE : ZV(n).^(2).*(2)./(LPF(n))	a(n) = 2*n^2/g
A129652	trilambn	0	0	0	(n, k) -> Rationals.SINGLETON.sum(0, n - k, i -> new Q(BI(n - k - 1, i), FA(n - k - i))).*(FA(n))./(FA(k)).num()						Exponential Riordan array [e^(x/(1-x)),x].
A129684	trilambn	0	0	0	(n, k) -> FA(n).*(Z_1(n - k).+(1))./(FA(k))./(Z2((n - k)/2))./(2)						Exponential Riordan array [1/(1-x^2/2), x].
A129710	tablamb	1	1	n -> new Integer[] { 0, n/2 }	(n, k) -> BI(n - k, k).+(BI(n - k - 1, k))	 for n >= 1 and 0 <= k <= floor(n/2).
A129753	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A000040(), new A018252()
A129831	altsum	0	new A006882()	"-+"	 Alternating sum of double factorials: n!! - (n-1)!! + (n-2)!! - ... 1!!.
A129864	insect2	1	new A000959()	new A006567()
A129927	filter	1	new A000567()	v -> JF(v).bigOmega() == 3	3-almost prime octagonal numbers.
A129934	lambdan	0	(n) -> RU(0, n, j -> new Q(FA(2*j), FA(j).^(2)).^(2).*(Q.HALF.^(5*j))).num()
A129968	simtraf	1	new A061909().skip(1)	v -> ZV(ZUtils.digitSum(v))	a(n) = sum of digits of A061909(n).
A129971	simtraf	1	new A129968()	v -> v.^(2)	.
A129979	moetrafi	1	new A007427()	, 0	 with changed signs except for A007427(1) = 1; i.e., inverse Moebius transform of (1, 2, 2, -1, 2, -4, 2, 0, -1, -4, ...).
A130035	lambdan	0	(n) -> RU(0, n, j -> new Q(FA(2*j), FA(j).^(2)).^(2).*(Q.HALF.^(6*j))).num()
A130036	lambdan	0	(n) -> RU(0, n, j -> new Q(FA(2*j), FA(j).^(2)).^(2).*(Q.HALF.^(6*j))).den()
A130037	lambdan	0	n -> RU(0, n, j -> new Q(FA(2*j), FA(j).^(2)).^(2).*(Q.HALF.^(6*j))).num()
A130039	lambdan	0	n -> RU(0, n, j -> new Q(FA(2*j).^(2), FA(j).^(4).*(80).^(j))).num()	numer(sum((((2*j)!/(j!^2))^2)*((1/(5*2^4))^j),j=0..n)), n>=0.
A130040	lambdan	0	n -> RU(0, n, j -> new Q(FA(2*j).^(2), FA(j).^(4).*(80).^(j))).den()	denom(sum((((2*j)!/(j!^2))^2)*((1/(5*2^4))^j),j=0..n)), n>=0.
A130064	multraf	1	(self, n) -> ZV(n).*(self.s(0))./(self.s(1))	""	new A006530(), new A020639()
A130065	multraf	1	(self, n) -> ZV(n).*(self.s(0))./(self.s(1))	""	new A020639(), new A006530()
A130080	lambdan	1	n -> CR.TEN.^(new Q(n - 1,  6)).ceil()	a(n) = ceiling(10^((n-1)/6)).
A130081	lambdan	1	n -> CR.TEN.^(new Q(n - 1,  7)).ceil()	a(n) = ceiling(10^((n-1)/7)).
A130082	lambdan	1	n -> CR.TEN.^(new Q(n - 1,  8)).ceil()	a(n) = ceiling(10^((n-1)/8)).
A130083	lambdan	1	n -> CR.TEN.^(new Q(n - 1,  9)).ceil()	a(n) = ceiling(10^((n-1)/9)).
A130084	lambdan	1	n -> CR.TEN.^(new Q(n - 1, 10)).ceil()	a(n) = ceiling(10^((n-1)/10))
A130189	lambdan	0	(n) -> RU(0, n, k -> new Q(S2(n, k), ZV(k+1))).*(Z_1(n)).num()
A130190	lambdan	0	(n) -> RU(0, n, k -> new Q(S2(n, k), ZV(k+1))).*(Z_1(n)).den()
A130272	simtraf	1	new RecordPositionSequence(1, new A054269(), 1)	v -> Puma.primeZ(v)	Where records occur in A054269.						Primes p for which the period of the continued fraction of sqrt(p) increases.
A130380	simtraf	0	new A000108()	v -> v.testBit(0) ? v.+(1)./(2) : v./(2)	a(n) = ceiling(A000108(n)/2)
A130413	lambdan	0	n -> RU(1, n, j -> new Q(Z_1(j + 1), ZV(2*j + 1).*(ZV(2*j + 1).^(2).-(1)))).num()	er(1+ (4/3)*add(((-1)^(j+1))/((2*j+1)*((2*j+1)^2-1)), j=1..n)):
A130414	lambdan	0	n -> RU(1, n, j -> new Q(Z_1(j + 1), ZV(2*j + 1).*(ZV(2*j + 1).^(2).-(1)))).den()	om(1+ (4/3)*add(((-1)^(j+1))/((2*j+1)*((2*j+1)^2-1)), j=1..n)):
A130545	lambdan	1	(n) -> RU(1, n, k -> new Q(Z.TWO, BI(2*k, k))).num()
A130546	lambdan	1	(n) -> RU(1, n, k -> new Q(Z.TWO, BI(2*k, k))).den()
A130547	lambdan	1	(n) -> RU(1, n, k -> new Q(Z.ONE, BI(2*k, k))).-(new Q(1, 3)).*(Z.SIX).num()	Numerators of 6*((Sum_{k=1..n} 1/binomial(2*k,k)) - 1/3), n >= 1.
A130548	lambdan	1	(n) -> RU(1, n, k -> new Q(Z.ONE, BI(2*k, k))).-(new Q(1, 3)).*(Z.SIX).den()
A130549	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.TWO, BI(2*k, k).*(k*k))).num()
A130550	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.TWO, BI(2*k, k).*(k*k))).den()
A130551	lambdan	0	(n) -> RU(1, n, j -> new Q(Z_1(j - 1), ZV(j).^(3).*(BI(2*j, j)))).*(Z.TWO).num()	r(n):=2*sum(((-1)^(j-1))/((j^3)*binomial(2*j,j)),j=1..n)
A130552	lambdan	0	(n) -> RU(1, n, j -> new Q(Z_1(j - 1), ZV(j).^(3).*(BI(2*j, j)))).*(Z.TWO).den()
A130553	lambdan	0	(n) -> RU(1, n, j -> new Q(Z.ONE, BI(2*j, j).*(j))).*(Z.TWO).num()
A130554	lambdan	0	(n) -> RU(1, n, j -> new Q(Z.ONE, BI(2*j, j).*(j))).*(Z.TWO).den()
A130557	lambdan	0	(n) -> RU(2, n, j -> new Q(Z.ONE, ZV(j).^(3).*(j*j - 1))).*(ZV(24)).num()
A130558	lambdan	0	(n) -> RU(2, n, j -> new Q(Z.ONE, ZV(j).^(3).*(j*j - 1))).*(ZV(24)).den()
A130593	insect2	1	new A001358()	new A001969()
A130611	insect2	1	new A000073()	new A009000()
A130684	trilambn	0	1	1	(n, k) -> BI(k + 2, 3).*(2*n - k + 1)./(2)	T(n, k) = binomial(k+2, 3)*(2*n - k + 1)/2
A130704	insect2	1	new SimpleTransformSequence(1, new A002385(), v -> v.^(2))	new A034961()		???					Palindromic primes whose squares are the sum of three consecutive primes.
A130887	lambdan	0	n -> SD(n, d -> Z2(d).-(1))	Inverse Moebius transform of the Mersenne numbers: a(n) = Sum_{d|n} (2^d - 1).
A130904	#nyi	0		Numbers n such that the trajectory of the map n -> (n  +  lpf(n)) / 2 reaches 3, where lpf(n) is the least prime factor of n (A020639)
A130911	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A200247(), new A200245()	???
A131052	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A131047(), new A000012()	Annnnnn * Annnnnn
A131236	rowsum	0	new A131235()
A131390	inverse	1	new A131388()	0	0
A131395	inverse	1	new A131393()	0	0
A131443	lambdan	0	n -> { final A068451 mSeq = new A068451(); return RU(1, n, k -> new Q(mSeq.next(), FA(k))).num(); }	a(n)=numerator(r(n)), with r(n):=sum(b(k)/k!,n=1..n) with b(k):=â¬068451(k ) (factorial expansion of phi).
A131444	lambdan	0	n -> { final A068451 mSeq = new A068451(); return RU(1, n, k -> new Q(mSeq.next(), FA(k))).den(); }	Denominators of n-th approximation of factorial (also called harmonic) expansion of the golden section phi:=(1+sqrt(5))/2.
A131445	lambdan	0	n -> { final A075874 mSeq = new A075874(); return RU(1, n, k -> new Q(mSeq.next(), FA(k))).num(); }	a(n)=numerator(r(n)), with r(n) = Sum_{k=1..n} b(k)/k! with b(k) = â¬075874(k) (factorial expansion of Pi).
A131446	lambdan	0	n -> { final A075874 mSeq = new A075874(); return RU(1, n, k -> new Q(mSeq.next(), FA(k))).den(); }	a(n)=denominator(r(n)), with r(n):=sum(b(k)/k!,n=1..n) with b(k):=â¬075874(k) (factorial expansion of Pi).
A131447	lambdan	0	n -> { final A096622 mSeq = new A096622(); return RU(1, n, k -> new Q(mSeq.next(), FA(k))).num(); }	a(n)=numerator(r(n)), with r(n):=sum(b(k)/k!,n=1..n) with b(k):= â¬096622(k) (factorial expansion of gamma).
A131448	lambdan	0	n -> { final A096622 mSeq = new A096622(); return RU(1, n, k -> new Q(mSeq.next(), FA(k))).den(); }	a(n)=denominator(r(n)), with r(n):=sum(b(k)/k!,n=1..n) with b(k):= â¬096622(k) (factorial expansion of gamma).
A131453	filter	0	new A005981()	(k, v) -> (k & 1) == 0
A131454	filter	0	new A005981()	(k, v) -> (k & 1) == 1
A131492	filnum	1	1	k -> ZV(k).mod(SD(k, d -> Functions.CARMICHAEL_LAMBDA.z(d))).isZero()	n such that (sum_{d|n} A002322(d)) | n.
A131607	simtraf	4	new A001333().skip(4)	v -> v./(10)	a(n)=floor(Annn(n)/(\d+))	10
A131613	filnum	0	0	n -> ZV(3).^(n).toString().indexOf('9') < 0	Numbers n such that the decimal expansion of (\d+)^n contains no (\d+)
A131614	filnum	0	0	n -> ZV(3).^(n).toString().indexOf('8') < 0	Numbers n such that the decimal expansion of (\d+)^n contains no (\d+)
A131615	filnum	0	0	n -> ZV(3).^(n).toString().indexOf('7') < 0	Numbers n such that the decimal expansion of (\d+)^n contains no (\d+)
A131616	filnum	0	0	n -> ZV(3).^(n).toString().indexOf('6') < 0	Numbers n such that the decimal expansion of (\d+)^n contains no (\d+)
A131617	filnum	0	0	n -> ZV(3).^(n).toString().indexOf('5') < 0	Numbers n such that the decimal expansion of (\d+)^n contains no (\d+)
A131618	filnum	0	0	n -> ZV(3).^(n).toString().indexOf('4') < 0	Numbers n such that the decimal expansion of (\d+)^n contains no (\d+)
A131627	filnum	0	0	n -> ZV(3).^(n).toString().indexOf('1') < 0	Numbers n such that the decimal expansion of (\d+)^n contains no (\d+)
A131629	filnum	0	0	n -> ZV(3).^(n).toString().indexOf('3') < 0	Numbers n such that the decimal expansion of (\d+)^n contains no (\d+)
A131696	simtraf	0	new A134537()	v -> v.sqrt()	Square roots of Annnnnn
A131802	tuptraf	0	(n, s) -> s[0].-(s[1].*(2))	"1"	new A057567(), new A001055()	a(1) = 1; for n > 1, a(n) = A057567(n) - 2*A001055(n).
A131842	diffs	0	new A007097()	First differences of A007097.
A131850	insect2	1	new A014612()	new A000069()
A132064	multrar	1	(self, n) -> Functions.REVERSE.z(self.a(n - 1).*(4))	"1"	a(n) = reverse(4 * a(n-1)) where a(1) = 1
A132078	multrar	1	(self, n) -> Functions.REVERSE.z(self.a(n - 1).*(6))	"1"	a(n) = reverse(6 * a(n-1)) where a(1) = 1.
A132113	multrar	1	(self, n) -> Functions.REVERSE.z(self.a(n - 1).*(8))	"1"	a(n) = reverse(8 * a(n-1)) where a(1) = 1.
A132114	multrar	1	(self, n) -> Functions.REVERSE.z(self.a(n - 1).*(7))	"1"	a(n) = reverse(7 * a(n-1)) with a(1) = 1.
A132140	filnum	1	1	k -> Integer.toString(k, 3).matches("1[12]*")	Numbers containing no zeros in ternary representation and with an initial 1.	nonn,b
A132141	filnum	1	1	k -> Integer.toString(k, 3).matches("1[012]*")	Numbers whose ternary representation begins with 1.	nonn,base,easy	1..10000
A132678	filtpos	0	0	new A096535()	v -> v.equals(ZV(1))	Indices of (\d+)s in Annnnnn	m	i 
A132775	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A007818(), new A132774()	Annnnnn * Annnnnn
A132958	lambdan	1	n -> RD(n, d -> new Q(Z_1(d+1), FA(d))).*(FA(n)).num()
A132960	lambdan	1	n -> RD(n, d -> new Q(Z_1(d + 1), FA(d).*(ZV(n/d).^(d)))).*(FA(n)).num()	a(n) = n!*Sum_{d|n} (-1)^(d+1)/(d!*(n/d)^d).
A132962	lambdan	1	n -> RD(n, d -> new Q(Z_1(d + 1), FA(d).*(FA(n/d).^(d)))).*(FA(n)).num()
A133111	lingf	1	0,0,0,0,1,5,5,1	1,-11,55,-165,330,-462,462,-330,165,-55,11,-1	0						a(n) = 1/(1!*2!*3!*4!)*sum {1 <= x_1, x_2, x_3, x_4 <= n} |det V(x_1,x_2,x_3,x_4)|, where V(x_1,x_2,x_3,x_4) is the Vandermonde matrix of order 4.
A133361	multrar	1	(self, n) -> Functions.REVERSE.z(self.a(n - 1).*(9))	"1"	a(n) = reverse(9 * a(n-1)) where a(1) = 1.
A133375	lambdan	0	n -> Functions.DIGIT_SORT_ASCENDING.z(CAT(n))	Catalan numbers with digits sorted in increasing order and zeros suppressed.
A133383	lambdan	0	n -> ZV(11).*(Z.TEN.^(2*n)).-(1)
A133447	insect2	1	new A100959()	new A007592()							Nonsemiprime hyperperfect numbers.
A133498	simtraf	0	new A007053()	v -> v.sqrt()	a(n)=floor(sqrt(Annn(n)))
A133514	insect2	1	new A002113()	new A046101()
A133725	moetraf	1	new A000326()	, 0	#
A133726	moetraf	1	new A000129()	, 0	
A133783	filter	0	new A057436()	PRIME	
A133801	lambdan	0	n -> Z.valueOf(Jaguar.factor(Z.THREE.^(n).-(1)).omega())	3,1	Number of distinct prime divisors of (\d+)^n -(\d+)	m	i     
A133893	filnum	1	1	m -> BI(m + 3, m).mod(3) == 0	3,3,0	Numbers m such that binomial(m+(\d+),m) mod (\d+)= (\d+)
A133896	filnum	1	1	m -> BI(m + 6, m).mod(6) == 0	6,6,0	Numbers m such that binomial(m+(\d+),m) mod (\d+)= (\d+)     
A133899	filnum	1	1	m -> BI(m + 9, m).mod(9) == 0	9,9,0	Numbers m such that binomial(m+(\d+),m) mod (\d+)= (\d+)
A133902	tuptraf	0	(n, s) -> (n == 0) ? Z.ONE : s[0].gcd(ZV(n)).equals(Z.ONE) ? s[0].*(JF(n).sigma0()) : s[0]./(s[0].gcd(ZV(n)))	"1"	PREVIOUS	a(n) = a(n-1)* d(n) if gcd(n,a(n-1))=1, otherwise a(n) = a(n-1)/gcd(n,a(n-1)). Here gcd(n,a(n-1)) is greatest common divisor, 
A133903	tuptraf	0	(n, s) -> (n == 0) ? Z.ONE : (s[0].mod(3) != 0 ? s[0].+(JF(n).sigma0()) : s[0]./(3))	"1"	PREVIOUS	a(n) = a(n-1) + A000005(n-1) if a(n-1) is not divisible by 3, otherwise a(n) = a(n-1)/3.	easy,nonn	1..10000	nyi	_Ctibo
A133904	tuptraf	0	(n, s) -> (n == 0) ? Z.ONE : (s[0].testBit(0) ? s[0].gcd(ZV(n - 1)).*(s[0]).+(JF(n).sigma0()) : s[0]./(2))	"1"	PREVIOUS	a(n) = gcd(a(n-1),n-1)*a(n-1) + d(n-1) if a(n-1) is not divisible by 2, otherwise a(n) = a(n-1)/2, where gcd denotes common diA291353	lambdan	0	n -> ZV(10).^(44*n).-(1).*(9)./(89)	a(n) = 9*(10^(44*n) - 1)/89
A134080	filter	0	new A053723()	(n, v) -> (n & 1) == 0
A134116	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(34))	Primes p such that q-p =(\d+), where q is the next prime after
A134117	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(36))	Primes p such that q-p =(\d+), where q is the next prime after
A134120	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(42))	Primes p such that q-p =(\d+), where q is the next prime after
A134121	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(44))	Primes p such that q-p =(\d+), where q is the next prime after
A134122	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(46))	Primes p such that q-p =(\d+), where q is the next prime after
A134123	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(48))	Primes p such that q-p =(\d+), where q is the next prime after
A134124	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(50))	Primes p such that q-p =(\d+), where q is the next prime after
A134127	multrafd	1	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A134126()	new A000040()	a(n)=Annn((\d+)+Annn(n))
A134129	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A134126().skip(1)	new A007504()	a(n)=Annn(Annn(n+(\d+)))	1	D007504,A134126
A134370	lambdan	0	n -> FA(2*n+1).^(n+2)
A134460	diffs	0	new A067186()	First differences of A067186.
A134678	recpos	0	new A069360()	, 1	Where records occur in A069360.
A134743	diffs	0	new A134736()	First differences of A134736.
A134799	lambdan	0	n -> ZV(3).^((ZV(3).^(n).-(1))./(2))
A134805	lambdan	0	n -> RU(1, n, i -> new Q(Z.ONE, BI(2*i, i).*(i*i))).den()
A135048	simtraf	1	new A107689()	v -> Puma.primePiZ(v)	a(n)=primepi(Annn(n))
A135110	filamb	0	1	n -> ZUtils.digitSum(n, 2) * 10 == ZUtils.digitSum(n, 10) * 2	Positive numbers such that the digital sum base 2 and the digital sum base 10 are in a ratio of 2:10.
A135111	filamb	0	1	n -> ZUtils.digitSum(n, 2) * 3 == ZUtils.digitSum(n, 3) * 2	Numbers such that the digital sum base 2 and the digital sum base 3 are in a ratio of 2:3.
A135120	filamb	0	1	n -> { final long s2 = ZUtils.digitSum(n, 2); final long s3 = ZUtils.digitSum(n, 3); return s2 == s3 && s3 == ZUtils.digitSum(n, 10); }	2 and the digital sum base 3 and the digital sum base 10 all are equal.
A135121	filamb	0	0	n -> { final long s2 = ZUtils.digitSum(n, 2); final long s3 = ZUtils.digitSum(n, 3); return s2 == s3 && s3 == ZUtils.digitSum(n, 5); }	2 and the digital sum base 3 and the digital sum base 5 all are equal.
A135122	filamb	0	1	n -> { final long s2 = ZUtils.digitSum(n, 2); final long s3 = ZUtils.digitSum(n, 3); return s2 == s3 && s3 == ZUtils.digitSum(n, 4); }	2 and the digital sum base 3 and the digital sum base 4 all are equal.
A135123	filamb	0	1	n -> { final long s2 = ZUtils.digitSum(n, 2); final long s3 = ZUtils.digitSum(n, 3); return s2 == s3 && s3 == ZUtils.digitSum(n, 6); }	2 and the digital sum base 3 and the digital sum base 6 all are equal.
A135124	filamb	0	1	n -> { final long s2 = ZUtils.digitSum(n, 2); final long s4 = ZUtils.digitSum(n, 4); return s2 == s4 && s4 == ZUtils.digitSum(n, 8); }	2, base 4 and base 8 are all equal.
A135125	filamb	0	1	n -> { final long s2 = ZUtils.digitSum(n, 2); final long s5 = ZUtils.digitSum(n, 5); return s2 == s5 && s5 == ZUtils.digitSum(n, 10); }	2 and the digital sum base 5 and the digital sum base 10 all are equal.
A135133	lambdan	0	n -> ZV((Integer.bitCount(n)/3) & 1)	a(n) = floor(S2(n)/3) mod 2, where S2(n) denotes the binary weight of n.	no
A135136	lambdan	0	n -> ZV((Integer.bitCount(n)/2) & 1)	a(n) = floor(S2(n)/2) mod 2, where S2(n) is the binary weight of n.	nonn	0.
A135342	tuptraf	0	(n, s) -> s[0].*(2).-(s[1]).+(JF(n - 1).phi())	"1,3,5"	PREVIOUS,PREVIOUS,PREVIOUS	a:= proc(n) option remember; `if`(n<4, [0, 1, 3, 5][n+1],2*a(n-1)-a(n-2)+numtheory[phi](n-1))
A135374	lambdan	1	n -> Functions.DIGIT_SORT_ASCENDING.z(Z2(n).-(1))	a(n) = A004185(2^n - 1) = 2^n - 1, base 10, with digits sorted in increasing order and zeros suppressed.
A135585	lambdan	0	n -> SU(1, n, i -> ZV((Integer.bitCount(i)/3) & 1))	a(n) = Sum_{i=1..n} (floor(S2(i)/3) mod 2), where S2(i) = A000120(i).
A135622	parmof3	1	A070080	SQUARE16	s -> isTriangle(s)	16*Area^2 of integer triangles [?070080(n),?070081(n),?070082(n)].
A135726	filter	0	new LambdaSequence(0, n -> FM(n, 3).-(1))	PRIME	Primes of the form n!!!-1	n>0.
A135736	tuptraf	0	(n, s) -> new Q(s[0].*(n), s[1]).round()	""	new A001008(), new A002805()	a(n) = round(n*A001008(n)/A002805(n)) 
A135758	lambdan	0	n -> BI(n*(n + 1), n*(n+1)/2)./(n*(n + 1)/2 + 1)
A135772	filamb	0	1	v -> JF(v).sigma0().equals(ZV(v.toString(2).length()))	Numbers having number of divisors equal to number of binary digits
A135773	filamb	0	1	v -> JF(v).sigma0().equals(ZV(v.toString(3).length()))	Numbers having number of divisors equal to number of digits in base 3.
A135774	filamb	0	1	v -> JF(v).sigma0().equals(ZV(v.toString(4).length()))	Numbers having number of divisors equal to number of digits in base 4.
A135775	filamb	0	1	v -> JF(v).sigma0().equals(ZV(v.toString(5).length()))	Numbers having number of divisors equal to number of digits in base 5.
A135776	filamb	0	1	v -> JF(v).sigma0().equals(ZV(v.toString(6).length()))	Numbers having number of divisors equal to number of digits in base 6.
A135777	filamb	0	1	v -> JF(v).sigma0().equals(ZV(v.toString(7).length()))	Numbers having number of divisors equal to number of digits in base 7.
A135778	filamb	0	1	v -> JF(v).sigma0().equals(ZV(v.toString(8).length()))	Numbers having number of divisors equal to number of digits in base 8.
A135864	lambdan	0	n -> BI(new Q(n, 3), n)./(new Q(-2*n, 3).+(1)).*(ZV(9).^(n)).num()	a(n)=9^n*binomial(n/3, n)/(1-2*n/3)
A135951	central	0	new A135950()	Central terms of triangle A135950, the matrix inverse of triangle A022166.
A135960	recpos	0	new A134852()	, 0	Indices where records occur in A134852.
A136024	#lpf	0	odd composites less than 10^n
A136030	#spf	0	composite Mersenne numbers
A136031	#lpf	0	composite Mersenne numbers
A136035	multraf	1	(self, n) -> self.s(0).mod(self.s(1))	""	new A001348(), new A008864()
A136126	trilambn	1	1	0	(n, k)-> SU(1, k + 1, i -> Z_1(k + 1 - i).*(FA(i)).*(ZV(i).^(n - 1 - k)).*(S2(k + 1, i)))	T(n,k)= Sum_{i=1..k+1} (-1)^(k+1-i)*i!*i^(n-1-k)*Stirling2(k+1,i)(0 <= k <= n-1).
A136246	lambdan	0	n -> SU(0, 3*n, j -> BI(BI(j, 3).+(n-1), n).*(SU(j, 3*n, i -> Z_1(i-j).*(BI(i, j)))))
A136328	lambdan	0	n -> RU(1, n - 1, k -> new Q(k).*(BI(ZV(n), new Q(k, 2).ceiling())).*(BI(n-1, k/2)).*(BI(2*n - 1, n - 1))./(Z.TWO)).num() 
A136351	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A014545().skip(1)	new A002110()	a(n)=Annn(Annn(n+(\d+)))
A136400	lambdan	0	n -> new Z(n.toString().replaceAll("[2-9]", "1"))	Replace all digits greater than 1 with 1 (in decimal representation).	nonn,base,easy	0..9999	nyi
A136419	lambdan	0	n -> BI((n + 2)*(n + 1), (n + 1)*n)	a(n) = binomial((n+2)*(n+1),(n+1)*n).	nonn	0..200	nyi
A136428	diffs	0	new A064770()	First differences of A064770.
A136463	lambdan	0	n -> BI(ZV(n+1).*(Z2(n-1)), ZV(n))
A136464	lambdan	0	n -> new Q(BI(ZV(n+1).*(Z2(n-1)), ZV(n)), ZV(n+1)).num()
A136466	lambdan	0	n -> BI(Z2(n - 1).*(3), n)
A136483	lambdan	0	n -> RU(1, n/2, k -> new Q(n, 2).^(2)     .-(k*k))     .num().sqrt()	Sum_{k=1..floor(n/2)} floor(sqrt((n/2)^2 - k^2)).
A136485	simtraf	0	new A136483()	v -> v.*(4)
A136494	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A093659(), new A139329()	a(n) = A093659(n) * A139329(n).
A136513	lambdan	0	n -> RU(1, n/2, k -> new Q(n, 2).^(2).-(k*k)).*(2).num().sqrt()
A136515	lambdan	0	n -> RU(1, n,   k -> new Q(2*n + 1, 2).^(2).-(k*k)).*(2).num().sqrt()
A136655	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A140210(), new A140211()	a(n) = A140210(n) * A140211(n). - _R. J. Mathar_, Jun 27 2008
A136801	#lpf	0	the composites in the n - th prime gap larger than 2
A137148	filter	1	new A002618()	(k, v) -> !ZV(k).IPP()	a(n) = n*phi(n) for nonprime n.
A137155	lambdan	0	n -> SU(0, n/2, k -> BI(Z2(k).+(n - 2*k - 1), ZV(n - 2*k))) 	a(n)=sum(k=0, n\2, binomial(2^k+n-2*k-1, n-2*k))
A137220	lambdan	0	n -> SU(0, 3*n, j -> BI(BI(j, n).+(2),   3).*(SU(j, 3*n, i -> Z_1(i-j).*(BI(i, j)))))
A137265	lambdan	0	n -> RU(0, n/2, k -> new Q(Z_1(k).*(BI(3*n - 5*k    , k)).*(BI(3*n - 6*k, n - 2*k)), ZV(2*n - 4*k + 1)    )).num()
A137324	multraf	3	(self, n) -> self.s(0).+(self.s(1))	""	new A048865(), new A105221()	a(n)=Annn(n)+Annn(n)
A137377	partsun	1	new SimpleTransformSequence(1, new PrependSequence(0, new A051950(), 0), v -> v.abs())			Partial sums of |A051950|, i.e., a(n) = Sum_{i=2..n} |d(i)-d(i-1)| = Sum_{i=2..n} |A051950(i)|. - _M. F. Hasler_, Apr 21 2008					a(1)=0; for n >= 2, a(n) = a(n-1) + |d(n)-d(n-1)|, where d(n) is the number of positive divisors of n.
A137613	#nyi	0		Denote by Lpf(n) the least prime factor of n. Then a(n) = Lpf( 6 - n + Sum_{i=1..n - 1} a(i) ).  -  _Vladimir Shevelev_, Mar 03 2010
A137666	#simtraf	0	new A137664()	v -> SPF(v)	(n) = (p  +  1)^p  -  1 for p = prime(n)
A137682	invtrac	0	new A160096()	1	. - _Gary W. Adamson_, May 01 2009
A137729	lambdan	0	n -> n == 0 ? Z.ONE : FA(2*n)./(Z2(n)).+(FA(n))./(2*n)	seq(((2*n)!/2^n + n!) / (2*n),n=1..10);
A137731	multrar	1	(self, n) -> SU(1, n - 1, k -> S2(n - 1, k).*(self.a(k)).*(self.a(n - k)))	"1"
A137840	lambdan	0	n -> ZV(4).^(ZV(4).^(n))
A137841	lambdan	0	n -> ZV(5).^(ZV(5).^(n))
A137851	moetraf	1	new A061397()	, 0	[0, 2, 3, 0, 5, 0, 7, 0, 0, 0, 11, 0, 13, ...].
A138037	tuptraf	0	(n, s) -> s[0]./(2 - s[0].mod(2)).+(n)	"0"	PREVIOUS	a(0) = 0, a(n+1) = n + a(n)/(2 - a(n) mod 2).	nonn
A138038	recval	0	new A138037()		0..52	nyi	_Reinhard Zumkeller_
A138039	recpos	0	new A138037()	, 0	Where record values occur in ?138037.	nonn	0..60
A138123	lingf	1	0,1,1,2,0,0,1	1,0,-1,1,-1,-1,0,-1	0
A138166	filnum	1	1	n -> { final String sn = Integer.toString(n, 10); return sn.indexOf(Integer.toString(sn.length(), 10)) >= 0; }	Numbers containing their length in their decimal representation.	nonn,base	1..10000
A138167	filnum	1	1	n -> { final String sn = Integer.toString(n,  3); return sn.indexOf(Integer.toString(sn.length(),  3)) >= 0; }	Numbers containing their length in ternary representation.	nonn,base	1..10000
A138168	filnum	1	1	n -> { final String sn = Integer.toString(n,  2); return sn.indexOf(Integer.toString(sn.length(),  2)) >= 0; }	Numbers containing their length in binary representation.	nonn,base	1..10000
A138242	filter	1	new A000040()	p -> { final Z pp = p.*(12); return pp.+( 1).IPP() && pp.-( 1).IPP(); }		700,12, 1, 1
A138578	filnum	1	0	n -> Z2(2*n - 7).-(7).IPP()		isprime(2^(2*n-7)-7)
A138632	filnum	1	0	n -> ZV(17*n + 9).IPP()		isprime(17*n+9)
A138644	filter	1	new A000040()	v -> !v.*(5).+(2).IPP()
A138645	filter	1	new A000040()	v -> !v.*(7).+(2).IPP()
A138658	filter	1	new A000040()	p -> { final Z pp = p.*(54); return pp.+( 1).IPP() && pp.-( 1).IPP(); }		120,54, 1, 1
A138775	tablamb	0	0	n -> new Integer[] { 0, (n)/5 }	(n, k) -> BI(n - 2*k, 3*k)	T(n,k)=binomial(n-2k,3k) (n>=0, 0<=k<=n/5).	nonn,tabf
A138776	tablamb	1	1	n -> new Integer[] { 0, (n - 1)/5 }	(n, k) -> BI(n - 2*k, 3*k + 1)	T(n,k)=binomial(n-2k,3k+1) (n>=1, 0<=k<=(n-1)/5).	nonn,tabf
A138777	tablamb	2	2	n -> new Integer[] { 0, (n - 2)/5 }	(n, k) -> BI(n - 2*k, 3*k + 2)	T(n,k)=binomial(n-2k,3k+2) (n>=2, 0<=k<=(n-2)/5).	nonn,tabf
A138778	tablamb	5	5	n -> new Integer[] { 1, n/5 }	(n, k) -> BI(n - 2*k, 3*k).*(k)	T(n,k)=k*binomial(n-2k,3k) (n>=5, 1<=k<=n/5).	nonn,tabf
A138779	tablamb	6	6	n -> new Integer[] { 1, (n - 1)/5 }	(n, k) -> BI(n - 2*k, 3*k + 1).*(k)	T(n,k)=k*binomial(n-2k,3k+1) (n>=6, 0<=k<=(n-1)/5).	nonn,tabf
A138780	tablamb	7	7	n -> new Integer[] { 1, (n - 2)/5 }	(n, k) -> BI(n - 2*k, 3*k + 2).*(k)	T(n,k)=k*binomial(n-2k,3k+2) (n>=7, 1<=k<=(n-2)/5).	nonn,tabf
A138859	lambdan	2	n -> JF(FI(3*n).-(1)).leastPrimeFactor()	A020639(A000071(3n))
A138890	complem	1	new A000931().skip(4)	, Z.ZERO	Non-Padovan numbers.
A138965	simtraf	1	new A019519()	v -> SPF(v)	concatenation of first n odd numbers
A139013	simtraf	0	new A074924()	v -> v./(2)	a(n)= Annnnnn(n)/(\d+)
A139023	spf	1	FA(n).+(Z2(n)).-(1)	!  +  2^n  -  1
A139038	trilambd	1	0	0	(n, m) -> m <= n/2 ? mSeq.a(m + 6) : mSeq.a(n + 6 - m)	new A000931()
A139119	filter	1	new A118255()	PRIME	.
A139220	filnum	1	0	n -> ZV(n*(n + 1)/2 + 41).IPP()		isprime(n*(n+1)/2+41)
A139284	parmof2	1	A121805	2
A139313	multrafd	1	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A064149()	new A000040()	a(n)=Annn((\d+)+Annn(n))
A139370	filnum	1	1	n -> Integer.bitCount(n & 0xAAAA) >  Integer.bitCount(n & 0x5555)		lists n such that e(n) <  o(n).	nonn	1..56	nyi	_Nadia Heninger_ and _N. J. A. Sloane_
A139371	filnum	0	0	n -> Integer.bitCount(n & 0xAAAA) >= Integer.bitCount(n & 0x5555)		lists n such that e(n) <= o(n).	nonn,base	1..10000	nyi	_Nadia Heninger_ and _N. J. A. Sloane_
A139372	filnum	0	0	n -> Integer.bitCount(n & 0xAAAA) <= Integer.bitCount(n & 0x5555)		lists n such that e(n) >= o(n).	nonn,base	1..10000	nyi	_Nadia Heninger_ and _N. J. A. Sloane_
A139373	filnum	1	1	n -> Integer.bitCount(n & 0xAAAA) <  Integer.bitCount(n & 0x5555)		lists n such that e(n) >  o(n).	nonn	1..62	nyi	_Nadia Heninger_ and _N. J. A. Sloane_
A139710	#simtraf	0	{k: A000035(A033676(k) + A033677(k)) = 1}. - _R. J. Mathar_, May 11 2008
A139711	#simtraf	0	{k: A000035(A033676(k) + A033677(k)) = 0}. - _R. J. Mathar_, May 11 2008
A139770	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A000005()	new A061799()	a(n)=Annn(Annn(n))		D061799,D000005
A139787	filter	0	new A000959()	SEMIPRIME	
A140124	lambdan	2	n -> ZV(n).^(n).-(1 + n*(n-1))
A140215	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A140213(), new A140214()	Annnnnn(n)*Annnnnn(n)
A140316	lambdan	0	n -> new Z(Integer.toString(n, 3).replaceAll("0", ""), 10)	n Write n in base 3, delete 0s. keep base 3
A140351	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n, i -> bs.nextQ().*(BI(n,i)).*(ZV(i + 1))).num(); }
A140398	filtpos	0	1	new A140397()	v -> v.equals(ZV(0))	Numbers n such that Annnnnn(n)= (\d+)
A140399	filtpos	0	1	new A140397()	v -> v.equals(ZV(1))	Numbers n such that Annnnnn(n)= (\d+)
A140400	filtpos	0	1	new A140397()	v -> v.equals(ZV(2))	Numbers n such that Annnnnn(n)= (\d+)
A140538	lpf	1	ZV(n).^(4).*(2).+(1)
A140554	diffs	0	new A066841()	First differences of A066841.
A140638	multraf	1	(self, n) -> self.s(0).-(self.s(1)).-(self.s(2))	""	new A001187(), new A000272(), new A057500()	a(n)=Annn(n)-Annn(n)-Annn(n)
A140719	filter	0	new A153257()	PRIME	Primes in Annnnnn
A140810	filtpos	1	1	new A064413()	v -> ZUtils.isPolygonal(v, 7)	Positions of heptagonal numbers in the EKG sequence.
A140814	simtraf	0	new A002445()	(n, v) -> n < 1 ? ZV(3) : v		a(0)=3, a(n)=A002445(n) for n >= 1.
A140834	filter	0	new A004833()	PRIME	
A140892	simtraf	0	new A000045().skip(1)	(n, v) -> Z.valueOf(n - 1).pow(v).subtract(v.pow(n - 1))
A140897	filtpos	1	1	new A064413()	v -> ZUtils.isPolygonal(v, 6)	Positions of hexagonal numbers in the EKG sequence.
A141056	prepend	0	new A027760()	1
A141129	lambdan	1	n -> Puma.primeZ(n*n).-(n*n)	a(n) = prime(n^2) - n^2.
A141209	lambdan	0	n -> RU(0, n, k -> new Q(n - k + 1  ).^(k-1).*(Z_1(n-k)).*(S1(n ,k))).num()
A141258	moetrafi	1	new A002322()	, 0	 the Carmichael lambda function.
A141327	#nyi	0		If gcd(m,n) = 1 then a(m,n) = Least prime factor of m times Least prime factor of n, if gcd(m,n) > 1 then a(m,n) = min { Least prime factor of m times Least prime factor of n, Least prime factor of gcd(m,n) }
A141421	filter	0	new A091137()	(n, v) -> (n & 1) == 0	1st bisection of Annnnnn
A141459	tuptraf	0	(n, s) -> new Q(s[0], s[1]).*(Z.FOUR.^(n)).den()	Numerators of scaled Bernoulli numbers 4^n*B(n), with B(n) = A027641(n)/A027642(n).
A141545	filnum	1	0	n -> Functions.SIGMA.z(n).equals(Z.TWO.*(n).+(12))	== sigma(n)==(\d+)*n+(\d+)	2	12
A141547	filnum	1	0	n -> Functions.SIGMA.z(n).equals(Z.TWO.*(n).+(16))	== sigma(n)==(\d+)*n+(\d+)	2	16
A141668	multraf	0	(self, n) -> self.s(0).*(self.s(1))	""	new A000005(), new A000065()	a(n) = D000005(n)*(D000041(n) - 1) = D000005(n)*D000065(n).
A141710	simtraf	1	new A002997()	v -> SPF(v)	0	n - th Carmichael number A002997(n)
A142242	rowsum	0	new A143200().skip(1)
A142248	lingf	1	0,1,2,3,0,-3,-2	1,-1,-1,-1,1,1	0
A143039	lambdir	0	n -> SEQ.a(ZV(10).^(n).+(1))	new A000961()	a(n)=Annn((\d+)^n+(\d+))	10,1	D000961                   
A143201	#nyi	0		a(n) = f(n,1,1) where f(n,q,y) = if n=1 then y else if q=1 then f(n/p,p,1)) else f(n/p,p,y*(p - q + 1)) with p = A020639(n) = Least prime factor of n
A143202	filnum	1	1	k -> { final Z[] pq = JF(k).toZArray(); return pq.length == 2 && pq[0].+(2).equals(pq[1]); }	Numbers having exactly two distinct prime factors p, q with q=p+2.      nonn    1..250  nyi     _Reinhard Zumkeller_
A143203	filnum	1	1	k -> { final Z[] pq = JF(k).toZArray(); return pq.length == 2 && pq[0].+(4).equals(pq[1]); }	Numbers having exactly two distinct prime factors p, q with q=p+4.      nonn    1..250  nyi     _Reinhard Zumkeller_
A143205	filnum	1	1	k -> { final Z[] pq = JF(k).toZArray(); return pq.length == 2 && pq[0].+(6).equals(pq[1]); }	Numbers having exactly two distinct prime factors p, q with q=p+6.      nonn    1..250  nyi     _Reinhard Zumkeller_
A143356	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A051731(), new A006218()	Annnnnn * Annnnnn
A143392	tuptraf	1	(n, s) -> s[0].^(2).-(s[0].*(2)).-(s[1].^(2)).+(s[1].*(2))	"1,2,1"	PREVIOUS,PREVIOUS,PREVIOUS	a(n)=a(n-1)^2-2*a(n-1)-a(n-2)^2+2*a(n-2). 1, 2, 1
A143395	trilamb0	0	(n, k) -> SU(k, n, t -> BI(n, t).*(S2(t, k)).*(ZV(k).^(n-t)))	
A143444	moetraf	1	new A182986()	, 0	the primes prefaced by 0.
A143805	multrar	0	(self, n) -> SU(0, n - 1, k -> Z_1(n - k - 1).*(S1(n, k + 1)).*(self.a(k)))	"1"
A143818	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A143816(), new A143817()	a(n) = A143816(n) -   A143817(n). a(n) = sum {k = 0..floor((n-1)/3)} (Stirling2(n,3k+1) - Stirling2(n,3k+2)). Let R(n) = sum {k = 0..inf} (3k)^n/(3k)! for n = 0,1,2,... . Then R(n) = â¬143815(n)*R(0) + â¬143818(n)*R(1) + A143817(n)*R(2). Some examples are given below. This generalizes the Dobinski relation for the Bell numbers: sum {k = 0..inf} k^n/k! = A000110(n)*exp(1). See â¬143815 for more details. Compare with A024429, A024430 and A143628--A143631
A143823	multraf	0	(self, n) -> self.s(0).+(1)	"1"	new A054578()	v -> v.+(1)	for n>0. - _Alois P. Heinz_, Jan 17 2013
A143869	multraf	1	(self, n) -> ZV(n).*(self.s(0).+(1))./(2)	""	new A055653()	n*(new A055653()+1)/2
A144028	invtras	0	new A055615()	0	, n*mu(n).
A144031	invtrac	0	new A002321()	1	, Mertenss function.
A144186	lambdan	0	(n) -> new Q(BI(2*n, n), FA(n + 1)).num()
A144187	lambdan	0	(n) -> new Q(BI(2*n, n), FA(n + 1)).den()
A144293	simtraf	0	new A000110()	v -> v.equals(Z.ONE) ? Z.ONE : LPF(v)	n - th Bell number A000110(n) (or 1 if A000110(n) = 1)
A144422	simtraf	0	new A144416()	(n, v) -> v.*(FA(n))	a(n)= n!*Annnnnn(n)	m	i    
A144484	trilamb0	0	(n, k) -> BI(3 * n + 1 - k, n - k)
A144486	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A045920().skip(1)	new A000217()	a(n)=Annn(Annn(n+(\d+)))
A144531	#nyi	0		If gcd(m,n) = 1 then T(m,n) = Least prime factor of m times Least prime factor of n, if gcd(m,n) > 1 then T(m,n) = min { Least prime factor of m times Least prime factor of n, Least prime factor of gcd(m,n) }
A144553	multraf	1	(self, n) -> self.s(0).-(self.s(1)).-(self.s(2))	""	new A030228(), new A006747(), new A006749()	a(n)=Annn(n)-Annn(n)-Annn(n)
A144554	multraf	1	(self, n) -> self.s(0).-(self.s(1)).-(self.s(2)).-(self.s(3))	""	new A000105(), new A006749(), new A006746(), new A006748()	a(n)=Annn(n)-Annn(n)-Annn(n)-Annn(n)
A144567	#nyi	0		Primes of the form: Least prime factor of n  +  largest prime factor of n, n > 1
A144568	#nyi	0		Composites with prime sum of prime factors of n and nonprime difference largest prime factor of n  -  Least prime factor of n
A144589	simtraf	1	new A144570()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A144570
A144621	tuptraf	0	(n, s) -> s[0].*(s[0].*(3).-(s[1].^(2).*(2)))	"1,1,3"	PREVIOUS,PREVIOUS,PREVIOUS	a(n+2) = a(n+1) * (3*a(n+1) - 2*a(n)^2), n>=0
A144746	multrar	0	(self, n) -> self.a(n - 1).*(self.a(n - 1).-(1)).-(1)	"6"	a(n) = a(n-1)^2 - a(n-1) - 1 and a(0)=6.
A144938	filter	0	new A087679()	SQUARE	
A144964	simtraf	1	new A000108().skip(1)	v -> ZV(2).^(v).-(1)	a(n)=(\d+)^Annn(n)-(\d+)	2,1	A000108
A145037	lambdan	0	n -> { int[] dc = ZUtils.digitCounts(n, 2); return ZV(n == 0 ? 0 : dc[1] - dc[0]); }
A145203	multraf	1	(self, n) -> Puma.primePiZ(self.s(0))	""	new A002407()	pi(new A002407())
A145279	dirtraf	0	new A070562()	new A000045()	Fecundity of n-th Fibonacci number.
A145280	dirtraf	1	new A070562()	new A000040()	Fecundity of n-th prime.
A145375	lambdan	0	(n) -> RU(1, n, k -> new Q(Z_1(k + 1), BI(2*k, k))).num()
A145471	filter	1	new A000040().skip(1)	p -> { final Z pp = p.+( 5)     ; return pp.mod( 2) == 0 && pp./( 2).IPP(); }	[((\d+)+#)/(\d+)]&]
A145475	filter	1	new A000040()	p -> p.+(17)./(2).IPP()	[((\d+)+#)/(\d+)]&]
A145477	filter	1	new A000040()	p -> p.+(23)./(2).IPP()	[((\d+)+#)/(\d+)]&]
A145479	filter	1	new A000040()	p -> p.+(31)./(2).IPP()	[((\d+)+#)/(\d+)]&]
A145480	filter	1	new A000040().skip(1)	p -> { final Z pp = p.+(37)     ; return pp.mod( 2) == 0 && pp./( 2).IPP(); }	[((\d+)+#)/(\d+)]&]
A145481	filter	1	new A000040().skip(4)	v -> v.*(2).-(17).IPP()	A145475()	v -> v.*(2).-(17)	.
A145483	filter	1	new A000040().skip(5)	v -> v.*(2).-(23).IPP()	A145477()	v -> v.*(2).-(23)	.
A145485	filter	1	new A000040().skip(6)	v -> v.*(2).-(31).IPP()	A145479()	v -> v.*(2).-(31)	.
A145556	lambdan	0	(n) -> RU(1, n, k -> new Q(Z_1(k + 1), BI(2*k, k))).den()
A145559	lambdan	0	(n) -> RU(1, n, k -> new Q(Z_1(k + 1), BI(2*k, k).*(k*k))).num()	sum(((-1)^(k+1))/(binomial(2*k,k)*k^2),k=1..n).
A145560	lambdan	0	(n) -> RU(1, n, k -> new Q(Z_1(k + 1), BI(2*k, k).*(k*k))).*(Z.TWO).den()	sum(((-1)^(k+1))/(binomial(2*k,k)*k^2),k=1..n).
A145564	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(2*k, k).*(k + 1))).num()
A145565	lambdan	0	(n) -> RU(0, n, k -> new Q(Z.ONE, BI(2*k, k).*(k + 1))).den()	sum(1/(binomial(2*k,k)*(k+1)),k=0..n).
A145566	lambdan	0	(n) -> RU(2, n, k -> new Q(Z.ONE, BI(2*k, k).*(k - 1))).*(Z.SIX).num()	6*add(1/(binomial(2*k, k)*(k-1)), k=2..n)):
A145567	lambdan	0	(n) -> RU(2, n, k -> new Q(Z.ONE, BI(2*k, k).*(k - 1))).*(Z.SIX).den()	6*add(1/(binomial(2*k, k)*(k-1)), k=2..n)):
A145571	lambdan	0	(n) -> RU(1, n, k -> new Q(Z.ONE, Z.TEN.^(FA(k)))).num()	numerator(c(n)), with c(n):= Sum_{k=1..n} 1/10^(k!).
A145572	simtraf	0	new A145571()	(n, v) -> new Z(v.toString(), 2)	is A145571(n) (a decimal number with digits only from {0,1}) read as base 2 number converted back into decimal notation.
A145781	multraf	1	(self, n) -> self.s(0).^(2).-(self.s(1))	""	new A216144(), new A002110()	a(n)=Annn(n)^(\d+)-Annn(n)
A146077	#nyi	0		Numbers n such that gcd(n, 2^n - 2) does not equal the least prime factor of n
A146986	trilamb0	0	(n,k)-> n < 2 ? BI(n, k): BI(n, k).+((ZV(2).^(n-1)).*(BI(n - 2, k - 1)))
A146987	trilamb0	0	(n,k)-> n < 2 ? BI(n, k): BI(n, k).+((ZV(3).^(n-1)).*(BI(n - 2, k - 1)))
A146988	trilamb0	0	(n,k)-> n < 2 ? BI(n, k): BI(n, k).+((ZV(4).^(n-1)).*(BI(n - 2, k - 1)))
A146990	trilamb0	0	(n,k)-> n < 2 ? BI(n, k): BI(n, k).+((ZV(n).^(n-1)).*(BI(n - 2, k - 1)))
A147304	lambdan	0	n -> SU(1, Puma.primeZ(n).^(2).intValueExact() - 1, k -> BI(2*k, k))
A147555	simtraf	0	new A004022()	v -> SPF(v)	prime(n) - th repunit number
A147556	simtraf	0	new A004022()	v -> LPF(v)	prime(n) - th repunit number
A147809	simtraf	0	new A147810()	v -> v.-(1)
A147810	dirtrali	0	new A000005()	new A002522().skip(1)	(n, v) -> v./(2)	1	A000005(A002522(n))/2
A147822	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) !=  2*n) { ++k; } return ZV(k); }
A147823	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) !=  3*n) { ++k; } return ZV(k); }
A147824	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) !=  4*n) { ++k; } return ZV(k); }
A147825	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) !=  5*n) { ++k; } return ZV(k); }
A147826	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) !=  6*n) { ++k; } return ZV(k); }
A147827	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) !=  7*n) { ++k; } return ZV(k); }
A147828	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) !=  8*n) { ++k; } return ZV(k); }
A147829	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) !=  9*n) { ++k; } return ZV(k); }
A147830	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) != 10*n) { ++k; } return ZV(k); }
A147831	lambdan	0	n -> { int k = 0; while (Functions.DIGIT_SUM.i(k*n) != 11*n) { ++k; } return ZV(k); }
A147877	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A000041(2*n) - A000041(2*n-1) - A000070(n) + A000041(n) + A000041(n-1). - _Vaclav Kotesovec_, Nov 05 2016
A147878	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A000041(2*n) - 2*A000070(n) + 2*A000041(n) + A000041(n-1). - _Vaclav Kotesovec_, Nov 05 2016
A151569	parmof4	0	A151568	2	1	"1,2"
A151570	parmof4	0	A151568	1	1	"1,1"
A151571	parmof4	0	A151568	1	1	"1,2"
A151572	parmof4	0	A151568	1	2	"0,1"
A151573	parmof4	0	A151568	1	2	"1,1"
A151574	parmof4	0	A151568	1	2	"1,2"
A151702	parmof4	0	A151568	1	1	"1,0"
A151703	parmof4	0	A151568	1	2	"1,0"
A151704	parmof4	0	A151568	2	1	"1,0"
A151705	parmof4	0	A151568	2	2	"0,1"
A151706	parmof4	0	A151568	2	2	"1,0"
A151707	parmof4	0	A151568	2	2	"1,1"
A151708	parmof4	0	A151568	2	2	"1,2"
A151759	ordsup	0	new A036987().skip()	3	0,0,0
A151760	ordsup	0	new A036987().skip()	4	0,0,0,0
A151761	ordsup	0	new A036987().skip()	5	0,0,0,0,0
A151762	ordsup	0	new A036987().skip()	6	0,0,0,0,0,0
A151816	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A010050(), new A001818()	a(n)=Annn(n)-Annn(n)
A152058	filter	0	new A152057()	PRIME	Primes in Annnnnn
A152101	lambdan	1	n -> ZV(16).^(n).-(Z2(2*n-1).*(3)).-(1)	a(n)=16^n - 3*2^(2*n - 1) - 1.
A152121	multrar	0	(self, n) -> self.a(n - 1).^(2).-(Z.TWO.pow(Z2(n - 1).+(1)))	"4"	a(n) = a(n-1)^2 - 2^(1+2^(n-1))
A152206	simtraf	0	new A037308()	v -> ZV(ZUtils.digitSum(v, 2))	a(n) = sum of base-2 digits of A037308(n) = sum of base-10 digits of A037308(n).
A152230	triprov	0	A007318	A122196	Triangle read by rows, A007318 * A122196						Triangle read by rows, binomial transform of A122196
A152477	partsun	1	new A072214().skip(1)	Partial sums of PartitionsP of Fibonacci numbers.					Partial sums of PartitionsP of Fibonacci numbers.
A152592	lingf	0	0,0,0,0,1,-1,1,0,0,0,0,1,-1,1,-1,1,0,-1,1,0,0,-1,0,0,1,-1	1,-1,0,0,0,1,-1	0
A152724	tuptraf	0	(n, s) -> s[0].max(s[1])	""	new A000120(), new A023416()	a(n)=max(Annn(n),Annn(n))		A000120,A023416
A153011	multraf	1	(self, n) ->self.s(0).-(self.s(1)).+(1)	""	new A152770(), new A051953()
A153082	filnum	0	0	n -> !ZV(n).*( 2).+(13).IPP()		2,13	Numbers n such that (\d+)*n +(\d+) is not prime
A153085	filnum	0	0	n -> !ZV(n).*( 4).+( 5).IPP()		4,5	Numbers n such that (\d+)*n +(\d+) is not prime
A153086	filnum	0	0	n -> !ZV(n).*( 4).+( 7).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153088	simtraf	1	new A153343()	v -> v.+(1)	. - _Peter Bala_, Jan 25 2017
A153116	filter	1	new A000040()	p -> { final Z pp = p.^(2); return pp.+(12).IPP() && pp.-(12).IPP(); }	[#^(\d+)+{(\d+),-(\d+)},PrimeQ]&]	1000,2,12,12
A153119	filter	1	new A000040()	p -> { final Z pp = p.^(2); return pp.+(30).IPP() && pp.-(30).IPP(); }	[#^(\d+)+{(\d+),-(\d+)},PrimeQ]&]	1500,2,30,30
A153129	filnum	0	0	n -> !ZV(n).*( 8).+( 5).IPP()		8,5	Numbers n such that (\d+)*n +(\d+) is not prime
A153170	filnum	0	0	n -> !ZV(n).*( 3).+( 2).IPP()		3,2	Numbers n such that (\d+)*n +(\d+) is not prime
A153187	trilamb0	0	(n, k) -> PR(0, k + 1, j -> ZV(j *(n + 1) - 1)).negate()	 T(n, k) = -Product_{j=0..k+1} (j*(n+1) - 1).
A153189	trilamb0	0	(n, k) -> PR(0, k, j -> ZV(n*j + 1))	T(n, k) = n^(k+1)*Pochhammer(1/n, k+1).
A153217	lambdan	0	n -> ZV(n).^(n+3).-(ZV(n+3).^(n))
A153219	filnum	0	0	n -> !ZV(n).*( 6).+( 7).IPP()		6,7	Numbers n such that (\d+)*n +(\d+) is not prime
A153235	filnum	0	0	n -> !ZV(n).*( 8).+( 7).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153236	filnum	0	0	n -> !ZV(n).*( 8).+( 3).IPP()		8,3	Numbers n such that (\d+)*n +(\d+) is not prime
A153264	filnum	0	0	n -> !ZV(n).*(16).+(15).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153307	filnum	0	0	n -> !ZV(n).*(14).+( 3).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153308	filnum	0	0	n -> !ZV(n).*(10).+( 7).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153309	filnum	0	0	n -> !ZV(n).*( 3).+( 1).IPP()		3,1	Numbers n such that (\d+)*n +(\d+) is not prime
A153322	filter	1	new A000040()	p -> { final Z pp = p.^(3); return pp.+(12).IPP() && pp.-(12).IPP(); }	[#^(\d+)+{(\d+),-(\d+)},PrimeQ]&]	5000,3,12,12
A153327	filnum	0	0	n -> !ZV(n).*(16).+( 5).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153329	filnum	0	0	n -> !ZV(n).*( 5).+( 1).IPP()		5,1	Numbers n such that (\d+)*n +(\d+) is not prime
A153343	filnum	0	0	n -> !ZV(n).*( 5).+( 4).IPP()		5,4	Numbers n such that (\d+)*n +(\d+) is not prime
A153348	filnum	0	0	n -> !ZV(n).*(16).+( 3).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153351	filnum	0	0	n -> !ZV(n).*( 7).+( 2).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153380	filnum	0	0	n -> !ZV(n).*(10).+( 9).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153381	filnum	0	0	n -> !ZV(n).*(11).+( 5).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153383	filnum	0	0	n -> !ZV(n).*(12).+( 1).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153384	filnum	0	0	n -> !ZV(n).*(24).+( 1).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153400	filnum	0	0	n -> !ZV(n).*(18).+( 1).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153403	filnum	0	0	n -> !ZV(n).*(10).+( 3).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153464	filnum	0	0	n -> !ZV(n).*( 4).+( 9).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A153507	filter	1	new A000040()	p -> p.^(3).*( 2).+(3).IPP()	[(\d+)#^(\d+)+(\d+)]&]	500, 2,3,3
A153728	filter	0	new A000731()	(n, v) -> (n & 1) == 0
A153768	filter	1	new A000040().skip(2)	p -> p.*( 8).-( 9).IPP() && p.*(8).+( 9).IPP()	[(\d+)#-(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	600, 8, 9,8, 9
A154365	#nyi	0		Numbers n such that the Least prime factor of composite(n)  +  the largest prime factor of composite(n) is prime and the sum of prime factors (with multiplicity) of composite(n) is prime
A154366	#nyi	0		Numbers n such that the Least prime factor of composite(n) plus the largest prime factor of composite(n) is composite and the sum of prime factors of composite(n) (with multiplicity) is composite
A154402	moetrafi	1	new A036987()	, 0	Fredholm-Rueppel sequence, cf. A036987.
A154408	filter	1	new A000040().skip(1)	p -> { final Z pp = p.^( 2).+(1); return pp.mod(10) == 0 && pp./(10).IPP(); }	[(#^(\d+)+(\d+))/(\d+)]&]	200, 2, 1,10
A154413	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A006551(), new A018224()	a(n) = A006551(n) -   A018224(n).
A154418	filter	1	new A000040().skip(2)	p -> { final Z pp = p.^( 2).+(4); return pp.mod( 5) == 0 && pp./( 5).IPP(); }	[(#^(\d+)+(\d+))/(\d+)]&]	200, 2, 4, 5
A154569	partsun	0	new LambdaSequence(0, n -> ZV(2*n - 1).^(2*n + 1).+(ZV(2*n + 1).^(2*n-1)))	A00____()			Partial sums of (2n-1)^(2n+1)+(2n+1)^(2n-1).
A154611	filnum	0	0	n -> !ZV(n).*( 7).+( 3).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A154613	filter	1	new A000040()	p -> p.*(23).+(10).IPP()	[(\d+)#+(\d+)]&]		250,23,10
A154620	filter	1	new A000040()	p -> p.*(31).+(14).IPP()	[(\d+)#+(\d+)]&]		900,31,14
A154734	filter	1	new LambdaSequence(0, n -> ZV(n).*(n+1)./(2).+(Z_1(n).*(2)))	(n, v) -> (v.equals(ZV(2)) || v.-(1).IPP()) && (v.+(1)).IPP()
A154789	recpos	1	new A085543()	, 1	Where records occurs in A085543 for positive values of n.						Where records occurs in A085543 for positive values of n.
A154790	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A085544()	new A000041()	a(n)=Annn(Annn(n))		D000041,A085544
A154935	filnum	1	0	n -> ZV(n).^(7).-(2).IPP()		isprime(n^7-2)
A155047	#nyi	0		a(1) = 1, a(2) = 2, then a(n) = largest prime factor of the partial sum up to a(n - 1)
A155539	lambdan	0	n -> ZV(n).^(n+3).+(ZV(n+3).^(n))
A155723	filnum	0	0	n -> !ZV(n).*( 2).+( 9).IPP()		2,9	Numbers n such that (\d+)*n +(\d+) is not prime
A155731	tuptraf	1	(n, s) -> s[0].^(n).+(n)	"1"	PREVIOUS	a(n)=a(n-1)^n+n
A155854	filnum	0	0	n -> !ZV(n).*(13).+( 3).IPP()		13,3	Numbers n such that (\d+)*n +(\d+) is not prime
A155935	filnum	0	0	n -> !ZV(n).*(13).+( 5).IPP()		13,5	Numbers n such that (\d+)*n +(\d+) is not prime
A155941	filnum	0	0	n -> !ZV(n).*(16).+( 1).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A155945	filnum	0	0	n -> !ZV(n).*(24).+(13).IPP()		24,13	Numbers n such that (\d+)*n +(\d+) is not prime
A155953	insect2	1	new A005846()	new A006567()
A156004	filter	1	new A000040()	p -> p.*( 8).+(21).IPP()	[(\d+)#+(\d+)]&]		100, 8,21
A156005	filter	1	new A000040()	p -> p.*(16).+(45).IPP()	[(\d+)#+(\d+)]&]		100,16,45
A156061	multraf	1	(self, n) ->self.s(0)./(self.s(1))	""	new A003963(), new A290106()
A156109	filter	1	new A000040()	v -> v.+(18).IPP() && v.+( 36).IPP()	3000,18, 36
A156110	filter	1	new A000040()	v -> v.+(18).IPP() && v.+( 72).IPP()	3000,18, 72
A156111	filter	1	new A000040()	v -> v.+(18).IPP() && v.+(144).IPP()	2000,18,144
A156112	filter	1	new A000040()	v -> v.+(36).IPP() && v.+( 72).IPP()	3000,36, 72
A156123	filter	1	new A000040()	v -> v.+(36).IPP() && v.+(144).IPP()	3000,36,144
A156124	filter	1	new A000040()	v -> v.+(72).IPP() && v.+(144).IPP()	3000,72,144
A156542	lambdan	0	n -> SP(n, p -> ZV(Puma.primePi(2*p + 1) - Puma.primePi(2*p)))	a(n) = Sum_{p|n} (pi(2p+1) - pi(2p)), where p is a prime and pi(k) = A000720(k) - _Ridouane Oudra_, Aug 25 2019
A156759	#nyi	0		a(1) = 2, a(n + 1) is the Least composite number > a(n) with Least prime factor >= Least prime factor of a(n)
A156789	tablamb	0	0	n -> new Integer[] { 0, 2*n }	(n, k) -> BI(2*n, k).*(BI(2*k, k))						Irregular triangle, read by rows, T(n, k) = binomial(2*n, k)*binomial(2*k, k).
A157000	tablamb	2	2	n -> new Integer[] { 1, n/2 }	(n, k) -> BI(n - k - 1,k - 1).*(n)./(k)						Triangle T(n,k) = (n/k)*binomial(n-k-1, k-1) read by rows.
A157029	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A007318(), new A157019()	Annnnnn * Annnnnn
A157102	#nyi	0		a(n) = (n - 1)*(Least prime factor of n)  +  1
A157108	trilamb0	0	(n, k) -> BI(BI(n, k).*(n), k)
A157109	trilamb0	0	(n, k) -> BI(BI(n, (n - k)/2).*(n), k)
A157256	filter	1	new A000040()	p -> { final Z pp = p.^(5); return pp.+( 6).IPP() && pp.-( 6).IPP(); }	[#^(\d+)+{(\d+),-(\d+)},PrimeQ]&]	1200,5, 6, 6
A157696	holos	0	[0,1,-27,-904,-1660,1660,904,27,-1]	31,2521,97921,4974481,226965751,10783342081,504420084871	0	0	a(n) = A110391(5*n) /A110391(n) = 27*a(n-1) +904*a(n-2) +1660*a(n-3) -1660*a(n-4) -904*a(n-5) -27*a(n-6) +a(n-7). [From _R. J. Mathar_, Oct 18 2010]
A157764	filter	1	new A000040()	p -> p.^(16).+(65536).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	800,16,65536
A157904	invtrac	0	new A000055()	1	.
A158072	setdiff	1	new A000040()	new A158069()
A158093	lambdan	0	n -> BI(new Q(Z.ONE, Z.THREE.^(n)), n).*(ZV(3).^(n+n + n)).num()
A158318	filter	1	new A000040()	p -> p.*( 5).-( 2).IPP()	[(\d+)#-(\d+)]&]		300, 5, 2
A158333	multraf	0	(self, n) -> self.s(0).+(1)	""	new A054965()	1 + new A054965()
A158361	filter	1	new A000040()	p -> p.^( 4).+(   16).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	200, 4,   16
A158362	lambdan	0	n -> BI(ZV(n+1).^(3), ZV(n + 2))
A158511	simtraf	0	new A158504()	(n, v) -> v.-(n)	a(n)= Annnnnn(n)- n	m	i    
A158568	lambdan	1	n -> SU(1, Functions.FIBONACCI.i(n), i -> Functions.SIGMA0.z(i))	a(n) = Sum_{i=1..Fibonacci(n)} sigma_0(i) where sigma_0(n) is A00
A158569	lambdan	1	n -> SU(1, Functions.FIBONACCI.i(n), i -> Functions.FIBONACCI.z(i))	a(n) = Sum_{i=1..F(n)} F(i), n >= 1, where F(k) is A000045, Fibon
A158725	filnum	1	1	n -> LongUtils.gcd(n, 330) == 1 && !ZV(n).IPP() && !ZV(n).mod(PR(1, n.toString().length(), k -> Z.TEN)./(9)).isZero()	10	gcd(n,330)==1&&!isprime(n)&&n%(10^#Str(n)\9)
A158812	simtraf	1	new A158725()	v -> SPF(v)	entries in ?158725(n)
A158813	simtraf	1	new A158725()	v -> LPF(v)	entries in ?158725(n)
A159021	tuptraf	0	(n, s) -> s[0].add(s[0].sqrt())	"19"	PREVIOUS	NestList[#+Floor[Sqrt[#]]&,(\d+),(\d+)]	19,60
A159022	tuptraf	0	(n, s) -> s[0].add(s[0].sqrt())	"29"	PREVIOUS	NestList[#+Floor[Sqrt[#]]&,(\d+),(\d+)]	29,60
A159023	tuptraf	0	(n, s) -> s[0].add(s[0].sqrt())	"41"	PREVIOUS	NestList[#+Floor[Sqrt[#]]&,(\d+),(\d+)]	41,60
A159024	tuptraf	0	(n, s) -> s[0].add(s[0].sqrt())	"55"	PREVIOUS	NestList[#+Floor[Sqrt[#]]&,(\d+),(\d+)]	55,60
A159026	tuptraf	0	(n, s) -> s[0].add(s[0].sqrt())	"89"	PREVIOUS	NestList[#+Floor[Sqrt[#]]&,(\d+),(\d+)]	89,60
A159027	tuptraf	0	(n, s) -> s[0].add(s[0].sqrt())	"109"	PREVIOUS	NestList[#+Floor[Sqrt[#]]&,(\d+),(\d+)]	109,60
A159237	simtraf	1	new A046346()	v -> v./(JF(v).sopfr())	a(n) = A046346(n)/sopfr(A046346(n)) = A069324
A159274	tuptraf	0	(n, s) -> s[0].add(s[0].sqrt())	"209"	PREVIOUS	NestList[#+Floor[Sqrt[#]]&,(\d+),(\d+)]	209,50
A159292	insect2	1	new A006567()	new A050288()							Pandigital emirps.
A159318	lambdan	0	n -> BI(new Q(Z.ONE, Z2(n)).+(2*n - 1), n)./(Z2(n).*(n).+(1)).*(Z2(n*n + n)).num()
A159376	holos	0	[[-2048904435916800,10180065773445120,-26904530479120128,50936307964412544,-74679591278805264,85302351200676672,-75424820511654584,51435177242228136,-26950021111932873,10733292326883024,-3155566369823715,630926806905936,-60234921458282,-8876879623584,4732047974274,-944291714616,109387042419,-7234157232,213086953],[-65840947200]]	40	0	0
A159377	holos	0	[[5969870844302131200,-74249480989045555200,214126130786991326208,-284961424363985723904,197442506425287700800,-51930116239515609600,-28842561807975597104,35521899026299517664,-17479049408676635172,4885459755739725744,-622731108657845325,-90791155046116656,64342727439827164,-16253866320704208,2541037799402610,-264583460907504,18022659853008,-732105215136,13515097411],[-32920473600]]	80	0	0
A159380	holos	0	[[-128034305925120000,622984191911424000,-1484282086246656000,2445300834249876480,-3314069608404201408,3935810505847400640,-4007305827926228080,3355424999095241680,-2250923413670955828,1194661749864039780,-496896470881581885,159323939501288055,-37914859899827818,6020646293099020,-361406279253990,-106861751384070,37851028746252,-6253364338440,622792384955,-36001207145,936533802],[-1646023680000]]	46	0	0
A159381	holos	0	[[-6168943104452352000000,11192785335139968000000,19466967995225957145600,-79380002767630028060160,108041556400340336479296,-80257709497584914242560,32737046640480892867280,-3101677426623769307040,-4739319231079836161444,3295924981701212800080,-1155278177315230629765,234630414328706946180,-16667311860006023119,-5954068345650210480,2454438201119451790,-490567367412102600,63919508461019886,-5677041092927040,334659414495095,-11890249696380,193615195381],[-1646023680000]]	98	0	0
A159478	lambdan	0	n -> BI(new Q(Z.ONE, Z2(n))           , n)                   .*(Z2(n*n + n)).num()
A159558	lambdan	0	n -> BI(new Q(Z.ONE, Z2(n)).+(n - 1)  , n)                   .*(Z2(n*n + n)).num()
A159578	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A051838()	new A002110()	a(n)=Annn(Annn(n))
A159876	moetrafi	1	new A005614()	, 0	 the rabbit sequence, A051731 * A005614
A159929	invtras	0	new A000010()	0	.
A159981	ordsup	0	new A036987().skip()	2	1
A160022	filnum	1	0	n -> ZV(n).IPP() && ZV(n).^(4).+(706).IPP()		isprime(n)&&isprime(n^4+706)
A160023	filter	1	new A000040()	p -> p.^( 4).+( 2482).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	500, 4, 2482
A160024	filter	1	new A000040()	p -> p.^( 4).+(14722).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	200, 4,14722
A160025	filter	1	new A000040()	p -> p.^( 4).+(28642).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	400, 4,28642
A160026	filter	1	new A000040()	p -> p.^(4).+(83602).IPP()	Primes p such that p^4 + 17^4 + 3^4 is prime.	easy,nonn	1..46
A160027	parmof3	1	A274022	0	15	nyi Fto	Primes of the form 2^(2^k)+15.
A160028	parmof3	1	A274022	0	81	nyi Fto	Primes of the form 2^(2^k)+81.
A160029	parmof3	1	A274022	0	51	nyi to	Primes of the form 2^(2^n)+51.
A160030	parmof3	1	A274022	385	389	nyi to	Primes of the form 2^(2^n)+385.	nonn	1..6	nyi	_Cino Hilliard_
A160031	filter	1	new A000040()	p -> p.^( 4).+(  162).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	300, 4,  162
A160032	parmof3	1	A274022	0	93	nyi pto	Primes of the form 2^(2^n)+93.
A160033	parmof3	1	A274022	0	757	nyi to	Primes of the form 2^(2^n)+757.
A160094	multraf	1	(self, n) -> self.s(0).+(1)	""	new A122840()	1 + new A122840()
A160245	#nyi	0		a(n) = index of the n - th prime in A051301 (least prime factor of m! + 1)
A160357	multraf	0	(self, n) -> ZV(self.s(0).signum())	"1"	new A160356()	v ->
A160384	lambdan	0	n -> { final int[] c = ZUtils.digitCounts(n, 3); return ZV(c[1] + c[2]); }	Number of nonzero digits in the base-3 representation of n.
A160385	lambdan	0	n -> { final int[] c = ZUtils.digitCounts(n, 4); return ZV(c[1] + c[2] + c[3]); }	Number of nonzero digits in base-4 representation of n.
A160561	filter	1	new A274765()	PRIME	. - _Omar E. Pol_, Jul 06 2016
A160588	ileave	0	new A053645()	new A000027()
A160670	filter	1	new A160668()	PRIME	in order of appearance.
A160904	rowsum	0	new A159881()
A160962	simtraf	0	new A000396()	v -> new Z(v.toString(4))	Perfect numbers written in base 4.
A161021	parmof2	0	A008873	703	Collatz (or 3x+1) trajectory starting at 703.
A161022	parmof2	0	A008873	10087	Collatz (or 3x+1) trajectory starting at 10087.
A161023	parmof2	0	A008873	35655	Collatz trajectory starting at 35655.
A161322	simtraf	0	new A000043()	v -> new Z(v.toString(4))	a(n)=A000043(n) written in base 4.
A161323	simtraf	0	new A000396()	v -> new Z(v.toString(8))	Perfect numbers written in base 8.
A161344	filtpos	1	1	new A033676()	v -> v.equals(ZV(2 ))
A161345	filtpos	1	1	new A033676()	v -> v.equals(ZV(3 ))
A161351	multraf	1	(self, n) -> ZV(n).+(self.s(0)).+(self.s(1))	""	new A007953().skip(1), new A007954().skip(1)
A161424	filtpos	1	1	new A033676()	v -> v.equals(ZV(4 ))
A161471	filter	0	new A066279()	PRIME	
A161511	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A005940().skip(1)	new A056239()	a(n)=Annn(Annn(n+(\d+)))
A161580	setdiff	1	new A001477()	new A161579()
A161643	#nyi	0		Sum of all numbers from the Least up to the largest prime factor of the n - th composite
A161670	#nyi	0		Sum of largest prime factor of composite(k) for k from Least prime factor of composite(n) to largest prime factor of composite(n)
A161678	#nyi	0		Sum of c mod k for k from (Least prime factor of c) to (largest prime factor of c) where c is composite(n)
A161777	multrafd	1	(self, n) -> SEQ.a(self.s(0).-(1))	""	new A018252()	new A000217()	a(n)=Annn(Annn(n)-(\d+))
A161811	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A141468().skip(2), new A141468()	a(n)=Annn(n+(\d+))-Annn(n)
A161826	lingf	1	0,1,1,2,1,3,-1,0,0,-1,0,-1	1,0,-1	0						Number of maximal vertex-independent sets in the hypergraph with nodes V = {1, 2, ..., n} and "edges" consisting of the triples (X,Y,Z) with X<Y<Z and X+Y=Z.
A161835	filtpos	1	1	new A033676()	v -> v.equals(ZV(5 ))
A161925	#nyi	0		Numbers n such that largest prime factor of n is also largest prime factor of n - th composite number
A162349	diffs	0	new A160412()	First differences of A160412.
A162526	filtpos	1	1	new A033676()	v -> v.equals(ZV(6 ))
A162527	filtpos	1	1	new A033676()	v -> v.equals(ZV(7 ))
A162528	filtpos	1	1	new A033676()	v -> v.equals(ZV(8 ))
A162529	filtpos	1	1	new A033676()	v -> v.equals(ZV(9 ))
A162530	filtpos	1	1	new A033676()	v -> v.equals(ZV(10))
A162531	filtpos	1	1	new A033676()	v -> v.equals(ZV(11))
A162532	filtpos	1	1	new A033676()	v -> v.equals(ZV(12))
A162592	setdiff	1	new A009003()	new A004431()
A162644	filtpos	1	1	new A162511()	v -> v.equals(Z.ONE)	Numbers m such that A162511(m) = +1.	nonn
A162645	filtpos	1	1	new A162511()	v -> v.equals(Z.NEG_ONE)	Numbers m such that A162511(m) = -1.	nonn
A162738	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).ceiling().*(self.s(1))	""	new A000040(), new A002808()	a(n) = ceiling(p(n)/c(n))*c(n), where c(n) is the n-th composite, and p(n) is the n-th prime.
A162793	filter	1	new A139251()	(k, v) -> (k & 1) == 1
A162795	partsun	1	new A162793()			Partial sums of A162793.
A162956	parmof4	0	A151568	3	1	"0,1"
A163121	multraf	1	(self, n) -> self.s(0).-((self.s(1).^(3)))	""	new A030078(), new A141468()
A163267	partsun	0	new A118977()			Partial sums of A118977.
A163286	simtraf	0	new A154796()	v -> v./(2)	a(n)= Annnnnn(n)/(\d+)
A163288	simtraf	0	new A154798()	v -> v./(2)	a(n)= Annnnnn(n)/(\d+)
A163618	lambdan	0	n -> { final Z nz = ZV(-n); return nz.or(nz.shiftLeft(1)).negate(); }	{a(n) = n=-n; -bitor(n, n<<1)}
A163746	simtraf	1	new A125061().skip(1)	v -> v	Expansion of (theta_3(q)^2 + 3 * theta_3(q^3)^2) / 4 - 1 in powers of q.
A163769	filter	1	new A000040()	v -> !v.*(2).+(3).IPP()
A163821	simtraf	1	new A000043()	v -> ZUtils.digitProduct(v)	a(n) = product of digits of A000043(n).
A163975	multraf	1	(self, n) -> self.s(0).-(self.s(1).testBit(0) ? Z.NEG_ONE : Z.ONE)	""	new A141468(), new A141468()	a(n)=Annn(n)-(-(\d+))^Annn(n)	1
A164276	setdiff	1	new A141468()	new A014574()
A164306	trilambn	1	1	1	(n, k) -> ZV(k)./(ZV(k).gcd(ZV(n)))	nyi Fpto	Triangle read by rows: T(n, k) = k / gcd(k, n), 1 <= k <= n.
A164510	diffs	0	new A071904()	First differences of A071904 (Odd composite numbers).
A164514	prepend	1	new A000037()	1	1 followed by numbers that are not squares.
A164515	setdiff	1	new A000027()	new A059100()
A164567	filter	1	new A000040()	p -> { final Z pp = p.*( 5); return pp.+( 6).IPP() && pp.-( 6).IPP(); }		300, 5, 6, 6
A164568	filter	1	new A000040()	p -> { final Z pp = p.*( 9); return pp.+(10).IPP() && pp.-(10).IPP(); }		400, 9,10,10
A164569	filter	1	new A000040()	p -> p.*(11).+( 8).IPP()	[(\d+)#+(\d+)]&]		500,11, 8
A164570	filter	1	new A000040()	p -> { final Z pp = p.*( 8); return pp.+( 3).IPP() && pp.-( 3).IPP(); }		100, 8, 3, 3
A164655	lambdan	0	n -> RU(1, n, j -> new Q(Z.ONE, ZV(2*j - 1).^(3))).num()	numer(Theta(3,n))= numerator(sum(1/(2*j-1)^3,j=1..n)), n>=1.
A164656	lambdan	0	n -> RU(1, n, j -> new Q(Z.ONE, ZV(2*j - 1).^(5))).num()	numer(Theta(5,n))= numerator(sum(1/(2*j-1)^5,j=1..n)), n>=1.
A164657	lambdan	0	n -> RU(1, n, j -> new Q(Z.ONE, ZV(2*j - 1).^(5))).den()	denom(Theta(5,n))= numerator(sum(1/(2*j-1)^5,j=1..n)), n>=1.
A164699	filamb	0	1	n -> n.toString(7).indexOf(n.toString(16)) >= 0	Base 10 integers n such that n base 16 is a substring of n base 7.
A164733	lingf	1	0,1,0,0,1,-1,1,-1,0,2,-1,0,1,-1,2,-3,2,1,-1,2,0,1,1,-1,2,-1,0,1,-1,1,-1,0,1,-1	1,0,-1,0,0,0,-1,0,1,-1,0,1,0,0,-1,1,1,-1,0,0,1,0,-1,1,0,-1,0,0,0,-1,0,1	0
A164734	lingf	1	0,0,0,0,0,1,0,0,0,0,0,0,-1,1,-1,1,1,1,0,0,-1,2,-2,1,-2,1,-1,0,-1,1,-2,1,-2,1,-1,0,0,1,0,1,0,1	1,0,0,0,0,0,0,-1,0,-1,0,0,0,0,-1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,-1	0
A164735	lingf	1	0,0,0,0,0,0,0,0,1,0,0,0,0,0,-1,0,1,-1,0,1,0,0,0,1,0,-1	1,0,-4,0,6,0,-5,0,5,-1,-6,4,4,-6,-1,5,0,-5,0,6,0,-4,0,1	0
A164736	lingf	1	0,0,0,0,0,0,0,0,0,0,0,1,-1,2,-1,1	1,-1,-1,2,-1,-1,2,-1,-1,1	0
A164898	diffs	1	new A014261()		First differences of numbers having only odd digits in their decimal representation.	nonn,base	1..10000
A165027	lingf	1	0,1,0,-1,0,-1,2,1,-1	1,0,-2,-1,1,2,0,-1	0
A165066	lingf	1	0,1,1,1,0,-1,1,0,0,-1,0,0,0,0,0,1	1,1,0,-1,-2,-2,-1,1,2,2,1,0,-1,-1	0
A165125	lingf	1	0,1,0,-1,1,1,-1,0,2,0,-1,2,0,-1,3,0,-2,3,1,-1,2,1,-1,1,1	1,0,-1,1,0,-1,1,0,-1,0,0,0,0,0,0,-1,0,1,-1,0,1,-1,0,1	0
A165327	lambdan	0	n -> (Z2(n-1).+(1)).^(n)
A165422	multrar	1	(self, n) -> self.a(n - 1).^(2)	"1,4,4"		a(1) = 1, a(2) = 4, a(3) = 4, a(n) = (a(n-1))^2, n >= 4.
A165423	multrar	1	(self, n) -> self.a(n - 1).^(2)	"1,5,5"		a(1) = 1, a(2) = 5, a(3) = 5, a(n) = (a(n-1))^2, n >= 4.
A165424	multrar	1	(self, n) -> self.a(n - 1).^(2)	"1,6,6"		a(1) = 1, a(2) = 6, a(3) = 6, a(n) = (a(n-1))^2, n >= 4.
A165425	multrar	1	(self, n) -> self.a(n - 1).^(2)	"1,7,7"		a(1) = 1, a(2) = 7, a(3) = 7, a(n) = (a(n-1))^2, n >= 4.
A165427	multrar	1	(self, n) -> self.a(n - 1).^(2)	"1,9,9"		a(1) = 1, a(2) = 9, a(3) = 9, a(n) = (a(n-1))^2, n >= 4.
A165428	multrar	1	(self, n) -> self.a(n - 1).^(2)	"1,10,10"		a(1) = 1, a(2) = 10, a(3) = 10, and for n > 3 a(n) = (a(n-1))^2.
A165460	lambdan	0	n -> SU(0, 4*n + 2, i -> ZV(KS(i, 12*n + 7)))
A165492	filter	1	new A000040()	v -> ZUtils.digitSum(v.^(2)) == 13	Primes p where the digital sum of p^(\d+) is equal to (\d+)
A165493	filter	1	new A000040()	v -> ZUtils.digitSum(v.^(2)) == 19	Primes p where the digital sum of p^(\d+) is equal to (\d+)
A165502	filter	1	new A000040()	v -> ZUtils.digitSum(v.^(2)) == 31	Primes p where the digital sum of p^(\d+) is equal to (\d+)
A165601	lambdan	0	n -> SU(0, 2*n + 1, i -> ZV(KS(i, 4*n + 3)) )
A165659	tuptraf	0	(n, s) -> new Q(s[0], s[1]).num()	""	new A007504().skip(1), new A033955().skip(1)	Numerators of A007504 divided by A033955, starting from the second term of A033955.
A165660	tuptraf	0	(n, s) -> new Q(s[0], s[1]).den()	""	new A007504().skip(1), new A033955().skip(1)	xxxerators of A007504 divided by A033955, starting from the second term of A033955.
A165672	filter	1	new A000040().skip(2)	p -> { final Z pp = p.^( 2).+(2); return pp.mod(33) == 0 && pp./(33).IPP(); }	[(#^(\d+)+(\d+))/(\d+)]&]	100, 2, 2,33
A165768	simtraf	1	new A165767()	v -> JF(Z2(v.intValueExact()).-(v)).leastPrimeFactor()	0	the semiprime 2^A165767(n) - A165767(n)
A165769	simtraf	1	new A165767()	v -> JF(Z2(v.intValueExact()).-(v)).largestPrimeFactor()	0	the semiprime 2^A165767(n) - A165767(n)
A165975	lambdan	0	n -> PR(0, 2*n - 1, k -> BI(4*n, k)).sqrt()
A165987	lingf	1	2,1099258818694,4395755907442,1098619230674	1,-4,6,-4,1	0						a(n) is the trace of the matrix f(X + n*f(X))/f(X), where X is the 2 X 2 matrix [-13, 17; 31, 97] and f(x) = x^3 - 5*x + 67.
A165990	lambdan	0	n -> Fibonacci.lucas(2*n).xor(Fibonacci.lucas(2*n + 1))	a(n) = A000032(2*n) XOR A000032(2*n+1). - _Andrew Howroyd_, Apr 13 2021
A166294	holos	0	[[0],[12,-8,1],[-16,7,-1],[-40,32,-5],[8,4],[-24,-6,4],[16,-18,4],[8,6,-1],[4,1,-3],[-4,0,1]]	0, 1, 4	0	0	Number of peaks at even level in all Dyck paths of semilength n with no UUU's and no DDD's, (U=(1,1), D=(1,-1)). These Dyck paths are counted by the secondary structure numbers (A004148).
A166335	trilambn	0	0	0	(n, k) -> BI(n, k).*((n - k) + ((n - k) == 0 ? 1 : 0)).*(Z_1(n - k).+(1))./(2)	[k<=n]*C(n,k)*((n-k)+0^((n-k)/2))(1+(-1)^(n-k))/2					Exponential Riordan array [1+x*sinh(x), x].
A166563	filnum	0	0	n -> !ZV(n).*(12).+( 5).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A166569	filnum	0	0	n -> !ZV(n).*(12).+( 7).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A166570	filnum	0	0	n -> !ZV(n).*(12).+(11).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A166586	mulr	1	(p, e) -> p.-(2).^(e)	Multiplicativewitha(p^e)=(p-(\d+))^e	2
A166589	mulr	0	(p, e) -> p.-(3).^(e)	Multiplicativewitha(p^e)=(p-(\d+))^e	3	
A166718	union2	1	new A000040()	new A001358(), new A014612(), new A014613(), new A000007()		UNION of A000040, A001358, A014612, and A014613. - _R. J. Mathar_, Aug 08 2012					Numbers with at most 4 prime factors (counted with multiplicity)
A166732	#nyi	0		Numbers k such that the largest prime factor of the k - th composite is equal to the sum of all the other prime factors of the k - th composite, with multiplicity
A166899	lambdan	0	n -> RU(0, n/2, k -> new Q(BI(n - k, k).^(4).*(n), ZV(n - k))).num()
A167037	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(3)).isSquare()	Squares that remain squares when prefixed with a 3
A167038	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(4)).isSquare()	Squares that remain squares when prefixed with a 4
A167039	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(5)).isSquare()	Squares that remain squares when prefixed with a 5
A167041	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(6)).isSquare()	Squares that remain squares when prefixed with a 6
A167042	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(7)).isSquare()	Squares that remain squares when prefixed with a 7
A167043	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(8)).isSquare()	Squares that remain squares when prefixed with a 8
A167044	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(9)).isSquare()	Squares that remain squares when prefixed with a 9
A167464	filter	1	new A000040()	v -> !v.*(20).+(19).IPP()
A167687	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A167683(), new A167686()	a(n) = A167683(n) -   A167686(n).
A167716	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(1)).IPP()	Squares that become a prime number when prefixed with a 1.	base,nonn	1..10000
A167717	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(2)).IPP()	Squares that become a prime number when prefixed with a 2.	base,nonn	1..10000
A167718	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(3)).IPP()	Squares that become a prime        when prefixed with a 3.	base,nonn	1..10000
A167719	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(4)).IPP()	Squares that become a prime number when prefixed with a 4	base,nonn	1..1000
A167720	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(5)).IPP()	Squares that become a prime number when prefixed with a 5.	base,nonn	1..10000
A167721	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(6)).IPP()	Squares that become a prime number when prefixed with a 6.	base,nonn	1..10000
A167722	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(7)).IPP()	Squares that become a prime number when prefixed with a 7.	base,nonn	1..10000
A167723	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(8)).IPP()	Squares that become a prime number when prefixed with a 8.	base,nonn	1..10000
A167724	filter	1	new A000290()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(9)).IPP()	Squares that become a prime number when prefixed with a 9.	base,nonn	1..10000
A167725	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(1)).IPP()	Cubes   that become a prime number when prefixed with a 1	nonn,base	1..1000
A167726	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(2)).IPP()	Cubes   that become a prime number when prefixed with a 2.	base,nonn	1..10000
A167727	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(3)).IPP()	Cubes   that become a prime number when prefixed with a 3.	base,nonn	1..10000
A167728	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(4)).IPP()	Cubes   that become a prime number when prefixed with a 4.	base,nonn	1..10000
A167729	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(5)).IPP()	Cubes   that become a prime number when prefixed with a 5	base,nonn	1..1000
A167730	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(6)).IPP()	Cubes   that become a prime number when prefixed with a 6.	base,nonn	1..10000
A167731	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(7)).IPP()	Cubes   that become a prime number when prefixed with a 7.	base,nonn	1..10000
A167732	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(8)).IPP()	Cubes   that become a prime number when prefixed with a 8.	base,nonn	1..10000
A167733	filter	1	new A000578()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(9)).IPP()	Cubes   that become a prime number when prefixed with a 9.	nonn,base	1..1000
A167734	filter	1	new A000040()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(1)).isSquare()	Primes  that become a square       when prefixed with a 1.	base,nonn	1..59
A167735	filter	1	new A000040()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(2)).isSquare()	Primes  that become a square       when prefixed with a 2.	base,nonn	1..10488
A167736	filter	1	new A000040()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(3)).isSquare()	Primes  that become a square       when prefixed with a 3.	base,nonn	1..107
A167737	filter	1	new A000040()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(4)).isSquare()	Primes  that become a square       when prefixed with a 4.	base,nonn	1..10000
A167738	filter	1	new A000040()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(5)).isSquare()	Primes  that become a square       when prefixed with a 5.	base,nonn	1..156
A167739	filter	1	new A000040()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(6)).isSquare()	Primes  that become a square       when prefixed with a 6.	base,nonn	1..105
A167740	filter	1	new A000040()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(7)).isSquare()	Primes  that become a square       when prefixed with a 7.	base,nonn	1..17124
A167741	filter	1	new A000040()	v -> v.+(Z.TEN.^(ZUtils.decimalLength(v)).*(8)).isSquare()	Primes  that become   squares      when prefixed with a 8.	base,nonn	1..131
A167791	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  2) == 1 && imm.order(ZV(  2)).equals(imm.size()) && k > 1; }	n with primitive root 2	nonn	1..10000
A167792	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  3) == 1 && imm.order(ZV(  3)).equals(imm.size()) && k > 1; }	n with primitive root 3	nonn	1..1000
A167793	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  5) == 1 && imm.order(ZV(  5)).equals(imm.size()) && k > 1; }	n with primitive root 5	nonn	1..1000
A167794	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  6) == 1 && imm.order(ZV(  6)).equals(imm.size()) && k > 1; }	n with primitive root 6	nonn	1..1000
A167795	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  7) == 1 && imm.order(ZV(  7)).equals(imm.size()) && k > 1; }	n with primitive root 7	nonn	1..1000
A167796	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  8) == 1 && imm.order(ZV(  8)).equals(imm.size()) && k > 1; }	n with primitive root 8	nonn	1..1000
A167797	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 10) == 1 && imm.order(ZV( 10)).equals(imm.size()) && k > 1; }	n with primitive root 10	nonn	1..1000
A167798	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  2) == 1 && imm.order(ZV( -2)).equals(imm.size()) && k > 1; }	n with primitive root -2	nonn	1..1000
A167799	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  3) == 1 && imm.order(ZV( -3)).equals(imm.size()) && k > 1; }	n with primitive root -3	nonn	1..1000
A167800	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  4) == 1 && imm.order(ZV( -4)).equals(imm.size()) && k > 1; }	n with primitive root -4	nonn	1..1000
A167801	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  5) == 1 && imm.order(ZV( -5)).equals(imm.size()) && k > 1; }	n with primitive root -5	nonn	1..1000
A167802	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  6) == 1 && imm.order(ZV( -6)).equals(imm.size()) && k > 1; }	n with primitive root -6	is(n)=gcd(n, 6)==1 && znorder(Mod(-6, n))==eulerphi(n) && n>1
A167803	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  7) == 1 && imm.order(ZV( -7)).equals(imm.size()) && k > 1; }	n with primitive root -7	nonn	1..1000
A167804	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  8) == 1 && imm.order(ZV( -8)).equals(imm.size()) && k > 1; }	n with primitive root -8	nonn	1..1000
A167805	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k,  9) == 1 && imm.order(ZV( -9)).equals(imm.size()) && k > 1; }	n with primitive root -9	nonn	1..1000
A167806	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 10) == 1 && imm.order(ZV(-10)).equals(imm.size()) && k > 1; }	n with primitive root -10.	nonn	1..1000
A167994	filnum	1	1	k -> String.valueOf(k*2).charAt(0) - '0' == k % 10	Numbers k with property that first digit of 2*k is the last digit of k.
A167996	filnum	1	1	k -> String.valueOf(k*3).charAt(0) - '0' == k % 10	Numbers n with property that first digit of 3*n = last digit of n.
A167997	filnum	1	1	k -> String.valueOf(k*4).charAt(0) - '0' == k % 10	Numbers n with property that first digit of 4*n = last digit of n.
A167998	filnum	1	1	k -> String.valueOf(k*5).charAt(0) - '0' == k % 10	Numbers n with property that first digit of 5*n = last digit of n.
A168000	filnum	1	1	k -> String.valueOf(k*6).charAt(0) - '0' == k % 10	Numbers n with property that first digit of 6*n = last digit of n.
A168001	filnum	1	1	k -> String.valueOf(k*7).charAt(0) - '0' == k % 10	Numbers n with property that first digit of 7*n = last digit of n.
A168004	filnum	1	1	k -> String.valueOf(k*8).charAt(0) - '0' == k % 10	Numbers n with property that first digit of 8*n = last digit of n.
A168005	filnum	1	1	k -> String.valueOf(k*9).charAt(0) - '0' == k % 10	Numbers n with property that first digit of 9*n = last digit of n.
A168006	filter	1	new A000040()	p -> p.*(2).toString().charAt(0) - '0' == p.mod(10)	Primes  n with property that first digit of 2*n = last digit of n.
A168110	insect2	1	new A029976()	new A006567()
A168146	setdiff	1	new A000027()	new A037229()
A168157	multraf	1	(self, n) -> ZV(n).*(self.s(0)).-(self.s(1))	""	new A035100(), new A095375()
A168224	recpos	1	new A168223()	, 0, false
A168313	tuptraf	0	(n, s) -> s[0].*(2).-(s[1])	""	new A101688(), new A023531()	a(n) = 2* A101688(n)-     A023531(n).
A168472	partsun	0	new A006881()			Partial sums of products of two distinct primes (A006881).
A168473	filter	0	new A168472()	PRIME	Primes in Annnnnn
A168570	lambdan	1	n -> Z.valueOf(ZUtils.valuation(Z2(n).-(1), Z.THREE))	Exponent of 3 in 2^n - 1.
A169687	lambdan	2	n -> ZV(3).^(n).-(Z2(n-2).*(3))
A170819	dirtraf	1	new A007947()	new A097706()	"null"		1				a(n) = product of distinct primes of the form 4k-1 that divide n.
A170854	parmof4	0	A151568	3	2	"0,1"
A170855	parmof4	0	A151568	1	3	"0,1"
A170856	parmof4	0	A151568	2	3	"0,1"
A170857	parmof4	0	A151568	3	3	"0,1"
A170858	parmof4	0	A151568	3	1	"1,0"
A170859	parmof4	0	A151568	3	2	"1,0"
A170860	parmof4	0	A151568	1	3	"1,0"
A170861	parmof4	0	A151568	2	3	"1,0"
A170862	parmof4	0	A151568	3	3	"1,0"
A170863	parmof4	0	A151568	3	1	"1,1"
A170864	parmof4	0	A151568	3	2	"1,1"
A170865	parmof4	0	A151568	1	3	"1,1"
A170866	parmof4	0	A151568	2	3	"1,1"
A170867	parmof4	0	A151568	3	3	"1,1"
A170868	parmof4	0	A151568	3	1	"1,2"
A170869	parmof4	0	A151568	3	2	"1,2"
A170870	parmof4	0	A151568	1	3	"1,2"
A170871	parmof4	0	A151568	2	3	"1,2"
A170872	parmof4	0	A151568	3	3	"1,2"
A171080	simtraf	0	new FilterSequence(0, new A091137(), (k, v) -> (k & 1) == 0)	(n, v) -> v./(Z2(2*n))	a(n) = A091137(2*n) / 2^(2*n).  (End)
A171096	filnum	1	1	n -> Functions.MERTENS.l(n) == -1		(M = Mertens's function A002321).
A171097	filnum	1	1	n -> Functions.MERTENS.l(n) == -2		(M = Mertens's function A002321).
A171098	filnum	1	1	n -> Functions.MERTENS.l(n) == -3		(M = Mertens's function A002321).
A171126	filtpos	0	1	new A169611()	v -> v.equals(ZV(1))	Numbers n such that Annnnnn(n)= (\d+)
A171127	filtpos	0	1	new A169611()	v -> v.equals(ZV(2))	Numbers n such that Annnnnn(n)= (\d+)
A171235	filnum	1	1	n -> Functions.MERTENS.l(n) == -4		(M = Mertens's function A002321).
A171236	filnum	1	1	n -> Functions.MERTENS.l(n) == -5		(M = Mertens's function A002321).
A171238	convprod	1	2	new A018819()
A171241	filtpos	0	1	new A169611()	v -> v.equals(ZV(3))	Numbers n such that Annnnnn(n)= (\d+)
A171374	filnum	1	1	n -> Functions.MERTENS.l(n) == -6		(M = Mertens's function A002321).
A171383	filnum	1	1	n -> Functions.MERTENS.l(n) == -7		(M = Mertens's function A002321).
A171391	filnum	1	1	n -> Functions.MERTENS.l(n) == -8		(M = Mertens's function A002321).
A171392	filnum	1	1	n -> Functions.MERTENS.l(n) == -9		(M = Mertens's function A002321).
A171393	filnum	1	1	n -> Functions.MERTENS.l(n) == -10	(M = Mertens's function A002321).
A171394	filnum	1	1	n -> Functions.MERTENS.l(n) == -11	(M = Mertens's function A002321).
A171395	filnum	1	1	n -> Functions.MERTENS.l(n) == -12	(M = Mertens's function A002321).
A171403	filnum	1	1	n -> Functions.MERTENS.l(n) == 2	(	M = Mertens's function A002321).
A171404	filnum	1	1	n -> Functions.MERTENS.l(n) == 3	(	M = Mertens's function A002321).
A171406	filnum	1	1	n -> Functions.MERTENS.l(n) == 4	(	M = Mertens's function A002321).
A171427	filnum	1	1	n -> Functions.MERTENS.l(n) == 5	(	M = Mertens's function A002321).
A171428	filnum	1	1	n -> Functions.MERTENS.l(n) == 6	(	M = Mertens's function A002321).
A171436	filnum	1	1	n -> Functions.MERTENS.l(n) == 7	(	M = Mertens's function A002321).
A171453	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A008475(), new A067240()	a(n) = A008475(n) -   A067240(n).
A171709	lambdan	-3	n -> (n == 0) ? Z.NEG_ONE : new Q(1, 9).-(new Q(Z.ONE, ZV(n).^(2))).num()	Numerator of 1/9 - 1/n^2.
A171870	simtras	1	new A075680()	(n, v) -> n <= 1 ? Z.ZERO : v.-(1)	.
A171970	lambdan	1	n -> CR.THREE.sqrt().*(ZV(n))./(ZV(2)).floor()	floor(n*sqrt(3)/2)	Integer part of the height of an equilateral triangle with side length n.	nonn,easy	1..73
A171971	lambdan	1	n -> CR.THREE.sqrt().*(ZV(n).^(2))./(ZV(4)).floor()	floor(n^2 * sqrt(3) / 4)	Integer part of the area of an equilateral triangle with side length n.	nonn	1..1000
A171973	lambdan	1	n -> CR.TWO.sqrt().*(ZV(n).^(3))./(ZV(12)).floor()	floor(n^3 * sqrt(2) / 12).
A171974	lambdan	1	n -> CR.SIX.sqrt().*(ZV(n))./(ZV(3)).floor()	floor(n*sqrt(6)/3).
A171975	lambdan	1	n -> CR.SIX.sqrt().*(ZV(n))./(ZV(4)).floor()	floor(n*sqrt(6)/4).
A172034	partsun	0	new A063980()			Partial sums of Pillai primes (A063980).
A172113	partsun	0	new A007645()			Partial sums of the generalized Cuban primes A007645.
A172114	partsun	0	new A088054()			Partial sums of factorial primes A088054.
A172239	partsun	0	new A018239()			Partial sums of primorial primes A018239.
A172413	filnum	1	1	n -> ZV(11).^(n).+(n + 1).IPP()		isprime(11^n+n+1)
A172523	partsun	0	new A061372()			Partial sums of primes in which no digit is a prime A061372.
A172534	parmof2	1	A058528	12
A172535	parmof2	1	A058528	11
A172536	parmof2	1	A058528	8
A172537	parmof2	1	A058528	14
A172538	parmof2	1	A058528	13
A172540	parmof2	1	A058528	9
A172988	filter	1	new A000040()	v -> v.-(3).IPP() || v.-(6).IPP()	Primes p such that either p-3 or p-6 is prime.
A173020	trilambn	1	1	1	(n, k) -> BI(n, k).*(BI(3*n, k - 1))./(n)	T(n, k) = R(n,k,3) with R(n,k,m)= binomial(n,k)*binomial(m*n,k-1)/n, 1<=k<=n.
A173053	simtraf	1	new A061422()	v -> v./(2)	a(n)=floor(Annn(n)/(\d+))	2		A061422			Numbers n such that 2^(2*n)+2*n+1 is a prime.
A173107	partsun	0	new A005101()			Partial sums of abundant numbers (A005101).
A173112	partsun	1	new A106116()			Partial sums of A106116.					Partial sums of A106116.
A173143	partsun	0	new A005117()			Partial sums of the squarefree numbers, A005117.
A173216	simtraf	0	new A011762()	(n, v) -> ZV(n).*(v)
A173254	tuptraf	0	(n, s) -> s[0].+(s[1]).-(s[1]./(2)).-(s[3]./(2))	"1,1,2,3"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a(n) = a(n-1) + a(n-2) - [a(n-2)/2] - [a(n-4)/2].
A173506	lambdan	0	n -> (ZV(3).^(ZV(3).^(n)).-(1))./(2)	 (3^(3^n) - 1)/2
A173508	simtraf	0	new A173497()	v -> new Q(v, Z.TWO).ceiling()	,2	a(n)= ceiling(Annnnnn(n)/(\d+))
A173513	simtraf	0	new A173510()	v -> new Q(v, Z.TWO).ceiling()	,2	a(n)= ceiling(Annnnnn(n)/(\d+))
A173514	tuptraf	0	(n, s) -> s[0].*(2).+(s[1]).-(s[1]./(2)).-(s[3]./(2)).-(s[4]./(2))	"1,1,3,7,16"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS
A173523	lambdan	0	n -> Z.ONE.+(ZUtils.digitSum(n - 1, 3))	1+A053735(n-1), where A053735 is the sum-of-digits function in base 3.
A173525	lambdan	0	n -> Z.ONE.+(ZUtils.digitSum(n - 1, 5))	a(n) = 1 + A053824(n-1), where A053824 = sum of digits in base 5.
A173526	lambdan	0	n -> Z.ONE.+(ZUtils.digitSum(n - 1, 6))	a(n) = 1 + A053827(n-1), where A053827 is the sum-of-digits function in base 6.
A173527	lambdan	0	n -> Z.ONE.+(ZUtils.digitSum(n - 1, 7))	a(n) = 1 + A053828(n-1), where A053828 is the sum of digits in base 7.
A173528	lambdan	0	n -> Z.ONE.+(ZUtils.digitSum(n - 1, 8))	a(n) = 1 + A053830(n-1), where A053830 is the sum of the digits of its argument in base 9.
A173529	lambdan	0	n -> Z.ONE.+(ZUtils.digitSum(n - 1, 9))	a(n) = 1 + A053830(n-1), where A053830 is the sum of the digits of its argument in base 9.
A173534	tuptraf	0	(n, s) -> s[0].+(s[1].*(2)).-(s[0]./(2)).-(s[3]./(2)).-(s[4]./(2))	"1,1,3,4,8"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS
A173538	tuptraf	0	(n, s) -> s[0].+(s[1]).-(s[1]./(4)).-(s[2]./(2)).-(s[3]./(4))	"1,1,2,3"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS
A173597	tuptraf	0	(n, s) -> s[0].+(s[1]).-(s[3]./(4)).-(s[4]./(2)).-(s[5]./(4))	"1,1,2,3,5,8"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS
A173599	tuptraf	0	(n, s) -> s[0].+(s[1]).-(s[1]./(4)).-(s[3]./(2)).-(s[5]./(4))	"1,1,2,3,5,8"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS
A173621	trilambn	1	1	1	(n, k) -> BI(n, k).*(BI(4*n, k - 1))./(n)	Generalized Runyon numbers R_{n,k}^(4) read by rows
A173633	tuptraf	0	(n, s) -> s[1].+(s[2]).-(s[2]./(4)).-(s[3]./(2)).-(s[4]./(4))	"1,1,1,2,2"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS
A173664	setdiff	1	new A014091()	new A001358()
A173672	setdiff	1	new A030173()	new A001358()
A173677	ordsum	0	new A010057().skip(1)	2
A173684	filter	0	new A002062()	SEMIPRIME	
A173694	filnum	1	1	k -> Predicates.SQUARE.is(Functions.CARMICHAEL_LAMBDA.z(k))	Arguments n for which the Carmichael lambda function A002322(n) is a perfect square.
A173696	simtraf	0	new A117791()	v -> new Q(v, Z.TWO).ceiling()	,2	a(n)= ceiling(Annnnnn(n)/(\d+))
A173697	simtraf	0	new A013984()	v -> new Q(v, Z.TWO).ceiling()	,2	a(n)= ceiling(Annnnnn(n)/(\d+))
A173856	padding	0	1	0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0	10,9	Expansion of (\d+)/(\d+) in base phi	m
A173859	padding	0	1	0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0	6,5	Expansion of (\d+)/(\d+) in base phi
A173860	padding	0	1	0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0 	7,6	Expansion of (\d+)/(\d+) in base phi
A173861	padding	0	1	0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0	8,7	Expansion of (\d+)/(\d+) in base phi
A173864	padding	0	1	0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0	9,8	Expansion of (\d+)/(\d+) in base phi
A173922	#simtraf	0	a(n) = A000035(A002265(A030101(n+4))).
A173923	#simtraf	0	a(n) = A000035(A132292(A030101(n+8)+1)).
A173941	filnum	1	1	k -> Functions.TAU.z(Functions.CARMICHAEL_LAMBDA.z(k)).equals(Functions.CARMICHAEL_LAMBDA.z(Functions.TAU.z(k)))	A000005(A002322(k))=A002322(A000005(k)).
A173942	filnum	1	1	k -> Functions.SIGMA.z(Functions.CARMICHAEL_LAMBDA.z(k)).equals(Functions.CARMICHAEL_LAMBDA.z(Functions.SIGMA.z(k)))	A000203(A002322(n))=A002322(A000203(n)).
A173944	filnum	1	1	k -> Functions.BIG_OMEGA.z(Functions.CARMICHAEL_LAMBDA.z(k)).equals(Functions.CARMICHAEL_LAMBDA.z(Functions.BIG_OMEGA.z(k)))	A001222(A002322(n))=A002322(A001222(n)).
A173946	filnum	1	1	k -> Functions.OMEGA.z(Functions.CARMICHAEL_LAMBDA.z(k)).equals(Functions.CARMICHAEL_LAMBDA.z(Functions.OMEGA.z(k)))	A001221(A002322(n))=A002322(A001221 (n)).
A173974	filnum	1	0	n -> ZV(n).^(n).+(43).IPP()		isprime(n^n+43)
A173975	filnum	1	0	n -> ZV(n).^(n).+(115).IPP()		isprime(n^n+115)
A173978	#nyi	0		Numbers n such that the least prime factor of 2*n  -  3 is less than that of 2*n  -  1, unless 2*n  -  3 and 2*n  -  1 are (twin) primes
A174379	lpf	4	ZV(n - 1).^(n).-(ZV(n).^(n - 1))	a(n) is the largest prime factor of (n - 1)^n  -  n^(n - 1)
A174409	filter	1	new A000040()	p -> p.^(3).*(10000).+(1331).IPP()	[(\d+)#^(\d+)+(\d+)]&]	500, 10000,3,1331
A174435	simtraf	0	new A046388()	(n, v) -> Functions.CARMICHAEL_LAMBDA.z(v)./(Functions.CARMICHAEL_LAMBDA.z(v.+(1)./(2)))	a(n) = A002322(A046388(n))/A002326((A046388(n)+1)/2). -
A174456	filnum	1	0	n -> Functions.SIGMA0.l(n) == 12 && Functions.SIGMA0.l(n + 1) == 12	numdiv(n)==(\d+)&&numdiv(n+(\d+))==(\d+)	12	1
A174727	simtraf	0	new A091137().skip(1)	(n, v) -> v./(n + 1)	a(n)=Annn(n+(\d+))/(n+(\d+))	1,1	A091137
A174841	lambdan	1	n -> ZV(1-n*n).^(n-1)
A174881	lambdan	1	n -> ZV(n).*(n + 1).^(n)	a(n) = (n^n)*((n+1)^n) = (n*(n+1))^n. = A000312(n)*A000169(n+1).
A174931	lambdan	0	n -> ZV(ZUtils.digitSum(Z2(n), 3))./(2)	Half of the digital sum of base 3 representations of 2^n.
A174932	simtraf	1	new A322671()	(n, v) -> ZV(n).*(v)
A174961	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A013929()	new A048105()	a(n)=Annn(Annn(n))
A174992	multraf	0	(self, n) -> FA(n).-(self.s(0))	""	new A000800()	n! - new A000800()
A175097	filter	1	new A139013()	PRIME	.
A175133	filtpos	1	1	new A007504()	v -> ZUtils.isPolygonal(v, 3)	Sum of first a(n) consecutive primes gives a triangular number.
A175158	filter	1	new A000040()	v -> v.+(18).IPP() && v.+( 36).IPP() && v.+(72).IPP()	#+{(\d+),(\d+),(\d+)},PrimeQ]&]	4000,18, 36,72
A175172	filter	0	new A000040()	p -> ZV(2).^(p).*( 3).+( 1).IPP()	[(\d+)^#+(\d+)]&]		100, 32, 1
A175234	filter	1	new A000040()	p -> ZV(  2).^(p).+(15).IPP()	[(\d+)^#+(\d+)]&]		100,  2,15
A175236	filter	1	new A000040()	p -> ZV(  2).^(p).+(23).IPP()	[(\d+)^#+(\d+)]&]		100,  2,23
A175342	multraf	1	(self, n) -> self.s(0).*(2).-(self.s(1))	""	new A049988().skip(1), new A000005()
A175514	filamb	0	0	n -> n.toString(2).endsWith(n.toString(5))	Numbers n such that the base-2 expansion of n ends with the base-5 expansion of n.
A175607	#nyi	0		Largest number k such that the Largest prime factor of k^2 - 1 is prime(n)
A175650	simtraf	1	new A066031()	v -> v./(JF(v).sopf())	a(n) = A066031(n)/sopf(A066031(n)).
A175653	simtraf	0	new A175652()	v -> v.sqrt()	a(n)= sqrt(Annnnnn(n))	m	i  
A175701	simtraf	1	new A062981()	(n, v) -> ZV(n).*(v)
A175977	multrar	1	(self, n) -> ZV(n - 1).^(self.a(n - 1)).+(1)	"1"		a(1) = 1, for n >= 2: a(n) = (n-1)^a(n-1) + 1.
A175978	multrar	1	(self, n) -> self.a(n - 1).^(n - 1).+(1)	"1"		a(1) = 1, for n >= 2: a(n) = a(n-1)^(n-1) + 1.
A175979	multrar	1	(self, n) -> ZV(n).^(self.a(n - 1)).+(1)	"1"		a(1) = 1, for n >= 2: a(n) = n^a(n-1) + 1.
A175981	multrar	1	(self, n) -> self.a(n - 1).^(n - 1).-(1)	"1"		a(1) = 1, for n >= 2: a(n) = a(n-1)^(n-1) - 1.
A175982	multrar	1	(self, n) -> ZV(n).^(self.a(n - 1)).-(1)	"1"		a(1) = 1, for n >= 2: a(n) = n^(a(n-1)) - 1.
A175984	multrar	1	(self, n) -> self.a(n - 1).+(1).^(n - 1).+(1)	"1"		a(1) = 1, for n >= 2: a(n) = (a(n-1)+1)^(n-1) + 1.
A175986	multrar	1	(self, n) -> self.a(n - 1).-(1).^(n - 1).-(1)	"1"		a(1) = 1, for n >= 2: a(n) = (a(n-1)-1)^(n-1) - 1.
A175987	multrar	1	(self, n) -> self.a(n - 1).-(1).^(n).-(1)	"1"		a(1) = 1, for n >= 2: a(n) = (a(n-1)-1)^n - 1.
A176043	lambdan	0	n -> ZV(2*n-1).*(ZV(n-1).^(n-1))
A176116	filter	1	new A000040()	p -> p.^( 4).+( 1)./( 2).IPP()	[(#^(\d+)+(\d+))/(\d+)]&]	250, 4, 1, 2
A176189	filamb	0	1	n -> n.^(2).toString(3).matches("[01]+")	Natural numbers whose squares have only 0's and 1's in base 3.
A176195	simtraf	0	new A174562()	v -> JF(v).largestPrimeFactor()	Largest prime factor
A176337	multrar	0	(self, n) -> self.a(n - 1).*(Z.ONE.-(Z2(n))).+(1)	"0"	a(n) = 1 + (1-2^n)*a(n-1) for n > 0, a(0)=0.
A176338	multrar	0	(self, n) -> self.a(n - 1).*(Z.ONE.-(Z.THREE.^(n))).+(1)	"0"	a(n) = 1 + (1-3^n)*a(n-1) for n >=1, a(0) = 0.
A176505	trilambd	0	0	0	(n, m) -> mSeq.a(n + 4).-(mSeq.a(4 + m)).-(mSeq.a(n + 4 - m)).+(1)	new A000931()	Triangle T(n,m) read by rows: T(n,m) = a(n) - a(m) - a(n-m) + 1, where a(n) = A000931(n+4)
A176558	simtraf	1	new A037278()	v -> ZUtils.reverse(v)
A176629	multraf	1	(self, n) -> self.s(0).-(self.s(1).testBit(0) ? Z.NEG_ONE : Z.ONE)	""	new A001358(), new A001358()	a(n)=Annn(n)-(-(\d+))^Annn(n)	1
A176686	filtpos	1	1	new A005563()	v -> isPDP(3)	Numbers n such that n^2-1 are products of 3 distinct primes.
A176991	trilambn	1	1	1	(n, m) -> BI(n + m, m).-(BI(n - m, m))	Triangle t(n,m) = binomial(n+m,m) - binomial(n-m,m), 1<=m<=n, read by rows.	nonn,tabl
A177004	#nyi	0		Numbers n such that 2 nearest neighbors had largest prime factor equals to 1, next 2 neighbors had largest prime factor of 2 and next 2 neighbors had largest prime factor of 3
A177070	filnum	0	0	n -> ZV(2 ).^(n).+(ZV(n).^(2 )).+(2).IPP()		isprime(2^n+n^2+2)
A177092	filter	1	new A000040()	p -> p.*(11).+( 2).IPP()	[(\d+)#+(\d+)]&]		300,11, 2
A177191	lambdan	1	n -> ZV(2*n).^(n).+(ZV(n-1).^(n).*(n))./(n+1)	a(n) = ( (2n)^n+n*(n-1)^n ) /(n+1).
A177247	filter	0	new A000045().skip(1)	v -> ZUtils.digitCounts(v)[6] == 0
A177329	lambdir	2	n -> ZV(SEQ.a(FA(n)).bitLength() - 1)	new A064547()	a(n)=Annn(n!)		D064547 ??? bitLength
A177372	filter	0	new A000045().skip(1)	v -> ZUtils.digitCounts(v)[7] == 0
A177374	filter	0	new A000045().skip(1)	v -> ZUtils.digitCounts(v)[8] == 0
A177376	filter	0	new A000045().skip(1)	v -> ZUtils.digitCounts(v)[9] == 0
A177809	trilambn	0	1	1	(n, m) -> BI(5*n, 5*m)	Symmetrical sequence:Binomial(n,5*m)	nonn,tabl	0..39	nyi	_Roger L. Bagula_	Symmetrical sequence:Binomial(n,5*m)
A177939	arrlamb	1	1	1	-1	(n, m) -> FA(n*m)./(FA(n + m - 1))	Array t(n,m)=(n*m)!/(n + m - 1)! read by antidiagonals.
A177974	trilamb0	0	(n, k) -> FA(n)./(FA(n - k)).+(FA(n)./(FA(k))).-(FA(n))	Triangle T(n,k) = n!/(n - k)! + n!/k! - n! read by rows, 0 <= k <= n.	sign,tabl	0..139	nyi
A178177	filnum	1	0	n -> ZV(n).^(4).+(706).IPP()		isprime(n^4+706)
A178185	lambdan	0	(n) -> RU(1, n, k -> new Q(1, 2).^(k*(k + 3)/2)).num()	Numerators of sum (1/2)^((k^2+3*k)/2) from k=1 to n.
A178187	lambdan	0	(n) -> RU(1, n, k -> new Q(1, 3).^(k*(k + 3)/2)).num()	Numerators of sum (1/3)^((k^2+3*k)/2) from k=1 to n.
A178189	lambdan	0	(n) -> RU(1, n, k -> new Q(1, 5).^(k*(k + 3)/2)).num()	Numerators of sum (1/5)^((k^2+3*k)/2) from k=1 to n.
A178191	lambdan	0	(n) -> RU(1, n, k -> new Q(1, 7).^(k*(k + 3)/2)).num()	Numerators of sum (1/7)^((k^2+3*k)/2) from k=1 to n.
A178244	multraf	0	(self, n) -> BI(self.s(0), self.s(1))	""	new A070939(), new A000120()	a(n) = binomial(A070939(n), A000120(n))
A178304	trilamb0	0	(n, m) -> { final DirectSequence f = new A002487(); return Z.ONE.+(f.a(n + 1).*(f.a(m + 1).+(f.a(n - m + 1)).-(Z.ONE).-(f.a(n + 1)))); }	Triangle T(n,m) = 1 + f(n+1)*(f(m+1) + f(n-m+1) - 1 - f(n+1)), read by rows, where f(.)=A002487(.).
A178421	simtraf	1	new A069175()	v -> v.-(1)	. - _R. J. Mathar_, Nov 02 2023
A178423	filter	0	new A034895()	SEMIPRIME	
A178426	prepend	0	new A152585()	11	followed by the Fermat numbers A152585.	nonn	0..7
A178427	prepend	0	new A152581()	7	followed by the Fermat numbers A152581.	nonn	0..8
A178428	prepend	0	new A078303()	5	followed by the generalized Fermat numbers 6^(2^n)+1 (A078303).	nonn	0..7
A178467	multraf	0	(self, n) -> self.s(0).*(self.s(1))	""	new A001477(), new A026858()
A178520	holos	0	[[0],[390,-69,3],[0],[-330,85,-5],[630,-153,9],[0],[-1050,319,-23],[252,-99,9],[420,-190,20],[-180,125,-19],[12,-15,3],[0,-2,4],[0,-1,-1]]	1	0	0
A178610	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A001358(), new A176506()	a(n) = A001358(n) -   A176506(n).
A178611	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A001358(), new A176504()	a(n) = A001358(n) -   A176504(n).
A178679	filamb	0	0	n -> n.toString(2).startsWith(n.toString(3))	Numbers n such that the binary expansion of n starts with the base 3 expansion of n.
A178680	filamb	0	0	n -> n.toString(2).indexOf(n.toString(3)) >= 0	Numbers n such that the binary expansion of n contains the base 3 expansion of n as a substring.
A178738	#nyi	0	Start from 1, 1, -2, -2, -4, -4, 8, 8, 16, 16, -32, -32, -64, -64, 128, ... which is A016116(n-1) with negative signs in blocks of 4, assuming offset 1. The Moebius transform of that sequence is b(n) = 1, 0, -3, -3, -5, -2, 7, 10, 18, 20, -33, -25, -65, -72, 135, 120, ... for n >= 1, and the current sequence is a(n) = b(2n-1)/(2n-1). - _R. J. Mathar_, Oct 29 2011
A178749	simtraf	1	new MobiusTransformSequence(1, new A001405(), 0)	(n, v) -> v./(n)	n * a(n) provides the Moebius transform of A001405 signed central binomial coefficients.
A178834	holos	0	[[0],[0,-9,9],[0,-9,12],[12,1,-2],[8,1,-4],[-4,0,1]]	0,0,1	0	0
A178899	filter	0	new A003068()	PRIME	
A179081	parity	0	new A007953()	a(n) = A000035(A007953(n));
A179115	lambdan	1	n -> JF(ZV(n).^(JF(n).sigma0AsLong())).phi()	phi(n^tau(n)). - _Wesley Ivan Hurt_, Jun 09 2023
A179147	filtpos	1	1	new A081119()	v -> v.equals(3)	Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179148	filtpos	1	1	new A081119()	v -> v.equals(4)	Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179149	filtpos	1	1	new A081119()	v -> v.equals(5)	Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179150	filtpos	1	1	new A081119()	v -> v.equals(6)	Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179151	filtpos	1	1	new A081119()	v -> v.equals(7)	Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179152	filtpos	1	1	new A081119()	v -> v.equals(8)	Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179153	filtpos	1	1	new A081119()	v -> v.equals(10)		Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179154	filtpos	1	1	new A081119()	v -> v.equals(12)		Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179155	filtpos	1	1	new A081119()	v -> v.equals(14)		Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179157	filtpos	1	1	new A081119()	v -> v.equals(16)		Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179158	filtpos	1	1	new A081119()	v -> v.equals(18)		Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179159	filtpos	1	1	new A081119()	v -> v.equals(20)		Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179160	filtpos	1	1	new A081119()	v -> v.equals(22)		Numbers n such that Mordells equation y^(\d+)= x^(\d+)+ n has exactly (\d+) integral solutions
A179213	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A066779(2*n) - A066779(n-1).
A179305	lambdan	0	n -> SD(n, d -> JF(d).sigma().*(BI(n, d)))
A179336	filter	0	new A000040()	v -> v.toString(10).matches("\\d*[2357]\\d*")	Primes containing at least one prime digit in base 10.
A179431	lambdan	0	n -> BI(ZV(3).^(n - 1), n)
A179463	filter	0	new A001358()	v -> v.toString(10).matches("\\d*[469]\\d*")	Semiprimes A001358 containing at least one semiprime digit in base 10.
A179511	multrar	1	(self, n) -> Functions.PRIME.z(self.a(n - 1)).+(self.a(n - 1).*(2))	"1"		, a(n) = prime(a(n-1)) + 2a(n-1).
A179512	multrar	1	(self, n) -> Functions.PRIME.z(self.a(n - 1)).-(self.a(n - 1).*(2))	"12"		, a(n) = prime(a(n-1)) - 2a(n-1).
A179513	multrar	1	(self, n) -> Functions.PRIME.z(self.a(n - 1)).+(self.a(n - 1).*(3))	"1"		, a(n) = prime(a(n-1)) + 3a(n-1).
A179514	multrar	1	(self, n) -> Functions.PRIME.z(self.a(n - 1)).-(self.a(n - 1).*(3))	"31"		, a(n) = prime(a(n-1)) - 3a(n-1).
A179515	multrar	1	(self, n) -> Functions.PRIME.z(self.a(n - 1)).+(self.a(n - 1).*(4))	"1"		, a(n) = prime(a(n-1)) + 4a(n-1).
A179516	multrar	1	(self, n) -> Functions.PRIME.z(self.a(n - 1)).-(self.a(n - 1).*(4))	"73"		, a(n) = prime(a(n-1)) - 4a(n-1).
A179517	multrar	1	(self, n) -> Functions.PRIME.z(self.a(n - 1)).+(self.a(n - 1).*(5))	"1"		, a(n) = prime(a(n-1)) + 5a(n-1).
A179518	multrar	1	(self, n) -> Functions.PRIME.z(self.a(n - 1)).-(self.a(n - 1).*(5))	"190"		, a(n) = prime(a(n-1)) - 5a(n-1).
A179545	lambdan	0	n -> BI(Puma.prime(n), 2).*(3)
A179623	parmof2	1	A008873	3711	Collatz trajectory starting at 3711.
A179624	parmof2	1	A008873	230631	Collatz trajectory starting at 230631.
A179782	filnum	1	0	n -> Long.toString(n*(3*n - 1)/2).indexOf(Integer.toString(n)) >= 0	Numbers n such that the decimal representation of n is contained as substring in that of the n-th pentagonal number.
A179802	dirtraf	1	new A010888()	new A179545()	"null"		1				Digital root of A179545.
A179938	#nyi	0		Third largest prime factor of numbers that are divisible by at least three different primes (A000977)
A179953	#nyi	0		a(n) is the least exponent k such that q^k >= n, where q is the Largest prime factor of n (= A006530(n)); a(1) = 1 by convention
A180082	filter	0	new A005898()	SEMIPRIME	
A180101	#nyi	0		a(0) = 0, a(1)=1; thereafter a(n) = largest prime factor of sum of all previous terms
A180112	multraf	2	(self, n) -> self.s(0)./(self.s(1))	""	new A000142(), new A056876()	a(n)=Annn(n)/(\d+)-Annn(n)/(\d+)	2,2	A000142,A056876			Number of permutations of 1..n with the Sum_{i=1..n} of (i-p(i))^2 < (n-1)*n*(n+1)/6.
A180200	dirtraf	0	new A006068()	new PrependSequence(0, new A054429(), 0)	= A006068(A054429(n)), n > 0. - _Yosu Yurramendi_, Jun 05 2021
A180201	inverse	0	new A180200()	0	0
A180342	#nyi	0		a(n) = the Least number k such that the Least prime factor of k^2  +  1 equals A002144(n)
A180403	#nyi	0	Numerator in Moebius transform of A001790/A046161.
A180564	holos	0	[[0],[-4,1],[3,-1],[-3,1],[3],[-2]]	1,0,1,1	0	0
A180640	#nyi	0		Primes P such that P < (largest prime factor of (P - 1)) * (largest prime factor of (P + 1))
A180641	#nyi	0		Primes P such that P > (largest prime factor of (P - 1)) * (largest prime factor of (P + 1))
A180783	tuptras	1	(self, n) -> self.s(0).+(self.s(1))./(2)	"0"	new A000010().skip(1), new A060594().skip(1)
A180929	filtpos	1	1	new A000203()	v -> ZUtils.isPolygonal(v, 5)	Numbers n such that the sum of divisors of n is a pentagonal number.
A180930	filtpos	1	1	new A000203()	v -> ZUtils.isPolygonal(v, 6)	Numbers n such that the sum of divisors of n is a hexagonal number.
A180937	prepend	0	new FilterPositionSequence(1, 1, new A000203(), v -> ZUtils.isPolygonal(v, 10))	0	Sigma-decagonal numbers: numbers n such that sigma(n) is a decagonal number
A181044	tuptraf	1	(n, s) -> s[0].^(n).*(2*n)	"1"	PREVIOUS	a(n)=2*n*(a(n-1))^n
A181112	filnum	1	0	n -> { final Z v = ZV(n).^(6).+(1091)   ; return v.mod(4 ) == 0 && v./(4 ).IPP(); }		isprime((n^6+1091)/4)
A181424	multrafd	1	(self, n) -> SEQ.a(self.s(0).+(2))	""	new A064113()	new A000040()	a(n)=Annn(Annn(n)+(\d+))
A181469	#nyi	0		Numbers n such that 89 is the largest prime factor of n^2 - 1
A181470	#nyi	0		Numbers n such that 97 is the largest prime factor of n^2  -  1
A181564	filter	0	new A000926()	SEMIPRIME	
A181591	lambdan	0	n -> { final FactorSequence fs = JF(n); return BI(fs.bigOmega(), fs.omega()); }
A181766	filnum	0	0	n -> !ZV(n).*( 3).+( 7).IPP()		3,7	Numbers n such that (\d+)*n +(\d+) is not prime
A181801	moetrafi	1	new A322586()	, 0	#
A181858	multraf	0	(self, n) -> n == 0 ? Z.ONE : self.s(0)./(self.s(1))	""	new A181857(), new A181860()
A181860	tuptraf	0	(n, s) -> s[0].lcm(s[1])	""	new A000290(), new A056040()	a(n)=lcm(Annn(n),Annn(n))
A181964	multraf	1	(self, n) -> FA(n)./(2).*(self.s(0))	"1"	new A046682()	n!/2 * new A046682()
A181966	simtraf	1	new A013939()	(n, v) -> FA(n).*(v)
A182101	partsun	0	new SimpleTransformSequence(1, new A121967(), v -> v.*(2).-(1))			Partial sums of the sequence 2*A121967(n)-1.
A182161	simtraf	0	new A001192()	(n, v) -> FA(n).*(v)
A182241	simtraf	0	new FilterSequence(0, new A161151(), (k, v) -> (k & 1) == 0)	(n, v) -> v./(2)	a(n) = A161151(2*n) / 2
A182277	filter	0	new A003336()	SEMIPRIME	
A182324	simtraf	0	new A000030()	(n, v) -> ZV(n).+(v)
A182370	lambdan	1	n -> FA(FA(n).intValueExact())./(FA(n).^(FA(n-1)))
A182616	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A000041(2*n) - A000041(n).
A182629	tuptras	0	(self, n) -> self.s(0).-(self.s(1))	"0"	new A046746().skip(1), new A000203()	a(n) = A046746(n) - A000203(n), for n >= 1
A182640	multrar	0	(self, n) -> CR.PHI.*(self.a(n - 1)).floor().+(n)	"0,1"	a(n)=n+floor(r*a(n-1)), where r = golden ratio = (1+sqrt(5))/2, a(0)=0, a(1)=1.	nonn	0..37
A182716	filter	0	new A182712()	(k, v) -> (k & 1) == 0
A182717	filter	0	new A182712()	(k, v) -> (k & 1) == 1
A182779	multraf	0	(self, n) -> self.s(0).*(self.s(1))	"1"	new A049019(), new A118851()	a(n)=Annn(n)*Annn(n)
A182782	#nyi	0		a(n) is one less than the length of the sequence b(n) defined by: b(1) = n; for k > 1, b(k + 1) is the Least prime factor of 1 + b(k)^2 not already in the b - sequence
A182811	insect2	1	new A000032()	new A134808()							Cyclops-Lucas numbers.
A182922	multraf	0	(self, n) -> FA(n)./(self.s(0))	""	new A055773()	n! / new A055773()
A182984	multraf	0	(self, n) -> self.s(0).-(self.s(1))	"1"	new A006128(), new A092269()	new        ()	a(n)=Annn(n)-Annn(n),forn>=(\d+)	1	A006128,A092269		Total number of parts that are not the smallest part in all partitions of n.
A183008	multraf	0	(self, n) -> self.s(0).*(24)	""	new A000041()	24*new A000041()
A183012	tuptraf	0	(n, s) -> s[0].*(24).-(s[1])	""	new A138879(), new A187219()	a(n) = 24*A138879(n) -    A187219(n).
A183056	insect2	1	new A000041()	new A134808()							Cyclops partition numbers.
A183131	lambdan	0	n -> BI(new Q(Z.ONE, Z.THREE.pow(n)).+(n - 1), ZV(n)) .*(ZV(3).^(n*n + n))        .num()
A183150	insect2	1	new A001358()	new A050801()							Semiprimes s such that s^2 is expressible as the sum of two positive cubes.
A183227	lambdan	0	n -> ZV(ZUtils.digitSum(Z.TEN.^(n).-(1), 5))	a(n) is the base-5 digit sum of 10^n-1.
A183228	lambdan	0	n -> ZV(ZUtils.digitSum(Z.TEN.^(n).+(1), 5))	a(n) is the base-5 digit sum of 10^n+1.
A183977	lingf	1	0,4,-4,-10,8	1,-3,0,6,-4	0						1/4 the number of (n+1) X (n+1) binary arrays with all 2 X 2 subblock sums the same.
A184030	lingf	1	0,16,-8,-38,16	1,-3,0,6,-4	0						1/16 the number of (n+1) X (n+1) 0..3 arrays with all 2 X 2 subblocks having the same four values.
A184040	lingf	1	0,9,-6,-22,12	1,-3,0,6,-4	0						1/9 the number of (n+1) X (n+1) 0..2 arrays with all 2 X 2 subblocks having the same four values.
A184481	filter	0	new A005448()	SEMIPRIME	
A185002	#nyi	0		Numbers k such that P(k^2 + 1) > P((k + 1)^2 + 1) where P(n) (A006530) is the largest prime factor of n
A185011	#nyi	0		Numbers k such that P(k^2 + 1) < P((k + 1)^2 + 1) where P(n) (A006530) is the largest prime factor of n
A185055	lambdan	0	n -> (ZV(5).^(n).-(4*n+1))./(8)
A185112	#nyi	0		a(1) = 0; for n > 1, a(n) = a(n - 1)  -  P(n) if that number is zero or positive, otherwise a(n)= a(n - 1) +  P(n), where P(n) is the largest prime factor of n (A006530)
A185121	spf	0	Z.TEN.^(Z2(n)).+(1)
A185246	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A185346(), new A058348()
A185297	simtraf	2	new A362641().skip(1)	(n, v) -> (n <= 1) ? Z.ONE : JF(v).sopf()	a(n) = sopf(A362641(n)), n>=2
A185322	simtraf	1	new A000040()	(n, v) -> new Q(v, ZV(10)).ceiling()	a(n) = ceiling(prime(n)/10).
A185389	#nyi	0		Largest number k such that the Largest prime factor of k^2 + 1 is A002313(n), the n - th prime not congruent to 3 mod 4
A185396	#nyi	0		Largest number x such that the Largest prime factor of x^2 - 2 is A038873(n), the n - th prime not congruent to 3 or 5 mod 8
A185397	#nyi	0		Largest number x such that the Largest prime factor of x^2 + 2 is A033203(n), the n - th prime not congruent to 5 or 7 mod 8
A185633	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A053657().skip(1), new A053657()	a(n)=Annn(n+(\d+))/Annn(n)			1	A053657,A053657	For odd n, a(n) = 2; for even n, a(n) = denominator of Bernoulli(n)/n; The number 2 alternating with the elements of A006953.
A185642	multraf	2	(self, n) -> new Q(self.s(0), self.s(1)).round()	""	new A008472().skip(1), new A001221().skip(1)
A185657	filnum	1	0	n -> { final Z v = ZV(n).^(2).+(n).+(41); return v.mod(43) == 0 && v./(43).IPP(); }		isprime((n^2+n+41)/43)
A185679	lambdan	0	n -> ZV(ZUtils.decimalLength(ZV(n).^(2)))
A185965	central	0	new A185962()	Central coefficients of number triangle A185962.
A186190	simtraf	1	new A000213()	v ->  ZV(v.toString().charAt(0) - '0')	First digit of tribonacci sequenc A000213.
A186191	simtraf	1	new A000288()	v ->  ZV(v.toString().charAt(0) - '0')	First digit of tetranacci numbers A000288.
A186192	simtraf	1	new A000322()	v ->  ZV(v.toString().charAt(0) - '0')	First digit of pentanacci numbers A000322.
A186278	filnum	1	0	k -> ZV(ZUtils.digitSum(ZV(k)) + ZUtils.digitSum(ZV(k).*(k))).IPP()	Numbers n such that the sum of the digits of n plus the sum of the digits of n^2 is prime.	nonn,easy,base	1..1000
A186279	filnum	1	0	k -> ZV(ZUtils.digitSum(ZV(k)) + ZUtils.digitSum(ZV(k).*(k)) + ZUtils.digitSum(ZV(k).^(3))).IPP()	Numbers n such that the sum of the digits of n plus the sum of the digits of n^2 plus the sum of the digits of n^3 is prime.	nonn,easy,base	1..10000
A186280	filter	1	new A186279()	PRIME	Primes within A186279.	nonn,easy,base	1..10000
A186281	filter	1	new A186278()	PRIME	Primes within A186278.	nonn,easy,base	1..49
A186688	filnum	1	1	n -> JF(ZV(n).^(4).+(1)).isSemiprime()	4,1	Semiprimes of the form n^(\d+)+ (\d+)
A186976	diffs	0	new A015698().skip(5)	First differences of A015698.
A187022	#nyi	0		a(n) is the Least prime factor of n^n + 1 having the form k*n + 1
A187023	#nyi	0		a(n) is the Least prime factor of n^n - 1 having the form k*n + 1
A187043	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A007357()	new A064547()	a(n)=Annn(Annn(n))		D064547,A007357
A187129	simtraf	2	new A362640().skip(1)	(n, v) -> (n <= 1) ? Z.ONE : JF(v).sopf()	a(n) = sopf(A362640(n)), n>=2
A187737	#nyi	0		a(n) = floor(sum_{1 < k <= n} p(k)/P(k)), where p(k) is the Least prime factor of k and P(k) is the largest prime factor of k
A187879	lambdan	0	n -> ZV(3).^(n*n*n)
A188051	filnum	1	0	n -> ZV(18).^(n).-(ZV(17).^(n)).IPP()		isprime(18^n-17^n)
A188341	filamb	0	0	n -> { final int[] c = ZUtils.digitCounts(n, 3); return c[0] == 0 && c[1] <= 1; }	Numbers having no 0s and not more than one 1 in their representation in base 3.
A188499	insect2	0	new A089633()	new A188341()	Intersection
A188583	filter	1	new A000040()	p -> p.^(3).*( 6).+(1).IPP()	[(\d+)#^(\d+)+(\d+)]&]	500, 6,3,1
A188621	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A068084(), new A000217().skip(1)	a(n) = A068084(n) / A000217(n).
A188831	filter	1	new A073497()	v -> v.isProbablePrime()	primes in A073497
A189045	filter	0	new A045542()	SEMIPRIME	
A189242	filnum	0	0	n -> !ZV(n).*(24).+(17).IPP()	Numbers n such that (\d+)*n+(\d+) is not prime
A189313	filter	0	new A000040()	p -> 2*JF(p.*(4)).omega() == JF(p.*(4).+(2)).omega()	 Primes p such that 2*omega(4p) = omega(4p+2), where omega(k) is the number of distinct primes dividing k, A001221.
A189314	filter	0	new A018252()	p -> 2*JF(p.*(4)).omega() == JF(p.*(4).+(2)).omega()	 Nonprimes k such that 2*omega(4k) = omega(4k+2), where omega(j) is the number of distinct primes dividing j, A001221.
A189357	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A000009(2*n) + A000700(n) for n>=1, a(0)=1.
A189713	central	0	new A035312()	Central terms of Zorach additive triangle (cf. A035312).
A190136	lambdan	1	n -> JF(ZV(n).*(n + 1).*(n + 2).*(n + 3)).largestPrimeFactor()	Largest prime factor of n*(n+1)*(n+2)*(n+3).
A190148	#lpf	0	the least number having exactly two odd prime factors that differ by 2*n^2
A190359	#lpf	0	the least number having exactly two odd prime factors that differ by 2^n
A190642	simtraf	0	new A016789()	v -> new Z(v.toString(3))
A190663	#lpf	0	the least semiprime whose prime factors differ by 2*n!
A190682	filter	1	new A054038()	SQUARE	.
A190758	filter	1	new A040028(41, 2, true)	v -> v.mod(41) == 1	x^41 = 2 has a solution mod p, and p is congruent to 1 mod 41.						Primes p such that x^41 = 2 has a solution mod p, and p is congruent to 1 mod 41.
A190894	#nyi	0		Auxiliary c(n) sequence used to prove some properties about Rowlands sequence. c(n) has the following recursive definition: c(1) = 5, c_(n + 1) = c(n)  +  lfp(c(n))  -  1, where lpf(.) denotes the lowest prime factor of a number
A190906	simtraf	0	new A056040()	(n, v) -> v.gcd(ZV(3).^(n))	a(n)=gcd(Annn(n),(\d+)^n)	3
A190948	lambdan	0	n -> RU(0, n, k -> new Q(BI(n, k).*(Z_1(k)), ZV(k*k + 1))).num()
A190950	lambdan	0	n -> RU(0, n, k -> new Q(BI(n, k).*(Z_1(k)), ZV(k*k + 1))).den()
A191546	#spf	0	prime(n)^n  +  1 having the form 2*k*n + 1
A191548	#spf	0	prime(n)^n  -  1 having the form k*n  +  1
A191682	simtraf	0	new A113473()	v -> v.*(2)	Twice Annnnnn
A192015	multraf	1	(self, n) -> self.s(0).*(self.s(1).^(self.s(0).-(1)))	""	new A025474(), new A025473()	a(n) = D025474(n) * D025473(n)^(D025474(n) - 1).
A192074	simtraf	1	new A066158()	(n, v) -> n <= 1 ? Z.ZERO : v.-(2)	with a(0)=1.
A192397	#nyi	0		Record holders for Largest prime factor of n^n  +  (n + 1)^(n + 1)
A192446	holos	0	[[0],[44614800,-18633240,2566080,-116640],[57445200,-26030160,3907440,-194400],[-6179328,-308448,598752,-62208],[-38137932,18250812,-3094632,188352],[-16093728,11097252,-2710584,230760],[-13541040,6676272,-1064664,57312],[39600,-824850,523602,-81738],[-512760,452972,-88632,-3824],[609660,-780238,318160,-40228],[-46360,64610,-15785,-2465],[0,3658,-5487,1829]]	1, 2, 6, 30	0	0	0 = (4*x^3 + 8*x^2 + 4*x - 1)*(108*x^3 - 108*x^2 + 36*x - 31)*(270*x^4 + 180*x^3 + 144*x^2 - 225*x - 59)*y''' + (1283040*x^9 + 1924560*x^8 + 1080864*x^7 - 1425816*x^6 - 2135376*x^5 + 33048*x^4 + 702468*x^3 + 134520*x^2 + 43892*x + 30575)*y'' + 30*(111780*x^8 + 149040*x^7 + 120960*x^6 - 122094*x^5 - 172206*x^4 - 6012*x^3 + 36615*x^2 + 10298*x - 1541)*y' + 60*(29160*x^7 + 34020*x^6 + 36288*x^5 - 43092*x^4 - 45882*x^3 - 6462*x^2 + 1890*x + 913)*y.
A192681	simtraf	0	new A000262()	v -> v.sqrt()	a(n)=floor(sqrt(Annn(n)))
A192885	simtraf	0	new A071963()	(n, v) -> v.-(n)	A071963(n) is the largest prime factor of p(n), the n - th partition number A000041(n)
A193230	parmof2	1	A293979	1
A193334	dirtraf	1	new A183063()	new A000203()	"null"		1				Number of even divisors of sigma(n).
A193581	lambdan	0	n -> ZV(n).-(Functions.DIGIT_SORT_ASCENDING.z(n))	Sort-and-subtract: a(n) = n - A004185(n).
A193615	#nyi	0		Second - largest prime factor of the n - th Fibonacci number, if composite, or 1 otherwise
A193742	filter	1	new A000040()	p -> p.mod(10000) == 1729	Mod[#,(\d+)]==(\d+)&]	120000,10000,1729
A193854	filtpos	0	0	 new A062039()	v -> v.equals(ZV(1))	Numbers m such that Annnnnn(m)= (\d+)	
A193943	#nyi	0		Integers n such that for all i > n the largest prime factor of i*(i + 1) exceeds the largest prime factor of n*(n + 1)
A193944	#nyi	0		Integers k such that for all j > k the largest prime factor of j*(j + 1)*(j + 2) exceeds the largest prime factor of k*(k + 1)*(k + 2)
A193945	#nyi	0		Integers n such that for all i > n the largest prime factor of i(i + 1)(i + 2)(i + 3) exceeds the largest prime factor of n(n + 1)(n + 2)(n + 3)
A193946	#nyi	0		Integers n such that for all i > n the largest prime factor of i(i + 1)(i + 2)(i + 3)(i + 4) exceeds the largest prime factor of n(n + 1)(n + 2)(n + 3)(n + 4)
A193947	#nyi	0		Integers n such that for all i > n the largest prime factor of i(i + 1)(i + 2)(i + 3)(i + 4)(i + 5) exceeds the largest prime factor of n(n + 1)(n + 2)(n + 3)(n + 4)(n + 5)
A193948	#nyi	0		Integers n such that for all i > n the largest prime factor of i(i + 1)(i + 2)(i + 3)(i + 4)(i + 5)(i + 6) exceeds the largest prime factor of n(n + 1)(n + 2)(n + 3)(n + 4)(n + 5)(n + 6)
A194029	simtras	1	new A066628().skip(1)	v -> v.+(1)	. - _Alan Michael Gââ¥mez Calderââ¥n_, Oct 30 2023
A194041	insect2	1	new A000959()	new A031177()
A194082	partsun	1	new A171970()			Partial sums of A171970.
A194086	#nyi	0		Second - Least prime factor of the n - th Lucas number (beginning with 2), if composite, or 1 otherwise
A194129	lambdan	0	n -> ZV(ZUtils.decimalLength(ZV(n).^(100)))
A194162	partsun	1	new A194161()
A194163	parmof2	1	A194161	CR.valueOf(3).sqrt()
A194164	partsun	1	new A194163()
A194165	parmof2	1	A194161	CR.PHI
A194166	partsun	1	new A194165()
A194167	parmof2	1	A194161	CR.PHI.add(CR.HALF)
A194168	partsun	1	new A194167()
A194169	parmof2	1	A194161	CR.FIVE.sqrt()
A194170	partsun	1	new A194169()
A194171	parmof2	1	A194161	CR.HALF.add(CR.FIVE.sqrt())
A194172	partsun	1	new A194171()
A194173	parmof2	1	A194161	CR.SIX.sqrt()
A194174	partsun	1	new A194173()
A194175	parmof2	1	A194161	CR.valueOf(7).sqrt()
A194176	partsun	1	new A194175()
A194177	parmof2	1	A194161	CR.valueOf(8).sqrt()
A194178	partsun	1	new A194177()
A194179	parmof2	1	A194161	CR.HALF.add(CR.EIGHT.sqrt())
A194180	partsun	1	new A194179()
A194198	parmof2	1	A194161	CR.valueOf(10).sqrt()
A194199	partsun	1	new A194198()
A194200	parmof2	1	A194161	CR.E
A194201	partsun	1	new A194200()
A194202	parmof2	1	A194161	CR.E.multiply(2)
A194203	partsun	1	new A194202()
A194204	parmof2	1	A194161	CR.E.divide(2)
A194205	partsun	1	new A194204()
A194206	parmof2	1	A194161	CR.PI
A194207	partsun	1	new A194206()
A194208	parmof2	1	A194161	CR.HALF_PI
A194209	partsun	1	new A194208()
A194210	parmof2	1	A194161	CR.PI.divide(3)
A194211	partsun	1	new A194210()
A194212	parmof2	1	A194161	CR.PI.multiply(2)
A194213	partsun	1	new A194212()
A194214	parmof2	1	A194161	CR.PI.multiply(2).divide(3)
A194215	partsun	1	new A194214()
A194225	parmof2	1	A194161	CR.ONE.divide(7)
A194226	partsun	1	new A194225()
A194227	parmof2	1	A194161	CR.TWO.divide(7)
A194228	partsun	1	new A194227()
A194239	parmof2	1	A194161	CR.ONE.add(CR.SQRT2).divide(2)
A194240	partsun	1	new A194239()
A194241	parmof2	1	A194161	CR.THREE.sqrt().add(1).divide(2)
A194242	partsun	1	new A194241()
A194243	parmof2	1	A194161	CR.valueOf(2).subtract(CR.valueOf(2).sqrt())
A194244	partsun	1	new A194243()
A194245	parmof2	1	A194161	CR.valueOf(2).subtract(CR.valueOf(3).sqrt())
A194246	partsun	1	new A194245()
A194247	parmof2	1	A194161	CR.valueOf(3).subtract(CR.valueOf(5).sqrt())
A194248	partsun	1	new A194247()
A194249	parmof2	1	A194161	CR.valueOf(3).subtract(CR.valueOf(6).sqrt())
A194250	partsun	1	new A194249()
A194251	parmof2	1	A194161	CR.valueOf(3).subtract(CR.valueOf(8).sqrt())
A194252	partsun	1	new A194251()
A194253	parmof2	1	A194161	CR.valueOf(12).sqrt()
A194254	partsun	1	new A194253()
A194255	parmof2	1	A194161	CR.valueOf(4).subtract(CR.valueOf(12).sqrt())
A194256	partsun	1	new A194255()
A194345	#nyi	0		Numbers k for which the largest prime factor of p(k) divides p(1)*p(2)*...*p(k - 1), where p(k) is the number of partitions of k
A195053	parity	1	new A092269()	1	It appears that this is also the parity of A195052.						Parity of the spt function, A092269.
A195212	#nyi	0		Numbers n for which the exponent of the largest prime factor of n is even
A195295	filter	0	new A006307()	(k, v) -> (k & 1) == 0
A195375	filamb	0	0	n -> n.^(3).toString(14).matches("[2357bd]+")	Numbers whose cube expanded in base 14 uses only prime digits.
A195441	multraf	0	(self, n) -> self.s(0)./(self.s(1))	""	new A064538()	a(n)=Annn(n)/(n+(\d+))	1	A064538			a(n) = denominator(Bernoulli_{n+1}(x) - Bernoulli_{n+1}).
A195459	lambdan	0	n -> Functions.PHI.z(n*3 )./(2 )
A195462	multraf	1	(self, n) -> self.s(0).*(self.s(1))./(self.s(2))	""	new A000178(), new A001008(), new A002805()	a(n)=Annn(n)*Annn(n)/Annn(n)
A195618	prepend	0	new SimpleTransformSequence(0, new A001208(), v -> v.+(1))	1	a(0) = 1; a(n) = A001208(n) + 1
A196265	holose	0	[[0],[-7,2],[-4,2],[-3,4,-1],[0,1,-1]]	1,2,4,8	0	1	E.g.f. A(x) =: y  satisfies 0 = -(1 + x)^2 + y * x - y' * (1 + 2*x + 2*x^2) + y'' * (1 + x) = (1 - x) + y' * (1 - x) - y'' * (1 + 2*x^2) + y''' * x. - _Michael Somos_, Jan 16 2014
A196276	filtpos	0	1	 new A196274()	v -> v.equals(ZV(1))	Numbers m such that Annnnnn(m)= (\d+)	
A197112	simtraf	1	new A066232()	v -> v.-(2)	. - _Donovan Johnson_, Oct 14 2011
A197117	lambdan	1	n -> SU(1, n, k -> Z2(k).-(1).*(Z2(n)).+(1).IPP() ? Z.ONE : Z.ZERO)
A197118	lambdan	1	n -> SU(1, n, k -> Z2(k).+(1).*(Z2(n)).-(1).IPP() ? Z.ONE : Z.ZERO)
A197119	lambdan	1	n -> SU(1, n, k -> Z2(k).+(1).*(Z2(n)).+(1).IPP() ? Z.ONE : Z.ZERO)
A197594	simtraf	2	new A138576()	v -> ZV(2).^(v).-(1)	a(n)=(\d+)^Annn(n)-(\d+)	2,1	A138576
A197658	lambdan	2	n -> Predicates.SQUARE_FREE.is(n) ? Functions.CARMICHAEL_LAMBDA.z(n).+(1) : Z.ZERO	a(n) = A002322(n) + 1 if n squarefree, otherwise a(n) = 0. - _Joerg Arndt_, Jan 22 2013
A198192	multraf	0	(self, n) -> ZV(n).*(self.s(0)).-(self.s(1))	""	new A000120(), new A073642()
A198681	filter	0	new A008585()	v -> ZUtils.digitSum(v, 3) % 3 == 1	Nonnegative multiples of 3 whose sum of base-3 digits are of the form 3k+1.
A198682	filter	0	new A008585()	v -> ZUtils.digitSum(v, 3) % 3 == 2	Nonnegative multiples of 3 whose sum of base-3 digits are of the form 3*k+2.
A199105	filter	1	new A011773()	(k, v) -> v.mod(Functions.CARMICHAEL_LAMBDA.z(k)).isZero() && Functions.PHI.z(k).mod(v).isZero()	A002322(k) divides A011773(k) and A011773(k) divides A000010(k).
A199295	spf	0	ZV(n).^(ZV(n).^(n)).+(1)
A199325	parmof4	1	A214703	0	1	5
A199326	parmof4	1	A214703	0	1	6
A199329	parmof4	1	A214703	0	1	9
A199340	parmof4	1	A214703	0	3	4
A199407	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,7}) exceeds the largest prime factor of product(n + k, {k,0,7})
A199968	simtraf	1	new A007978()	(n, v) -> n < 3 ? Z.ZERO : v	a(n)=Annn(n)forn>=(\d+)	3	A007978
A200213	tuptraf	0	(n, s) -> s[0].-(s[1]).-(2)	"0"	new A000005(), new A010052()	a(1) = 0; for n > 1, a(n) = A000005(n) -   A010052(n) - 2.
A200566	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,8}) exceeds the largest prime factor of product(n + k, {k,0,8})
A200567	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,9}) exceeds the largest prime factor of product(n + k, {k,0,9})
A200568	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,10}) exceeds the largest prime factor of product(n + k, {k,0,10})
A200569	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,11}) exceeds the largest prime factor of product(n + k, {k,0,11})
A200570	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,12}) exceeds the largest prime factor of product(n + k, {k,0,12})
A200740	#findre	0	9*n*(3*n+2)*(9637049385113*n -13150529182719) *(3*n+1)*a(n) +3*(-1867245272511941*n^4 +3938815702450522*n^3 -1829703422934531*n^2 -40908425929938*n +80119802734368)*a(n-1) +3*(1493812832168185*n^4 -11081290962331766*n^3 +30368478809400583*n^2 -37445753408742482*n +17518049080170408)*a(n-2) +2*(-3598515629532857*n^4 +51918859363655934*n^3 -272767116207263419*n^2 +607523860755165342*n -484618766805936168)*a(n-3) +2*(2236067158786314*n^4 -43895348429968415*n^3 +313117370004358791*n^2 -968797762596343960*n +1100409843957627312)*a(n-4) +4*(-320929802901755*n^4 +7262334358284366*n^3 -58466924652690997*n^2 +201695420809801662*n -253987363669614120)*a(n-5) +2*(n-6) *(56449675289272*n^3 -1539119961654835*n^2 +11344967150541329*n -25343984173596980)*a(n-6) +2*(n-6) *(n-7) *(88750351258118*n^2 -884530270439421*n +2059300905886804)*a(n-7) +4*-(6920632454763*n -35058029508284)*(n-7)*(n-8)*(2*n-15)*a(n-8)=0. - _R. J. Mathar_, Jan 11 2024
A200768	lambdan	0	n -> SP(n, p -> ZV(p).^(n))	a(n) = Sum_{p|n} p^n - _Wesley Ivan Hurt_, Jun 14 2021
A200815	multraf	3	(self, n) -> self.s(0).-(1)	"0,1"	new A036459()	v -> v.-(1)	= A060937(n)-2, for n >= 3. - _Antti Karttunen_, Oct 06 2017
A201059	lambdan	0	n -> new Q(BI(2*n, n), ZV(2*n)).den()
A201271	lingf	0	1,3,5,1,3,1	1,0,0,-3,0,0,3,0,0,-1	0						Number of n X 2 0..2 arrays with every row and column nondecreasing rightwards and downwards, and the number of instances of each value within one of each other.
A201272	lingf	0	1,1,2,3,5,4,7,5,2,1,1	1,0,-2,-2,1,4,0,-2,0,2,0,-4,-1,2,2,0,-1	0						Number of n X 3 0..2 arrays with every row and column nondecreasing rightwards and downwards, and the number of instances of each value within one of each other.
A201273	holos	0	[[0],[-1],[0],[0],[1],[0],[0],[2],[0],[0],[1],[0],[0],[-4],[0],[0],[-5],[0],[0],[4],[0],[0],[5],[0],[0],[1],[0],[0],[-6],[0],[0],[0],[0],[0],[6],[0],[0],[-1],[0],[0],[-5],[0],[0],[-4],[0],[0],[5],[0],[0],[4],[0],[0],[-1],[0],[0],[-2],[0],[0],[-1],[0],[0],[1]]	[1,3,12,14,85,199,143,740,1274,759,3416,5312,2746,11628,16676,7946,32164,43438,19713,76321,99347,43137,162566,205231,86351,318364,391600,161089,581578,702330,282904,1006014,1195239,473473,1662549,1947164,761467,2641053,3058967,1181605,4059412,4654793,1779661,6063652,6889819,2612220,8829019,9957994,3745214,12575534,14086935,5261295,17563969,19551486,7259623,24097583,26682634,9851260,32544345,35858033,13172445]	0	0
A201627	simtraf	0	new A214222()	(n, v) -> v./(n + 1)	a(n)=Annn(n+(\d+))/(n+(\d+))	1,1	A214222
A201628	simtraf	0	new A214223()	(n, v) -> v./(n + 1)	a(n)=Annn(n+(\d+))/(n+(\d+))	1,1	A214223
A201740	lambdan	0	n -> Functions.MERTENS.z(ZV(n).^(n))	The value of the Mertens function at n^n   
A202989	lambdan	0	n -> (ZV(3).^(n).+(1)).^(n)
A202991	lambdan	0	n -> (ZV(3).^(n).-(2)).^(n)
A203925	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A100731(), new A050923()
A204324	filamb	0	0	n -> ZUtils.digitSum(n) >= ZUtils.digitSum(n.^(3))	Numbers n such that A007953(n) >= A007953(n^3), where A007953 = digital sum in base 10.
A204665	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(52))	Primes p such that q-p =(\d+), where q is the next prime after
A204666	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(54))	Primes p such that q-p =(\d+), where q is the next prime after
A204667	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(56))	Primes p such that q-p =(\d+), where q is the next prime after
A204668	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(58))	Primes p such that q-p =(\d+), where q is the next prime after
A204669	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(62))	Primes p such that q-p =(\d+), where q is the next prime after
A204670	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(64))	Primes p such that q-p =(\d+), where q is the next prime after
A204673	filter	1	new A000040()	v -> Puma.nextPrimeZ(v).-(v).equals(ZV(180))	Primes p such that q-p =(\d+), where q is the next prime after
A205770	filter	0	new A018142()	(k, v) -> (k & 1) == 0
A205800	multrar	0	(self, n) -> RU(1, IntegerUtils.sqrt(n), k -> new Q(self.a(n - k*k).*(k*k), FA(n - k*k))).*(FA(n - 1)).num()	"1"
A205801	multrar	0	(self, n) -> RU(1, IntegerUtils.sqrt(n), k -> new Q(self.a(n - k*k),(FA(n - k*k)))).*(FA(n - 1)).num()	"1"
A206035	simtraf	1	new A064413()	(n, v) -> { final Z w = v.-(n).*(10); return w.compareTo(Z.ZERO) >= 0 ? w./(n) : w./(n).-(1); }	a(n) = floor(10*(A064413(n) - n)/n)
A206773	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A001065(), new A105221()	a(n)=Annn(n)-Annn(n)
A206807	simtraf	1	new A056576().skip(1)	(n, v) -> ZV(n).+(v)
A206941	lambdan	1	n -> Functions.PHI.z(Functions.CARMICHAEL_LAMBDA.z(n))	a(n) = phi(lambda(n)), where phi = A000010, lambda = A002322.
A207005	filnum	0	1	k -> { final int omk = JF(k).omega(); return ZV(omk).equals(ZV(JF(k - omk).omega())); }	Numbers k such that omega(k) = omega(k - omega(k)) where omega(k) is the number of distinct primes dividing k.
A207006	filnum	0	1	k -> { final int omk = JF(k).omega(); return ZV(omk).equals(ZV(JF(k + omk).omega())); }	Numbers n such that omega(n) = omega(n + omega(n)) where omega(n) is the number of distinct primes dividing n.
A208270	filter	0	new A000040()	v -> v.toString().indexOf('1') >= 0	Primes containing a digit (\d+)
A208272	filter	0	new A000040()	v -> v.toString().indexOf('2') >= 0	Primes containing a digit (\d+)
A208293	filnum	1	0	n -> { final Z v = ZV(n).^(2).+(1)      ; return v.mod(26) == 0 && v./(26).IPP(); }		isprime((n^2+1)/26)
A208449	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).num()	""	new A010786().skip(2), new A208448()	a(n)=Annn(n+(\d+))/Annn(n)			1	A010786,A208448	Numerator of A010786(n+1) / A010786(n).
A208450	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A010786().skip(1), new A208448()	a(n) = A010786(n) / A208448(n).
A208474	diffs	0	new A115995()	First differences of A115995.
A208535	arrlamb	1	1	1	-1	(n, k) -> n == 1 ? ZV(k) : SD(n, d -> PHI(n/d).*(ZV(k - 1).^(d)))./(n).-((n & 1) == 1 ? k - 1 : 0)	T(n, k) = if(n==1, k, sumdiv(n, d, eulerphi(n/d)*(k-1)^d)/n - if(n%2, k-1));
A209188	spf	2	ZV(n).^(2).+(n - 1)
A209189	spf	2	ZV(n).^(2).+(n + 1)
A209191	#nyi	0		Numbers n such that digital root of n equals Least prime factor of n
A209192	#nyi	0		Numbers n such that digital root of n equals largest prime factor of n
A209195	simtraf	1	new A097942()	v -> JF(v.+(1)).leastPrimeFactor()	A020639(A097942(n) + 1)the n - th highly totient number (A097942(n)) plus 1
A209248	lambdan	3	n -> Z2(Z2(n).-(2*n+1))
A209268	inverse	1	new A054582()	1	1
A209274	arrlamb	1	1	1	-1	(n, k) -> ZV(n).*(Z2(k).+(n - 1))./(2)	
A209423	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A066897(), new A066898()
A209816	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A000041(2*n) - A000070(n-1). - _Matthew Vandermast_, Jul 16 2012
A209837	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,13}) exceeds the largest prime factor of product(n + k, {k,0,13})
A209838	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,14}) exceeds the largest prime factor of product(n + k, {k,0,14})
A209839	#nyi	0		Integers n such that for all i > n the largest prime factor of product(i + k, {k,0,15}) exceeds the largest prime factor of product(n + k, {k,0,15})
A210247	simtraf	0	new A210246()	v -> ZV(v.signum())	a(n)=sign(Annn(n))		A210246
A210487	#nyi	0		a(n) is the Least possible Largest prime factor of prime(n)^2  -  prime(k)^2 for 0 < k < n
A210988	filter	1	new A000988().skip(2)	(k, v) -> (k & 1) == 1	Number of one-sided polyominoes with 2n cells.
A210989	filter	1	new A000988()	(k, v) -> (k & 1) == 1
A210997	filter	1	new A000105()	(k, v) -> (k & 1) == 1
A211026	simtras	1	new A000041().skip(1)	v -> v.*(2).+(2)	= 2*A052810(n) = A139582(n) + 2.
A211161	arrlamb	1	1	1	-1	(n, k) -> (k & 1) == 1 ? ZV(n) : ZV(k/2)
A211177	lambdan	1	n -> RU(1, n, k -> new Q(Z_1(k), PHI(k))).num()
A211178	lambdan	1	n -> RU(1, n, k -> new Q(Z_1(k), PHI(k))).den()
A211250	lambdan	0	n -> SU(0, n, k -> S1(n, k).*(Functions.BELL.z(3*k)))	a(n)=Sum_{k=(\d+),n}Stirling(\d+)(n,k)*Bell((\d+)*k)	0,1,3
A211251	lambdan	0	n -> SU(0, n, k -> S1(n, k).*(Functions.BELL.z(4*k)))	a(n)=Sum_{k=(\d+),n}Stirling(\d+)(n,k)*Bell((\d+)*k)	0,1,4
A211252	lambdan	0	n -> SU(0, n, k -> S1(n, k).*(Functions.BELL.z(5*k)))	a(n)=Sum_{k=(\d+),n}Stirling(\d+)(n,k)*Bell((\d+)*k)	0,1,5
A211982	multraf	1	(self, n) -> self.s(0).*(2)	""	new A092269()	2*new A092269()
A212276	insect2	1	new A004148()	new A000040()							Prime generalized Catalan numbers.
A212332	#nyi	0		The difference between the largest and Least prime factor of n as n runs through the numbers with at least two distinct prime factors
A212396	multraf	0	(self, n) -> new Q(self.s(0), self.s(1)).num()	""	new A212395(), new A000142()
A212397	multraf	0	(self, n) -> new Q(self.s(0), self.s(1)).den()	""	new A212395(), new A000142()
A212495	filamb	0	0	n -> n.toString(11).matches("[02468a]+")	Numbers all of whose base 11 digits are even.
A212525	filter	0	new A000040()	v -> v.toString().indexOf('3') >= 0	Primes containing a digit (\d+)
A212552	#spf	0	p^p  -  1 that is congruent to 1 modulo p where p = prime(n)
A212707	filter	0	new A212656()	SEMIPRIME	
A212918	filtpos	1	1	new A001414()	v -> ZUtils.isPolygonal(v, 5)	Numbers whose sum of prime factors (counted with multiplicity) is a pentagonal number (A000326).
A213050	filter	1	new A001122()	p -> p.mod(4) == 1	Primes of the form 4*k+1 with primitive root +2.
A213051	filter	1	new A001122()	p -> p.mod(4) == 3	Primes of the form 4*k+3 with primitive root +2.
A213214	multraf	1	(self, n) -> self.s(0).-(2*n)	"1"	new A193688()	(n, v) -> v.-(2*n)	*n for n > 1.
A213253	#nyi	0		a(n) = Least k such that highest prime factor of m(m + 1)...(m + k - 1) is > n if m > n
A213259	#nyi	0		Let x be the largest prime factor of the n - th CA number m, then:
A213517	filamb	0	0	n -> ZUtils.distinctDigitCount(n.*(n.+(1))./(2), 10) <= 2	Numbers n such that the triangular number n*(n+1)/2 has only 1 or 2 different digits in base 10.
A213518	filamb	0	0	n -> ZUtils.distinctDigitCount(n.*(n.+(1))./(2), 10) == 2	Numbers n such that the triangular number n*(n+1)/2 has 2 different digits in base 10.
A213641	simtraf	0	new A213640()	(n, v) -> v./(n + 1)	a(n)=Annn(n+(\d+))/(n+(\d+))	1,1	A213640
A213714	inverse	0	new A005187()	0	0
A214093	#nyi	0		Largest prime p such that the Largest prime factor of p^2 - 1 is prime(n)
A214179	filter	1	new A000040()	p -> ZUtils.leastPrimitiveRoot(p).equals(ZV(p.bitCount()))	Primes p such that least positive primitive root of p is equal to number of 1s in binary representation of p.
A214195	filnum	1	1	n -> Functions.OMEGA.l(n) %3 == 0	omega(n)%(\d+)==(\d+)	3	0
A214282	lambdan	0	n -> BI(n - 1, (n & 1) != 0 ? (n + 1)/4*2 : n/2)
A214283	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A214282(), new A001405().skip(1)
A214330	simtraf	0	new A214551()	v -> v.modZ(2)	,2	a(n)= Annnnnn(n) mod (\d+)	m	i
A214360	filnum	0	0	n -> ZV(n).IPP() && ZV(n).mod(3120613860L) == 23		isprime(n)&&n%3120613860==23
A214866	filtpos	0	0	 new A059175()	v -> v.equals(ZV(0))	Numbers m such that Annnnnn(m)= (\d+)	
A214892	parmof3	0	A214674	4	1	Conway's subprime Fibonacci sequence starting with (4,1).	nonn	1..144	nyi	_Wouter Meeussen_
A214893	parmof3	0	A214674	18	5	Conway's subprime Fibonacci sequence starting with (18, 5).	nonn	1..82	nyi	_Wouter Meeussen_
A214894	parmof3	0	A214674	10	18	Conway's subprime Fibonacci sequence starting with (10, 18).	nonn	1..27	nyi	_Wouter Meeussen_
A214895	parmof3	0	A214674	23	162	Conway's subprime Fibonacci sequence starting with (23, 162).	nonn	1..15	nyi	_Wouter Meeussen_
A214896	parmof3	0	A214674	382	127	Conway's subprime Fibonacci sequence starting with (382, 127).	nonn	1..12	nyi	_Wouter Meeussen_
A215047	parmof2	0	A215047	1	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(    2).+(1).IPP() ? Z.ONE : Z.ZERO)
A215048	parmof2	0	A215047	2	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(    4).+(1).IPP() ? Z.ONE : Z.ZERO)
A215049	parmof2	0	A215047	3	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(    8).+(1).IPP() ? Z.ONE : Z.ZERO)
A215050	parmof2	0	A215047	4	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(   16).+(1).IPP() ? Z.ONE : Z.ZERO)
A215051	parmof2	0	A215047	5	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(   32).+(1).IPP() ? Z.ONE : Z.ZERO)
A215057	parmof2	0	A215047	6	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(   64).+(1).IPP() ? Z.ONE : Z.ZERO)
A215058	parmof2	0	A215047	7	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(  128).+(1).IPP() ? Z.ONE : Z.ZERO)
A215197	filnum	1	0	n -> Functions.SIGMA0.l(n) == 10 && Functions.SIGMA0.l(n + 1) == 10	numdiv(n)==(\d+)&&numdiv(n+(\d+))==(\d+)	10	1
A215405	#lpf	0	the n - th n - almost prime
A215441	filnum	1	0	n -> ZV(3 ).^(n).+(ZV(n).^(3 )).+(1).IPP()		isprime(3^n+n^3+1)
A215442	filnum	1	0	n -> ZV(5 ).^(n).+(ZV(n).^(5 )).+(1).IPP()		isprime(5^n+n^5+1)
A215444	filnum	1	0	n -> ZV(7 ).^(n).+(ZV(n).^(7 )).+(1).IPP()		isprime(7^n+n^7+1)
A215475	lambdan	1	n -> RU(1, n, j -> new Q(SD(j, d -> MU(j/d).*(ZV(n).^(d))), j)).num()
A215513	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A092269(), new A000041().skip(1)
A215609	lambdir	0	n -> SEQ.a(ZV(n).^(10))	new A035095()	a(n)=Annn((\d+)^n)	10	D035095
A215610	filnum	0	0	n -> ((n & 1) == 1) && Z2(n).equals(Z2(6).modZ(n))	2,2,6	Odd integers n such that (\d+)^n ==(\d+)^(\d+)(mod n)
A215611	filnum	0	0	n -> ((n & 1) == 1) && Z2(n).equals(Z2(8).modZ(n))	2,2,8	Odd integers n such that (\d+)^n ==(\d+)^(\d+)(mod n)
A215612	filnum	0	0	n -> ((n & 1) == 1) && Z2(n).equals(Z2(10).modZ(n))	2,2,10	Odd integers n such that (\d+)^n ==(\d+)^(\d+)(mod n)
A215613	filnum	0	0	n -> ((n & 1) == 1) && Z2(n).equals(Z2(12).modZ(n))	2,2,12	Odd integers n such that (\d+)^n ==(\d+)^(\d+)(mod n)
A215639	simtraf	0	new A215638()	(n, v) -> v./(n + 1)	a(n)=Annn(n+(\d+))/(n+(\d+))forn>=(\d+)	1,1,0	A215638
A215698	parmof2	0	A215047	8	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(  256).+(1).IPP() ? Z.ONE : Z.ZERO)
A215699	parmof2	0	A215047	9	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(  512).+(1).IPP() ? Z.ONE : Z.ZERO)
A215700	parmof2	0	A215047	10	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^( 1024).+(1).IPP() ? Z.ONE : Z.ZERO)
A215701	parmof2	0	A215047	11	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^( 2048).+(1).IPP() ? Z.ONE : Z.ZERO)
A215702	parmof2	0	A215047	12	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^( 4096).+(1).IPP() ? Z.ONE : Z.ZERO)
A215753	cofrden	0	new A114490()		xxxerators of the continued fraction convergents of log_10(3).
A215754	cofrden	0	new A153496()	skip();	xxxerators of the continued fraction convergents of log_10(6).
A215755	cofrden	0	new A153620()	skip();	xxxerators of the continued fraction convergents of log_10(7).
A215756	cofrden	0	new A154182()		xxxerators of the continued fraction convergents of log_10(11)
A215757	cofrnum	0	new A114490()	skip(1);	Numerators of the continued fraction convergents of log_10(3).
A215758	cofrnum	0	new A153496()	skip(1);	Numerators of the continued fraction convergents of log_10(6).
A215759	cofrnum	0	new A153620()	skip(1);	Numerators of the continued fraction convergents of log_10(7).
A215760	cofrnum	0	new A154182()		Numerators of the continued fraction convergents of log_10(11)
A215776	#nyi	0		Second - largest prime factor of the n - th number that is a product of exactly n primes
A215879	lambdan	0	n -> { final String s = Integer.toString(n, 3); return Z.valueOf(s.length() - s.lastIndexOf('0') - 1); }	Written in base 3, n ends in a(n) consecutive nonzero digits.
A215883	lambdan	0	n -> { final String s = Integer.toString(n, 4); return Z.valueOf(s.length() - s.lastIndexOf('0') - 1); }	When written in base 4, n ends in a(n) consecutive nonzero digits.
A215884	lambdan	0	n -> { final String s = Integer.toString(n, 5); return Z.valueOf(s.length() - s.lastIndexOf('0') - 1); }	Written in base 5, n ends in a(n) consecutive nonzero digits.
A215961	parmof2	0	A215047	13	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^( 8192).+(1).IPP() ? Z.ONE : Z.ZERO)
A215962	parmof2	0	A215047	14	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(16384).+(1).IPP() ? Z.ONE : Z.ZERO)
A215969	parmof2	0	A215047	15	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(32768).+(1).IPP() ? Z.ONE : Z.ZERO)
A215970	parmof2	0	A215047	16	n -> SU(1, ZV(10).^(n)./(2).-(1).intValueExact(), b -> ZV(2*b).^(65536).+(1).IPP() ? Z.ONE : Z.ZERO)
A216090	filnum	1	1	k -> Predicates.SQUARE_FREE.is(k) && ZV(k - 2).mod(Functions.CARMICHAEL_LAMBDA.z(k)).isZero()	Squarefree numbers n such that A002322(n) divides n-2
A216135	lambdan	0	n -> RU(0, n, k -> new Q(2*n - k + 1).^(k-1).*(Z_1(n-k)).*(S1(n, k))).num()
A216136	lambdan	0	n -> RU(0, n, k -> new Q(3*n - k + 1).^(k-1).*(Z_1(n-k)).*(S1(n, k))).num()
A216146	spf	0	ZV(2*n + 1).^(2*n + 1).*(3).+(2)
A216183	filtpos	0	1	 new A059514()	v -> v.equals(ZV(0))	Numbers m such that Annnnnn(m)= (\d+)	
A216363	filter	1	new A040028(59, 2, true)	v -> v.mod(59) == 1	Primes p congruent to 1 mod 59 such that x^59 = 2 has solution mod p.						Primes p congruent to 1 mod 59 such that x^59 = 2 has solution mod p.
A216375	filnum	1	0	n -> ZV(11).^(n).+(ZV(n).^(11)).+(1).IPP()		isprime(11^n+n^11+1)
A216421	filnum	1	0	n -> ZV(13).^(n).+(ZV(n).^(13)).+(1).IPP()		isprime(13^n+n^13+1)
A216423	filnum	1	0	n -> ZV(4 ).^(n).+(ZV(n).^(4 )).+(1).IPP()		isprime(4^n+n^4+1)
A216432	filter	1	new A069484()	SEMIPRIME	. - _Zak Seidov_, Apr 11 2014
A216487	#filter	0	2	new LambdaSequence(0, n -> JF(ZV(n).^(2*n).-(1)).largestPrimeFactor())		having the form k*n + 1
A216618	filnum	0	0	n -> ZV(10).^(n).+(ZV(n).^(10)).+(1).IPP()		isprime(10^n+n^10+1)
A216651	#nyi	0		Lengths of decreasing blocks of A006530, the Largest prime factor of n, starting from the second term
A216670	insect2	1	new A000073()	new A001481()
A216826	simtraf	0	new A054377()	v -> LPF(v)	the n - th primary pseudoperfect number A054377(n)
A216912	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, 2*n, k -> bs.nextQ().*(BI(2*n + k, 2*k))./(ZV(2*n + k)))./(Z.FOUR).den(); }
A216921	#nyi	0		a(n) = 2*n + 1  -  gpf(denominator(BÂ°(2*n))) where BÂ°(n) are Zagiers modification of the Bernoulli numbers and gpf(n) is the Largest prime factor of n
A216922	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n, r -> bs.nextQ().*(BI(n + r, 2*r)).*(n + r)).num(); }
A216923	lambdan	0	n -> { final BS bs = new BS(0); return RU(0, n, r -> bs.nextQ().*(BI(n + r, 2*r)).*(n + r)).den(); }
A216982	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A066417(), new A066481()	a(n)=Annn(n)-Annn(n)		A066417,A066481			Anti-Chowlas function: sum of anti-divisors of n except the largest.
A217001	filnum	1	0	n -> { final Z v = ZV(n).^(2).+(n).+(2) ; return v.mod(4 ) == 0 && v./(4 ).IPP(); }		isprime((n^2+n+2)/4)
A217039	filter	0	new A214584()	PRIME	
A217124	filter	0	new A214584()	SEMIPRIME	
A217219	multraf	0	(self, n) -> self.s(0).*(6)	""	new A045833()	6*new A045833()
A217403	#nyi	0		a(n) is the Least possible largest prime factor of the difference of two prime numbers q > p such that p  +  q = 2*n
A217487	partsun	0	new SimpleTransformSequence(0, new A080253(), v -> v.^(2))				Partial sums of the squares of the numbers in sequence A080253.
A217512	partsun	0	new FilterSequence(0, new A005925(), FilterSequence.NONZERO)		
A217587	filter	1	new A000040()	p -> p.mod(  420) ==    1	Mod[#,(\d+)]==(\d+)&]	5000,    420,   1
A217649	lambdan	0	n -> FD(n).mod(FM(n, 3))	a(n) = n!! mod n!!!
A217652	lambdan	0	n -> Z2(n*n-3*n+2).*(n)
A217656	filter	1	new A000040()	p -> p.mod(  420) ==  361	Mod[#,(\d+)]==(\d+)&]	50000,   420, 361
A217713	lambdan	0	n -> CR.valueOf(n + 1).log().square().floor()	Integer part of log(n)^2.
A217862	filter	1	new A000040()	p -> p.mod(  840) ==    1	Mod[#,(\d+)]==(\d+)&]	5000,    840,   1
A217895	#nyi	0		Sum of d/Gpf(d) for all divisors d of n, with Gpf(d) the Largest prime factor of d
A218013	filamb	0	1	v -> ZUtils.digitNZProduct(v.^(2), 10).mod(v).isZero()	Numbers that divide the product of the nonzero digits (in base 10) of their square.
A218029	filamb	0	1	v -> ZUtils.digitNZProduct(v.^(2), 10).equals(v)	Numbers that are equal to the product of the nonzero digits (in base 10) of their square.
A218072	lambdan	0	n -> ZUtils.digitNZProduct(ZV(n).^(2), 10)	Product of the nonzero digits (in base 10) of n^2.
A218145	lambdan	0	n -> ZUtils.digitNZProduct(ZV(n).^(3), 10)	Product of the nonzero digits (in base 10) of n^3.
A218147	multraf	3	(self, n) -> self.s(0)./(4)	"2,2"	new A079458()	v -> v./(4)	, for n > 2. - _Jason Kimberley_, Nov 14 2015
A218171	filter	0	new A010815()	(n, v) -> (n & 1) == 0
A218215	lambdan	0	n -> ZUtils.digitNZProduct(ZV(n).^(4), 10)	Product of the nonzero digits (in base 10) of n^4.
A218249	diffs	0	new A219096()	Difference sequence of Annnnnn
A218311	lambdan	0	n -> ZUtils.digitNZProduct(ZV(n).^(5), 10)	Product of the nonzero digits (in base 10) of n^5.
A218461	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A006450(), new A000040()
A218785	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Partial sums of absolute values of â¬218618.	nonn	0..8727	nyi	_Antti Karttunen_
A218833	#nyi	0		Primes p such that 2*p is greater than  the Largest prime factor of  p^2  -  1 and p^2  +  1
A218834	#nyi	0		Primes p such that 3*p is greater than  the Largest prime factor of  p^3  -  1 and of  p^3  +  1
A218849	#nyi	0		Primes p such that 4*p is greater than  the Largest prime factor of  p^4  - 1 and p^4  +  1
A218908	#nyi	0		Primes p such that k*p is greater than the Largest prime factor of p^k  -  1 and p^k  +  1 for k = 1 to k = 4
A219116	lambdan	0	n -> ZV(n).*(ZV(3).^((n*n-3*n+2)/2))
A219175	lambdan	1	n -> ZV(n).mod(Functions.CARMICHAEL_LAMBDA.z(n))	a(n) = n mod lambda(n) where lambda is the Carmichael function (A002322).
A219247	lambdan	0	n -> RU(0, n, k-> new Q(Z_1(k).*(S1(n, k)), ZV(k+1).^(2))).den()
A219547	#nyi	0		Numbers k such that 2 times the least prime factor of 2^k  +  1 is not the least m > 1 that divides sigma_k(m)
A219549	#nyi	0		a(2^(k - 3)) = A020639(A000215(k)) is the Least prime factor of the k - th Fermat number 2^(2^k)  +  1
A219586	lpf	1	PR(1, n, x -> ZV(x).*(x).+(1))	Product_{x=1..n} (x^2  +  1)
A219616	filnum	1	0	n -> ZV(5 ).^(n).+(ZV(n).^(4)).IPP()		isprime(5^n+n^4)
A219743	filamb	0	0	v -> ZUtils.distinctDigitCount(v, 10) == 8	Number for which the number of distinct base 10 digits is 8.
A220076	filamb	0	0	v -> ZUtils.distinctDigitCount(v, 10) == 6	Numbers with exactly six distinct base-10 digits.
A220078	lambdan	0	n -> ZV(5).^(FA(n))	(\d+)^(n!)
A220294	filter	0	new A002716()	(n, v) -> (n & 1) == 0
A220364	filnum	1	1	n -> Functions.DIGIT_SUM.l(ZV(36).^(n)) % n == 0	((\d+)^n)%n==(\d+)	36	0
A220657	prepend	0	new PartialSumSequence(0, new SimpleTransformSequence(0, new A084558(), v -> v.+(1)))	0	Partial sums of A084558+1.
A220907	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A066186().skip(1), new A092269()
A220908	multraf	1	(self, n) -> self.s(0).-(self.s(1)).*(2)	""	new A066186().skip(1), new A092269()
A221285	insect2	1	new A002202()	new A000290()
A221490	lambdan	1	n -> SU(1, n, k -> ZV(k*n + k - n).IPP() ? Z.ONE : Z.ZERO)
A221491	lambdan	1	n -> SU(1, n, k -> ZV(k*n - k + n).IPP() ? Z.ONE : Z.ZERO)
A221714	lambdan	0	n -> new Z(ZUtils.sortDigitsDescending(ZV(n), 2).toString(2))	Numbers written in base 2 with digits rearranged to be in decreasing order.
A222007	#nyi	0		a(n + 1) is the Least prime factor of any (Product_{k=1..j} a(k))  +  (Product_{k=j + 1..n} a(k)) for j=0..n
A222314	lambdan	0	n -> SU(0, n, k -> ZV(BI(n, k).toString().length())).+(n)
A222639	simtraf	0	new A000522()	v -> v.sqrt()./(JF(v).core())
A222816	filamb	0	1	v -> ZUtils.reverse(v, 5).mod(v).isZero()	Numbers k that divide the base-5 reversal of k.
A223077	filter	0	new A007089()	v -> { final Z r = new Z(ZUtils.reverse(v).toString()); return r.equals(new Z(v.toString(), 3).*(2)); }	Positive integers, written in base 3, with the property that if the base-3 representation is reversed the result is twice the original number.
A223078	filamb	0	1	v -> ZUtils.reverse(v, 4).equals(v.*(3))	Positive integers with the property that if the base-4 representation is reversed the result is three times the original number.
A223079	simtraf	0	new A223078()	v -> new Z(v.toString(4))	Positive integers, written in base 4, with the property that if the base-4 representation is reversed the result is three times the original number.
A223089	filamb	0	1	v -> new Z(ZUtils.reverse(v, 8).toString(8)).equals(v.*(5))	Numbers n, written in base 8, with the property that if the base-8 representation of n is read backwards, the result is 5*n.
A223090	filamb	0	1	v -> new Z(ZUtils.reverse(v, 8).toString(8)).mod(v).isZero()	Numbers n with the property that if the base-8 representation of n is read backwards, the result is an integral multiple of n.
A223701	#nyi	0		Irregular triangle of numbers k such that prime(n) is the largest prime factor of k^2  -  1
A223702	#nyi	0		Irregular triangle of numbers k such that prime(n) is the largest prime factor of k^2  +  1
A224094	lambdan	0	n -> RU(0, n, k-> new Q(S1(n, k), ZV(k+1).^(2))).den()
A224095	lambdan	0	n -> RU(0, n, k-> new Q(S1(n, k), ZV(k+1).^(2))).num()
A224096	lambdan	0	n -> RU(0, n, k-> new Q(S1(n, k), ZV(k+1).^(3))).den()
A224097	lambdan	0	n -> RU(0, n, k-> new Q(S1(n, k), ZV(k+1).^(3))).num()
A224098	lambdan	0	n -> RU(0, n, k-> new Q(S1(n, k), ZV(k+1).^(4))).den()
A224099	lambdan	0	n -> RU(0, n, k-> new Q(S1(n, k), ZV(k+1).^(4))).num()
A224100	lambdan	0	n -> RU(0, n, k-> new Q(S1(n, k), ZV(k+1).^(5))).den()
A224101	lambdan	0	n -> RU(0, n, k-> new Q(S1(n, k), ZV(k+1).^(5))).num()
A224102	lambdan	0	n -> RU(0, n, k-> new Q(Z_1(k).*(S1(n, k)), ZV(k+1).^(2))).num()
A224103	lambdan	0	n -> RU(0, n, k-> new Q(Z_1(k).*(S1(n, k)), ZV(k+1).^(3))).den()
A224104	lambdan	0	n -> RU(0, n, k-> new Q(Z_1(k).*(S1(n, k)), ZV(k+1).^(3))).num()
A224105	lambdan	0	n -> RU(0, n, k-> new Q(Z_1(k).*(S1(n, k)), ZV(k+1).^(4))).den()
A224106	lambdan	0	n -> RU(0, n, k-> new Q(Z_1(k).*(S1(n, k)), ZV(k+1).^(4))).num()
A224107	lambdan	0	n -> RU(0, n, k-> new Q(Z_1(k).*(S1(n, k)), ZV(k+1).^(5))).den()
A224109	lambdan	0	n -> RU(0, n, k-> new Q(Z_1(k).*(S1(n, k)), ZV(k+1).^(5))).num()
A224445	lambdan	0	n -> Z.ONE.-(RU(1, n, k -> new Q(BI(2*k - 2, k - 1), Z.FOUR.^(2*k).*(k))).*(Z.TWO).num())	a(n) = numerator r(n) = 2(1 - 2*sum(C(k-1)/4^(2*k),k=1..n)
A224446	lambdan	0	n -> Z.ONE.-(RU(1, n, k -> new Q(BI(2*k - 2, k - 1), Z.FOUR.^(2*k).*(k))).*(Z.TWO).den())	
A224505	filter	1	new A184417()	PRIME	.
A224506	filnum	1	0	n -> ZV(9 ).^(n).-(n).IPP()		isprime(9^n-n)
A224693	#nyi	0		Least prime p such that p > gpf(p + 1) > gpf(p + 2) > ... > gpf(p + n) where gpf(m) is the Largest prime factor of m
A224729	central	0	new A059283()	Central terms of the triangle in A059283.
A224851	simtraf	1	new A054781()	v -> v.+(1)	a(n)=Annn(n)+(\d+)	1	A054781				First position of n in continued fraction for Khinchins constant.
A224852	multraf	0	(self, n) -> self.s(0).-(1)	""	new A054870()	a(n)=Annn(n)-(\d+)	1	A054870			Positions of the incrementally largest terms in the continued fraction for Khinchins constant.
A224859	insect2	1	new A201734()	new A201818()
A224920	simtraf	0	new A000584().skip(1)	v -> new Z(v.toString(3))	Fifth powers expressed in base 3.
A225017	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A055566()	new A132740()	a(n)=Annn(Annn(n))		D132740,A055566
A225043	trilamb0	0	(n, k) -> BI(n, k).modZ(n + 1)	Pascal s triangle with row n reduced modulo n+1.	nonn,tabl	0..120	nyi	_Roger L. Bagula_
A225054	trilambn	0	0	0	(n, k) -> new A008292().a(n + 1, k).modZ(n + 1)	Triangle read by rows: Eulerian numbers T(n,k) = A008292(n,k) reduced mod n+1.	nonn,tabl	0..72	nyi	_Roger L. Bagula_			Triangle read by rows: Eulerian numbers T(n,k) = A008292(n,k) reduced mod n+1.
A225202	moetraf	1	new A000045().skip(1)	, 0	Fibonacci(n+1). skip
A225295	insect2	1	new A014613()	new A171102()							Pandigital numbers with exactly 4 prime factors (with multiplicity).
A225300	filter	0	new A025475()	v -> ZUtils.isPalindrome(v, 2)	Terms in A025475 that are palindromes in base 2.
A225621	central	1	new A074911()	Central terms of the triangle in A074911.
A225651	filtpos	0	1	new A000793()	(k, v) -> v.mod(ZV(k)).isZero()	Numbers k that divide A000793(k).	nonn	1..10000	nyi	_Antti Karttunen_
A225679	simtraf	0	new A005117()	v -> new Q(JF(v).phi(), v).num()	Numerators of phi(k)/k, as k runs through the squarefree numbers (A005117).
A225680	simtraf	0	new A005117()	v -> new Q(JF(v).phi(), v).den()	xxxerators of phi(k)/k, as k runs through the squarefree numbers (A005117).
A225906	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A050299().skip(1)	new A000720()	a(n)=Annn(Annn(n+(\d+)))	1	D000720,A050299
A226175	simtraf	1	new A068336().skip(1)	v -> v.-(1)	a(n)=Annn(n+(\d+))-(\d+)		1,1
A226216	simtraf	1	new A152597()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A152597
A226442	#nyi	0		a(n) = Least index m such that Least prime factor of m - th triangular number is prime(n)
A226636	filamb	0	0	v -> ZUtils.digitSum(v, 3) == 3	Numbers whose base-3 sum of digits is 3.
A226757	simtraf	1	new A000224()	v -> v.^(4)	. - _Andrew Howroyd_, Aug 06 2018
A226802	filter	1	new A000040()	v -> ZUtils.digitSum(v.^(2)) == 10	Primes p where the digital sum of p^(\d+) is equal to (\d+)
A226931	lambdan	0	n -> RU(0, n, k -> new Q(k, n).^(k).*(BI(n, k)).*(new Q(n - k, n).^(n - k))).+(ZV(n)) .num()
A226969	filamb	0	0	v -> ZUtils.digitSum(v, 4) == 4	Numbers whose base-4 sum of digits is 4.
A227030	setdiff	1	new A007921()	new A001358()
A227062	filamb	0	0	v -> ZUtils.digitSum(v, 5) == 5	Numbers whose base-5 sum of digits is 5.
A227080	filamb	0	0	v -> ZUtils.digitSum(v, 6) == 6	Numbers whose base-6 sum of digits is 6.
A227092	filamb	0	0	v -> ZUtils.digitSum(v, 7) == 7	Numbers whose base-7 sum of digits is 7.
A227095	filamb	0	0	v -> ZUtils.digitSum(v, 8) == 8	Numbers whose base-8 sum of digits is 8.
A227132	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which there are an odd number of nonzero digits when n is written in the factorial base (A007623).	nonn	1..2520	nyi	_Antti Karttunen_
A227148	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which the sum of digits is even when n is written in the factorial base (A007623).	nonn	1..2520	nyi	_Antti Karttunen_
A227149	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which the sum of digits is odd when n is written in the factorial base (A007623).	nonn	1..2520	nyi	_Antti Karttunen_
A227157	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n whose factorial base representation A007623(n) doesnot contain any nonleading zeros.	nonn,base	1..10000	nyi	_Antti Karttunen_
A227187	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n whose factorial base representation A007623(n) contains at least one nonleading zero. (Zero is also included as a(0)).	nonn	0..10000	nyi	_Antti Karttunen_
A227238	filamb	0	0	v -> ZUtils.digitSum(v, 9) == 9
A227244	spf	0	Z2(1 << n).+(1).*(Z2(1 << (1 <<n))).-(1)	(2^(2^n) + 1)*2^(2^(2^n)) - 1.
A227351	dirtraf	0	new A006068()	new A048679()	= A006068(â¬106151(2*A003714(n))).
A227531	filter	0	new A227391()	PRIME	
A227549	filamb	0	0	v -> v.toString(16).indexOf(v.toString(10)) >= 0	Numbers that contain their base-16 representation in their decimal representation.
A227745	simtraf	1	new A227744()	v -> v.sqrt()	a(n)=sqrt(Annn(n))		A227744
A227790	tuptraf	0	(n, s) -> s[0].min(s[1].^(2))	""	new A033428(), new A022838()	
A227791	central	0	new A227550()	Central terms of the triangle in A227550.
A227836	simtraf	0	new A214551()	v -> Z.valueOf(ZUtils.valuation(v, Z.TWO))	(\d+)^a(n) is the highest power of (\d+) dividing Annnnnn(n)
A227837	simtraf	0	new A214551()	v -> Z.valueOf(ZUtils.valuation(v, Z.THREE))	(\d+)^a(n) is the highest power of (\d+) dividing Annnnnn(n)
A227854	insect2	1	new A003136()	new A014612()
A227934	lambdan	0	n -> SU(0, n, k -> BI(ZV(k).^(4).+(n - k - 1), ZV(n - k)))	a(n)=Sum_{k=(\d+),n}binomial(k^(\d+)+n-k-(\d+),n-k)	0,4,1
A228000	spf	1	144396166620968L*n + 1
A228050	filamb	0	0	v -> v.toString( 7).indexOf(v.toString(10)) >= 0	The decimal representation of n is a substring of its base 7 representation.
A228051	filamb	0	0	v -> v.toString( 8).indexOf(v.toString(10)) >= 0	The decimal representation of n is a substring of its base 8 representation.
A228052	filamb	0	0	v -> v.toString( 9).indexOf(v.toString(10)) >= 0	The decimal representation of n is a substring of its base 9 representation.
A228090	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which a sum k + bitcount(k) cannot be obtained as a sum k2 + bitcount(k2) for any other k2<>k . Here bitcount(k) (A000120) gives the number of 1s in binary representation of nonnegative integer k.	nonn,base	1..10000	nyi	_Antti Karttunen_
A228236	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which a sum k + bitcount(k) can be also obtained as a sum k2 +bitcount(k2) for some other k2<>k . Here bitcount(k) (A000120) gives the number of 1s in binary representation of nonnegative integer k.	nonn	1..10000	nyi	_Antti Karttunen_
A228426	lambdan	1	n -> RU(1, n-1, i -> new Q(Z.ONE, ZV(i).^(2*n - 1))).num()
A228427	lambdan	1	n -> RU(1, n-1, i -> new Q(Z.ONE, ZV(i).^(2*n - 1))).den()
A228432	simtraf	1	new A000040()	(n, p) ->  SU(1, p./(4).intValueExact(), i -> p.*(i).sqrt())
A228593	lambdan	1	n -> n == 1 ? Z.TWO : Functions.PRIMORIAL_COUNT.z(n).*(Functions.PRIMORIAL_COUNT.z(n - 1))
A228613	spf	0	ZV(2*n + 1).^(2*n + 1).+(2)
A228729	multraf	1	(self, n) -> self.s(0).^(2)	"1"	new A214080()	v -> v.^(2)	, n > 0.
A228952	filter	0	new A010062()	(n, v) -> Long.bitCount(n + 1) == 1	Annnnnn((\d+)^n-(\d+))
A229040	insect2	1	new A000045()	new A030141()
A229058	filter	1	new A000040()	v -> ZUtils.digitSum(v.^(2)) == 25	Primes p where the digital sum of p^(\d+) is equal to (\d+)
A229181	diffs	0	new A053013()	First differences of A053013. See these two sequenc
A229344	multraf	1	(self, n)-> Functions.MERTENS.z(self.s(0))	"0"	new A003415()	Mertens's function of the arithmetic derivative of n: a(n)= M(n'), a(1)= 0
A229740	simtraf	1	new A000961()	q -> new Q(q.^(9), 6).+(new Q(q.^(8), 6).*(5)).+(new Q(q.^(7), 3).*(2)).-(new Q(q.^(6), 6)).-(new Q(q.^(5), 6).*(5)).+(new Q(q.^(4), 3)).num()	a(n)= q^9/6+5*q^8/6+2*q^7/3-q^6/6-5*q^5/6+q^4/3 where q = n-th prime power A000961(n).
A229767	lpf	1	Z2(2*n + 1).-(Z2(n + 1)).+(1)
A229768	lpf	1	Z2(2*n + 1).+(Z2(n + 1)).+(1)
A229836	lambdan	1	n -> (n == 2) ? Z.TWO : Puma.primePiZ(ZV(n).^(n)).-(Puma.primePiZ(FA(n)))	a(n) = A064151(n) -   A003604(n). Add 1 for n=2 since 2! is prime. - _Jens Kruse Andersen_, Jul 29 2014
A230030	filamb	0	0	v -> v.mod(5L) != 0L && v.^(2).toString(5).matches("[01]+")	Numbers k not divisible by 5 such that k^2 written in base 5 has no digit > 1.
A230227	filter	1	new A000040()	p -> p.*( 3).-(10).IPP()	[(\d+)#-(\d+)]&]		100, 3,10
A230263	lambdan	1	n -> SD(n, d -> d*d <= n && (n - d*d) % (4*d) == 0 ? Z.ONE : Z.ZERO)
A230264	lambdan	1	n -> SD(n, d -> d*d <= n && (n - d*d) % (6*d) == 0 ? Z.ONE : Z.ZERO)
A230279	lambdan	1	n -> SD(n, d -> d*d <= n && (n - d*d) % (8*d) == 0 ? Z.ONE : Z.ZERO)
A230404	filter	0	new A230403()	(n, v) -> (n & 1) == 0	a(n) = A230403(2n) = A055881(2n) - 1.
A230408	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Partial sums of absolute values of â¬230407.	nonn	0..3149	nyi	_Antti Karttunen_
A230414	inverse	0	new A219650()	0	0
A230773	tuptraf	0	(n, s) -> s[0].-(s[1].*(ZV(n*n).mod(3)))	"0"	new A055399(), new A010051()
A230849	interleave	0	A075526	A000012		Annnnnn and Annnnnn interleaved AlternatingSequence A230850
A231233	trilambn	1	1	1	(n, k) -> LPF(n*k  +  1)	Triangle T(n,k) = Largest prime factor of n*k + 1
A231545	simtraf	1	new A067816()	v -> v.+(1)	a(n)=Annn(n)+(\d+)	1	A067816
A231569	filnum	1	1	n -> (2*n - 2) % Functions.CARMICHAEL_LAMBDA.i(n) == 0 && ZV(n).IPP() 	Composite numbers n such that lambda(n) divides 2n-2, where lambda is the Carmichael lambda function (A002322).
A231570	filnum	1	1	n -> (3*n - 3) % Functions.CARMICHAEL_LAMBDA.i(n) == 0 && ZV(n).IPP() 	Composite numbers n such that lambda(n) divides 3n-3, where lambda is the Carmichael lambda function (A002322).
A231571	filnum	1	1	n -> (4*n - 4) % Functions.CARMICHAEL_LAMBDA.i(n) == 0 && ZV(n).IPP() 	Composite numbers n such that lambda(n) divides 4n-4, where lambda is the Carmichael lambda function (A002322).
A231572	filnum	1	1	n -> (5*n - 5) % Functions.CARMICHAEL_LAMBDA.i(n) == 0 && ZV(n).IPP() 	Composite numbers n such that lambda(n) divides 5n-5, where lambda is the Carmichael lambda function (A002322).
A231573	filnum	1	1	n -> (6*n - 6) % Functions.CARMICHAEL_LAMBDA.i(n) == 0 && ZV(n).IPP() 	Composite numbers n such that lambda(n) divides 6n-6, where lambda is the Carmichael lambda function (A002322).
A231864	partsun	0	new SimpleTransformSequence(1, new A003415(), v -> v.^(2)).skip(1)	Partial sums of the second power of arithmetic derivative function A003415.
A231946	partsun	0	new SimpleTransformSequence(1, new A003415(), v -> v.^(3)).skip(1)	Partial sums of the third power of the arithmetic derivative function A003415.
A232094	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A000217()	new A060130()	a(n)=Annn(Annn(n))		D060130,D000217
A232096	dirtraf	0	new A055881()	new A000217()	a(n) = A055881(A000217(n)).
A232098	dirtraf	0	new A055881()	new A000290()	a(n) is the largest m such that m! divides n^2; a(n) = A055881(n^2).
A232102	simtraf	1	new A067838()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A067838
A232104	simtraf	1	new A067841()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A067841
A232168	#nyi	0		Numbers n such that n is a deficient number and there exists a prime number p greater than the largest prime factor of n such that p*n is abundant
A232172	partsun	0	new A068346().skip(1)			Partial sums of second arithmetic derivative of natural numbers.
A232212	dead	1	dead								Duplicate of A232219.
A232246	central	0	new A110440()	Central terms of triangle        A110440.
A232450	simtraf	0	new A232449()	v -> LPF(v)	the Belphegor number B(n) = (10^(n + 3)  +  666)*10^(n + 1)  +  1
A232537	filter	1	new A000040()	v -> ZUtils.isPolygonal(v.+(3), 5)	Primes p of the form penta(n)-3, where penta(n) is the n-th pentagonal number.
A232618	lambdan	0	n -> FD(2*n).mod(FD(2*n - 1))	a(n) = A006882(2*n) mod A006882(2*n-1).
A232733	multraf	0	(self, n) -> Puma.primeZ(self.s(0))	""	new A125828()	prime(new A125828())
A232744	#lambdan	0	a(1)=1, and for n>1, a(n) = a(n-1) + (2 - A000035(A055881(a(n-1)+1))).
A232745	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which the largest m such that m! divides k is even.	nonn	1..14833	nyi	_Antti Karttunen_
A232747	inverse	0	new A005228()	0	0
A232748	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Partial sums of the characteristic function of Hofstadters A030124.	nonn	1..68	nyi	_Antti Karttunen_
A232749	inverse	0	new A030124()	0	0
A232822	simtraf	0	new A125828()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A125828
A232865	multraf	0	(self, n) -> Puma.primeZ(self.s(0))	""	new A125826()	prime(new A125826())
A232869	multraf	0	(self, n) -> Puma.primeZ(self.s(0))	""	new A125907()	prime(new A125907())
A232995	lambdan	3	n -> n < 5 ? Z.ZERO : ZV(n-3).^(2).*(n-4).*(Z2(n)).*(ZV(n).^(n-5))	a(n) = (n - 3)^2*(n - 4)*2^n*n^(n-5).
A233192	multraf	1	(self, n) -> Puma.primeZ(self.s(0))	""	new A125827()	prime(new A125827())
A233267	dirtraf	0	new A055881()	new A001110()	a(n) = A055881(A001110(n)); the largest m such that m! divides the n-th positive number which is both triangular and square.
A233269	dirtraf	0	new A055881()	new A001109()	a(n) = A055881(A001109(n)).
A233280	dirtraf	0	new A003188()	new PrependSequence(0, new A054429(), 0)	
A233285	dirtraf	0	new A055881()	new A000045()	a(n) = largest m such that m! divides n-th Fibonacci number; a(n) = A055881(A000045(n)).
A233286	simtraf	1	new A233285()	v -> v.-(1)		Number of trailing zeros in the factorial base representation of n-th Fibonacci number; a(n) =  A230403(A000045(n)) = A233285(n)-1.
A233437	multraf	12	(self, n) -> self.s(0)./(self.s(1))	""	new A002110().skip(12), new A036691().skip(12)
A233447	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A036691().skip(1), new A000142().skip(1)
A233540	filter	1	new A000040()	v -> v.+( 2).IPP() && v.+(  8).IPP() && v.+(12).IPP()	#+{(\d+),(\d+),(\d+)},PrimeQ]&]	4000, 2,  8,12
A233734	central	1	new A019538()	Central terms of triangles       A019538 and A090582.
A234017	inverse	0	new A055938()	0	0
A234324	central	0	new A008955()	Central terms of the triangle of A008955).
A235331	simtraf	1	new A235001()	v -> v.sqrt()	a(n)=sqrt(Annn(n))		A235001
A235425	#nyi	0		Numbers k such that between k and the next prime there are gpf(k) numbers, where gpf(k) denotes the largest prime factor of k
A235705	filter	1	new A000040().skip(2)	p -> { final Z pp = p.^( 3).+(6); return pp.mod( 5) == 0 && pp./( 5).IPP(); }	[(#^(\d+)+(\d+))/(\d+)]&]	500, 3, 6, 5
A235706	trilamb0	0	(n, k) -> BI(3, n - k ).*(FA(n))./(FA(k))
A236250	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A002486().skip(1)	new A007732()	a(n)=Annn(Annn(n+(\d+)))
A236478	filter	1	new A000040()	p -> p.^(3).-(p).+(1).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)-#+(\d+)]&]	300,3,1
A236940	filter	1	new A000040()	p -> p.^(4).-(p).+(1).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)-#+(\d+)]&]	10000,4,1
A237038	filter	1	new A237037()	PRIME	.
A237040	filnum	1	1	n -> JF(ZV(n).^(3).+(1)).isSemiprime()	3,1	Semiprimes of the form n^(\d+)+ (\d+)
A237579	spf	1	FA(2*n).-(FA(n)).+(1)
A237583	filamb	0	0	v -> v.^(2).toString(6).endsWith(v.toString(6))	Automorphic numbers: n^2 ends with n in base 6.
A237684	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A033286(), new A007504().skip(1)
A237810	filter	1	new A000040()	p -> p.*( 2).+( 1).IPP() && p.*(2).+( 7).IPP()	[(\d+)#+(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	100, 2, 1,2, 7
A237811	filter	1	new A000040()	p -> p.*( 2).+( 1).IPP() && p.*(2).+( 9).IPP()	[(\d+)#+(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	100, 2, 1,2, 9
A237812	filter	1	new A000040()	p -> p.*( 2).+( 1).IPP() && p.*(2).+(13).IPP()	[(\d+)#+(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	100, 2, 1,2,13
A237813	filter	1	new A000040()	p -> p.*( 2).+( 1).IPP() && p.*(2).+(15).IPP()	[(\d+)#+(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	500, 2, 1,2,15
A237814	filter	1	new A000040()	p -> p.*( 2).+( 1).IPP() && p.*(2).+(19).IPP()	[(\d+)#+(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	800, 2, 1,2,19
A238324	tuptraf	1	(n, s) -> s[0].compareTo(ZV(2*n + 1)) > 0 ? s[0].-(2*n + 1) : s[0].+(2*n + 1)	""	PREVIOUS	a(1) = 1 and a(n+1) = if a(n) > 2*n+1 then a(n)-2*n-1 else a(n)+2*n+1.	nonn	1..10000	nyi	_Reinhard Zumkeller_
A238525	multraf	2	(self, n) -> ZV(n).mod(self.s(0))	""	new A001414()	n mod new A001414()
A238553	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 3 && sn.toString().charAt(0) == '9' && sn2.mod(10) == 3 && sn2.toString().charAt(0) == '9'; }	2,3,9	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as the digit with the smallest value and (\d+) as the digit with the largest value
A238642	lambdan	1	n -> ZV(n + 1).IPP() ? ZV(n) : SPF(n + 1).*(n)	a(n) = n if n + 1 is prime; otherwise, a(n) = n * (Least prime factor of n + 1)
A238684	dirtraf	1	new A007947()	new A000045()	"null"		0	, Mar 03 2014			a(1) = a(2) = 1; for n > 2, a(n) is the product of prime factors of the n-th Fibonacci number.
A238689	#nyi	0		Table read by rows: first row is {1}; for n >1, T(n, k) is the k - th largest prime factor of n (repeated prime factors are counted repeatedly)
A238737	multraf	0	(self, n) -> ZV(2*n + 2).-(self.s(0))	""	new A224911()	2*n+2 - new A224911()
A239051	tuptraf	0	(n, s) -> s[0].-(s[1].*(3))	""	new A227216(), new PrependSequence(0, new A229802(), 0)	a(n) = A227216(n) - 3*A229802(n).
A239114	simtraf	1	new A014076()	v -> Z.valueOf(ZUtils.valuation(v.+(1), Z.TWO))	Exponent of 2 in prime factorization (i.e., 2-adic valuation) of odd nonprimes A014076(n) + 1.
A239275	multraf	0	(self, n) -> new Q(self.s(0), self.s(1)).*(Z2(n)).num()	""	new A164555(), new A027642()
A239344	filnum	1	0	n -> ZV(n).^(7).+(7).IPP()		isprime(n^7+7)
A239345	filnum	1	0	n -> ZV(n).^(8).+(8).IPP()		isprime(n^8+8)
A239346	filnum	1	0	n -> ZV(n).^(9).+(9).IPP()		isprime(n^9+9)
A239347	filnum	1	0	n -> ZV(n).^(10).+(10).IPP()		isprime(n^10+10)
A239416	filnum	1	0	n -> ZV(n).^(8).-(8).IPP()		isprime(n^8-8)
A239417	filnum	1	0	n -> ZV(n).^(9).-(9).IPP()		isprime(n^9-9)
A239418	filnum	1	0	n -> ZV(n).^(10).-(10).IPP()		isprime(n^10-10)
A239504	lambdan	0	n -> ZV(ZUtils.decimalLength(ZV(n).^(10)))
A239683	lambdir	0	n -> SEQ.a(ZV(n).^(5))	new A055642()	a(n)=Annn(n^(\d+))	5	D055642
A239684	lambdan	0	n -> ZV(ZUtils.decimalLength(ZV(n).^(4)))
A239869	filtpos	0	0	new A239868()	(n, v) -> v.mod(n) == 0	Numbers n that divide Annnnnn(n)
A239877	filtpos	0	1	new A239876()	(n, v) -> v.mod(n) == 0	Numbers n that divide Annnnnn(n)
A240028	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 11) == 1 && imm.order(ZV( 11)).equals(imm.size()) && k > 1; }	n with primitive root  11
A240029	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 11) == 1 && imm.order(ZV(-11)).equals(imm.size()) && k > 1; }	n with primitive root -11
A240030	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 12) == 1 && imm.order(ZV( 12)).equals(imm.size()) && k > 1; }	n with primitive root  12
A240031	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 12) == 1 && imm.order(ZV(-12)).equals(imm.size()) && k > 1; }	n with primitive root -12
A240032	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 13) == 1 && imm.order(ZV( 13)).equals(imm.size()) && k > 1; }	n with primitive root  13
A240091	lambdan	0	n -> (Z.TEN.^(n).-(1)).^(n)
A240093	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 13) == 1 && imm.order(ZV(-13)).equals(imm.size()) && k > 1; }	n with primitive root -13
A240094	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 14) == 1 && imm.order(ZV( 14)).equals(imm.size()) && k > 1; }	n with primitive root  14
A240095	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 14) == 1 && imm.order(ZV(-14)).equals(imm.size()) && k > 1; }	n with primitive root -14
A240096	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 15) == 1 && imm.order(ZV( 15)).equals(imm.size()) && k > 1; }	n with primitive root  15
A240097	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 15) == 1 && imm.order(ZV(-15)).equals(imm.size()) && k > 1; }	n with primitive root -15
A240100	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 17) == 1 && imm.order(ZV(-17)).equals(imm.size()) && k > 1; }	n with primitive root -17
A240101	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 17) == 1 && imm.order(ZV( 17)).equals(imm.size()) && k > 1; }	n with primitive root  17
A240102	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 18) == 1 && imm.order(ZV(-18)).equals(imm.size()) && k > 1; }	n with primitive root -18
A240103	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 18) == 1 && imm.order(ZV( 18)).equals(imm.size()) && k > 1; }	n with primitive root  18
A240104	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 19) == 1 && imm.order(ZV(-19)).equals(imm.size()) && k > 1; }	n with primitive root -19
A240106	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 19) == 1 && imm.order(ZV( 19)).equals(imm.size()) && k > 1; }	n with primitive root  19
A240107	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 20) == 1 && imm.order(ZV(-20)).equals(imm.size()) && k > 1; }	n with primitive root -20
A240108	filnum	1	1	k -> { final IntegersModMul imm = new IntegersModMul(k); return IntegerUtils.gcd(k, 20) == 1 && imm.order(ZV( 20)).equals(imm.size()) && k > 1; }	n with primitive root  20
A240115	parmof3	4	A011975	4	3
A240116	parmof3	5	A011975	5	4
A240117	parmof3	0	A011975	6	2	Schoenheim lower bound L(n,6,2).
A240118	parmof3	0	A011975	5	3	Schoenheim lower bound L(n,5,3).
A240119	parmof3	0	A011975	6	3	Schoenheim lower bound L(n,6,3).
A240388	simtraf	0	new FilterSequence(0, new A002487(), (k, v) -> (k % 3) == 0)	(n, v) -> v./(2)	a(n) = A002487(3*n) / 2. - _Joerg Arndt_, Jun 20 2022
A240521	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A050376(), PREVIOUS	a(n) = A050376(n) * A050376(n+1) where A050376(n) is the n-th number of the form p^(2^k) with p is prime and k >= 0.
A240531	filnum	0	0	n -> !ZV(n).*(24).+(19).IPP()		24,19	Numbers n such that (\d+)*n +(\d+) is not prime
A240533	lambdan	0	(n) -> new Q(FA(n), Z.TEN.^(n)).num()	numerators of n!/10^n
A240534	lambdan	0	(n) -> new Q(FA(n), Z.TEN.^(n)).den()	xxxerators of n!/10^n
A240548	lpf	1	ZV(n).^(5).+(1)
A240549	lpf	1	ZV(n).^(6).+(1)
A240550	lpf	1	ZV(n).^(7).+(1)
A240551	lpf	1	ZV(n).^(8).+(1)
A240552	lpf	1	ZV(n).^(9).+(1)
A240553	lpf	1	ZV(n).^(10).+(1)
A240554	arrlamb	0	1	1	-1	(n, k) -> LPF(n*k + 1)	Square array of the Largest prime factor of n^k  +  1, read by antidiagonals
A240586	holos	1	[[0],[950400,-890880,306560,-46080,2560],[535680,-529440,194880,-31680,1920],[-110280,119944,-47408,7976,-472],[4800,-7104,4136,-1164,136],[-60,210,-270,150,-30],[0,-2,7,-7,2]]	1,4	0	0
A240724	filter	0	new A062391()	PRIME	Primes arising in Annnnnn
A240848	multraf	0	(self, n) -> self.s(0).+(self.s(1)).+(self.s(2))	""	new A000027(), new A007953(), new A055642()	a(n)=Annn(n)+Annn(n)+Annn(n)
A240878	filnum	1	0	n -> { final Z v = ZV(n).^(2).+(2)      ; return v.mod(3 ) == 0 && v./(3 ).IPP(); }		isprime((n^2+2)/3)
A241013	filter	1	new A032793()	SEMIPRIME	.
A241095	lambdan	0	n -> (ZV(5).^(n).-(1)).^(n)
A241099	filter	1	new A000040().skip(2)	p -> { final Z pp = p.^( 3).+(4); return pp.mod( 3) == 0 && pp./( 3).IPP(); }	[(#^(\d+)+(\d+))/(\d+)]&]	500, 3, 4, 3
A241120	filter	1	new A000040().skip(1)	p -> { final Z pp = p.^( 3).+(2); return pp.mod( 3) == 0 && pp./( 3).IPP(); }	[(#^(\d+)+(\d+))/(\d+)]&]	500, 3, 2, 3
A241488	filter	1	new A000040()	v -> v.+( 8).IPP() && v.+(888).IPP() && v.+(8888).IPP()	#+{(\d+),(\d+),(\d+)},PrimeQ]&]	2500, 8,888,8888
A241541	lambdan	0	n -> Z.valueOf(ZUtils.valuation(Z2(n).+(ZV(3).^(n)).+(ZV(5).^(n)).+(ZV(7).^(n)), ZV(11)))	Exponent of 11 in prime factorization of (2^n + 3^n + 5^n + 7^n).
A241590	lambdan	0	n -> new Q(Z2(n).*(ZV(n + 1).^(n - 1)), FA(n)).num()	Numerators of Postnikov's hook-length formula 2^n*(n+1)^(n-1)/n!.
A241591	lambdan	0	n -> new Q(Z2(n).*(ZV(n + 1).^(n - 1)), FA(n)).den()	xxxerators of Postnikov's hook-length formula 2^n*(n+1)^(n-1)/n!.
A241671	filtpos	1	1	new A065806()	ZERO
A241772	diffs	0	new A065094()	First differences of A065094 and also arithmetic means of initial terms o
A241916	#nyi	0		a(2^k) = 2^k, and for other numbers, if n = 2^e1 * 3^e2 * 5^e3 * ... p_k^e_k, then a(n) = 2^(e_k  -  1) * 3^(e_{k - 1}) * ... * p_{k - 1}^e2 * p_k^(e1 + 1). Here p_k is the Largest prime factor of n (A006530), and e_k is its exponent (A071178), and the exponents e1, ..., e_{k - 1} >= 0
A241920	#nyi	0		After a(1)=1, each n appears A061395(n) times, where A061395 gives the index of the largest prime factor of n
A242017	simtraf	1	new FilterSequence(0, new A000051(), v -> !v.IPP())	v -> SPF(v)	composites in the sequence A000051(n) = 2^n + 1
A242176	filnum	1	0	n -> ZV(n).*(ZV(6 ).^(n)).+(1).IPP()		isprime(n*6^n+1)
A242178	filnum	1	0	n -> ZV(n).*(ZV(8 ).^(n)).+(1).IPP()		isprime(n*8^n+1)
A242196	filnum	1	0	n -> ZV(n).*(ZV(12).^(n)).+(1).IPP()		isprime(n*12^n+1)
A242197	filnum	1	0	n -> ZV(n).*(ZV(14).^(n)).+(1).IPP()		isprime(n*14^n+1)
A242198	filnum	1	0	n -> ZV(n).*(ZV(15).^(n)).+(1).IPP()		isprime(n*15^n+1)
A242199	filnum	1	0	n -> ZV(n).*(ZV(16).^(n)).+(1).IPP()		isprime(n*16^n+1)
A242407	filnum	1	0	n -> { final String s = Integer.toString(n, 3); return s.indexOf("12") <  0 && s.indexOf("21") <  0 && s.indexOf("22") <  0; }	Numbers such that in ternary representation all pairs of adjacent digits have sums not greater than 2.	nonn,base	1..10000
A242408	filnum	1	1	n -> { final String s = Integer.toString(n, 3); return s.indexOf("12") >= 0 || s.indexOf("21") >= 0 || s.indexOf("22") >= 0; }	Numbers such that in ternary representation at least one pair of adjacent digits has a sum greater than 2.	nonn,base	1..10000
A242424	multrafd	0	(self, n) -> self.s(0).*(SEQ.a(n))	""	new A105560()	new A064989()	a(1) = 1, a(n) = D000040(D001222(n)) * D064989(n) = A105560(n) * D064989(n).
A242488	filnum	1	0	n -> LPF(n*n - 2).equals(ZV(17))	Numbers n such that the largest prime factor of n^2  -  2 is 17
A242493	simtraf	1	new A064775()	(n, v) -> ZV(n).-(v)
A242652	simtraf	0	new A009454().skip(1)	v -> v
A242747	#nyi	0		a(n) = max(gpf(n!*(n - 1)!  +  ( - 1)^n), n!)  -  n (for n >= 3), where gpf(x) is the Largest prime factor of x.  -  _Hiroaki Yamanouchi_, Sep 26 2014
A243005	multrar	0	(self, n) -> self.a(n - 1).*(self.a(n - 1).-(self.a(n - 2)))./(self.a(n - 3))	"2,1,-1"	RecurrenceTable[{a[n] == a[n - 1]*(a[n - 1] - a[n - 2])/a[n - 3],
A243054	multraf	0	(self, n) -> self.s(0).*(self.s(1))./(2)	"1"	new A000040(), new A002110()	a(0)=1, and for n >= 1, a(n) = D000040(n)*D002110(n)/2.
A243096	filter	1	new A001359()	v -> ZUtils.isPrimitiveRoot(Z.TEN, v) && ZUtils.isPrimitiveRoot(Z.TEN, v.+(2))	Lesser of twin primes (A001359) such that both are full reptend primes (A001913).
A243110	recval	0	new A054471()		Records in Annnnnn
A243353	multrafd	0	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A003188()	new A005940()	a(n)=Annn((\d+)+Annn(n))
A243354	dirtraf	0	new A006068()	new A156552()	
A243360	simtraf	0	new A037278()	v -> ZUtils.sortDigitsDescending(v)	a(n) = arrange digits of concatenation of divisors of n (A037278, â¬176558) in decreasing order (in base 10).
A243361	simtraf	0	new A037278()	v -> ZUtils.sortDigitsAscending(v)	a(n) = arrange digits of concatenation of divisors of n (A037278, â¬176558) in increasing order in base 10 (zero digits are omitted).
A243362	filtpos	0	1	new A243361()	v -> v.equals(ZV(123456789))	Numbers n such that Annnnnn(n)= (\d+)	m
A243410	filter	1	new A064977()	PRIME	.
A243505	simtraf	0	new FilterSequence(1, new A122111(), (k, v) -> (k & 1) == 1)	v -> v./(JF(v).largestPrimeFactor())	Permutation of natural numbers, take the odd bisection of A122111 and divide the largest prime factor out: a(n) = A052126(A122111(2n-1)).
A243506	dirtraf	0	new A048673()	new A122111()	Permutation of natural numbers: a(n) = A048673(A122111(n)).	nonn	1..1024	nyi	_Antti Karttunen_
A243569	lambdan	0	n -> SA(n, 8)	1,8	Unsigned Stirling numbers of the (\d+)st kind s(n,(\d+))
A243570	lambdan	0	n -> SA(n, 9)	1,9	Unsigned Stirling numbers of the (\d+)st kind s(n,(\d+))
A243660	trilambn	0	1	1	(n, k) -> BI(3*n + 1 - k, n - k).*(BI(2*n, k - 1))./(n)
A243868	prepend	0	new SimpleTransformSequence(0, new A226158(), (n, v) -> v.*(n + 1).negate())	0	0 followed by -(n+1)*A226158(n).
A243892	multraf	1	(self, n) -> Puma.primeZ(self.s(0))	""	new A106587()	prime(new A106587())
A243893	multraf	1	(self, n) -> Puma.primeZ(self.s(0).-(1))	""	new A106587()	prime(new A106587() - 1)
A243895	multraf	2	(self, n) -> Puma.primeZ(self.s(0).-(1))	""	new A000290()	prime(new A000290() - 1)
A243934	filnum	1	0	n -> ZV(6 ).^(n).+(ZV(n).^(6 )).+(1).IPP()		isprime(6^n+n^6+1)
A244040	simtraf	0	new A024629()	v -> ZV(ZUtils.digitSum(v))	Sum of digits of n in fractional base 3/2.      nonn,base
A244056	lambdan	1	n -> ZV(4*(n*n-1)).*(Z2(n*n).-(1))	a(n) = 4*(n^2-1)*(2^n^2-1).
A244153	filter	0	new SimpleTransformSequence(1, new A156552(), v -> v./(2))	(k, v) -> (k & 1) == 1	Permutation of natural numbers, the odd bisection of A156552 halved; equally, a composition of A064216 and A156552: a(n) = A156552(A064216(n)).	nonn	1..1024	nyi	_Antti Karttunen_
A244154	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A005940().skip(1)	new A048673()	a(n)=Annn(Annn(n+(\d+)))
A244241	lingf	20	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,5,3,-1,-8,-9,-8,-2,5,9,7,3,-1,-4,-2,-2,0,0,0,1	1,-1,-1,0,0,1,1,1,-1,-1,-1,0,0,1,1,-1	0
A244242	lingf	27	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,9,9,5,-6,-15,-22,-23,-11,3,20,25,24,13,1,-12,-16,-12,-9,1,2,4,2,2,2,0,0,0,0,-1	1,-1,-1,0,0,1,0,2,0,-1,-1,-1,-1,0,2,0,1,0,0,-1,-1,1	0
A244243	lingf	35	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,14,19,18,5,-14,-33,-53,-55,-42,-10,28,60,76,75,47,8,-28,-56,-58,-50,-29,-4,16,24,25,14,8,3,-2,-1,-4,-2,-2,-2,-2,0,0,0,0,0,1	1,-1,-1,0,0,1,0,1,1,0,-1,-1,-2,0,0,0,2,1,1,0,-1,-1,0,-1,0,0,1,1,-1	0
A244321	#nyi	0		a(1) = 1, and for n > 1, if A244992(n) = 1 [i.e. the Largest prime factor of n has an odd index], a(n) = 2 * â¬244321(A244989(n)), otherwise, a(n) = 1  +  (2 * â¬244321(A244988(n) - 1))
A244417	multraf	1	(self, n)-> self.s(0).max(self.s(1))	""	new A007814(), new A007949()
A244642	multrar	0	(self, n) -> { final int j = n - Integer.highestOneBit(n); return self.a(j).*(4).add(self.a(n - j - 1)); }	"1"	a(0) = 1, a(2^k + j) = 4*a(j) + a(2^k - j - 1).
A244643	multrar	0	(self, n) -> { final int j = n - Integer.highestOneBit(n); return self.a(j).*(4).add(self.a(n - j - 2)); }	"0,1"	a(-1) = 0, a(0) = 1, a(2^k + j) = 4*a(j) + a(2^k - j - 2).
A244747	filtpos	1	0	new A051145()	v -> v.bitCount() == 1	Positions at which powers of 2 occur in A051145.
A244954	parmof2	0	A244954	3	Smallest positive multiple of n whose base-3 representation contains only 0's and 1's.
A244955	parmof2	0	A244954	4	Smallest positive multiple of n whose base-4 representation contains only 0's and 1's.
A244956	parmof2	0	A244954	5	Smallest positive multiple of n whose base-5 representation contains only 0's and 1's.
A244957	parmof2	0	A244954	6	Smallest positive multiple of n whose base-6 representation contains only 0's and 1's.
A244958	parmof2	0	A244954	7	Smallest positive multiple of n whose base-7 representation contains only 0's and 1's.
A244959	parmof2	0	A244954	8	Smallest positive multiple of n whose base 8 representation contains only 0's and 1's.
A244960	parmof2	0	A244954	9	Smallest positive multiple of n whose base 9 representation contains only 0's and 1's.
A244988	simtraf	0	new A244989()	(n, v) -> ZV(n).-(v)		a(n)= n - Annnnnn(n)	
A244989	partsum	0	A244992		Partial sums of A244992: a(1) = 0, and for n >= 1, a(n) = A244992(n) + a(n-1); Inverse function for â¬244991.	nonn	1..10001	nyi	_Antti Karttunen_
A245048	filter	1	new A000040()	p -> p.^( 2).+(   28).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	200, 2,   28
A245232	filter	1	new A005900()	SEMIPRIME	.
A245268	lambdan	0	n -> SU(1, n, k -> JF(k).isSquareFree() ? BI(n, k) : Z.ZERO)
A245337	simtraf	0	new A024643()	v -> ZV(ZUtils.digitSum(v))	Sum of digits of n in fractional base 7/6.	nonn,base	0..67	nyi	_James Van Alstine_
A245346	simtraf	0	new A024658()	v -> ZV(ZUtils.digitSum(v))	Sum of digits of n in fractional base 10/3.	nonn,base	0..72	nyi	_James Van Alstine_
A245349	simtraf	0	new A024641()	v -> ZV(ZUtils.digitSum(v))	Sum of digits of n in fractional base 7/4.	nonn,base	0..68	nyi	_James Van Alstine_
A245354	simtraf	0	new A024653()	v -> ZV(ZUtils.digitSum(v))	Sum of digits of n in fractional base 9/5.	nonn,base	0..67	nyi	_James Van Alstine_
A245471	multrad	0	(self, n) -> (n & 1) == 0 ? SEQ.a(n + 1) : ZV(n / 2)	"2,1"	new A065621()	 If n is odd, then a(n) = A065621(n+1). If n is even, then a(n) = n/2.
A245496	lambdan	0	n -> RU(0, n,   k -> new Q(ZV(k)    .^(k  ).*(BI(n,   k)), FA(k)              )).*(FA(n)).num()	n! * Sum_{k=0..n} k^k/k! * binomial(n,k)
A245543	diffs	0	new A160239()	First differences of A160239.
A245575	ordsum	0	new A240025().skip()	2
A245671	parmof2	0	A008873	1729	Numbers n such that the Collatz trajectory of n (
A245832	lambdan	1	n -> ZV(12).*(n).+(72).*(n).+(137).*(n).+(92).*(n).+(13).*(n).-(2).*(n)./(6)	a(n)=(12*n^6+72*n^5+137*n^92*n^3+13*n^2-2*n)/6
A245908	simtras	0	new A000045()	v -> ZV(JF(v).omega())
A245909	multrafd	1	(self, n) -> SEQ.a(self.s(0).-(1))	""	new A030078()	new A001221()	a(n)=Annn(Annn(n)-(\d+))
A246040	multrar	1	(self, n) -> SU(1, n - 1, k -> S1(n, k).*(self.a(k)))	"1"
A246066	#nyi	0		Least k such that Lppf(k) > Gpf(k)  +  n, where Lppf(k) is the largest prime power factor of k and Gpf(k) is the Largest prime factor of k
A246262	prepend	0	new PartialSumSequence(0, new A246260())	0	partial sums of A246260.
A246264	simtraf	0	new A246262()	(n, v) -> ZV(n).-(v)
A246267	dirtral	0	new A048673()	new A246263()	(n, v) -> v./(2)	A048673(A246263(n))/2
A246281	filtpos	0	1	new A003961()	(k, v) -> v.compareTo(ZV(2*k)) < 0	Numbers k for which A003961(k) < 2*k; Numbers n such that if n = product_{k >= 1} (p_k)^(c_k), then product_{k >= 1} (p_{k+1})^(c_k) < 2*n, where p_k indicates the k-th prime, A000040(k).	nonn	1..10000	nyi	_Antti Karttunen_
A246282	filtpos	0	1	new A003961()	(k, v) -> v.compareTo(ZV(2*k)) > 0	Numbers k for which A003961(k) > 2*k; numbers n such that if n = Product_{k >= 1} (p_k)^(c_k), then Product_{k >= 1} (p_{k+1})^(c_k) > 2*n, where p_k indicates the k-th prime, A000040(k).	nonn	1..10000	nyi	_Antti Karttunen_
A246292	multrafd	0	(self, n) -> self.s(0).*(SEQ.a(n - 1))	"1,1,3"	new A022915()	new A000178()	a(n) = A022915(n) * D000178(n-1) for n>0.
A246293	filnum	1	1	k -> CV(k).sin().compareTo(CV(k + 1).sin()) > 0
A246294	filnum	1	1	k -> { final CR k1 = CV(k + 1).sin(); return CV(k).sin().compareTo(k1) < 0 && k1.compareTo(CV(k + 2).sin()) > 0; }
A246295	filnum	1	0	k -> { final CR k1 = CV(k + 1).sin(); final CR k2 = CV(k + 2).sin(); final CR k3 = CV(k + 3).sin(); return CV(k).sin().compareTo(k1) < 0 && k1.compareTo(k2) < 0 && k2.compareTo(k3) > 0; }
A246296	filnum	1	1	k -> { final CR k1 = CV(k + 1).sin(); final CR k2 = CV(k + 2).sin(); final CR k3 = CV(k + 3).sin(); final CR k4 = CV(k + 4).sin(); return CV(k).sin().compareTo(k1) < 0 && k1.compareTo(k2) < 0 && k2.compareTo(k3) < 0 && k3.compareTo(k4) > 0; }
A246297	filnum	1	1	k -> { final CR k1 = CV(k + 1).sin(); return CV(k).sin().compareTo(k1) > 0 && k1.compareTo(CV(k + 2).sin()) < 0; }
A246298	filnum	1	1	k -> { final CR k1 = CV(k + 1).sin(); final CR k2 = CV(k + 2).sin(); final CR k3 = CV(k + 3).sin(); return CV(k).sin().compareTo(k1) > 0 && k1.compareTo(k2) > 0 && k2.compareTo(k3) < 0; }
A246299	filnum	1	1	k -> { final CR k1 = CV(k + 1).sin(); final CR k2 = CV(k + 2).sin(); final CR k3 = CV(k + 3).sin(); final CR k4 = CV(k + 4).sin(); return CV(k).sin().compareTo(k1) > 0 && k1.compareTo(k2) > 0 && k2.compareTo(k3) > 0 && k3.compareTo(k4) < 0; }
A246300	filnum	1	1	k -> { final CR k1 = CV(k + 1).cos(); return CV(k).cos().compareTo(k1) < 0 && k1.compareTo(CV(k + 2).cos()) > 0; }
A246301	filnum	1	1	k -> { final CR k1 = CV(k + 1).cos(); final CR k2 = CV(k + 2).cos(); final CR k3 = CV(k + 3).cos(); return CV(k).cos().compareTo(k1) < 0 && k1.compareTo(k2) < 0 && k2.compareTo(k3) > 0; }
A246302	filnum	1	1	k -> { final CR k1 = CV(k + 1).cos(); final CR k2 = CV(k + 2).cos(); final CR k3 = CV(k + 3).cos(); final CR k4 = CV(k + 4).cos(); return CV(k).cos().compareTo(k1) < 0 && k1.compareTo(k2) < 0 && k2.compareTo(k3) < 0 && k3.compareTo(k4) > 0; }
A246303	filnum	1	1	k -> CV(k).cos().compareTo(CV(k + 1).cos()) < 0
A246304	filnum	1	1	k -> { final CR k1 = CV(k + 1).cos(); return CV(k).cos().compareTo(k1) > 0 && k1.compareTo(CV(k + 2).cos()) < 0; }
A246305	filnum	1	1	k -> { final CR k1 = CV(k + 1).cos(); final CR k2 = CV(k + 2).cos(); final CR k3 = CV(k + 3).cos(); return CV(k).cos().compareTo(k1) > 0 && k1.compareTo(k2) > 0 && k2.compareTo(k3) < 0; }
A246306	filnum	1	0	k -> { final CR k1 = CV(k + 1).cos(); final CR k2 = CV(k + 2).cos(); final CR k3 = CV(k + 3).cos(); final CR k4 = CV(k + 4).cos(); return CV(k).cos().compareTo(k1) > 0 && k1.compareTo(k2) > 0 && k2.compareTo(k3) > 0 && k3.compareTo(k4) < 0; }
A246351	filtpos	0	1	new A048673()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n such that A048673(n) < n.	nonn	1..10000	nyi	_Antti Karttunen_
A246352	filtpos	0	1	new A048673()	(k, v) -> v.compareTo(ZV(k)) >= 0	Numbers n such that A048673(n) >= n.	nonn	1..10000	nyi	_Antti Karttunen_
A246418	lambdan	0	n -> SU(0, n, k -> BI(n, k).*(Z2((1 << k)-1)))
A246438	filtpos	0	0	 new A164349()	v -> v.equals(ZV(0))	Numbers m such that Annnnnn(m)= (\d+)	
A246439	filtpos	0	0	 new A164349()	v -> v.equals(ZV(1))	Numbers m such that Annnnnn(m)= (\d+)	
A246590	simtraf	0	new A091067()	v -> v.*(2)	a(n) = 2 * A091067(n). - _Antti Karttunen_, Feb 20 2015
A246622	filter	1	new A063114()	PRIME	.
A246675	#dirtraf	0	new A000079()	new A055396()	Permutation of natural numbers: a(n) = A000079(A055396(n+1)-1) * ((2*â¬246277(n+1))-1).	nonn	1..2048	nyi	_Antti Karttunen_
A246929	lambdan	1	n -> Puma.primeZ(n*11)	Prime((\d+)*n)
A246930	lambdan	1	n -> Puma.primeZ(n*12)	Prime((\d+)*n)
A246931	lambdan	1	n -> Puma.primeZ(n*14)	Prime((\d+)*n)
A246932	lambdan	0	n -> Puma.primeZ(15*n)	a(n)= prime((\d+)*n)	
A246933	lambdan	0	n -> Puma.primeZ(16*n)	a(n)= prime((\d+)*n)
A247115	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(5*k - 3)/2)))).den()	Denominator of the harmonic mean of the first n heptagonal numbers.
A247228	#nyi	0		Prime numbers p where 2^p - 1 is composite that set records for Least prime factor of 2^p - 1: the Least prime factor of 2^p - 1 is larger than the Least prime factor of 2^q - 1 for all primes q > p
A247365	central	1	new A102472()	Central terms of triangles       A102472 and A102473.
A247416	lambdan	0	n -> SU(1, IntegerUtils.sqrt(n + 1), m -> BI(2*n - m*m + 1, n))
A247787	dirtraf	1	new A000203()	new A076274().skip(1)			1	Sum of divisors of 2*prime(n)-1.
A247795	parity	0	new A027750()	v -> v.and(Z.ONE())	a(j) = A000035(A027750(j)), j >= 1. - _Omar E. Pol_, Feb 20 2022
A247816	simtraf	1	new A057620()	v -> Puma.primePiZ(v)	a(n)=primepi(Annn(n))
A247821	filnum	1	1	k -> SIGMA(SIGMA(2*k - 1)).IPP()
A247822	filter	1	new A051027()	PRIME
A247827	simtraf	1	new A247676()	v -> SPF(v)
A247870	simtraf	1	new A247678()	v -> SPF(v)	odd numbers congruent to 4 modulo 9
A247871	simtraf	1	new A247679()	v -> SPF(v)
A247872	simtraf	2	new A247681().skip(1)	v -> SPF(v)	(n)
A247876	simtraf	1	new A247682()	v -> SPF(v)
A247877	simtraf	1	new A247683()	v -> SPF(v)
A247894	lambdan	0	n -> ZV(n).pow(19).sqrt()	a(n)=floor(sqrt(n^(\d+)))	19
A247897	diffs	0	new A247676()	First differences of A247676
A247898	diffs	0	new A247678()	First differences of A247678
A247899	diffs	0	new A247679()	First differences of A247679
A247900	diffs	0	new A247681()	First differences of A247681.
A247901	diffs	0	new A247682()	First differences of A247682
A247902	diffs	0	new A247683()	First differences of A247683
A247967	simtraf	1	new A057622()	v -> Puma.primePiZ(v)	a(n)=primepi(Annn(n))
A248085	filter	1	new A000040()	v -> v.+(12).IPP() && v.+( 24).IPP() && v.+(36).IPP()	#+{(\d+),(\d+),(\d+)},PrimeQ]&]	3000,12, 24,36
A248109	lambdan	0	n -> ZV(n).pow(23).sqrt()	a(n)=floor(sqrt(n^(\d+)))	23
A248132	lambdan	0	n -> ZV(n).pow(25).sqrt()	a(n)=floor(sqrt(n^(\d+)))	25
A248324	arrlamb0	0	(n, k) -> BI(new Q(n).-(new Q(1, 3)), n + k).*(Z_1(k)).*(ZV( 9).^(n + k)).num()	a(n,k) = (-1)^k* 9^(n+k)*binomial(n-1/3,n+k)
A248325	arrlamb0	0	(n, k) -> BI(new Q(n).-(new Q(1, 4)), n + k).*(Z_1(k)).*(ZV(16).^(n + k)).num()	a(n,k) = (-1)^k*16^(n+k)*binomial(n-1/4,n+k)
A248326	arrlamb0	0	(n, k) -> BI(new Q(n).-(new Q(1, 5)), n + k).*(Z_1(k)).*(ZV(25).^(n + k)).num()	a(n,k) = (-1)^k*25^(n+k)*binomial(n-1/5,n+k)
A248328	arrlamb0	0	(n, k) -> BI(new Q(n).-(new Q(1, 6)), n + k).*(Z_1(k)).*(ZV(36).^(n + k)).num()	a(n,k) = (-1)^k*36^(n+k)*binomial(n-1/6,n+k)
A248329	arrlamb0	0	(n, k) -> BI(new Q(n).-(new Q(1, 7)), n + k).*(Z_1(k)).*(ZV(49).^(n + k)).num()	a(n,k) = (-1)^k*49^(n+k)*binomial(n-1/7,n+k)
A248332	arrlamb0	0	(n, k) -> BI(new Q(n).-(new Q(1, 8)), n + k).*(Z_1(k)).*(ZV(64).^(n + k)).num()	a(n,k) = (-1)^k*64^(n+k)*binomial(n-1/8,n+k)
A248367	filter	1	new A000040()	v -> v.+( 2).IPP() && v.+( 36).IPP() && v.+(38).IPP()	#+{(\d+),(\d+),(\d+)},PrimeQ]&]	8000, 2, 36,38
A248368	filter	1	new A000040()	p -> p.*(52).+( 1).IPP()	[(\d+)#+(\d+)]&]		500,52, 1
A248511	#nyi	0		Difference between k and the least prime factor of k^2 + 1 where k is the n - th number with k^2 + 1 composite
A248728	lambdir	0	n -> SEQ.a(ZV(n).^(3))	new A000041()	a(n)=Annn((\d+)^n)	3	D000041
A248734	lambdir	0	n -> SEQ.a(ZV(n).^(7))	new A000041()	a(n)=Annn((\d+)^n)	7	D000041
A248742	union2	1	new A002496()	new A144255()
A248753	filter	0	new A002113()	(n, p) -> n.toString().indexOf(p.toString()) >= 0	Palindromes p = A002113(n) whose index n is a substring of p.
A248793	dirtral	0	new A000203()	new A248792()	(n, v) -> v.-(1)	A000203(A248792(n)) - 1
A249071	simtraf	0	new FilterSequence(0, new A004001(), (k, v) -> (k & 1) == 0)	(n, v) -> v.-(n)	a(n) = A004001(2*n) - n.
A249132	#nyi	0		Least noncomposite k such that prime(n) is the largest prime factor of k^2 + 1, or 0 if no such k exists
A249150	simtraf	0	new A249151()	v -> v.-(1)		Number of trailing zeros in the factorial base representation of products of binomial coefficients: a(n) = A230403(A001142(n)).
A249151	dirtraf	0	new A055881()	new A001142()	Largest m such that m! divides the product of elements on row n of Pascals triangle: a(n) = A055881(A001142(n)).
A249346	tuptraf	0	(n, s) -> s[0].min(s[1])	""	new A187059(), new A249343()	a(n)=min(Annn(n),Annn(n))
A249416	lambdan	0	n -> JF(SU(0, n, i -> JF(BI(n, i)).core())).core()
A249431	simtraf	0	new A249151()	(n, v) -> v.-(n)	a(n)= Annnnnn(n)- n	m	i       
A249513	holos	0	[[0],[80,-260,60],[-120,-140,60],[19,2,3],[24,8,3],[-7,10,-3],[0,4,-3]]	1,5,13	0	0	FindRE(-(4*x*sqrt(4*x^2+1)+8*x^2+1)/((2*x^2-1)*sqrt(4*x^2+1) +4*x^3+x),x,a(n));
A249679	filter	0	new A007504()	v -> v.mod(Z.THREE).isZero()	Terms of A007504 divisible by 3.
A249808	#nyi	0		Triangular table read by rows, a lower right triangular region of square array A(n,k) is the number of times prime p_k has occurred as the Least prime factor of numbers 1..n
A249809	#nyi	0		Irregular table read by rows: T(n, k) is the number of times prime p_k has occurred as the Least prime factor of numbers 1 .. n. (T(1,1) = 0, and for each n > 1, k = 1 .. A000720(n))
A249812	#dirtraf	0	new A000079()	new A055396()	Permutation of natural numbers: a(n) = A000079(A055396(n+1)-1) * ((2*A078898(n+1))-1).	nonn	1..1024	nyi	_Antti Karttunen_
A249830	filnum	1	0	k -> !A093017.isOk(ZV(k))	Natural numbers having no valid Luhn mod 10 check digit.
A249832	lambdan	0	n -> A093017.isOk(ZV(n)) ? Z.ONE : Z.ZERO	Characteristic function of numbers having a valid Luhn mod 10 check digit.
A249915	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 2 && sn.toString().charAt(0) == '6' && sn2.mod(10) == 2 && sn2.toString().charAt(0) == '6'; }	2,2,6	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A250293	simtraf	1	new A085725()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A085725
A250327	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(3*k - 1)/2)))).num()	Numerator   of the harmonic mean of the first n pentagonal numbers.
A250328	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(3*k - 1)/2)))).den()	Denominator of the harmonic mean of the first n pentagonal numbers.
A250344	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(2*k - 1)  )))).num()	Numerator   of the harmonic mean of the first n hexagonal numbers.
A250345	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(5*k - 3)/2)))).num()	Numerator   of the harmonic mean of the first n heptagonal numbers.
A250400	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(3*k - 2)  )))).num()	Numerator   of the harmonic mean of the first n octagonal numbers.
A250401	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(3*k - 2)  )))).den()	Denominator of the harmonic mean of the first n nonzero octagonal numbers.
A250477	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A250474(), new A256447()	a(n) = A250474(n) +   A256447(n).
A250548	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(7*k - 5)/2)))).num()	Numerator   of the harmonic mean of the first n 9-gonal numbers.
A250549	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(7*k - 5)/2)))).den()	Denominator of the harmonic mean of the first n 9-gonal numbers.
A250550	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(4*k - 3)  )))).num()	Numerator   of the harmonic mean of the first n 10-gonal numbers.
A250551	lambdan	1	n -> new Q(n)./(RU(1, n, k -> new Q(Z.ONE, ZV(k*(4*k - 3)  )))).den()	Denominator of the harmonic mean of the first n positive 10-gonal numbers.
A251725	#nyi	0		a(n) = a(A066048(n)). [The result depends only on the Least and the largest prime factor of n.]
A251726	filamb	0	2	k -> { final FactorSequence fs = JF(k); return fs.largestPrimeFactor().compareTo(fs.leastPrimeFactor().^(2)) < 0; }	Numbers n > 1 for which gpf(n) < lpf(n)^2, 
A251727	filamb	0	2	k -> { final FactorSequence fs = JF(k); return fs.largestPrimeFactor().compareTo(fs.leastPrimeFactor().^(2)) > 0; }	Numbers n > 1 for which gpf(n) > spf(n)^2, 
A252096	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A014442(), new A089120()	a(n)=Annn(n)-Annn(n)
A252279	filter	1	new A040028( 8, 2, true)	v -> v.mod(16) == 1	Primes p congruent to 1 mod 16 such that x^8 = 2 has a solution mod p.
A252370	#nyi	0		a(n) = A243055(A066048(A251726(n))). [Result depends only on the Least and the largest prime factor of A251726(n).]
A252371	#nyi	0		a(n) = A243055(A066048(A251727(n))). [Result depends only on the Least and the largest prime factor of A251727(n).]
A252372	charfunc	0	new A251726()	Characteristic function for A251726: a(n) = 1 if n > 1 and gpf(n) < spf(n)^2, otherwise 0; here spf(n) and gpf(n) (smallest and greatest prime factor of n) are sequences A020639(n) and A006530(n).	nonn	1..10000	nyi	_Antti Karttunen_. A new simpler definition found Jan 04 2015 an
A252374	#nyi	0		a(n) = a(A066048(n)). [The result depends only on the Least and the largest prime factor of n.]
A252375	#nyi	0		a(n) = Least r such that r^k <= spf(n) and gpf(n) < r^(k + 1), for some k >= 0, where spf and gpf (Least and Largest prime factor of n) are given by A020639(n) and A006530(n)
A252459	#nyi	0		a(n) = a(A066048(n)). [The result depends only on the Least and the largest prime factor of n.]
A252489	multraf	1	(self, n)-> self.s(0).max(self.s(1))	""	new A061395().skip(1), PREVIOUS
A252540	filter	1	new A001477().skip(2)	(k, v) -> new A000593().a(new A146076().a(v)).equals(v)	Numbers k such that A000593(A146076(k)) = k.						Numbers k such that A000593(A146076(k)) = k. (A000593(n) is the sum of the odd divisors of n; A146076(n) is the sum of the even divisors of n.)
A252541	filter	1	new A001477().skip(1)	(k, v) -> new A146076().a(new A000593().a(v)).equals(v)	Numbers k such that A146076(A000593(k)) = k.						Numbers k such that A146076(A000593(k)) = k.
A252735	simtraf	1	new A061395()	(n, v) -> n <= 1 ? Z.ZERO : v.-(1)	.
A252736	simtraf	1	new A001222()	(n, v) -> n <= 1 ? Z.ZERO : v.-(1)	.
A252742	charfunc	0	new A246282()	Characteristic function of A246282: if A003961(n) > 2*n, then a(n) = 1, otherwise 0 (when A003961(n) < 2*n) [where A003961(n) shifts the prime factorization of n one step towards larger primes].	nonn	1..10000	nyi	_Antti Karttunen_
A252757	#nyi	0		a(1) = 1, and for n>1: if A252372(n) = 1 [i.e. the largest prime factor of n is less than the square of its Least prime factor], a(n) = 2*a(A252373(k)), otherwise, a(n) = 1  +  2*a(n - A252373(n) - 1)
A252890	#nyi	0		Number of times the Largest prime factor of n^2  +  1 is a factor in all numbers <= n
A253082	partsun	0	new A246595()			Partial sums of A246595.					Partial sums of A246595.
A253471	filnum	1	0	n -> ZV(3 ).^(n).+(ZV(n).^(3)).IPP()		isprime(3^n+n^3)
A253473	multrafd	0	(self, n) -> SEQ.a(self.s(0)).-(2)	""	new A073256()	new A049820()	a(n)=Annn(Annn(n))		D049820,A073256 "-2" ???
A253568	filter	0	new A122111()	(n, v) -> (n & 1) == 0	Even bisection of A122111: a(n) = A122111(2*n).	nonn	1..1024	nyi	_Antti Karttunen_
A253604	lambdan	1	n -> (ZV(n).^(n-1).+(1)).^(n)
A253971	simtraf	1	new A064711()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A064711
A254032	#nyi	0		a(0) = 0, a(1)=1; for n > 2, a(n) is the Least prime factor of a(n - 1)  +  a(n - 2) not already in the sequence or, if there is no such prime, a(n) = a(n - 1)  +  a(n - 2)
A254071	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 4 && sn.toString().charAt(0) == '8' && sn2.mod(10) == 4 && sn2.toString().charAt(0) == '8'; }	2,4,8	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as the digit with the smallest value and (\d+) as the digit with the largest value
A254072	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 4 && sn.toString().charAt(0) == '9' && sn2.mod(10) == 4 && sn2.toString().charAt(0) == '9'; }	2,4,9	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as the digit with the smallest value and (\d+) as the digit with the largest value
A254074	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 5 && sn.toString().charAt(0) == '9' && sn2.mod(10) == 5 && sn2.toString().charAt(0) == '9'; }	2,5,9	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as the digit with the smallest value and (\d+) as the digit with the largest value
A254269	simtraf	0	new A000009()	v -> LPF(v)	the strict partition numbers Q(n) (partitions into distinct parts, A000009)
A254397	simtraf	1	new A237424()	v -> ZV(v.toString().charAt(0) - '0')	Initial digits of A237424 in decimal representation.
A254398	simtraf	1	new A237424()	v -> v.modZ(10)	Final digits of A237424 in decimal representation
A254402	multrar	1	(self, n) -> self.a(n - 1).^(3).sqrt()	"3"		a(n) = floor(a(n-1)^(3/2)), a(1) = 3.
A254404	multrar	1	(self, n) -> self.a(n - 1).^(3).sqrt()	"4"		a(n) = floor(a(n-1)^(3/2)), a(1) = 4.
A254406	multrar	1	(self, n) -> self.a(n - 1).^(5).sqrt()	"2"		a(n) = floor(a(n-1)^(5/2)), a(1) = 2.
A254522	lambdan	0	n -> new Q(Z2(n).-(1).+(Z_1(n)), ZV(2*n)).num()	(2^n - 1 + (-1)^n)/(2*n),
A254529	simtraf	0	new A001372()	(n, v) -> FA(n).*(v)
A254866	lambdan	0	n -> FD(n).^(n)	a(n)=(n!!)^n
A255068	simtraf	0	new A091067()	v -> v.-(1)	a(n)=Annn(n+(\d+))-(\d+)		1,1
A255263	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A169707(), new A162795()	a(n)=Annn(n)-Annn(n)
A255341	filtpos	0	0	new A007623()	v -> ZUtils.digitCounts(v)[1] == 1	Numbers n such that there is exactly one 1 in their factorial base representation (A007623).	nonn,base	1..13069	nyi	_Antti Karttunen_
A255342	filtpos	0	0	new A007623()	v -> ZUtils.digitCounts(v)[1] == 2	Numbers n such that there are exactly two 1s in their factorial base representation (A007623).	nonn,base	1..13132	nyi	_Antti Karttunen_
A255343	filtpos	0	0	new A007623()	v -> ZUtils.digitCounts(v)[1] == 3	Numbers n such that there are exactly three 1s in their factorial base representation (A007623).	nonn,base	1..6769	nyi	_Antti Karttunen_
A255542	lambdir	0	n -> SEQ.a(ZV(3).^(n).+(10))	new A001222()	a(n)=Annn((\d+)^n+(\d+))	3,10	D001222
A255647	prepend	0	new A035168()	1	a(n)=Annn(n)unlessn=(\d+)	0	A035168
A255740	arrlamb	1	1	1	1	(n, k) -> n == 1 ? Z.ONE : ZV(n - 2).^(Integer.bitCount(k - 1) - 1).*(n - 1)
A255743	lambdan	1	n -> n == 1 ? Z.ONE : ZV( 8).^(Integer.bitCount(n - 1) - 1).*( 9)	a(1) = 1; for n > 1, a(n) = 9*8^{A000120(n-1)-1}.	nonn	1..10000	nyi
A255744	lambdan	1	n -> n == 1 ? Z.ONE : ZV( 9).^(Integer.bitCount(n - 1) - 1).*(10)	a(1) = 1; for n > 1, a(n) = 10*9^(A000120(n-1)-1).	nonn	1..10000	nyi
A255745	lambdan	1	n -> n == 1 ? Z.ONE : ZV(10).^(Integer.bitCount(n - 1) - 1).*(11)	a(1) = 1; for n > 1, a(n) = 11*10^{A000120(n-1)-1}.	nonn	1..47	nyi
A255764	partsun	1	new A255743()
A255765	partsun	1	new A255744()
A255766	lambdan	1	n -> SU(1, n, k -> k == 1 ? Z.ONE : ZV(10).^(Integer.bitCount(k - 1) - 1).*(11))	*10^(hammingweight(k-1)-1)))
A255770	simtraf	0	new A220161()	v -> ZV(JF(v).omega())	Number of distinct prime factors of Annnnnn(n)
A255771	simtraf	0	new A220294()	v -> ZV(JF(v).omega())	Number of distinct prime factors of Annnnnn(n) 
A256011	#nyi	0		Integers n with the property that the largest prime factor of n^2  +  1 is less than n
A256108	filtpos	1	-1	new A004601()	NONZERO	Positions of nonzero digits in binary expansion of Pi.					Positions of nonzero digits in binary expansion of Pi.
A256194	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k).*(BI(n,k)), ZV(n*k + n - 1))).den()
A256209	filter	0	new TupleTransformSequence(0, (n, s) -> s[0].-(s[1])./(2), "", new A053270(), new A257640())	(n, v) -> (n % 3) == 0	a(n) = (A053270(3*n) - A257640(3*n))/2. - _Michael Somos_, Nov 04 2015
A256251	simtraf	0	new A006257()	(n, v) -> (n == 0) ? Z.ONE : v.*(4)	a(0) = 1. For n >= 1; a(n) = 4 * A006257(n).
A256281	moetrafi	1	new A000129()	, 0		Pell numbers. skip1
A256288	multraf	0	(self, n) -> self.s(0).*(7*n)	""	new A256287()	7*n*new A256287()
A256368	#nyi	0		Primes arising from â¬098550(n), n >= 2, as Least prime factor of gcd(â¬098550(n), â¬098550(n + 2))
A256446	multraf	1	(self, n) -> self.s(0).+(self.s(1))	""	new A256447().skip(1), new A256448()	a(n)=Annn(n+(\d+))+Annn(n)	1
A256449	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A256447(), new A256448()	a(n) = A256447(n) -   A256448(n).
A256450	filtpos	0	0	new A007623()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers that have at least one 1-digit in their factorial base representation (A007623).	nonn,base	0..10000	nyi	_Antti Karttunen_
A256465	multraf	1	(self, n) -> self.s(0).-((self.s(1)./(2)))	""	new A057655().skip(1), new A004018().skip(1)
A256511	lambdan	1	n -> FA(n*n-1)
A256601	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 1 && sn.toString().charAt(0) == '9' && sn2.mod(10) == 1 && sn2.toString().charAt(0) == '9'; }	2,1,9	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A256623	tuptraf	0	(n, s) -> s[0].+(s[1])./(2)	""	new A048054(), new A016115()	)/2
A256630	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 0 && sn.toString().charAt(0) == '4' && sn2.mod(10) == 0 && sn2.toString().charAt(0) == '4'; }	2,0,4	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A256631	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 0 && sn.toString().charAt(0) == '5' && sn2.mod(10) == 0 && sn2.toString().charAt(0) == '5'; }	2,0,5	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A256633	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 0 && sn.toString().charAt(0) == '6' && sn2.mod(10) == 0 && sn2.toString().charAt(0) == '6'; }	2,0,6	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A256634	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 0 && sn.toString().charAt(0) == '7' && sn2.mod(10) == 0 && sn2.toString().charAt(0) == '7'; }	2,0,7	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A256708	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 0 && sn.toString().charAt(0) == '8' && sn2.mod(10) == 0 && sn2.toString().charAt(0) == '8'; }	2,0,8	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A256709	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 0 && sn.toString().charAt(0) == '9' && sn2.mod(10) == 0 && sn2.toString().charAt(0) == '9'; }	2,0,9	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A256889	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 1 && sn.toString().charAt(0) == '5' && sn2.mod(10) == 1 && sn2.toString().charAt(0) == '5'; }	2,1,5	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A256916	filter	0	new A256858()	(n, v) -> (n & 1) == 0
A257079	simtraf	0	new A007623()	v -> { int[] c = ZUtils.digitCounts(v, 10); int i = 0; while (++i <= 9) { if (c[i] == 0) { return ZV(i); }} return Z.NEG_ONE; }	The least nonzero digit missing from the factorial representation (A007623) of n.
A257080	simtraf	0	new A257079()	(n, v) -> ZV(n).*(v)
A257098	#nyi	0	The sequence of rationals a(n)/A046644(n) is the Moebius transform of A046643/A046644 which is multiplicative. This sequence is then also multiplicative. - _Andrew Howroyd_, Aug 08 2018
A257123	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 2 && sn.toString().charAt(0) == '7' && sn2.mod(10) == 2 && sn2.toString().charAt(0) == '7'; }	2,2,7	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A257197	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 1 && sn.toString().charAt(0) == '6' && sn2.mod(10) == 1 && sn2.toString().charAt(0) == '6'; }	2,1,6	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A257210	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 1 && sn.toString().charAt(0) == '7' && sn2.mod(10) == 1 && sn2.toString().charAt(0) == '7'; }	2,1,7	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A257211	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 1 && sn.toString().charAt(0) == '8' && sn2.mod(10) == 1 && sn2.toString().charAt(0) == '8'; }	2,1,8	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A257245	#nyi	0		a(n) = A006530(â¬256393(2*n  -  1)). [Equally, the largest prime factor of â¬256393(2*n - 1).]
A257246	#nyi	0		a(n) = A020639(â¬256393(2*n)). [Equally, the Least prime factor of â¬256393(2*n).]
A257260	simtraf	0	new A007623()	(k, v) -> { final String s = v.toString(); return ZV(s.length() - s.lastIndexOf('0')); }	One-based position of the rightmost zero in the factorial base representation of n (A007623), 0 if no nonleading zeros present.	nonn,base	1..10080	nyi	_Antti Karttunen_
A257261	simtraf	0	new A007623()	(k, v) -> { final String s = v.toString(); return ZV(s.length() - s.lastIndexOf('1')); }	One-based position of the rightmost one in the factorial base representation (A007623) of n, 0 if no one is present.	nonn,base	0..10081	nyi	_Antti Karttunen_
A257295	tuptraf	0	(n, s) -> new Q(s[0], s[1]).round()	""	new A007953(), new A055642()	v -> a(n)=round(Annn(n)/Annn(n))
A257310	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 2 && sn.toString().charAt(0) == '5' && sn2.mod(10) == 2 && sn2.toString().charAt(0) == '5'; }	2,2,5	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A257368	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 2 && sn.toString().charAt(0) == '8' && sn2.mod(10) == 2 && sn2.toString().charAt(0) == '8'; }	2,2,8	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A257485	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 2 && sn.toString().charAt(0) == '9' && sn2.mod(10) == 2 && sn2.toString().charAt(0) == '9'; }	2,2,9	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A257486	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 3 && sn.toString().charAt(0) == '7' && sn2.mod(10) == 3 && sn2.toString().charAt(0) == '7'; }	2,3,7	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as smallest digit and (\d+) as largest digit
A257498	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 3 && sn.toString().charAt(0) == '8' && sn2.mod(10) == 3 && sn2.toString().charAt(0) == '8'; }	2,3,8	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as the digit with the smallest value and (\d+) as the digit with the largest value
A257510	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A084558(), new A060130()	a(n)=Annn(n)-Annn(n)
A257511	simtraf	0	new A007623()	(k, v) -> ZV(ZUtils.digitCounts(v)[1])	Number of 1s in factorial base representation of n (A007623).	nonn,base	0..10080	nyi	_Antti Karttunen_
A257534	filnum	0	0	n -> { final Z sn = SDD(ZV(n)); final Z sn2 = SDD(ZV(n).*(n)); return sn.mod(10) == 4 && sn.toString().charAt(0) == '7' && sn2.mod(10) == 4 && sn2.toString().charAt(0) == '7'; }	2,4,7	Numbers n such that the decimal expansions of both n and n^(\d+) have (\d+) as the digit with the smallest value and (\d+) as the digit with the largest value
A257541	#nyi	0		a(n) = q(largest prime factor of n)  -  bigomega(n), where q(p) is defined by q - th prime = p while bigomega(n) is the number of prime factors of n, including multiplicities
A257644	diffs	0	new A264100()	First differences of A264100.
A257686	tuptraf	0	(n, s) -> s[0].*(s[1])	"0"	new A099563().skip(1), new A048764()	a(0) = 0, for n >= 1: a(n) = A099563(n) * A048764(n).
A257687	simtraf	0	new A257686()	(n, v) -> ZV(n).-(v)
A257935	multraf	0	(self, n) -> new Q(self.s(0), self.s(1)).-(new Q(Z_1(n).*(n), ZV(2))).num()	""	new A027641(), new A027642()
A258091	simtraf	1	new A258073()	v -> SPF(v)	1 + 78557*2^n, cf. A258073
A258095	#nyi	0		Numbers m, such that the Least prime factor of 1 + 78557*2^m does not belong to the covering set {3, 5, 7, 13, 19, 37, 73}
A258261	filter	1	new A000040()	p -> p.*( 3).-( 4).IPP()	[(\d+)#-(\d+)]&]		200, 3, 4
A258387	lambdan	1	n -> ZV(n+1).^(n).+(ZV(n).^(n-1))
A258547	lambdan	1	n -> ZV(16).*(Z2(n)).-(4*n + 12)	a(n) = 16*2^n - 4*n - 12.
A258840	#nyi	0		a(n) is the least integer k such that there are n values of i <= k for which gpf(i^2  +  1) = gpf(k^2  +  1), where gpf(x) is the Largest prime factor of x
A258872	simtraf	0	new A259062()	(n, v) -> v./(n + 1)	a(n)=Annn(n+(\d+))/(n+(\d+))	1,1	A259062
A259472	tuptraf	0	(n, s) -> s[0].-(s[1].*(2))	"1"	new A059439().skip(1), new A003319().skip(1)	a(0) = 1  For n > 0, a(n) = A059439(n) - 2*A003319(n).
A259534	#nyi	0		a(n) =  - 1  +  2 * product_{i=0..n} â¬093179(i), where â¬093179(i) is the Least prime factor of 2^(2^i)  +  1
A259676	filter	1	new A000566()	v -> JF(v).isSemiprime()	Heptagonal numbers (A000566) that are semiprimes (A001358).
A259677	filter	1	new A000567()	v -> JF(v).isSemiprime()	Octagonal numbers (A000567) that are semiprimes (A001358).
A259692	lambdan	1	n -> SU(1, n-1, k -> ZV(k).^(4).*(SIGMA(k)).*(SIGMA(n-k)))
A259693	lambdan	1	n -> SU(1, n-1, k -> ZV(k).^(5).*(SIGMA(k)).*(SIGMA(n-k)))
A259694	lambdan	1	n -> SU(1, n-1, k -> ZV(k).^(6).*(SIGMA(k)).*(SIGMA(n-k)))
A259696	lambdan	1	n -> SU(1, n-1, k -> ZV(k).^(8).*(SIGMA(k)).*(SIGMA(n-k)))
A259788	lambdan	2	n -> JF(JF(BI(2*n, n)).phi()).largestPrimeFactor()
A259825	tuptraf	0	(n, s) -> s[0].*(12)./(s[1])	""	new A058305(), new A058306()	a(n) = 12 * A058305(n) / A058306(n). a(4*n + 1) = a(4*n + 2) = 0. a(3*n + 4) = 6 * A259827(n).
A260318	multraf	1	(self, n) -> self.s(0)./(2)	"1"	new A033148()	v -> v./(2)	for n >= 2. - _Don Knuth_, Jun 20 2017
A260657	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A000142(), new A005394()	a(n) = A000142(n) -   A005394(n). - _Alois P. Heinz_, Jan 24 2024
A260868	#nyi	0		Numbers for which the least k > 1 which divides n  +  2^k  -  2 is different from the Least prime factor of n
A261043	multraf	0	(self, n) -> self.s(0).-(self.s(1).*(2))	""	new A034899(), new A000041()	???"+1" weg	a(n)=Annn(n)-(\d+)*Annn(n)+(\d+)	2,1	A034899,A000041			Number of multisets of nonempty words with a total of n letters over binary alphabet such that all letters occur at least once in the multiset.
A261316	filnum	0	0	n -> FM(n, 3).-(Z.THREE.^(n)).isProbablePrime()	Numbers n such that n!!! - 3^n is prime.
A261411	#nyi	0		a(1) = 1; thereafter a(n) = Least prime factor of A261570(n)
A261422	ordsum	0	new A136522().skip()	3
A261470	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A001223().skip(2), new A001223()	a(n)=Annn(n+(\d+))-Annn(n)
A261494	arrlamb0	0	(n, k) -> (n < 1) ? Z.ONE : RD(n, d -> new Q(BI((k + 1)*(n/d), n/d).*(JF(d).phi()), ZV((k + 1)*n))).num()	add(binomial((k+1)*n/d, n/d)*phi(d), d=divisors(n))/((k+1)*n)):
A261536	filter	1	new A000040()	p -> p.^( 5).+(    2).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	100, 5,    2
A261537	filter	1	new A000040()	p -> p.^( 7).+(    2).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	250, 7,    2
A261538	filter	1	new A000040()	p -> p.^( 9).+(    2).IPP()	Select[Prime[Range[(\d+)]],PrimeQ[#^(\d+)+(\d+)]&]	200, 9,    2
A261617	filnum	0	0	n -> FM(n, 3).+(Z.THREE.^(n)).isProbablePrime()	Numbers n such that n!!! + 3^n is prime.
A261679	ordsum	0	new A178225().skip()	2
A261680	ordsum	0	new A178225().skip()	4
A261726	lambdan	0	n -> BI(Puma.prime(n + 1) - 1, Puma.prime(n) - 1)
A262098	filter	1	new A000040()	p -> ZV(  2).^(p).+( 9).IPP()	[(\d+)^#+(\d+)]&]		100,  2, 9
A262099	filter	0	new A000040()	p -> ZV(2).^(p)      .+(17).IPP()	[(\d+)^#+(\d+)]&]		100,  2,17
A262100	filter	1	new A000040()	p -> ZV(  2).^(p).+(29).IPP()	[(\d+)^#+(\d+)]&]		100,  2,29
A262185	multraf	0	(self, n) -> ZV(n).^(self.s(0)).-(self.s(1).^(n))	""	new A062439(), new A062439()
A262225	#nyi	0		Euclid - Mullin sequence: a(1) = 5, a(n + 1) is largest prime factor of Product_{k=1..n} a(k)  +  1
A262354	simtraf	0	new A127917()	(n, v) -> (n == 1) ? Z.SIX : v.*(2)	For n>1, a(n) = 2*A127917(n).
A262375	spf	0	FA(n).*(4).-(1)
A262902	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A045765()	new A049820()	a(n)=Annn(Annn(n))		D049820,A045765
A263170	multraf	1	(self, n) -> self.s(0).^(3).-(self.s(1))	""	new A007504(), new A098999()	a(n)=Annn(n)^(\d+)-Annn(n)
A263272	simtraf	0	new FilterSequence(0, new A263273(), (k, v) -> (k & 1) == 0)	(n, v) -> v./(2)	a(n) = A263273(2*n) / 2.
A263273	#parmof2	0	A263273	3	Bijective base-3 reverse: a(0) = 0; for n >= 1, a(n) = A030102(A038502(n)) * A038500(n).
A263297	tuptraf	1	(n, s) -> s[0].max(s[1])	""	new A001222(), new A061395()	a(n)=max(Annn(n),Annn(n))
A263323	tuptraf	1	(n, s) -> s[0].max(s[1])	""	new A051903(), new A061395()	a(n)=max(Annn(n),Annn(n))
A263473	lingf	1	0,1,-3,15,-33,57,161,205,-235	1,-10,45,-120,210,-252,210,-120,45,-10,1	0
A263479	lingf	1	0,1,-3,15,-33,57,161,205,-235	1,-9,36,-84,126,-126,84,-36,9,-1	0
A263575	stir2	0	new A000032()	, 0	Stirling transform of A000032
A263686	simtraf	0	new A077586()	v -> SPF(v)	double Mersenne numbers
A263768	simtras	3	new A007147().skip(2)	v -> v.-(1)	. - _Bernd Mulansky_, Mar 08 2023
A263959	simtraf	0	new A069151()	v -> ZV(v.toString().length())	Number of decimal digits in Annnnnn(n)
A263995	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A027424(), new A108954()	a(n) = A027424(n) +   A108954(n). - _Jon Maiga_, Jan 03 2022
A264388	lambdan	0	n -> new Q(BI(n - 1, 2), ZV(6*n)).num()	Numerators of binomial(n-1, 2)/(6*n), for n >= 1.
A264441	simtraf	1	new A045763()	(n, v) -> v.max(ZV(1))	a(n)=max((\d+),Annn(n))	1
A264968	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A263272()	new A246200()	a(n)=Annn(Annn(n))		D246200,D263272
A264974	simtraf	0	new FilterSequence(0, new A263273(), (k, v) -> (k % 4) == 0)	(n, v) -> v./(4)	a(n) = A263273(4*n) / 4
A264975	dirtral	0	new A263272()	new A264984()	(n, v) -> v./(2)	A263272(A264984(n)) / 2
A264978	simtraf	0	new FilterSequence(0, new A263273(), (k, v) -> (k % 8) == 0)	(n, v) -> v./(8)	a(n) = A263273(8*n) / 8
A264979	parmof2	0	A263273	9	Bijective base-9 reverse: a(0) = 0; for n >= 1, a(n) = A030108(n/A264981(n)) * A264981(n).
A264983	lambdir	0	n -> SEQ.a(2*n + 1)	new A263273()	a(n)=Annn((\d+)*n+(\d+))	2,1	D263273
A264984	filter	0	new A263273()	(n, v) -> (n & 1) == 0
A264986	simtraf	0	new FilterSequence(0, new A263273(), (k, v) -> (k % 4) == 0)	(n, v) -> v./(2)	a(n) = A263273(4*n) / 2
A264987	bisect	0	A263272	Odd bisection of Annnnnn
A264993	simtraf	0	new FilterSequence(0, new A264994(), (k, v) -> (k % 3) == 0)	(n, v) -> v./(3)	a(n) = A264994(3*n) / 3
A264994	parmof2	0	A263273	4	Bijective base-4 reverse: a(0) = 0; for n >= 1, a(n) = A030103(A065883(n)) * A234957(n).
A264995	parmof2	0	A263273	5	Bijective base-5 reverse: a(0) = 0; for n >= 1, a(n) = A030104(A132739(n)) * A060904(n).
A265013	filnum	1	1	n -> ZV( 9).^(n).+(1).IPP()	Numbers n such that n*(\d+)^n +(\d+) is prime
A265258	tuptraf	0	(n, s) -> s[0].+(s[1].*(2))	""	new A000070().skip(1), new A000041().skip(1)	a(n) = A000070(n) + 2*A000041(n). - _Vaclav Kotesovec_, Jan 11 2016
A265331	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A263273()	new A001511()	a(n)=Annn(Annn(n))
A265335	simtraf	0	new FilterSequence(0, new A264994(), (k, v) -> (k % 5) == 0)	(n, v) -> v./(5)	a(n) = A264994(5*n) / 5
A265337	simtraf	0	new A263273()	(k, v) -> ZV(v.bitCount())	Number of 1-bits in base-3 reversal of n: a(n) = A000120(â¬263273(n)).	nonn,base	0..16384	nyi	_Antti Karttunen_
A265338	simtraf	0	new FilterSequence(0, new A264979(), (k, v) -> (k % 8) == 0)	(n, v) -> v./(8)	a(n) = A264979(8*n) / 8
A265342	simtraf	0	new A265351()	v -> v.*(2)	a(n) = 2 * A265351(n).
A265397	simtraf	0	new A264977()	(n, v) -> ZV(n).-(v)		a(n)= n - Annnnnn(n)	
A265401	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which gcd{k=1..n-1} binomial(2*n, 2*k) = 1.	nonn	1..6571	nyi	_Antti Karttunen_
A265403	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which gcd{k=1..n-1} binomial(2*n, 2*k) = 2n-1.	nonn	1..2014	nyi	_Antti Karttunen_
A265649	trilamb0	0	(n, k) -> RU(0, k, j -> RQ(0, n - 1, m -> new Q(2*m + j + 1, 2)).*(Z_1(k-j)).*(BI(k, j))).*(Z2(n))./(FA(k)).num()  
A265738	filnum	0	1	k -> FM(k, 3).mod(ZV(k).^(3)).isZero()	Integers k such that k!3 is divisible by k^3, where k!3 = k!!! is a triple factorial number (A007661)
A265893	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A084558(), new A230403()	a(n)=Annn(n)-Annn(n)
A266268	simtraf	1	new A067143()	v -> v.+(1)	.
A266349	multraf	1	(self, n) -> self.s(0).-(self.s(1)).+(1)	""	new A053644(), new A004001().skip(1)	1 + new A053644() - A004001(n+1)
A266350	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Partial sums of f(n) = A192490(2n+1); least monotonic left inverse of A266409.	nonn	1..10011	nyi	_Antti Karttunen_
A266420	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd unlucky numbers.	nonn	1..10000	nyi	_Antti Karttunen_
A266644	simtraf	0	new FilterSequence(0, new A264966(), (n, v) -> n % 3 == 0)	v -> v./(3)	a(n) = A264966(3*n) / 3.
A267422	#lpf	0	the largest squarefree practical number comprising n prime factors
A267481	prisqua	1	31	Primes which are squares (mod (\d+))
A267601	prisqua	1	47	Primes which are squares (mod (\d+))
A267830	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A008908(), new A078350()	a(n) = A008908(n) -   A078350(n).
A268155	prisqua	1	229	Primes which are squares (mod (\d+))
A268199	cordrec	0	 8	0	1,1,1,1,1,1,1,1	() -> a(n - 1).*(a(n -  8)).+(a(n - 4).*(a(n - 5))).*(a(n -  9))	0,1, 8,1,  9,1, 8, 4, 5, 9	a(n)=(a(n-(\d+))*a(n-(\d+))+a(n-(\d+))*a(n-(\d+)))/a(n-(\d+))
A268218	lambdan	0	n -> RU(1, n-3, k -> new Q(Z.ONE, FA(k))).*(FA(n))./(6)  .num()
A268219	lambdan	0	n -> RU(1, n-4, k -> new Q(Z.ONE, FA(k))).*(FA(n))./(24) .num()
A268220	lambdan	0	n -> RU(1, n-5, k -> new Q(Z.ONE, FA(k))).*(FA(n))./(120).num()
A268227	filter	0	new A004159()	(k, v) -> (k & 1) == 0
A268382	partsum	0	A268411		Partial sums of A268411; the least monotonic left inverse of â¬268415.	nonn	0..16384	nyi	_Antti Karttunen_
A268383	simtraf	0	new A268382()	(n, v) -> ZV(n).-(v)
A268717	dirtraf	0	new A003188()	new PrependSequence(0, new A066194(), 0)	= A003188(1+A006068(n-1)).
A268723	dirtraf	0	new A003188()	new SimpleTransformSequence(0, new A006068(), v -> v.square())	, where A003188 is binary Gray code and A006068 is its inverse.
A268726	multrafd	0	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A006068()	new A007814()	a(n)=Annn((\d+)+Annn(n))
A268727	multrafd	0	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A006068()	new A001511()	a(n)=Annn((\d+)+Annn(n))
A269027	#simtraf	0	a(n) = A268643(A039724(n)) mod 2 = A000035(A268643(A039724(n))). - _Robert Israel_, Feb 28 2016
A269176	#?complem	0	not monotone new A269174()	, Z.ONE	Numbers not present in A269174; indices of zeros in â¬269175.	nonn	1..11672	nyi	_Antti Karttunen_
A269389	filamb	0	1	k -> !Puma.primeZ(k.+(7)).-(Puma.primeZ(k.+(6))).mod(Z.THREE).isZero()	Numbers n for which prime(n+7)-prime(n+6) is not a multiple of three.	nonn	1..10000	nyi	_Antti Karttunen_
A269399	filamb	0	1	k ->  Puma.primeZ(k.+(7)).-(Puma.primeZ(k.+(6))).mod(Z.THREE).isZero()	Numbers n for which prime(n+7)-prime(n+6) is a multiple of three.	nonn	1..10000	nyi	_Antti Karttunen_
A269503	simtraf	0	new A138148().skip(1)	v -> JF(v).largestPrimeFactor()	Largest prime factor
A269860	filtpos	0	1	new A048673()	(k, v) ->  v.and(Z.ONE).equals(ZV(k & 1))	Numbers n such that n and A048673(n) are of the same parity.	nonn	1..10000	nyi	_Antti Karttunen_
A269861	filtpos	0	1	new A048673()	(k, v) -> !v.and(Z.ONE).equals(ZV(k & 1))	Numbers n such that n and A048673(n) are of opposite parity.	nonn	1..10000	nyi	_Antti Karttunen_
A269938	rowsum	0	new A268434()
A270189	filamb	0	1	k -> Puma.primeZ(k.+(1)).-(Puma.primeZ(k)).mod(Z.THREE).isZero()	Numbers n for which (prime(n+1)-prime(n)) is not a multiple of three.	nonn	1..10000	nyi	_Antti Karttunen_
A270190	filamb	0	1	k -> Puma.primeZ(k.+(1)).-(Puma.primeZ(k)).mod(Z.THREE).equals(Z.ZERO)	Numbers n for which prime(n+1)-prime(n) is a multiple of three.	nonn	1..10000	nyi	_Antti Karttunen_
A270191	filamb	0	1	k -> Puma.primeZ(k.+(1)).-(Puma.primeZ(k)).mod(Z.THREE).equals(Z.ONE)	Numbers n for which (prime(n+1)-prime(n)) mod 3 = 1.	nonn	1..10000	nyi	_Antti Karttunen_
A270192	filamb	0	1	k -> Puma.primeZ(k.+(1)).-(Puma.primeZ(k)).mod(Z.THREE).equals(Z.TWO)	Numbers n for which (prime(n+1)-prime(n)) mod 3 = 2.	nonn	1..10000	nyi	_Antti Karttunen_
A270383	multraf	0	(self, n) -> self.s(0).+(2)	"1"	new A067274()	v -> v.+(2)	for n >= 1.
A270430	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n such that A048673(n) and A064216(n) are of the same parity.	nonn	1..17000	nyi	_Antti Karttunen_
A270431	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n such that A048673(n) and A064216(n) are of opposite parity.	nonn	1..17000	nyi	_Antti Karttunen_
A270436	muldirs	0	(p, e) -> p.^(SEQ.a(e))	"1"	new A065621()	Multiplicative with a(p^e) = p^A065621(e).
A270439	altsum	1	new A000037()	"+-"	Alternating sum of nonsquares (A000037)
A270541	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A053319().skip(2), new A053319()	a(n)=Annn(n+(\d+))-Annn(n)
A270804	prepend	0	new FilterPositionSequence(0, 0, new A270803(), Z.ONE)	0	for positions of 1s
A270813	diffs	0	new A003022()	First differences of A003022.
A270822	holos	0	[[0],[384,-512,128],[0],[-144,224,-80],[0],[12,-28,16],[0],[0,1,-1]]	1,2,10	0	0
A271314	simtraf	3	new A001045().skip(3)	v -> LPF(v)	the n - th Jacobsthal number, A001045(n)
A271392	filnum	0	0	n -> FM(n, 3).*(3).+(1).isProbablePrime()	Integers k such that 3*k!!! + 1 is
A271396	filnum	0	0	n -> FM(n, 3).*(3).-(1).isProbablePrime()	Integers k such that 3*k!!! - 1 is
A271441	#nyi	0		a(1) = 2; if gpf(a(n - 1)) <= n - 1 then a(n) = a(n - 1)  +  a(gpf(a(n - 1))), else a(n) = a(n - 1)  +  1, where gpf(m) is the Largest prime factor of m
A271634	filtpos	1	1	new A027760()	v -> v.equals(ZV(      510))	Numbers n su
A271635	filtpos	1	1	new A027760()	v -> v.equals(ZV(      138))	Numbers n su
A271710	arrlamb	0	0	0	-1	(n, k)-> Z2(n).xor(Z2(k))	bitxor(2^n,2^k);
A271825	arrlamb	1	1	1	-1	(n, k) -> (n == k) ? Z.ONE : Z_1(n - k - 1).*(k).*(BI(2*n - 3*k - 1, n - k - 1))./(n - k)
A271831	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-13)).+(self.a(n- 7).^(2))./(self.a(n-14))	"1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1"	a(13) = 1; for n>=14, a(n) = (a(n-1)*a(n-13)+a(n- 7)^2)/a(n-14)
A271835	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-11)).+(self.a(n- 6).^(2))./(self.a(n-12))	"1, 1,1,1,1,1, 1,1,1,1,1, 1"	a(11) = 1; for n>=12, a(n) = (a(n-1)*a(n-11)+a(n- 6)^2)/a(n-12)
A271837	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-15)).+(self.a(n- 8).^(2))./(self.a(n-16))	"1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1"	a(15) = 1; for n>=16, a(n) = (a(n-1)*a(n-15)+a(n- 8)^2)/a(n-16)
A271838	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-17)).+(self.a(n- 9).^(2))./(self.a(n-18))	"1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1"	a(17) = 1; for n>=18, a(n) = (a(n-1)*a(n-17)+a(n- 9)^2)/a(n-18)
A271839	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-19)).+(self.a(n-10).^(2))./(self.a(n-20))	"1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1"	a(19) = 1; for n>=20, a(n) = (a(n-1)*a(n-19)+a(n-10)^2)/a(n-20)
A271949	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-10)).+(self.a(n- 5).*(self.a(n- 6)))./(self.a(n-11))	"1, 1,1,1,1,1, 1,1,1,1,1"	a(10) = 1; for n>=11, a(n) = (a(n-1)*a(n-10)+a(n- 5)*a(n- 6))/a(n-11)
A271952	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-14)).+(self.a(n- 7).*(self.a(n- 8)))./(self.a(n-15))	"1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1"	a(14) = 1; for n>=15, a(n) = (a(n-1)*a(n-14)+a(n- 7)*a(n- 8))/a(n-15)
A271954	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-16)).+(self.a(n- 8).*(self.a(n- 9)))./(self.a(n-17))	"1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1"	a(16) = 1; for n>=17, a(n) = (a(n-1)*a(n-16)+a(n- 8)*a(n- 9))/a(n-17)
A271955	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-18)).+(self.a(n- 9).*(self.a(n-10)))./(self.a(n-19))	"1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1"	a(18) = 1; for n>=19, a(n) = (a(n-1)*a(n-18)+a(n- 9)*a(n-10))/a(n-19)
A272038	multrar	0	(self, n) -> self.a(n-1).*(self.a(n-20)).+(self.a(n-10).*(self.a(n-11)))./(self.a(n-21))	"1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1"	a(20) = 1; for n>=21, a(n) = (a(n-1)*a(n-20)+a(n-10)*a(n-11))/a(n-21)
A272138	filtpos	1	1	new A027760()	v -> v.equals(ZV(      798))	Numbers n su
A272139	filtpos	1	1	new A027760()	v -> v.equals(ZV(     1806))	Numbers
A272140	filtpos	1	1	new A027760()	v -> v.equals(ZV(     1590))	Numbers
A272183	filtpos	1	1	new A027760()	v -> v.equals(ZV(      330))	Numbers n su
A272184	filtpos	1	1	new A027760()	v -> v.equals(ZV(      282))	Numbers n su
A272185	filtpos	1	1	new A027760()	v -> v.equals(ZV(      870))	Numbers n su
A272186	filtpos	1	1	new A027760()	v -> v.equals(ZV(      690))	Numbers n su
A272369	filtpos	1	1	new A027760()	v -> v.equals(ZV(     1410))	Numbers
A272383	filtpos	1	1	new A027760()	v -> v.equals(ZV(     3318))	Numbers
A272605	#nyi	0		a(1) = 1, for n>=1 a(n) is the largest prime factor of A002182(n)
A272617	multraf	1	(self, n) -> new Z(self.s(0).toString() + self.s(1).toString())	""	new A000422(), new A007908()	=Annn(n)concatenatedwithAnnn(n)
A272692	diffs	0	new A057699()	First differences of A057699.
A272697	filter	0	new A000079()	v -> v.toString().matches("[02468]*[13579][02468]*")	Powers of 2 with exactly one odd decimal digit
A272698	filter	0	new A000079()	v -> v.toString().matches("[13579]*[02468][13579]*")	Powers of 2 with exactly one even decimal digit
A272760	simtraf	0	new A065880()	(n, v) -> v./(n)	.  
A272772	multrafd	1	(self, n) -> SEQ.a(self.s(0).-(2))	""	new A002997()	new A001222()	a(n)=Annn(Annn(n)-(\d+))
A272918	lambdan	0	n -> Functions.DIGIT_SORT_ASCENDING.z(FI(n))	a(n) = A004185(A000045(n)). - _Michel Marcus_, May 17 2016
A273003	simtraf	0	new A000045()	v -> Functions.DIGIT_SORT_DESCENDING.z(v)	a(n) = A004186(A000045(n)). - _Michel Marcus_, May 15 2016
A273019	filter	0	new A273020()	(k, v) -> (k & 1) == 1
A273045	filter	0	new A000045()	v -> ZUtils.isNondecreasingDigits(v)	
A273049	filter	0	new A002385()	v -> v.toString().matches("[^0]+0[^0]*0[^0]*0[^0]*")	Palindromic primes with exactly three nonzero digits.
A273889	lambdan	1	n -> FD(4*n-3).+(FD(4*n-2))./(4*n-1)
A273983	lambdan	1	n -> FD(4*n).-(FD(4*n-1))./(4*n+1)
A274045	filnum	1	0	n -> ZV(n).IPP() && Functions.NEXT_PRIME.z(n).-(n).equals(ZV(72))			isprime(n)&&nextprime(n+1)-n==72
A274089	simtraf	1	new A057716().skip(1)	v -> v./(2)	a(n)=floor(Annn(n)/(\d+))	2
A274117	lambdan	0	n -> FM(6*n - 5, 3).+(FM(6*n - 4, 3))./(6*n-3)
A274263	multraf	1	(self, n) -> self.s(0)./(self.s(1))	"2,1"	new A001223().skip(1), PREVIOUS	a(n)=floor(Annn(n+(\d+))/Annn(n))	1
A274505	filter	1	new A000040().skip(2)	p -> p.*( 3).-(10).IPP() && p.*(3).+(10).IPP()	[(\d+)#-(\d+)]&&PrimeQ[(\d+)#+(\d+)]&]	400, 3,10,3,10
A274515	dirtraf	0	new A002487()	new SimpleTransformSequence(1, new A065361(), (n, v) -> v.+(1))	A002487(A065361(n) + 1).
A274783	holos	0	[[0],[1701,-6075,8397,-5841,2178,-416,32],[-252909,956379,-1423627,1082476,-447144,95680,-8320],[2025,-9117,16567,-15366,7628,-1920,192],[-297,1725,-4185,5356,-3496,1088,-128],[0,0,0,-385,514,-224,32]]	1,1,1,25,121	0	0
A274784	holos	0	[[0],[1080,-4158,6111,-4468,1734,-342,27],[65016,-263190,414153,-329837,141690,-31356,2808],[-25584,118860,-218646,204699,-103185,26622,-2754],[-192,1176,-3006,4012,-2724,882,-108],[0,0,0,-280,393,-180,27]]	1,1,13,49	0	0
A274787	holos	0	[[0],[125,-75,15,-1],[-3947,2605,-573,42],[12462,-8718,1974,-143],[4190,-6326,2790,-372],[-347,297,171,-143],[-3,25,-57,42],[0,0,0,-1]]	1	0	0
A274788	holos	0	[[0],[-125,75,-15,1],[4307,-2847,627,-46],[-2718,1258,-78,-17],[-50,770,-450,60],[503,-797,333,-17],[3,-27,63,-46],[0,0,0,1]]	1	0	0	
A274887	multraf	0	(self, n) -> self.s(0)	"1"	new A008302()	=Annn(n)foralln>(\d+)	0
A274918	#simtraf	0	Numbers n such that A000035(A024816(n)) = 1 or A000035(A000217(n)-A000203(n)) = 1.
A275001	invtrac	0	new A001248()	0	Expansion of 1/(1 - Sum_{k>=1} x^(prime(k)^2)).
A275257	arrlamb	1	1	1	1	(x, n) -> SU(1, x, k -> ZV(IntegerUtils.gcd(n, k) == 1 ? 1 : 0))	phi(x,n) = Sum_{k=1..x} A054431(k,n).
A275377	dirtrali	0	new A001222()	new A059919().skip(1)	(n, v) -> v.-(1)	0	A001222(A059919(n)) - 1 for n > 0
A275382	dirtrali	0	new A001222()	new A199592().skip(1)	(n, v) -> v.-(1)	1	A001222(A199592(n)) - 1 for n > 0
A275475	filter	1	new A000040()	v -> v.+( 8).IPP() && v.+( 32).IPP() && v.+(128).IPP()	#+{(\d+),(\d+),(\d+)},PrimeQ]&]	4000, 8, 32,128
A275695	tuptraf	0	(n, s) -> s[0].+(s[2]).+(s[4]).*(s[1].+(s[3]).+(s[5]))./(s[6])	"1,1,1,1,1,1,1"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a(n) = ( a(n-1)+a(n-3)+a(n-5) )*( a(n-2)+a(n-4)+a(n-6) ) / a(n-7).
A275698	multrar	0	(self, n) -> self.a(n - 1).*(self.a(n - 1).-(3)).+(3)	"2,5"		a(n) = 3 + a(n-1)*(a(n-1)-3)
A275701	filnum	0	0	n -> JF(n).sigma().-(2*n).equals(ZV(26))	,2,26	Numbers n whose abundance is (\d+): sigma(n)- (\d+)n =(\d+)
A275717	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which A003961(n) > A003961(n-1).	nonn	1..10000	nyi	_Antti Karttunen_
A275718	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which A003961(n) < A003961(n-1).	nonn	1..10000	nyi	_Antti Karttunen_
A275721	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which A003961(n+1) > A003961(n).	nonn	1..16384	nyi	_Antti Karttunen_
A275722	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which A003961(n+1) < A003961(n).	nonn	1..16384	nyi	_Antti Karttunen_
A275732	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	One-based positions of 1-digits in the factorial base representation of n are converted to primes with those indices, then multiplied together.	nonn,base	0..40320	nyi	_Antti Karttunen_
A275873	multrar	0	(self, n) -> { final CR c32 = CR.valueOf(new Q(3, 2)); return c32.*(self.a(n - 1)).floor().+(c32.*(self.a(n - 2)).floor()).+(c32.*(self.a(n - 3)).floor()); }	"1,1,1"	a(n) = floor(r*a(n-1)) + floor(r*a(n-2)) + floor(r*a(n-3)), where r = 3/2, a(0) = a(1) = a(2) = 1.	easy,nonn	0..1000
A275973	#simtraf	0	a(1) = 1, a(2) = 0, for n > 2, a(n) = A030301(n-1) = A000035(A000523(n-1)). - _Antti Karttunen_, Sep 04 2016
A275996	filnum	0	0	n -> JF(n).sigma().-(2*n).equals(ZV(64))	,2,64	Numbers n whose abundance is (\d+): sigma(n)- (\d+)n =(\d+)
A276001	filtpos	0	0	new A060502()	v -> v.compareTo(Z.ONE) <= 0	Numbers n for which A060502(n) <= 1;
A276002	filtpos	0	0	new A060502()	v -> v.equals(Z.TWO)	Numbers n for which A060502(n) = 2;
A276003	filtpos	0	0	new A060502()	v -> v.equals(Z.THREE)	Numbers n for which A060502(n) = 3;
A276038	filnum	1	0	n -> { final long prod = ZUtils.digitProduct(n); if (prod == 1 || prod == 6) { return true; } else { final Z base = ZV(prod).isPower(); return base != null && base.equals(Z.SIX); }}	Numbers n such that product of digits of n is a power of 6.	nonn,base	1..11690
A276078	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n in whose prime factorization no exponent of any prime(k) exceeds k.	nonn	1..10000	nyi	_Antti Karttunen_
A276130	tuptraf	0	(n, s) -> s[0].+(s[2]).*(s[1].+(s[3]))./(s[4])	"1,1,1,1,1"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a(n) = ( a(n-1) +a(n-3) )*( a(n-2)+a(n-4) ) / a(n-5)	a(n)=(9-3*(-1)^n)/2*a(n-1)*a(n-3)-a(n-2)-a(n-4)
A276151	multraf	1	(self, n) -> ZV(n).-(self.s(0))	""	new A053589()	n - new A053589()
A276175	multrar	0	(self, n) -> self.a(n - 1).+(1).*(self.a(n - 2).+(1)).*(self.a(n - 3).+(1))./(self.a(n - 4))	"1,1,1,1,8"	RecurrenceTable[{a[n] == (a[n - 1] + 1) (a[n - 2] + 1) (a[n - 3] + 1)/a[n - 4]
A276274	lambdan	0	n -> ZV(2*n+1).^(2*(2*n+1)*(2*n+1))
A276485	lambdan	1	n -> RU(1, n, k -> new Q(1, k).^(n)).num()
A276487	lambdan	1	n -> RU(1, n, k -> new Q(1, k).^(n)).den()
A276488	filtpos	0	1	new A003714().skip()	(n, v) -> v.mod(n) == 0	Numbers n that divide Annnnnn(n)
A276532	tuptraf	0	(n, s) -> s[0].*(s[5]).+(s[1].*(s[2]).*(s[3]).*(s[4]))./(s[6])	"1,1,1,1,1,1,1"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	(a(n-1) * a(n-6) + a(n-2) * a(n-3) * a(n-4) * a(n-5)) / a(n-7), with a(0) = a(1) = a(2) = a(3) = a(4) = a(5) = a(6) = 1
A276534	tuptraf	0	(n, s) -> s[0].*(s[3]).*(s[1].*(s[2]).+(1))./(s[4])	"1,1,1,1,1"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a(n-1) * a(n-4) * (a(n-2) * a(n-3) + 1) / a(n-5), with a(0) = a(1) = a(2) = a(3) = a(4) = 1
A276535	tuptraf	0	(n, s) -> s[0].*(s[5]).*(s[1].*(s[4]).*(s[2].*(s[3]).+(1)).+(1))./(s[6])	"1,1,1,1,1,1,1"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a(n-1) * a(n-6) * (a(n-2) * a(n-5) * (a(n-3) * a(n-4) + 1) + 1) / a(n-7), with a(0) = a(1) = a(2) = a(3) = a(4) = a(5) = a(6) = 1
A276577	simtraf	1	new A255415()	v -> v.modZ(11)	a(n)=Annn(n)mod(\d+)	11	A255415
A276651	lambdan	0	n -> RP(n, p -> new Q(ZV(p), Z.TEN.pow(String.valueOf(p).length()))).num()	a(n) = numerator   of Sum_{p|n} 0.d where p runs through the prime divisors of n
A276652	lambdan	0	n -> RP(n, p -> new Q(ZV(p), Z.TEN.pow(String.valueOf(p).length()))).den()	a(n) = denominator of Sum_{p|n} 0.d where p runs through the prime divisors of n
A276653	lambdan	0	n -> RP(n, p -> new Q(ZV(p), Z.TEN.pow(String.valueOf(p).length()))).floor()	a(n) = floor(Sum_{p|n} 0.p) where p runs through the prime divisors of n>1
A276736	lambdan	1	n -> RD(n, d -> new Q(Functions.SIGMA0.z(d), d)).num()
A276737	lambdan	1	n -> RD(n, d -> new Q(Functions.SIGMA0.z(d), d)).den()
A276827	#nyi	0		Primes p such that the Largest prime factor of 3*p + 1 is at most 5
A277006	multrafd	0	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A003714()	new A005940()	a(n)=Annn((\d+)+Annn(n))
A277093	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) > 0 && CV(k + 2).sin().compareTo(CR.ZERO) > 0
A277094	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) > 0 && CV(k + 2).sin().compareTo(CR.ZERO) < 0
A277095	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) < 0 && CV(k + 2).sin().compareTo(CR.ZERO) > 0
A277096	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) < 0 && CV(k + 2).sin().compareTo(CR.ZERO) < 0
A277127	lambdan	1	n -> ZV(n).-(Functions.CARMICHAEL_LAMBDA.z(n))	a(n) = n - lambda(n), where lambda(n) = A002322(n).
A277136	filnum	1	1	k -> CV(k).cos().compareTo(CR.ZERO) > 0 && CV(k + 2).cos().compareTo(CR.ZERO) > 0
A277137	filnum	1	1	k -> CV(k).cos().compareTo(CR.ZERO) > 0 && CV(k + 2).cos().compareTo(CR.ZERO) < 0
A277138	filnum	1	1	k -> CV(k).cos().compareTo(CR.ZERO) < 0 && CV(k + 2).cos().compareTo(CR.ZERO) > 0
A277139	filnum	1	1	k -> CV(k).cos().compareTo(CR.ZERO) < 0 && CV(k + 2).cos().compareTo(CR.ZERO) < 0
A277187	filtpos	1	1	new A001158()	(k, v) -> v.mod(k) == 1	Numbers k such that Annnnnn(k)==(\d+)(mod k)
A277191	#simtraf	0	a(n) = Sum_{i=n^2 .. ((n+1)^2)-1} A000035(A002828(i)).
A277192	#simtraf	0	a(n) = Sum_{i=n^2 .. ((n+1)^2)-1} (1-A000035(A002828(i))).
A277267	simtraf	0	new A279521()	(n, v) -> ZV(n).-(1).*(v)
A277323	filter	0	new A260443()	(n, v) -> (n & 1) == 0	Even bisection of A260443 (the odd terms): a(n) = A260443(2*n).	nonn	0..1024	nyi	_Antti Karttunen_
A277324	multraf	0	(self, n) -> self.s(0).*(self.s(1))	"2"	new A260443().skip(1), PREVIOUS	a(0) = 2; for n >= 1, a(n) = A260443(n) * A260443(n+1).
A277327	tuptraf	0	(n, s) -> ZV(JF(s[0].gcd(s[1])).omega())	""	new A260443(), PREVIOUS	Number of distinct primes dividing gcd(A260443(n), A260443(n+1))	a(n) = A001221(â¬277198(n)).
A277359	holos	0	[[0],[-72,132,-80,16],[-56,58,-4,-8],[1,-10,10,1],[0,-1,-1]]	1,2,7	0	0	-a(n)*(n*(n+1)) +   ((n^3+10*n^2-10*n+1)*a(n-1)-(2*(4*n^3+2*n^2-29*n+28))*a(n-2)+(4*(n-2))*(2*n-3)^2*a(n-3))
A277649	recpos	0	new A066400()	, 0
A277702	recpos	0	new A260443()	, 0		Positions of records in A260443.	nonn	1..150	nyi	_Antti Karttunen_
A277703	#nyi	0	Record values in A260443.	nonn	1..55	nyi	_Antti Karttunen_
A277802	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A004709()	new A048798()	a(n)=Annn(Annn(n))		D048798,A004709
A277823	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A065621()	new A048724()	a(n)=Annn(Annn(n))
A278053	filter	1	new A153798()	PRIME	= A000043 - 2 where A000043 = Mersenne expone
A278100	lambdir	1	n -> SEQ.a(n*n)	new A013928()	a(n)=Annn(n^(\d+))	2	D013928
A278544	dirtraf	0	new A003415()	new A260443()	Arithmetic derivative of the prime-factorization representation of the n-th Stern polynomial: a(n) = A003415(A260443(n)).
A278559	lambdan	0	n -> PT(n*25 +24)	a(n)= Annnnnn((\d+)*n +(\d+))	
A278929	invtrac	0	new A030078()	0	Expansion of 1/(1 - Sum_{k>=1} x^(prime(k)^3)).
A278963	lambdan	0	n -> SU(1, n, k -> BI(n, k).mod(ZV(n).gcd(ZV(k))).isZero() ? Z.ONE : Z.ZERO)
A279045	lambdan	0	n -> new Q(3, 4).^(n-2).*(Z.TWO.pow(BI(n, 2)).*(BI(n, 2))).num()
A279064	filtpos	0	0	new A024815()	(k, v) -> v.and(Z.ONE).equals(Z.ZERO) || ZV(k*(k + 1)/2).-(JF(k).sigma()).and(Z.ONE).equals(Z.ZERO)	A000035(A024816(n)) = 0 or A000035(A000217(n)-A000203(n)) = 0.
A279237	#nyi	0		a(n) = 1*k_1 + 10*k_2 + 100*k_3 + ... + 10^N*k_N, where k_i is the exponent of prime(i) in the factorization of the n - th composite number C_n, k_i=0 if prime(i) is not a factor in C_n. Also, N is the index of the largest prime factor of C_n, so that C_n = Product_{i=1..N} prime(i)^k_i
A279495	moetrafi	1	new A023533()	, 0		
A279497	lambdan	1	n -> SD(n, d -> ZV(ZUtils.isPolygonal(ZV(d), 5) ? 1 : 0))	Number of pentagonal numbers dividing n.
A279888	lambdan	0	n -> SU(1,n-1, k -> JF(k).sigma(3).*(JF(n - k).sigma(5)))
A279893	tuptraf	0	(n, s) -> s[0].*(57183).+(s[1].*(20500))	""	new A282047(), new A282328()	a(n) = 57183* A282047(n) + 20500 *A282328(n). - _Seiichi Manyama_, Feb 12 2017
A279904	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A058781()	new A000040()	a(n)=Annn(Annn(n))		D000040,A058781
A279917	lambdan	0	n -> SU(1,n-1, k -> JF(k).sigma(5).*(JF(n - k).sigma(7)))
A280194	parmof2	0	A076739	new A005117()	Expansion of 1/(1 - Sum_{k>=1} mu(k)^2*x^k), where mu(k) is the Moebius function (A008683).
A280195	invtrac	0	new A246655()	0	Expansion of 1/(1 - Sum_{k>=2} floor(1/omega(k))*x^k), where omega(k) is the number of distinct prime factors (A001221).
A280197	parmof2	0	A076739	new A005117().skip(1)	Expansion of 1/(1 - Sum_{k>=2} mu(k)^2*x^k), where mu(k) is the Moebius function (A008683).
A280198	parmof2	0	A076739	new A056911()	Expansion of 1/(1 - Sum_{k>=1} mu(2*k-1)^2*x^(2*k-1)), where mu() is the Moebius function (A008683).
A280200	invtrac	0	new A061345().skip(1)	0	Expansion of 1/(1 - Sum_{k>=2} floor(1/omega(2*k-1))*x^(2*k-1)), where omega() is the number of distinct prime factors (A001221).
A280210	ordsup	0	new A008966().skip(1)	3	0,0,0
A280226	simtraf	1	new A302391()	(n, v) -> ZV(n).-(v)
A280238	parmof2	0	A076739	new A001358()	Expansion of 1/(1 - Sum_{k>=2} floor(bigomega(k)/2)*floor(2/bigomega(k))*x^k), where bigomega(k) is the number of prime divisors of k counted with multiplicity (A001222).
A280240	parmof2	0	A076739	new A000037()	Expansion of 1/(1 - Sum_{k>=1} x^(k+floor(1/2+sqrt(k)))).
A280252	multraf	1	(self, n) -> self.s(0).*(2*n)	""	new A280226()	2*n * new A280226()
A280254	invtrac	0	new A000041()	0	Expansion of 1/(1 - Sum_{k>=1} x^p(k)), where p(k) is the number of partitions of k (A000041).
A280289	#filtpos	0	0	new A000041()	(k, v) -> v.and(Z.ONE).equals(Z.ONE) && (ZV(n*(n + 1)/2).- JF(k).sigma()).and(Z.ONE).equals(Z.ZERO)	A000035(A000041(n)) = 1 and A000035(A000009(n)) = 0.
A280290	#filtpos	0	0	new A000041()	(k, v) -> v.and(Z.ONE).equals(Z.ZERO) && (ZV(n*(n + 1)/2).- JF(k).sigma()).and(Z.ONE).equals(Z.ZERO)	A000035(A000041(n)) = 0 and A000035(A000009(n)) = 0.
A280352	lambdan	0	n -> SU(1, (IntegerUtils.sqrt(8*n + 1) - 1)/2, k -> BI(n - 1, k*(k + 1)/2 - 1))
A280363	#nyi	0		a(n) = floor(log_p(n)) where p = A020639(n), i.e., the least prime factor of n
A280542	invtrac	0	new A000290().skip(2)	0	Expansion of 1/(1 - Sum_{k>=2} x^(k^2)).
A280544	parmof2	0	A076739	new A002808()	Expansion of 1/(1 - Sum_{k>=2} (1 - floor(2/d(k)))*x^k), where d(k) is the number of divisors (A000005).
A280605	invtrac	0	new A246547()	0	Expansion of 1/(1 - Sum_{p prime, k>=2} x^(p^k)).
A280718	ordsum	0	new A255849().skip()	5
A280797	lambdan	1	n -> { final Z nn = ZV(n).^(n); return nn.-(1).*(nn.+(1))./(n + 1); }	a(n) = (n^n - 1)(n^n + 1)/(n + 1).
A280863	parmof2	0	A076739	new A016754()	Expansion of 1/(1 - Sum_{k>=0} x^((2*k+1)^2)).
A280865	parmof2	0	A076739	new A016755()	Expansion of 1/(1 - Sum_{k>=0} x^((2*k+1)^3)).
A280894	tuptraf	1	(n, s) -> JF(new Z(s[1].toString() + s[0].toString())).largestPrimeFactor()	"1,2"	PREVIOUS,PREVIOUS	a(n) is the largest prime factor of the concatenation of a(n - 2) and a(n - 1), with a(1)=1 and a(2)=2
A281009	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A001227(), new A067742()	a(n) = A001227(n) -   A067742(n).
A281230	multraf	1	(self, n) -> self.s(0)./(2)	"1, 3"	new A001175()	for n >= 3 (half the Pisano period for the Fibonacci sequence)
A281331	simtraf	1	new A001067()	v -> v.abs().equals(Z.ONE) ? Z.ONE : JF(v.abs()).leastPrimeFactor()	enspf	0	|A001067(n)|, or 1 if |A001067(n)| = 1
A281332	simtraf	1	new A001067()	v -> v.abs().equals(Z.ONE) ? Z.ONE : JF(v.abs()).largestPrimeFactor()	enlpf	0	|A001067(n)|, or 1 if |A001067(n)| = 1
A281422	invtrac	0	new A006450()	0	Expansion of 1/(1 - Sum_{k>=1} x^prime(prime(k))).
A281478	central	0	new A241171()	%N A281478 Central coefficients of Joffes central differences of zero (assuming offset 0 and T(n,k) extended to 0 <= k <= n in A241171).
A281489	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A000290()	new A000700()	a(n)=Annn(Annn(n))		D000700,D000290
A281707	filter	1	new A005843().skip(2)	(k, v) -> JF(new A146076().a(v)).phi().equals(new A000593().a(v))	Even integers k such that phi(sum of even divisors of k) = sum of odd divisors of k.						Even integers k such that phi(sum of even divisors of k) = sum of odd divisors of k.
A281856	dirtral	1	new A000010()	new A033949()	(n, v) -> v.shiftRight(2)		A000010(A033949(n))/4	, n >= 1
A281908	lambdan	0	n -> SU(1, n, k -> BI(n, k).modZ(k)).modZ(n)
A281959	mulr	0	(p, e) -> p.^(25*e + 25).-(1)./(p.^(25).-(1))	a(p^e)=(p^((\d+)*e+(\d+))-(\d+))/(p^(\d+)-(\d+))	25,25,1,25,1	
A281979	multraf	1	(self, n) -> self.s(0).-(self.s(1))./(657931)	""	new A281959(), new A037947()	)/657931
A282011	arrlamb0	0	(n, k) -> SU(0, (n + 1)/4, j -> BI(((n & 1) == 0) ? n/2 : n/2 + 1, 2*j).*(BI(n/2, k - 2*j)))	a(n, k)=sum(j=0, floor((n+1)/4), binomial(ceil(n/2), 2*j)*binomial(floor(n/2), k-2*j));
A282062	ordsup	0	new A010055().skip(1)	2	0,0	Number of ways to write n as an ordered sum of 4 prime powers (including 1).	nonn
A282064	ordsup	0	new A010055().skip(1)	3	0,0,0	Number of ways to write n as an ordered sum of 4 prime powers (including 1).	nonn
A282349	ordsum	0	new A256432().skip()	7
A282356	tuptraf	0	(n, s) -> s[0].*(392931).+(s[1].*(265000))	""	new A282048(), new A282357()	a(n) = 392931*A282048(n) + 265000*A282357(n).
A282499	ordsup	0	new A075802().skip()	3	0,0,0
A282500	parmof2	0	A076739	new A001597()	Expansion of 1/(1 - Sum_{k = i^j, i>=1, j>=2} x^k).
A282502	parmof2	0	A076739	new A005448()	Expansion of 1/(1 - Sum_{k>=0} x^(3*k*(k+1)/2+1)).
A282504	parmof2	0	A076739	new A001844()	Expansion of 1/(1 - Sum_{k>=0} x^(2*k*(k+1)+1)).
A282538	#nyi	0		Odd integers n with the property that the largest prime factor of n^2 + 4 is less than n
A282570	ordsup	0	new A354927().skip()	2	0,0
A282706	simtraf	0	new A020549()	v -> SPF(v)	(n) = (n!)^2  +  1
A282773	filtpos	1	1	new A027760()	v -> v.equals(ZV(      498))	Numbers n su
A282906	invtrac	0	new A007504()	0	Expansion of 1/(1 - Sum_{j>=1} x^(Sum_{i=1..j} prime(i))).
A282919	lambdan	0	n -> PT(n*49 +47)	a(n)= Annnnnn((\d+)*n +(\d+))	
A282942	multrar	0	(self, n) -> SU(1, n, k -> Sigma(7*k).*(self.a(n - k)))./(-n)	"1"		a(n) = -(1/n) *Sum_{k=1..n} sigma(7*k).*(self.a(n - k)).
A283148	#nyi	0		Irregular triangle read by rows where the n - th row list the integers x such that the quotient x/(least prime factor of x)^2 is equal to n, for n>=2
A283153	lambdan	0	n -> RU(1, 4*n, p -> new Q(BI(p, 4).^(n), FA(p)).*(RU(0, 4*n - p, k -> new Q(Z_1(k), FA(k))))).*(FA(4).^(n)).num()
A283154	lambdan	0	n -> RU(1, 5*n, p -> new Q(BI(p, 5).^(n), FA(p)).*(RU(0, 5*n - p, k -> new Q(Z_1(k), FA(k))))).*(FA(5).^(n)).num()
A283155	lambdan	0	n -> RU(1, 6*n, p -> new Q(BI(p, 6).^(n), FA(p)).*(RU(0, 6*n - p, k -> new Q(Z_1(k), FA(k))))).*(FA(6).^(n)).num()
A283163	multrar	0	(self, n) -> SU(1, n, k -> Sigma(4*k).*(self.a(n - k)))./(-n)	"1"		a(n) = -(1/n) *Sum_{k=1..n} sigma(4*k).*(self.a(n - k)).
A283164	multrar	0	(self, n) -> SU(1, n, k -> Sigma(6*k).*(self.a(n - k)))./(-n)	"1"		a(n) = -(1/n) *Sum_{k=1..n} sigma(6*k).*(self.a(n - k)).
A283168	multrar	0	(self, n) -> SU(1, n, k -> Sigma(8*k).*(self.a(n - k)))./(-n)	"1"		a(n) = -(1/n) *Sum_{k=1..n} sigma(8*k).*(self.a(n - k)).
A283169	multrar	0	(self, n) -> SU(1, n, k -> Sigma(9*k).*(self.a(n - k)))./(-n)	"1"		a(n) = -(1/n) *Sum_{k=1..n} sigma(9*k).*(self.a(n - k)).
A283311	simtraf	0	new A054377().skip(1)	v -> v.-(  6)./( 36)	a(n)= (Annnnnn(n)- (\d+))/(\d+)	
A283331	multrar	1	(self, n)  -> n <= 7 ? Z.ONE : RU(1, 3, j -> new Q(self.a(n - 2*j + 1).*(self.a(n - 2*j)), self.a(n - 7))).num()	""		with a(1),...,a(K)=1, where K=7.
A283332	multrar	1	(self, n)  -> n <= 9 ? Z.ONE : RU(1, 4, j -> new Q(self.a(n - 2*j + 1).*(self.a(n - 2*j)), self.a(n - 9))).num()	""		with a(1),...,a(K)=1, where K=9.
A283461	#nyi	0		Second - largest prime factor of 2^n  -  1, if composite, or 1 otherwise
A283474	multraf	0	(self, n) -> self.a(n - 1).+(self.a(n - self.s(0).intValueExact()))	"0,1"	new A002487()	a(0) = 0, a(1) = 1, for n > 1, a(n) = a(n-1) + a(n-A002487(n)).
A283762	ordsup	0	new A080339().skip()	3	0,0,0
A283819	multrar	1	(self, n) -> n < 6 ? Z.ONE : SU(1, 3, j -> self.a(n - j).*(self.a(n - j - 1))).+(1)./(self.a(n - 5))	""
A283820	multrar	1	(self, n) -> n < 8 ? Z.ONE : SU(1, 5, j -> self.a(n - j).*(self.a(n - j - 1))).+(1)./(self.a(n - 7))	""
A283821	multrar	1	(self, n) -> n <10 ? Z.ONE : SU(1, 7, j -> self.a(n - j).*(self.a(n - j - 1))).+(1)./(self.a(n - 9))	""
A283844	simtraf	0	new FilterSequence(0, new A063776(), (k, v) -> (k & 1) == 0)	(n, v) -> v.+(1)	a(n) = A063776(2*n) + 1.
A283867	filnum	1	0	n -> ZV(30*n*n - 1).IPP() && ZV(30*n*n + 1).IPP()
A283918	multrar	1	(self, n) -> n < 7 ? Z.ONE : SU(1, 4, j -> self.a(n - j).*(self.a(n - j - 1))).+(1)./(self.a(n - 6))	""
A283920	multrar	1	(self, n) -> n < 9 ? Z.ONE : SU(1, 6, j -> self.a(n - j).*(self.a(n - j - 1))).+(1)./(self.a(n - 8))	""
A283968	multrar	0	(self, n) -> CR.THREE.+(CR.FIVE.sqrt()).*(n)./(2).floor().+(self.a(n - 1)).+(1)	"1"	a(n) = a(n-1) + 1 + floor(n*(3 + sqrt(5))/2), a(0) = 1.	nonn,easy	0..1000
A283972	multraf	1	(self, n) -> ZV(n).-(self.s(0))	""	new A227349()	n - new A227349()
A283975	bisect	0	A264977	Odd bisection of Annnnnn
A283986	multraf	1	(self, n) -> self.s(1).or(self.s(0))	""	new A002487(), PREVIOUS	a(n) = A002487(n-1) OR A002487(n), where OR is bitwise-or (A003986).
A283987	multraf	1	(self, n) -> self.s(1).xor(self.s(0))	""	new A002487(), PREVIOUS	a(n) = A002487(n-1) XOR A002487(n), where XOR is bitwise-xor (A003987).
A283988	multraf	1	(self, n) -> self.s(1).and(self.s(0))	""	new A002487(), PREVIOUS	a(n) = A002487(n-1) AND A002487(n), where AND is bitwise-and (A004198).
A283996	simtraf	0	new A005187()	(n, v) -> ZV(n).or(v)	a(n) = n OR A005187(fl
A284254	#nyi	0		Largest divisor of n such that all its prime factors are greater than the square of Least prime factor of n, a(1) = 1
A284255	#nyi	0		Largest divisor of n such that all its prime factors are less than the square of the Least prime factor of n, a(1) = 1
A284256	#nyi	0		a(n) = number of prime factors of n that are > the square of Least prime factor of n (counted with multiplicity), a(1) = 0
A284257	#nyi	0		a(n) = number of prime factors of n that are < the square of Least prime factor of n (counted with multiplicity), a(1) = 0
A284258	lambdan	0	n -> SP(n, p -> ZV(p).compareTo(JF(n).leastPrimeFactor().^(2)) > 0 ? Z.ONE : Z.ZERO)	a(n) = Sum_{p|n, p prime and > spf(n)^2} sign(p), where spf(n) (A020639) gives the smallest prime factor of n, and sign(p) = A057427(p) = 1 for all p
A284259	lambdan	0	n -> SP(n, p -> ZV(p).compareTo(JF(n).leastPrimeFactor().^(2)) < 0 ? Z.ONE : Z.ZERO)	a(n) = Sum_{p|n, p prime and < spf(n)^2} sign(p), where spf(n) (A020639) gives the smallest prime factor of n, and sign(p) = A057427(p) = 1 for all p
A284265	bisect	0	A284264	Odd bisection of Annnnnn
A284272	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A002487(), new A284271()
A284290	filter	0	new A000040()	v -> v.toString().indexOf('4') >= 0	Primes containing a digit (\d+)
A284291	filter	0	new A000040()	v -> v.toString().indexOf('6') >= 0	Primes containing a digit (\d+)
A284292	filter	0	new A000040()	v -> v.toString().indexOf('8') >= 0	Primes containing a digit (\d+)
A284379	lambdan	1	n -> new Z(Long.toBinaryString(n + 1).substring(1).replace('1', '5').replace('0', '3'))
A284552	simtraf	1	new A065621()	(n, v) -> v.modZ(n)	a(n)=Annn(n)modn		A065621
A284566	bisect	0	A284556	Odd bisection of Annnnnn
A284573	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd bisection of A278243: a(n) = A046523(â¬277324(n)).	nonn	0..1024	nyi	_Antti Karttunen_
A284881	diffs	0	new A284878()	Difference sequence of Annnnnn
A284947	tablamb	0	3	n -> new Integer[] { 0, n }	(n, k) -> k < 3 ? Z.ZERO : BI(n, k).*(PR(0, k - 3 - 1, j -> ZV(j + 3)))	
A285103	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A068052()	new A000120()	a(n)=Annn(Annn(n))
A285116	trilamb0	0	(n, k)-> n == 0 || n == k ? ZV(1): BI(n - 1, k - 1).or (BI(n-1, k))
A285117	trilamb0	0	(n, k)-> n == 0 || n == k ? ZV(1): BI(n - 1, k - 1).xor(BI(n-1, k))
A285118	trilamb0	0	(n, k)-> n == 0 || n == k ? ZV(0): BI(n - 1, k - 1).and(BI(n-1, k))
A285283	#nyi	0		Number of integers x such that the Largest prime factor of x^2  +  1 is at most A002313(n), the n - th prime not congruent to 3 mod 4
A285316	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which A019565(n) > n.	nonn	1..10000	nyi	_Antti Karttunen_
A285336	multraf	1	(self, n) -> new Q(self.s(0), ZV(n)).num()	""	new A065642()	numerator of new A065642()/n
A285337	multraf	1	(self, n) -> new Q(self.s(0), ZV(n)).den()	""	new A065642()	denominator of new A065642()/n
A285550	simtraf	1	new A019544()	v -> v.sqrt()	a(n)=sqrt(Annn(n))		A019544
A285639	simtraf	1	new A117366()	(n, v) -> v.*(n)./(SPF(n))	a(n) = n*A117366(n)/spf(n), where A117366(n) is the Least prime larger than all prime factors of n, and spf is the Least prime factor of n (or 1 if n = 1)
A285768	moetraf	1	new A002275()	, 0	
A285789	filter	1	new A000040()	v -> ZUtils.isPolygonal(v.-(1), 5)	Primes equal to a pentagonal number plus 1.
A285791	filter	1	new A000040()	v -> ZUtils.isPolygonal(v.-(1), 7)	Primes equal to a heptagonal number plus 1.
A285796	ordsum	0	new A280710().skip(1)	2		Number of ways to write n as an ordered sum of two numbers that are the product of an even number of distinct primes (including 1).
A285993	#nyi	0		a(n) >= a(n - 1)*p where p = A117366(a(n - 1)) = A151800(A006530(a(n - 1))) = nextprime(gpf(a(n - 1))), an odd abundant number equal to the product of n consecutive primes. We have strict inequality for n = 9, 18, 31, 46, 67, ..., in which case a(n) = a(n - 1)*p*p'/q, where p' = nextprime(p), q = least prime factor of a(n - 1). This is the case if a(n) is in A007741
A286365	tuptraf	0	(n, s) -> s[0].*(2).+(s[1].testBit(0) ? Z.ONE : Z.ZERO)	""	new A286364(), new A007814()		Compound filter: a(n) = 2*A286364(n) + A000035(A007814(n)).	nonn	1..10000	nyi	_Antti Karttunen_
A286369	tuptraf	0	(n, s) -> s[0].*(2).+(s[1].shiftRight(2))	""	new A286364(), new A072400()		Compound filter: a(n) = 2*A286364(n) + floor(A072400(n)/4).	nonn	1..10000	nyi	_Antti Karttunen_
A286381	#lambdan	0	Compound filter: a(n) = P(A055881(n), â¬278236(n)), where P(n,k) is sequence A000027 used as a pairing function.
A286386	multraf	1	(self, n) -> self.s(0).*(2).+(self.s(1))	""	new A286473(), new A010052().skip(1)
A286387	dirtraf	0	new A002487()	new A000290()	a(n) = A002487(n^2).
A286552	ordtraf	0	new A286622()		(k, v) -> v.compareTo(ZV(k)) < 0	Ordinal transform of A286622, or equally, of A278222.	nonn,base	0..65536	nyi	_Antti Karttunen_
A286554	ordtraf	0	new A286619()		(k, v) -> v.compareTo(ZV(k)) < 0	Ordinal transform of A286619, or equally, of A278219.	nonn,base,look	0..65536	nyi	_Antti Karttunen_
A286569	rgs1	1	new A284019()	 (= A004001(n) - A005185(n)).
A286574	dirtraf	0	new A000523()	new A286575()		 [Log_2 of run-length transform of A001316.]
A286586	dirtraf	0	new A006047()	new A048673()		a(n)= Annnnnn(Annnnnn(n))	
A286589	rgs1	1	new A286588()	.
A286590	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers that are divisible by the product of their factorial base digits (A208575).	nonn,base	1..500	nyi	_Antti Karttunen_
A286604	multraf	1	(self, n) -> ZV(n).mod(self.s(0))	""	new A034968()	n mod new A034968()
A286606	multraf	1	(self, n) -> ZV(n).mod(self.s(0))	""	new A227153()	n mod new A227153()
A286608	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which the binary representation of the primes that divide k (A087207) is less than k.	nonn,base	1..10000	nyi	_Antti Karttunen_
A286609	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which the binary representation of the primes that divide n (A087207) is more than n.	nonn,base	1..10000	nyi	_Antti Karttunen_
A286630	tuptraf	0	(n, s) -> s[0].*(s[1])	"1"	new A000040(), new A002110().skip(1)	a(0) = 1; for n >= 1, a(n) = A000040(n) * A002110(n).
A286633	dirtraf	0	new A006047()	new A254103()	"null"		0				Base-3 {digit+1} product of A254103: a(n) = A006047(A254103(n)).
A286981	#nyi	0		Binomial coefficients binomial(n,k) = UV such that n>=2k and U > V, where gpf(U) <= k, gpf(V) > k (gpf(n)= is the Largest prime factor of n)
A287148	filter	1	new A282971()	(k, v) -> (k & 1) == 1
A287459	filter	1	new A000040()	p -> p.*(15).+(1)./(2).IPP()	[((\d+)#+(\d+))/(\d+)]&]	300,15,1,2
A287609	insect2	0	new A034961()	new A127345()	Intersection
A287729	lambdir	1	n -> { final int b = Integer.highestOneBit(n); final int k = n - b; final int m =IntegerUtils.floorLog2(n); return (m & 1) == 0 ? SEQ.a(b - k) : SEQ.a(k); }	new A002487()	For m >= 0, m even, 0 <= k < 2^m, a(2^m+k) = A002487(2^m-k).
A287823	lambdir	1	n -> { final int b = Integer.highestOneBit(n); final int k = n - b; final int m =IntegerUtils.floorLog2(n); return (m & 1) == 0 ? SEQ.a(b - k) : SEQ.a(k); }	new A287896()	For m >= 0, m even, 0 <= k < 2^m, a(2^m+k) = A287896(2^m-k).  A002487(n)*A001511(n).
A287824	lambdir	1	n -> { final int b = Integer.highestOneBit(n); final int k = n - b; final int m =IntegerUtils.floorLog2(n); return (m & 1) == 0 ? SEQ.a(k) : SEQ.a(b - k); }	new A287896()	For m >= 0, m even, 0 <= k < 2^m, a(2^m+k) = A287896(k).  A287896[0] = 0 is needed.
A288003	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A002487().skip(1), new A288002()
A288493	diffs	0	new A006878()	First differences of A006878 (record new trajectory lengths of Collatz fu
A288659	filnum	0	0	n -> (ZV(n).^(3).toString().length() & 1) == 1	Numbers whose cubes have an odd number of digits.	nonn,base,easy	1..10000	nyi	_Lars Blomberg_
A288775	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A162795(), new A147562()	a(n)=Annn(n)-Annn(n)
A288995	simtraf	0	new A288968()	v -> v.-(2).*(12)	a(n) = 12 * (A288968(n) - 2).	nonn	1..701	nyi	_Seiichi Manyama_
A289336	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).num()	""	new A000203(), new A000010()
A289367	tuptraf	0	(n, s) -> s[0].*(2).-(s[1].*(3))./(288)	""	new A288851(),new A110163()	2*A288851(n) - 3*A110163(n))/288
A289412	lambdan	0	n -> { final FactorSequence fs = JF(n); return new Q(fs.sigma(), fs.phi()).den(); }	a(n) = denominator of (sigma(n) / phi(n)).	nonn,frac	1..10000	nyi	_Jaroslav Krizek_
A289488	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, FD(2*k - 1))).den()	a(n) = denominator of Sum_{k=1..n} 1/(2*k-1)!!.	nonn,frac	1..404	nyi	_Seiichi Manyama_
A289556	filter	0	new A000040()	p -> p.*(5).-(4).isProbablePrime() && p.*(4).-(5).isProbablePrime()	Primes p such that both 5*p - 4 and 4*p - 5 are prime.	nonn	1..51	nyi	_David James Sycamore_
A289585	tuptraf	1	(n, s) -> s[0]./(s[1])	""	new DirectTransformSequence(1, new A000010(), new A020491()), new DirectTransformSequence(1, new A000005(), new A020491())	"null"		1
A289716	simtraf	1	new A219039()	v -> ZV(3).^(v).-(16)	a(n)=(\d+)^Annn(n)-(\d+)	3,16	A219039
A289723	simtraf	1	new A219041()	v -> ZV(3).^(v).-(20)	a(n)=(\d+)^Annn(n)-(\d+)	3,20	A219041
A289724	simtraf	1	new A219043()	v -> ZV(3).^(v).-(22)	a(n)=(\d+)^Annn(n)-(\d+)	3,22	A219043
A289808	simtraf	1	new A219047()	v -> ZV(3).^(v).-(28)	a(n)=(\d+)^Annn(n)-(\d+)	3,28	A219047
A289983	simtraf	1	new A219049()	v -> ZV(3).^(v).-(32)	a(n)=(\d+)^Annn(n)-(\d+)	3,32	A219049
A289984	simtraf	1	new A219051()	v -> ZV(3).^(v).-(34)	a(n)=(\d+)^Annn(n)-(\d+)	3,34	A219051
A290077	dirtraf	0	new A000010()	new A005940()	,1	a(n)= Annnnnn(Annnnnn((\d+)+n))	
A290079	charfunc	0	new A249721()	Characteristic function for A249721: a(n) = 1 if there are either no 1-digits at all in base-3 representation of n, or if there are exactly two 1s next to each other, a(n) = 0 in any other cases.	nonn,base	0..59049	nyi	_Antti Karttunen_
A290184	filtpos	1	1	new A068494()	(k, v) -> v.equals(Functions.CARMICHAEL_LAMBDA.z(k))	Numbers k such that A068494(k) = A002322(k).
A290241	simtraf	1	new A217135()	v -> ZV(3).^(v).-(8)	a(n)=(\d+)^Annn(n)-(\d+)	3,8	A217135
A290243	simtraf	1	new A217347()	v -> ZV(3).^(v).-(10)	a(n)=(\d+)^Annn(n)-(\d+)	3,10	A217347
A290244	simtraf	1	new A219038()	v -> ZV(3).^(v).-(14)	a(n)=(\d+)^Annn(n)-(\d+)	3,14	A219038
A290281	filnum	1	1	k -> Functions.CARMICHAEL_LAMBDA.z(k).equals(ZV(k - 1).mod(Functions.PHI.z(k)))	Numbers k such that (k-1) mod phi(k) = lambda(k),
A290443	tuptraf	0	(n,s) -> s[0].*(s[1])	"1"	new A000108().skip(), new A001006()	a(n) = Catalan(n)*Motzkin(n-1).
A290529	moetraf	1	new A000041().skip(1)	, 0	the shifted partition numbers (A000041), p(n-k).
A290701	multraf	2	(self, n) -> self.s(1).*(2*n).+(self.s(0).*(2*(n - 1)))	""	new A036968(), PREVIOUS	2*n*A036968(n-1) + 2*(n-1)*new A036968()
A290943	ordsum	0	new A080995().skip(1)	3	Number of ways to write n as an ordered sum of 3 generalized pentagonal numbers (A001318).	nonn	0..10000
A291108	multraf	1	(self, n) -> self.s(0).-(1)	"0"	new A067558()	v -> v.-(1)	for n > 1.
A291186	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).num()	""	new A007955(), new A000005()
A291216	filter	0	new A000931().skip(5)	v -> Predicates.SQUARE.is(v)	Common terms of A000931 and A000290.
A291353	lambdan	0	n -> ZV(10).^(44*n).-(1).*(9)./(89)	a(n) = 9*(10^(44*n) - 1)/89
A291577	#nyi	0		a(n) = largest prime factor of a(n - 1), or Least multiple of that factor not yet in the sequence; a(0)=1, a(1)=2
A291585	lambdan	0	n -> RU(1, n, i -> new Q(Z.ONE, ZV(2*i - 1).^(3))).*(FD(2*n - 1).^(3)).num()
A291586	lambdan	0	n -> RU(1, n, i -> new Q(Z.ONE, ZV(2*i - 1).^(4))).*(FD(2*n - 1).^(4)).num()
A291587	lambdan	0	n -> RU(1, n, i -> new Q(Z.ONE, ZV(2*i - 1).^(5))).*(FD(2*n - 1).^(5)).num()
A291673	filter	0	new A000931().skip(5)	v -> Predicates.FIBONACCI.is(v)	Common terms of A000931 and A000045.
A291767	bisect	0	A291761	Odd bisection of Annnnnn
A291768	filter	0	new A291761()	(n, v) -> (n & 1) == 0	Even bisection of A291761.	nonn	1..16385	nyi	_Antti Karttunen_
A291874	multraf	0	(self, n) -> self.s(0).negate()	"1"	new A227310()	-A0	for
A292227	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, ZV(k).^(4).*(4).+(1))).*(2).+(1).num()	Numerators of partial sums of the series 1 + 2*Sum_{k >= 1} 1/(4*k^4 + 1).
A292228	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, ZV(k).^(4).*(4).+(1))).*(2).+(1).den()	xxxerators of partial sums of the series 1 + 2*Sum_{k >= 1} 1/(4*k^4 + 1).
A292240	simtraf	0	new A254103()	(n, v) -> (n == 0) ? Z.ZERO : new Z(v.toString(3).replaceAll("[12]","x").replaceAll("0", "1").replaceAll("x", "0"), 2)	Binary encoding of 0-digits in ternary representation of A254103(n)
A292242	multrafd	0	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A254103()	new A007949()	a(n)=Annn((\d+)+Annn(n))
A292252	multrafd	1	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A048673()	new A007949()	a(n)=Annn((\d+)+Annn(n))
A292262	simtraf	0	new A245612()	v -> Z.valueOf(v.toString(3).replaceAll("[01]*\\Z", "9").replaceAll("[012]", "").length())	Number of trailing 2-digits in ternary representation of A245612(n).	nonn,base	0..16384	nyi	_Antti Karttunen_
A292370	lambdan	0	n -> (n == 0) ? Z.ZERO : new Z(Integer.toString(n, 4).replaceAll("[123]","x").replaceAll("0", "1").replaceAll("x", "0"), 2)	A binary encoding of the zeros in base-4 representation of n.	nonn,base	0..65536	nyi	_Antti Karttunen_
A292371	lambdan	0	n -> new Z(Integer.toString(n, 4).replaceAll("[23]", "0"), 2)	
A292372	lambdan	0	n -> new Z(Integer.toString(n, 4).replaceAll("[13]", "0").replaceAll("[2]", "1"), 2)	A binary encoding of 2-digits in base-4 representation of n.	nonn,base	0..65536	nyi	_Antti Karttunen_
A292373	lambdan	0	n -> new Z(Integer.toString(n, 4).replaceAll("[12]", "0").replaceAll("[3]", "1"), 2)	A binary encoding of 3-digits in base-4 representation of n.	nonn,base	0..65536	nyi	_Antti Karttunen_
A292626	filnum	0	0	n -> JF(n).sigma().-(2*n).equals(ZV(128))	8,2,128	Numbers n whose abundance is (\d+): sigma(n)- (\d+)n =(\d+)
A292751	simtraf	0	new A063019()	(n, v) -> v.*(FA(n))	a(n)= n!*Annnnnn(n)	m	i    
A292773	simtras	1	new A090245().skip(1)	v -> v.*(2).+(1)	, (follows from Harborth, Hilfssatz 3). - _C. Elsholtz_, Oct 04 2021
A292834	#nyi	0		Numbers m, not powers of 2, such that the least prime factor of 2^m  +  1 is congruent to 1 (mod m)
A292918	simtraf	1	new A069879()	v -> v.+(1)	= 2*A071917(n) + 1. (End)
A292930	trilambn	0	1	3	(n, k) -> BI(k, 3).*(FA(n))./(FA(n + 2 - k))
A292998	lambdan	0	n -> RU(3, n + 2, k -> new Q(BI(k, 3), FA(n + 2 - k))).*(FA(n)).num()
A293140	simtraf	0	new A010815()	(n, v) -> FA(n).*(v)
A293215	rgs1	1	new A293214()	, where A293214(n) = Product_{d|n, d<n} A019565(d).
A293229	multrad	0	(self, n) -> self.a(n - 1).+(SEQ.a(4*n + 3)).-(SEQ.a(4*n + 1))	"0"	new A008966()	a(0) = 0; and for n > 0, a(n) = a(n-1) + (A008966(4n+3) - A008966(4n+1)).
A293235	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(n))	""	new A035316(), new A010052()	a(n)=Annn(n)-(Annn(n)*n)
A293300	simtraf	0	new A081362()	(n, v) -> FA(n).*(v)
A293313	lambdan	0	n -> CR.PHI.*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = (1+sqrt(5))/2.
A293314	lambdan	0	n -> CR.PHI.*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = (1+sqrt(5))/2.
A293315	lambdan	0	n -> CR.PHI     .*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + r*2^n), where r = (1+sqrt(5))/2.
A293319	lambdan	0	n -> CR.PHI.+(1).*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = (3+sqrt(5))/2.
A293320	lambdan	0	n -> CR.PHI.+(1).*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = (3+sqrt(5))/2.
A293321	lambdan	0	n -> CR.PHI.+(1).*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + r*2^n), where r = (3+sqrt(5))/2.
A293322	lambdan	0	n -> CR.PHI.-(1).*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = (-1+sqrt(5))/2.
A293323	lambdan	0	n -> CR.PHI.-(1).*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = (-1+sqrt(5))/2.
A293324	lambdan	0	n -> CR.PHI.-(1).*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + r*2^n), where r = (-1+sqrt(5))/2.
A293326	lambdan	0	n -> CR.THREE.sqrt()       .*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + r*2^n), where r = sqrt(3).
A293327	lambdan	0	n -> CV(new Q(1, 3)).sqrt().*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = sqrt(1/3).
A293328	lambdan	0	n -> CV(new Q(1, 3)).sqrt().*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = sqrt(1/3).
A293329	lambdan	0	n -> CV(new Q(1, 3)).sqrt().*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + r*2^n), where r = sqrt(1/3).
A293331	lambdan	0	n -> CR.FIVE.sqrt().*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = sqrt(5).
A293332	lambdan	0	n -> CR.FIVE.sqrt().*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = sqrt(5).
A293333	lambdan	0	n -> CR.FIVE.sqrt().*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + r*2^n), where r = sqrt(5).
A293334	lambdan	0	n -> CV(new Q(1, 5)).sqrt().*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = sqrt(1/5).
A293335	lambdan	0	n -> CV(new Q(1, 5)).sqrt().*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = sqrt(1/5).
A293336	lambdan	0	n -> CV(new Q(1, 5)).sqrt().*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + r*2^n), where r = sqrt(1/5).
A293338	lambdan	0	n -> CR.E.*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + e*2^n).
A293339	lambdan	0	n -> CR.E.inverse().*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = 1/e.
A293340	lambdan	0	n -> CR.E.inverse().*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = 1/e.
A293341	lambdan	0	n -> CR.E.inverse().*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + (1/e)*2^n).
A293352	lambdan	0	n -> CR.GAMMA.*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = Eulers constant (0.577216...).
A293353	lambdan	0	n -> CR.GAMMA.*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = Eulers constant (0.577216...).
A293354	lambdan	0	n -> CR.GAMMA   .*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + r*2^n), where r = Eulers constant (0.577216...).
A293359	lambdan	0	n -> CR.E.square().*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = e^2.
A293360	lambdan	0	n -> CR.E.^(2).*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = e^2.
A293361	lambdan	0	n -> CR.E.square().*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + (e^2)*2^n).
A293362	lambdan	0	n -> CR.TWO.log().*(Z2(n)).floor()	a(n) = floor(r*2^n), where r = log 2.
A293363	lambdan	0	n -> CR.TWO.log().*(Z2(n)).ceil()	a(n) = ceiling(r*2^n), where r = log 2.
A293364	lambdan	0	n -> CR.TWO.log().*(Z2(n)).+(CR.HALF).floor()	a(n) = floor(1/2 + (log 2)*2^n).
A293400	lambdan	0	n -> CR.PHI.*(ZV(n*n)).floor()	a(n) = floor(r*n^2), where r = (1 + sqrt(5))/2.
A293401	lambdan	0	n -> CR.PHI.*(ZV(n*n)).ceil()	a(n) = ceiling(r*n^2), where r = (1 + sqrt(5))/2.
A293402	lambdan	0	n -> CR.PHI.*(ZV(n*n)).+(CR.HALF).floor()	a(n) = floor(1/2 + tau*n^2).
A293403	lambdan	0	n -> CR.PHI.+(1).*(ZV(n*n)).floor()	a(n) = floor(r*n^2), where r = (3 + sqrt(5))/2.
A293404	lambdan	0	n -> CR.PHI.+(1).*(ZV(n*n)).ceil()	a(n) = ceiling(r*n^2), where r = (3 + sqrt(5))/2.
A293405	lambdan	0	n -> CR.PHI.+(1).*(ZV(n*n)).round()	a(n) = round(tau*n^2).
A293407	lambdan	0	n -> CR.PHI.-(1).*(ZV(n*n)).ceil()	a(n) = ceiling(r*n^2), where r = (-1 + sqrt(5))/2.
A293408	lambdan	0	n -> CV(n*n)./(CR.PHI).+(CR.HALF).floor()	a(n) = floor(1/2 + (n^2)/tau).
A293410	lambdan	0	n -> CR.THREE.sqrt().*(ZV(n*n)).ceil()	a(n) = ceiling(r*n^2), where r = sqrt(3).
A293412	lambdan	0	n -> CR.E.*(ZV(n*n)).floor()	a(n) = floor(e*n^2).
A293413	lambdan	0	n -> CR.E.*(n*n).ceil()	a(n) = ceiling(e*n^2).
A293428	multrad	0	(self, n) -> self.a(n - 1).+(SEQ.a(4*n + 3)).+(SEQ.a(4*n + 1)).-(1)	"1"	new A008966()	a(0) = 1; and for n > 0, a(n) = a(n-1) + -1+(A008966(4n+1)+A008966(4n+3)).
A293429	multrad	0	(self, n) -> self.a(n - 1).+(SEQ.a(4*n - 1)).-(SEQ.a(4*n + 1))	"0"	new A008966()	a(0) = 0; and for n > 0, a(n) = a(n-1) + (A008966(4n-1) - A008966(4n+1)).
A293436	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(n))	""	new A005092(), new A010056()	a(n)=Annn(n)-(Annn(n)*n)
A293442	#muldir	1	new A019565()	mSeq.a(e)	a(p^e) = A019565(e).	nonn,mult	1..65537	nyi	_Antti Karttunen_
A293443	#muldir	1	new ()	a(p^e) = A019565(â¬193231(e)).	nonn,mult	1..65537	nyi	_Antti Karttunen_
A293458	lambdan	0	n -> new Q(SU(0, n, k -> FA(k)), SU(0, n, k -> FA(BI(n, k).intValueExact()))).num()
A293459	lambdan	0	n -> new Q(SU(0, n, k -> FA(k)), SU(0, n, k -> FA(BI(n, k).intValueExact()))).den()
A293487	simtraf	0	new A000700()	(n, v) -> FA(n).*(v)
A293899	tuptraf	0	(n, s) -> s[0].-((s[1].modZ(3)))	""	new A002324(), new A010872()
A293978	parmof2	0	A293979	443
A293981	parmof2	0	A293979	209
A294041	tuptraf	0	(n, s) -> s[0].lcm(s[1])	""	new A000312(), new A056040()	a(n)=lcm(Annn(n),Annn(n))
A294056	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A287279().skip(8), new A287278().skip(8)	a(n) = A287279(n) -   A287278(n).
A294057	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A287280().skip(9), new A287279().skip(9)	a(n) = A287280(n) -   A287279(n).
A294058	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A287281().skip(10), new A287280().skip(10)	a(n) = A287281(n) -   A287280(n).
A294269	holos	1	[[0],[-1],[1],[0],[0],[1],[-1]]	1,2,3,5,6,4,7,9,10	0	0
A294277	filnum	0	1	k -> JF(k).omega() < JF(k + 1).omega()	Numbers k such that omega(k) < omega(k+1) (where omega(m) = A001221(m), the number of distinct primes dividing m).
A294278	filnum	0	1	k -> JF(k).omega() > JF(k + 1).omega()	Numbers n such that omega(n) > omega(n+1) (where omega(m) = A001221(m), the number of distinct primes dividing m).
A294512	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, ZV((k + 1)*(3*k + 1)))).den()	partial sums of the reciprocals of octagonal numbers.
A294513	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, ZV((k + 1)*(3*k + 2)))).den()	partial sums of the reciprocals of twice the pentagonal numbers.
A294515	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, ZV(k*(4*k - 3)))).num()	partial sums of the reciprocals of the decagonal numbers.
A294612	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).den()	""	new A024450(), new A007504().skip(1)
A294650	multraf	1	(self, n) -> new Q(self.s(0), ZV(n)).den()	""	new A206369()	denominator(new A206369())/n
A294716	filter	1	new A000161()	v -> v.equals(Z.FIVE)	Numbers that are the sum of 2 squares in exactly 5 ways.						Numbers that are the sum of 2 squares in exactly 5 ways.
A294886	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(n))	""	new A187793(), new A294934()	a(n)=Annn(n)-(Annn(n)*n)
A294889	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(n))	""	new A187795(), new A294937()	a(n)=Annn(n)-(Annn(n)*n)
A294900	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that k = sum of nonabundant proper divisors of k (â¬294888).	hard,nonn,more	1..12	nyi	_Antti Karttunen_
A294931	#muldir	1	new ()	a(p^e) = A019565(A289813(e)).	nonn,mult	1..65537	nyi	_Antti Karttunen_
A294932	#muldir	1	new ()	a(p^e) = A019565(A289814(e)).	nonn,mult	1..65537	nyi	_Antti Karttunen_
A294970	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k), ZV(2*k + 1).^(2))).num()	Numerators of the partial sums for the Catalan constant A006752: Sum_{k=0..n} ((-1)^k)/(2*k+1)^2, n >= 0.
A294971	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k), ZV(2*k + 1).^(2))).den()	xxxerators of the partial sums for the Catalan constant A006752: Sum_{k=0..n} ((-1)^k)/(2*k+1)^2, n >= 0.
A295243	simtraf	1	new A007674()	v -> v.*(2).+(1)	. - _Amiram Eldar_, Feb 26 2024
A295296	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n such that the sum of their divisors + the number of ones in their binary expansion = 2n; numbers for which A000203(n) + A000120(n) = 2n.	nonn,base	1..52	nyi	_Antti Karttunen_
A295297	tuptraf	1	(n, s) -> s[0].+(s[1]).and(Z.ONE)	""	new A000120().skip(1), new A000203()	a(n) = A000035(A000120(n) + A000203(n)).
A295298	filamb	0	1	k -> JF(k).sigma().and(Z.ONE).equals(ZV(k.bitCount() & 1))	Numbers n for which sum of the divisors (A000203) and the binary weight of n (A000120) have the same parity.	nonn	1..10000	nyi	_Antti Karttunen_
A295299	filamb	0	1	k -> !JF(k).sigma().and(Z.ONE).equals(ZV(k.bitCount() & 1))	Numbers k such that the sum of the divisors (A000203) and the binary weight of k (A000120) have different parity.	nonn	1..10000	nyi	_Antti Karttunen_
A295300	rgs1	1	new A291752()	.
A295307	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that k > phi(sigma(k)), where phi = A000010 and sigma = A000203.	nonn	1..10000	nyi	_Antti Karttunen_
A295308	charfunc	0	new A066694()	Characteristic function for A066694: a(n) = 1 if n < phi(sigma(n)), 0 otherwise.	nonn	1..65537	nyi	_Antti Karttunen_
A295310	simtraf	1	new A062401()	(n, v) -> v.gcd(ZV(n))	a(n) = gcd(n, A062401(n)), where A062401(n) = phi(sigma(n)).
A295312	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A062401(), new A295310()
A295521	multraf	1	(self, n) -> self.s(0).-(self.s(1)).-(self.s(2))	"0"	new A027377(), new A027376(), new A001037()	a(n)=Annn(n)-Annn(n)-Annn(n)forn>(\d+)	1
A295553	invtras	0	new A001147()	0	Expansion of 1/(1 - Sum_{k>=1} (2*k-1)!!*x^k).
A295587	filtpos	1	1	new A027760()	v -> v.equals(ZV(    13530))	Numbers
A295588	filtpos	1	1	new A027760()	v -> v.equals(ZV(    14322))	Numbers
A295589	filtpos	1	1	new A027760()	v -> v.equals(ZV(    33330))	Numbers
A295590	filtpos	1	1	new A027760()	v -> v.equals(ZV(    46410))	Numbers
A295591	filtpos	1	1	new A027760()	v -> v.equals(ZV(    61410))	Numbers
A295592	filtpos	1	1	new A027760()	v -> v.equals(ZV(    64722))	Numbers
A295593	filtpos	1	1	new A027760()	v -> v.equals(ZV(   230010))	Numbers
A295594	filtpos	1	1	new A027760()	v -> v.equals(ZV(   272118))	Numbers
A295595	filtpos	1	1	new A027760()	v -> v.equals(ZV(  1919190L))	Numbers
A295596	filtpos	1	1	new A027760()	v -> v.equals(ZV(  3404310L))	Numbers
A295597	filtpos	1	1	new A027760()	v -> v.equals(ZV(  4501770))	Numbers
A295598	filtpos	1	1	new A027760()	v -> v.equals(ZV( 56786730L))	Numb
A295599	filtpos	1	1	new A027760()	v -> v.equals(ZV(140100870L))	Numb
A295770	filtpos	1	1	new A027760()	v -> v.equals(ZV(     4686))	Numbers
A295819	prepend	0	new A000089().skip(1)	0,2	a(n)=Annn(n)forn>=(\d+)	2	A000089
A295876	rgs1	1	new A023900()	, Product_{p|n} (1-p).
A295877	rgs1	1	new A173557()	, Product_{p|n} (p-1).
A295890	tuptraf	0	(n, s) -> s[0].+((s[1].modZ(2)))	""	new A010060(), new A293162()
A295893	#simtraf	0	a(n) = A000035(A295894(n) + A295894(2n))
A295895	simtraf	0	new A295894()	v -> v.and(Z.ONE)	a(n) = A000035(A295894(n)) = A010060(A005940(1+n)).
A295896	#simtraf	0	a(n) = A053866(A005940(1+n)) = A000035(A000203(A005940(1+n))).
A295901	#nyi	0	The transform x_f described above could be called "Xor-Moebius transform of f" because of its analogous construction to Moebius transform with A008683 replaced by A008966 and the summation replaced by cumulative XOR.
A296050	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A000166(), new A001883()	a(n) = A000166(n) -   A001883(n).
A296199	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).num()	""	new A024450(), new A007504().skip(1)
A296203	#nyi	0	Xor-Moebius transform of A000203, the sum of divisors.
A296208	#nyi	0	Xor-Moebius transform of A005187.
A296769	simtraf	0	new A000531()	v -> v	a(n)=Annn(n+(\d+))	1	A000531
A297106	#nyi	0	Xor-Moebius transform of A156552.
A297110	#nyi	0	Xor-Moebius transform of A006068, inverse of the binary Gray code.
A297122	simtraf	0	new A259825()	(n, v) -> ZV(n).^(5).*(v)./(12)	a(n)=n^(\d+)*Annn(n)/(\d+)	5,12
A297155	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A252464(), new A297113()	a(n) = A252464(n) -   A297113(n).
A297156	moetra	1	new A243354()	, 0		Moebius transform of A243354.	nonn	1..4096	nyi	_Antti Karttunen_	Mââbius transform of A243354.
A297167	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A252464(), new A001221()	a(n) = A252464(n) -   A001221(n).
A297168	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A156552(), new A297112()	Difference between A156552 and its Moebius transform: a(n) = A156552(n) - A297112(n).	nonn	1..8192	nyi	_Antti Karttunen_
A297169	rgs1	1	new SimpleTransformSequence(1, new A297168(), (n, v) -> (n == 1) ? Z.NEG_ONE : v)	a(1) = -1, a(n) = A297168(n) for n > 1.
A297172	moetra	1	new A253564()	, 0		Moebius transform of A253564.	nonn	1..4096	nyi	_Antti Karttunen_	Mââbius transform of A253564.
A297360	filnum	1	1	k -> Z.TWO.pow(Functions.CARMICHAEL_LAMBDA.i(k)).-(1).IPP()	Numbers k such that (2^lambda(k) - 1)/k is prime,
A297361	filnum	1	1	k -> Z.THREE.pow(Functions.CARMICHAEL_LAMBDA.i(k)).-(1).IPP()	Numbers k such that (3^lambda(k) - 1)/k is prime,
A297827	diffs	0	new A297826()	Difference sequence of Annnnnn
A297828	diffs	0	new A297997()	Difference sequence of Annnnnn
A298366	simtraf	1	new A061673()	v -> v.+(4)	= A269345(n) + 5. - _M. F. Hasler_, Nov 19 2018
A298612	multraf	3	(self, n) -> self.s(0).-(self.s(1)).-(3)	""	new A000031().skip(3), new A004526().skip(3)
A298700	lambdan	0	n -> RU(1, n, k -> new Q(BI(n + k, n).*(BI(k, n - k)), ZV(k))).*(new Q(n, 2)).num()
A299106	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A000009()
A299108	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A015128()
A299149	multraf	1	(self, n) -> new Q(self.s(0).*(n), self.s(1)).num()	""	new A317848(), new A165825()
A299156	filtpos	0	1	new A000073().skip(2)	(k, v) -> v.mod(ZV(k*(k+1))).isZero()	divides tribonacci(k) (A000073(k))
A299157	filtpos	0	1	new A000594()	(k, v) -> v.mod(ZV(k+1    )).isZero()	divides tau(k), where tau(k)=A000594(k) is Ramanujans tau function
A299158	filtpos	0	1	new A000594()	(k, v) -> v.mod(ZV(k*(k+1))).isZero()	divides tau(k), where tau(k)=A000594(k) is Ramanujans tau function
A299162	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A006906()
A299164	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A022629()
A299166	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A000219()	a(0) = 1; a(n) = Sum_{k=1..n} A000219(k-1)*a(n-k).
A299167	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A026007()
A299205	filtpos	0	1	new A000594()	(k, v) -> v.mod(ZV(k-1    )).isZero()	divides tau(k), where tau(k)=A000594(k) is Ramanujans tau function
A299208	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A081362()
A299209	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A022661()
A299210	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A022693()
A299211	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A073592()
A299212	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A255528()
A299441	#nyi	0		Lexicographically earliest sequence of distinct positive terms such that, for any n > 1, if prime(k) is the least prime factor of a(n) then k divides a(n + 1) (where prime(k) denotes the k - th prime)
A299442	#nyi	0		Lexicographically earliest sequence of distinct positive terms such that, for any n > 1, if prime(k) is the Largest prime factor of a(n) then k divides a(n + 1) (where prime(k) denotes the k - th prime)
A299475	tuptras	0	(self, n) -> self.s(0).-(self.s(1)).+(1)	"1"	new A299474().skip(1), new A000041().skip(1)
A299963	#nyi	0		a(n) = Largest prime factor of the terms in the Collatz sequence starting at n; a(1) = 1
A300252	tuptraf	0	(n, s) -> s[0].-(s[2])	""	new A003415(), PREVIOUS, new A300251()	Difference between arithmetic derivative (A003415) and its Mââbius transform (A300251).	nonn	1..65537	nyi	_Antti Karttunen_
A300296	lambdan	0	n -> new Q(ZV(n).*(5 + 3*n), Z.EIGHT.*(1 + 3*n).*(4 + 3*n)).num()	Numerators of n*(5 + 3*n)/(8*(1 + 3*n)*(4 + 3*n)), n >= 0.
A300297	lambdan	0	n -> new Q(ZV(n).*(5 + 3*n), Z.EIGHT.*(1 + 3*n).*(4 + 3*n)).den()	xxxerators of n*(5 + 3*n)/(8*(1 + 3*n)*(4 + 3*n)), n >= 0.
A300298	lambdan	0	(n) -> RU(0, n - 1, k -> new Q(Z.ONE, PR(0, 4, j -> ZV(k + j + 1)))).num()	Sum_{k=0..n-1} 1/Product_{j=0..4} (k + j + 1), for n >= 0, with r(0) = 0.
A300299	lambdan	0	(n) -> RU(0, n - 1, k -> new Q(Z.ONE, PR(0, 4, j -> ZV(k + j + 1)))).den()	Sum_{k=0..n-1} 1/Product_{j=0..4} (k + j + 1), for n >= 0, with r(0) = 0.
A300357	filter	1	new A061707()	(k, v) -> (k & 1) == 1
A300571	tuptras	0	(self, n) -> new Z(Z.valueOf(n).toString(2) + self.s(0).toString())	"0"	PREVIOUS
A300576	lingf	1	0,1,0,-1,2	1,-2,1	0
A300662	invtras	0	new A008578()	0	.
A300663	invtras	0	new A008683()	0	Expansion of 1/(1 - Sum_{k>=1} mu(k)*x^k), where mu() is the Moebius function (A008683).
A300671	invtras	0	new A001221()	0	Expansion of 1/(1 - Sum_{k>=1} x^prime(k)/(1 - x^prime(k))).
A300672	invtras	0	new A001222()	0	Expansion of 1/(1 - Sum_{p prime, k>=1} x^(p^k)/(1 - x^(p^k))).
A300722	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A060681(), new A300721()	Difference between A060681 (largest difference between consecutive divisors of n as ordered by size) and its Mââbius transform.	nonn	1..65537	anopan	_Antti Karttunen_
A300723	tuptraf	0	(n, s) -> s[0].-(s[1].*(2))	"0"	new A297111(), new A300724()	a(1) = 0; for n > 1, a(n) = A297111(n) - 2*A300724(n).
A300726	tuptraf	0	(n, s) -> s[0].-(s[2])	""	new A053644(), PREVIOUS, new A300724()	Difference between A053644 (the largest power of 2 less than or equal to n) and its Mââbius transform.	nonn,look	1..65537	nyi	_Antti Karttunen_
A300852	lambdan	0	n -> SP(n, p -> ZV(p).*(Z_1(n/p + 1)           ))	a(n) = Sum_{p|n, p prime} p * (-1)^(n/p + 1) [See Mmca prog]
A300947	filter	0	new LambdaSequence(0, k -> FA(2*k).+(FA(k)).+(1))    	PRIME
A300951	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A056172()	new A002110()	a(n)=Annn(Annn(n))
A300976	filnum	0	0	k -> ZV(   k).^(k).-(5 ).IPP()	is a prime
A300981	filnum	0	0	k -> ZV(   k).^(k).-(10).IPP()	 is a prime
A301278	lambdan	0	n -> (n == 0) ? ZV(0) : new Q(BI(2*n, n), ZV(n)).-(new Q(ZV(4).^(n), ZV(n*(n + 1)))).num()
A301279	lambdan	0	n -> (n == 0) ? ZV(1) : new Q(BI(2*n, n), ZV(n)).-(new Q(ZV(4).^(n), ZV(n*(n + 1)))).den()
A301519	filnum	0	0	k -> ZV( 4).*(ZV(k).^(k)).+(1).IPP()	 is prime
A301520	filnum	0	0	k -> ZV( 4).*(ZV(k).^(k)).+(3).IPP()	 is prime
A301521	filnum	0	0	k -> ZV( 4).*(ZV(k).^(k)).-(3).IPP()	 is prime
A301522	filnum	0	0	k -> ZV(16).*(ZV(k).^(k)).+(1).IPP()	 is prime
A301524	filnum	0	0	k -> ZV(16).*(ZV(k).^(k)).-(1).IPP()	 is prime
A301560	lambdan	1	n -> BI(2*n - 1, n - 1)./(2)	a(n) = floor(binomial(2*n - 1, n - 1)/2)
A301630	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A000040()	new A061670()	a(n)=Annn(Annn(n))		D061670,D000040
A301631	lambdan	0	n -> new Q(BI(2*n, n), ZV(n+1)).-(new Q(ZV(4).^(n), ZV(n + 1).*(n + 1))).num()
A301632	filnum	0	0	k -> ZV(3).^(k).+(k + 1).IPP()	 is a prime
A301633	filnum	0	0	k -> ZV(4).^(2*k).+(2*k + 1).IPP()	is a prime
A301634	filnum	0	0	k -> ZV(2).^(k).+(2*k + 1).IPP()	is prime
A301635	filnum	0	0	k -> ZV(5).^(k).+(5*k + 1).IPP()	is prime
A301637	filter	0	new LambdaSequence(0, k -> ZV(   4).^(k).+(k + 1))   	PRIME
A301638	filter	0	new LambdaSequence(0, k -> ZV(   5).^(k).+(5*k + 1)) 	PRIME
A301641	filter	0	new LambdaSequence(1, k -> ZV( 4).*(ZV(k).^(k)).+(1))	PRIME
A301642	filter	0	new LambdaSequence(1, k -> ZV(16).*(ZV(k).^(k)).+(1))	PRIME
A301644	filter	0	new LambdaSequence(0, k -> ZV( 3).*(ZV(k).^(k)).+(1))	PRIME
A301645	filter	0	new LambdaSequence(0, k -> ZV(16).*(ZV(k).^(k)).-(1))	PRIME
A301748	multraf	4	(self, n) -> ZV(2).-(self.s(0)).+(self.s(1))	""	new A007569().skip(3), new A135565().skip(3)
A301808	filter	0	new LambdaSequence(1, k -> ZV( 4).*(ZV(k).^(k)).+(3))	PRIME
A301811	filter	0	new LambdaSequence(1, k -> ZV( 3).*(ZV(k).^(k)).+(2))	PRIME
A301870	filter	0	new LambdaSequence(0, k -> ZV( 4).*(ZV(k).^(k)).-(3))	PRIME
A302015	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A007325()
A302016	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A003823()
A302017	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A000700()
A302018	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A010052()
A302019	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A010057()
A302020	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k - 1).*(self.a(n - k)))	"0,1"	new A001935()
A302021	filnum	0	0	k -> ZV(k).^(2).+(1).IPP() && ZV(k+2).^(2).+(1).IPP() &&  ZV(k+6).^(2).+(1).IPP()	 are prime
A302024	multrafd	1	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A052331()	new A005940()	a(n)=Annn((\d+)+Annn(n))
A302030	dirtral	0	new A006068()	new A052331()	(n, v) -> v.add(1)
A302087	filnum	0	0	k -> ZV(k).^(2).+(1).IPP() && ZV(k+6).^(2).+(1).IPP()	are both prime
A302088	filnum	0	0	k -> ZV( 5).*(ZV(k).^(k)).+(4).IPP()	 is prime
A302089	filter	0	new LambdaSequence(0, k -> ZV( 5).*(ZV(k).^(k)).+(4))	PRIME
A302090	filnum	0	0	k -> ZV( 6).*(ZV(k).^(k)).+(5).IPP()	 is prime
A302091	filter	0	new LambdaSequence(1, k -> ZV( 6).*(ZV(k).^(k)).+(5))	PRIME
A302115	multrar	0	(self, n) -> self.a(n - 1).*(16*(n - 1)).+(Z_1(n).*(PR(0, n - 1, k -> ZV(2*k - 3))).*(4)./(3))	"0"	[{a[n] == 16*(n - 1) *a[n - 1] + (-1)^n*(4/3) * Product[(2*k - 3)  , {k, 0, n - 1}],  a[0] == 0}, a, {n, 0, 15}] (* _Vaclav Kotesovec_, Apr 11 2018 *)
A302116	multrar	0	(self, n) -> ZV(16*(n - 1)).*(self.a(n - 1).*(2*n - 3).+(Z_1(n).*(PR(0, n - 1, k -> ZV(2*k - 3)).^(2))./(9)))	"0"	RecurrenceTable[{a[n] == 16*(n - 1)*((2*n-3)*a[n - 1] + (-1)^n / 9   * Product[(2*k - 3)^2, {k, 0, n - 1}]), a[0] == 0}, a, {n, 0, 15}] (* _Vaclav Kotesovec_, Apr 10 2018 *)
A302123	filnum	0	0	k -> ZV( 6).*(ZV(k).^(k)).-(5).IPP()	 is prime
A302124	filter	0	new LambdaSequence(0, k -> ZV( 6).*(ZV(k).^(k)).-(5))	PRIME
A302132	filnum	0	0	k -> ZV( 3).*(ZV(k).^(k)).-(2).IPP()	 is prime
A302133	filnum	0	0	k -> ZV( 8).*(ZV(k).^(k)).-(7).IPP()	 is prime
A302134	filnum	0	0	k -> ZV( 9).*(ZV(k).^(k)).-(8).IPP()	 is prime
A302135	filter	0	new LambdaSequence(0, k -> ZV( 9).*(ZV(k).^(k)).-(8))	PRIME
A302136	filnum	0	0	k -> ZV(10).*(ZV(k).^(k)).-(9).IPP()	 is prime
A302137	filter	0	new LambdaSequence(0, k -> ZV(10).*(ZV(k).^(k)).-(9))	PRIME
A302175	tuptraf	0	(n, s) -> ZV(2).^(s[0])./(ZV(3).^(s[1]))	""	new A006666(), new A006667()	a(n) = [2^A006666(n)/3^A006667(n)]
A302290	ordsum	0	new A079559().skip()	2
A302549	moetrafi	1	new A000219()	, 0	#
A302550	moetrafi	1	new A026007()	, 0	#
A302557	invtras	0	new A000166()	0	.
A302661	lambdan	0	n -> GP(1, n, k -> new Zi(k, n - k + 1)).re()	Real part of Product_{k=1..n} (k+(n-k+1)i), with i=sqrt(-1).
A302662	lambdan	0	n -> GP(1, n, k -> new Zi(k, n - k + 1)).im()	Imaginary part of Product_{k=1..n} (k+(n-k+1)i), with i=sqrt(-1).
A303205	lambdan	1	n -> SU(1, (n-1)/2, i -> MU(i*(n - 2*i)).^(2))
A303336	lambdan	1	n -> SU(1, n/2, i -> Functions.BIG_OMEGA.l(i*(n-i)) == 2 ? Z.ONE : Z.ZERO)
A303337	lambdan	1	n -> SU(1, (n-1)/2, i -> Functions.BIG_OMEGA.l(n*i)     == 2 ? Z.ONE : Z.ZERO)
A303747	#nyi	0		Totients t for which gcd({x: phi(x)=t}) equals the largest prime factor of each member of {x: phi(x)=t}
A303975	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A156061()	new A001221()	a(n)=Annn(Annn(n))
A303986	trilamb0	0	(n, k) -> BI(n, n - k).*(FA(n + k)).*(Z_1(k))./(FA(n))	T(n, k) = (-1)^k*binomial(n, n-k)*((n+k)!/n!).
A304100	dirtraf	0	new A003602()	new A048679()		a(n)= Annnnnn(Annnnnn(n))	
A304101	rgs1	1	new DirectTransformSequence(0, new A278222(), new A048679())	.
A304111	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Partial sums of f(n) = (-1)^(1-â¬304109(n)).	sign	0..65537	nyi	_Antti Karttunen_
A304117	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A005361(), new A156061()	a(n)=Annn(n)*Annn(n)
A304124	multraf	1	(self, n) -> self.s(0).+(self.s(1)).+(1)	""	new A052450(), new A052451()	1+new A052450()+new A052451()
A304125	multraf	1	(self, n) -> self.s(0).+(self.s(1)).+(self.s(2)).+(1)	""	new A052450(), new A052451(), new A052452()	1+new A052450()+new A052451()+new A052452()
A304250	insect2	1	new A001597().skip(1)	new A055932().skip(1)
A304439	multraf	0	(self, n) -> ZV(n).+(self.s(0))	""	new A071650()	n + new A071650()
A304440	multraf	0	(self, n) -> ZV(n).-(self.s(0))	""	new A071650()	n - new A071650()
A304442	lambdan	0	n -> (n==0) ? ZV(1) : SD(n, d -> BI(JF(n/d).sigma0AsLong(), d))
A304527	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A064664(), new A304526()	Difference between A064664 (the inverse of EKG-sequence) and its Mââbius-transform.	nonn	1..32768	nyi	_Antti Karttunen_
A304633	partsun	0	new A280542()			Partial sums of A280542.
A304727	tuptraf	0	(n, s) -> s[2].*(s[0]).+(s[1])	"0,1"	PREVIOUS, PREVIOUS, new A000142()	a(0) = 0, a(1) = 1, a(n) = FA(n) * a(n-1) + a(n-2)
A304734	#nyi	0		Ordinal transform of the largest prime factor of the n - th term of EKG - sequence
A304736	rgs1	1	new DirectTransformSequence(1, new A048675(), new A064413())	.
A304737	rgs1	1	new DirectTransformSequence(1, new A278222(), new A064413())	.
A304738	rgs1	1	new DirectTransformSequence(1, new A278222(), new A048673())	.
A304744	rgs1	1	new DirectTransformSequence(0, new A046523(), new A052330())	.
A304750	rgs1	1	new A292240()	(n), formed from 0-digits in ternary representation of A254103(n).
A304963	invtras	0	new A007425()	0	Expansion of 1/(1 - Sum_{i>=1, j>=1, k>=1} x^(i*j*k)).
A304964	invtras	0	new A007426()	0	Expansion of 1/(1 - Sum_{i>=1, j>=1, k>=1, l>=1} x^(i*j*k*l)).
A304980	tuptraf	0	(n, s) -> Z_1(n).*(s[0].-(s[1]))	""	new A000182(), new A000364()
A304990	simtraf	0	new A000009()	v -> v.^(2)	.
A305006	multraf	1	(self, n) -> new Q(self.s(0), ZV(n)).num()	""	new A002129()	numerator of new A002129()/n
A305007	multraf	1	(self, n) -> new Q(self.s(0), ZV(n)).den()	""	new A002129()	denominator of new A002129()/n
A305099	multraf	1	(self, n)-> self.s(0).min(self.s(1))	"3,3"	new A005235(), new A055211()
A305295	simtraf	0	new A245612()	(n, v) -> new Z(v.toString(3).replaceAll("[02]","0"), 2)	Binary encoding of 1-digits in ternary representation of A245612(n) 
A305296	rgs1	0	new A305295()	(n), formed from 1-digits in ternary representation of A245612(n).							Restricted growth sequence transform of A305295(n), formed from 1-digits in ternary representation of A245612(n).
A305301	rgs1	1	new DirectTransformSequence(0, new A278222(), new A304760())	, constructed from runlengths of 1-digits in base-3 representation of A254103(n).
A305302	rgs1	1	new DirectTransformSequence(0, new A278222(), new A291760())	, constructed from runlengths of 2-digits in base-3 representation of A254103(n).
A305303	rgs2	1	new DirectTransformSequence(0, new A278222(), new A304760())	new DirectTransformSequence(1, new A278222(), new A291760())	ordered pair [A278222(A304760(n)), A278222(A291760(n))], constructed from runlengths of 1-digits and 2-digits in base-3 representation of A254103(n).
A305431	rgs1	0	new DirectTransformSequence(0, new A278222(), new A305295())	, constructed from runlengths of 1-digits in base-3 representation of A245612(n).							Restricted growth sequence transform of A278222(A305295(n)), constructed from runlengths of 1-digits in base-3 representation of A245612(n).
A305432	rgs1	0	new DirectTransformSequence(0, new A278222(), new A291763())	, constructed from runlengths of 2-digits in base-3 representation of A245612(n).							Restricted growth sequence transform of A278222(A291763(n)), constructed from runlengths of 2-digits in base-3 representation of A245612(n).
A305433	rgs2	1	new DirectTransformSequence(0, new A278222(), new A305295())	new DirectTransformSequence(1, new A278222(), new A291763())	ordered pair [A278222(A305295(n)), A278222(A291763(n))], constructed from runlengths of 1-digits and 2-digits in base-3 representation of A245612(n).
A305540	tablamb	1	1	n -> new Integer[] {1, n/2 + 1}	(n, k)-> S2((n + 1)/2, k).+(S2(n/2 + 1, k)).*(FA(k))./(2)
A305541	trilambn	1	1	1	(n, k)-> new Q(SD(n, d -> S2(n/d, k).*(PHI(d))), 2*n).-(new Q(S2((n + 1)/2, k).+(S2(n/2 + 1, k)), 4)).*(FA(k)).num()
A305542	treonk	1	A305541	1	mN	3
A305543	treonk	1	A305541	1	mN	4
A305544	treonk	1	A305541	1	mN	5
A305545	treonk	1	A305541	1	mN	6
A305550	stir2	0	new A088311()	, 0	Stirling transform of A088311
A305614	lambdan	0	n -> SP(n, p -> Z_1(n/p)).negate()	a(n) = -Sum_{p|n prime} (-1)^(n/p)
A305634	setdiff	1	new A005843().skip(1)	new A001597()
A305800	rgs1	1	new A239968()	.
A305804	moetra	1	new A078898()	, 0		Mââbius-transform of A078898.	nonn	1..65537	nyi	_Antti Karttunen_
A305973	rgs1	1	new A278223()	, the least number with the same prime signature as the n-th odd number.
A305977	rgs1	1	new A286257()	.
A305978	rgs1	1	new A286258()	.
A306022	stir2	0	new A000041()	, 0	Stirling transform of A000041
A306023	stir2	0	new A000009()	, 0	Stirling transform of A000009
A306289	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A007310().skip(1)	new A020639()	a(n)=Annn(Annn(n+(\d+)))
A306358	filter	1	new A000161()	(k, v) -> ((k & 1) == 1) && v.compareTo(Z.TWO) >= 0	Odd numbers k such that A000161(k) >= 2						Odd numbers which are the sum of two squares in two or more different ways.
A306496	simtraf	1	new A094047()	v -> v./(2)	.
A306649	lambdan	1	n -> RD(n, d -> new Q(ZV(d), SIGMA(d))).num()
A306650	lambdan	1	n -> RD(n, d -> new Q(ZV(d), SIGMA(d))).den()
A306669	lambdan	1	n -> SD(n, d -> ZV(n/d).^(d).*(MU(n/d)).*(FA(d)))./(n)
A306751	filnum	0	0	k -> ZV( 9).*(Z.TEN.^(2*k)).+(ZV(3).*(Z.TEN.^(k))).+(1).IPP()	are prime
A306834	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).num()	""	new A014285(), new A007504().skip(1)
A307031	lambdan	1	n -> ZV(n).^(DF(n))
A307057	invtras	0	new A002865()	0	.
A307058	invtras	0	new A000700()	0	.
A307059	invtras	0	new A010815()	0	.
A307060	invtras	0	new A081362()	0	.
A307062	invtras	0	new A026007()	0	.
A307063	invtras	0	new A022629()	0	.
A307067	invtras	0	new A025147()	0	.
A307068	invtras	0	new A032020()	0	.
A307073	invtras	0	new A001615()	0	Expansion of 1/(1 - Sum_{k>=1} mu(k)^2*x^k/(1 - x^k)^2).
A307075	invtras	0	new A007434()	0	Expansion of 1/(1 - Sum_{k>=1} mu(k)*x^k*(1 + x^k)/(1 - x^k)^3).
A307076	invtras	0	new A008836()	0	Expansion of 1/(1 - Sum_{k>=1} lambda(k)*x^k), where lambda() is the Liouville function (A008836).
A307364	invtras	0	new A002110()	0	Expansion of 1/(1 - Sum_{k>=1} prime(k)#*x^k), where prime(k)# is the product of first k primes (A002110).
A307470	insect2	0	new A013917()	new A013918()	Intersection
A307613	inverse	0	new A307485()	0	0	one odd, two even, four odd, eight even, etc; extended with a(0) = 0.
A307629	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A110805(), new A007953()	a(n)=Annn(n)-Annn(n)
A307642	lambdan	1	n -> RU(1, n, i -> RU(1, i, j -> new Q(i, j))).*(FA(n)).num()
A307716	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).den()	""	new A014285(), new A007504().skip(1)
A307772	lambdan	1	n -> SU(1, n, k -> S1(n, k).*(Functions.PRIME.z(k)))	a(n)=Sum_{k=(\d+),n}Stirling(\d+)(n,k)*prime(k)	1,1
A307793	multrar	1	(self, n) -> n==1 ? ZV(1) : SD(n-1, d -> Functions.SIGMA0.z(d).*(self.a(d)))	""
A307794	multrar	1	(self, n) -> n==1 ? ZV(1) : SD(n-1, d -> SIGMA(d).*(self.a(d)))	""
A307826	simtraf	1	new A005867().skip(1)	(n, v) -> (n == 1) ? Z.ONE : v./(2)
A307827	filter	1	new A001107()	v -> ZUtils.isPalindrome(v, 10)	Palindromic decagonal (or 10-gonal) numbers.
A307829	filtpos	1	0	new A001107()	v -> ZUtils.isPalindrome(v, 10)	Base numbers of decagonal (10-gonal) palindromic numbers.
A307848	muldirs	1	(p, e) -> SEQ.a(e)	new A037445()	Multiplicativewitha(p^e)=Annn(e)		A037445
A307874	multrar	1	(self, n) -> SU(1, n - 1, k -> S1(n - 1, k).*(self.a(k)))	"1, 1"
A308248	simtraf	1	new A237583()	v -> v.^(2)	. - _Michel Marcus_, May 17 2019
A308267	filtpos	1	1	new A048678()	(n, v) -> v.mod(n) == 0	Numbers n such that n divides Annnnnn(n)
A308417	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(FA(k)).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"0,1"	new A026741()
A308439	multrafd	1	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A019565()	new A020639()	a(n)=Annn(Annn(n)+(\d+))
A308444	multrar	0	(self, n) -> SU(1, n, k -> S2(n, k).*(self.a(n - k)))	"1"
A308449	filnum	0	0	k -> ZV(25).*(Z.TEN.^(2*k)).+(ZV(5).*(Z.TEN.^(k))).+(1).IPP()	are prime
A308476	multrar	1	(self, n) -> SU(1, n - 1, k -> LongUtils.gcd(n, k) == 1 ? S2(n, k).*(self.a(k)) :Z.ZERO)	"1"
A308500	triuple	0	0, 0, -1	SU(0, n, j -> BI(k*n, k*j))	A(n,k), n >= 0, k >= 0, : A(n,k) = Sum_{j=0..n} binomial(k*n,k*j). nonn,tabl 0..115
A308502	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(n/d + k))			A(n,k), n >= 1, k >= 0, : A(n,k) = Sum_{d|n} d^(n/d + k)		. nonn,tabl 1..140
A308504	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(n+k))				A(n,k), n >= 1, k >= 0, : A(n,k) = Sum_{d|n} d^(n+k)			. nonn,tabl 1..140
A308509	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(k*n/d))				A(n,k), n >= 1, k >= 0, , A(n,k)   Sum_{d|n} d^(k*n/d)			. nonn,tabl 1..140
A308554	stir2	0	new A000005()	, 0	Stirling transform of A000005
A308555	multrar	1	(self, n) -> SU(1, n, k -> S2(n, k).*(Sigma(k)))	"1"
A308569	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(k*n))				A(n,k), n >= 1, k >= 0, , A(n,k)   Sum_{d|n} d^(k*n)			. nonn,tabl 1..52
A308606	lambdan	1	n -> ZV(1).+(ZV(n*n-n+4).*(FA(n))./(4))
A308674	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(ZV(d).^(k)))				A(n,k), n >= 1, k >= 0, , A(n,k)   Sum_{d|n} d^(d^k)			. nonn,tabl 1..9
A308676	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(ZV(d).^(k).*(n/d)))			A(n,k), n >= 1, k >= 0, , A(n,k)   Sum_{d|n} d^(d^k * n/d)		. nonn,tabl 1..9
A308690	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(k*n/d - k + 1))		A(n,k), n >= 1, k >= 0,   A(n,k)   Sum_{d|n} d^(k*n/d - k + 1)	, . nonn,tabl 1..140
A308694	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(k*(n/d - 1)))		A(n,k), n >= 1, k >= 0,   A(n,k)   Sum_{d|n} d^(k*(n/d - 1))	, . nonn,tabl 1..140
A308698	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(k*d))	A(n,k), n >= 1, k >= 0, , A(n,k)   Sum_{d|n} d^(k*d)			 nonn,tabl 1..52
A308701	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(k*(d-1)))	A(n,k), n >= 1, k >= 0, , A(n,k)   Sum_{d|n} d^(k*(d-1))		 nonn,tabl 1..53
A308704	triuple	0	1, 0, -1	SD(n, d -> ZV(d).^(k*d+1))	A(n,k), n >= 1, k >= 0, , A(n,k)   Sum_{d|n} d^(k*d+1)			 nonn,tabl 1..52
A308749	dirtral	0	new A007504()	new A053050()	(n, v) -> v./(n)	A007504(A053050(n))/n
A308759	multraf	0	(self, n) -> self.s(0).-(self.s(1)).-(self.s(2)).-(self.s(3))	""	new A308775(), new A308733(), new A308758(), new A308760()	a(n)=Annn(n)-Annn(n)-Annn(n)-Annn(n)
A308813	triuple	0	1, 0, -1	SD(n, d -> ZV(k).^(d-1))	A(n,k), n >= 1, k >= 0, , A(n,k)   Sum_{d|n} k^(d-1)			 nonn,tabl 1..140
A308815	filter	0	new HolonomicRecurrence(0, "[[0],[1966080,-720896,65536],[0],[84480,-26624,1536],[0],[-816,704,-144],[0],[0,-1,1]]" "0,1", 0, 0)	(n,v) -> (n & 1) == 1
A308899	#nyi	0		a(n) = largest prime factor of the number with decimal expansion 20305070...0p_n where p_n = n - th prime
A308970	simtraf	1	new A001008()	v -> SPF(v)	(n), numerator of n - th harmonic number; a(1) = 1
A309010	triuple	0	0, 0, -1	SU(0, n, j -> BI(n, j).^(k))	A(n,k) = Sum_{j=0..n} binomial(n,j)^k, n >= 0, k >= 0, . nonn,tabl 0..100
A309043	lambdir	0	n -> SU(0, n, k -> SEQ.a(k + 1).*(SEQ.a(n - k + 1)))	new A002487()	a(n) = Sum_{k=0..n} A002487(k+1)*A002487(n-k+1).
A309262	multrar	0	(self, n) -> n<=1 ? ZV(n) : SU(2, IntegerUtils.sqrt(n), k -> self.a(n/(k*k)))	""
A309286	multrar	0	(self, n) -> n<=1 ? ZV(n) : SU(2, IntegerUtils.sqrt(n), k -> Z_1(k).*(self.a(n/(k*k))))	""
A309288	multrar	0	(self, n) -> n<=1 ? ZV(n) : SU(2, n, k -> Z_1(k).*(self.a(n/k)))	""
A309386	triuple	0	0, 0, -1	SU(0, n, j -> S2(n, j).*(ZV(-k).^(n - j)))	A(n,k), n>=0, k>=0, , A(n,k) = Sum_{j=0..n} (-k)^(n-j)*Stirling2(n,j). sign,tabl 0..139
A309507	multraf	1	(self, n) -> self.s(0).-(self.s(1)).-(1)	""	new A092517(), new A063440()
A309530	lambdan	0	n -> Z.valueOf(ZUtils.valuation(Functions.SIGMA.z(Functions.SIGMA.z(Z2(n))), Z.TWO))	a(n) = valuation(2*sigma(sigma(2^n)), 2);
A309582	filnum	0	0	k -> ZV(36).*(Z.TEN.^(2*k)).+(ZV(6).*(Z.TEN.^(k))).+(1).IPP()	is prime
A309675	lambdan	0	n -> ZV(4).^(n*n).+(FA(n))	a(n) = 4^n^2 + n!.
A309719	filnum	0	0	k -> ZV(64).*(Z.TEN.^(2*k)).+(ZV(8).*(Z.TEN.^(k))).+(1).IPP()	are prime
A309740	filnum	0	0	k -> ZV( 5).*(Z.TEN.^(2*k)).+(ZV(5).*(Z.TEN.^(k))).+(1).IPP()	are prime
A309741	filnum	0	0	k -> ZV( 6).*(Z.TEN.^(2*k)).+(ZV(6).*(Z.TEN.^(k))).+(1).IPP()	are prime
A309742	filnum	0	0	k -> ZV( 8).*(Z.TEN.^(2*k)).+(ZV(8).*(Z.TEN.^(k))).+(1).IPP()	are prime
A309743	filnum	0	0	k -> ZV( 9).*(Z.TEN.^(2*k)).+(ZV(9).*(Z.TEN.^(k))).+(1).IPP()	is prime
A309744	filnum	0	0	k -> ZV(81).*(Z.TEN.^(2*k)).+(ZV(9).*(Z.TEN.^(k))).+(1).isProbablePrime()	is prime
A309772	multraf	1	(self, n)-> self.s(0).lcm(self.s(1))	"12"	new A008864().skip(1), PREVIOUS
A309892	#nyi	0		a(0) = 0, a(1) = 1, and for any n > 1, a(n) is the number of iterations of the map x -> x  -  gpf(x) (where gpf(x) denotes the Largest prime factor of x) required to reach 0 starting from n
A316142	convprod	0	2	new A305550()
A316328	simtraf	0	new A316667()	v -> v.-(1)	a(n)=Annn(n+(\d+))-(\d+)		1,1
A316330	simtraf	0	new FilterSequence(0, new A000085(), (k, v) -> (k % 4) == 0)	(n, v) -> v./(Z2(n))	a(n) = A000085(4*n) / 2^n.
A317050	dirtraf	0	new A053985()	new A003188()	a(n) = A053985(A003188(n)).
A317170	stir2	0	new A001006()	, 0	Stirling transform of A001006
A317187	simtraf	1	new A317186()	v -> Puma.primeZ(v)	a(n)=prime(Annn(n))		A317186
A317275	multrar	1	(self, n) -> SU(1, n - 1, k -> SA(n - 1, k).*(self.a(k)).*(self.a(n - k)))	"1"
A317535	invtras	0	new A000065()	0	.
A317536	invtras	0	new A111133()	0	.
A317835	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numerators of rational valued sequence whose Dirichlet convolution with itself yields sequence A003415 (arithmetic derivative of n) + A063524 (1, 0, 0, 0, ...).	sign,frac	1..65537	nyi	_Antti Karttunen_
A317837	lambdir	1	n -> SD(n, d -> d < n ? SEQ.a(d) : Z.ZERO)	new A002487()	a(n) = Sum_{d|n, d<n} A002487(d).
A317838	lambdir	1	n -> SD(n, d -> SEQ.a(d))	new A002487()	new A002487()	a(n) = Sum_{d|n} A002487(d).
A317840	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A002487().skip(), new A317839()	Difference between Sterns Diatomic sequence (A002487) and its Mââbius transform (A317839).	nonn	1..16384	nyi	_Antti Karttunen_
A317844	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A294898(), new A297114()	Difference between A294898 and its Mââbius transform (A297114).	sign	1..65537	unkn	_Antti Karttunen_
A317845	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numerators of rational valued sequence whose Dirichlet convolution with itself yields sequence A001065 (sum of proper divisors) + A063524 (1, 0, 0, 0, ...).	sign,frac	1..65537	nyi	_Antti Karttunen_
A317846	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numerators of rational valued sequence whose Dirichlet convolution with itself yields sequence A051953 (cototient of n) + A063524 (1, 0, 0, 0, ...).	sign,frac	1..65537	nyi	_Antti Karttunen_
A317938	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numerators of rational valued sequence whose Dirichlet convolution with itself yields sequence A001222 (bigomega n) + A063524 (1, 0, 0, 0, ...).	sign,frac	1..65537	nyi	_Antti Karttunen_
A317985	holos	0	[[0],[5,-2],[2,-1],[0,2],[-1]]	1,2,7,38	0	0	-a(n)+ 2*n*a(n-1) -(n-2)*a(n-2) -(2*n-5)*a(n-3)
A317989	simtraf	2	new A003658().skip(1)	v -> Z2(JF(v).omega() - 1)
A317990	simtraf	0	new A005117()	v -> Z2(JF(v).omega() - 1)	
A317991	simtraf	2	new A003658().skip(1)	v -> ZV(JF(v).omega() - 1)
A317992	simtraf	0	new A005117()	v -> ZV(JF(v).omega() - 1)	
A318025	moetrafi	1	new A006906()	, 0	#
A318029	multraf	0	(self, n) -> self.s(0).-(1)	"0,0"	new A025147()	v -> v.-(1)	for n > 1.
A318053	multrar	1	(self, n) -> Functions.CEIL_SQRT.z(self.a(n - 1).*(2).*(self.a(n - 2)))	"1,1"	RecurrenceTable[{a[1]==a[2]==1,a[n]==Ceiling[Sqrt[2a[n-1]a[n-2]]]}
A318101	holos	2	[[0],[51007979520,-13170966528,1275101184,-54853632,884736],[-500232192000,138770513920,-14433476608,667074560,-11558912],[1679637319680,-499524610048,55715624960,-2762098688,51349504],[-2098186389504,654833495040,-76741305856,4002057216,-78354944],[393757945344,-80994171264,3884477184,129693312,-9896448],[624612139776,-284073630912,46126111104,-3227391552,82940544],[-264694138560,104767852032,-14471123232,822242976,-15736128],[1466996256,13649728416,-5243033616,635810544,-25036320],[36027173520,-20191481016,4015627536,-325417992,8801808],[-6662546568,3516505284,-590420208,28568148,285768],[-1956197712,1636243796,-506519498,67906582,-3207988],[53853540,-48949988,14294161,-1099735,-82468],[4568760,-7050462,4153645,-1142868,128345],[-95760,287016,-314307,150324,-26313],[0,-720,3600,-4860,1620]]	2, 9, 30, 154, 986, 6977, 52590	0	0	
A318279	simtraf	2	new A000005().skip(1)	(n, v) -> CV(n).^(new Q(Z.ONE, v.-(1))).*(n).ceil()	a(n) = ceiling(n^(1 + 1/(tau(n)-1))). - _Jon E. Schoenfield_, Nov 22 2018
A318290	moetrafi	1	new A022629()	, 0	#
A318308	rgs1	1	new A294898()	.
A318431	lambdan	0	n -> (n == 0) ? Z.ONE : SD(n, d -> BI(3*d, d).*(Z_1(d)).*(JF(n/d).phi())).*(Z_1(n))./(n)
A318432	lambdan	0	n -> (n == 0) ? Z.ONE : SD(n, d -> BI(4*d, d).*(Z_1(d)).*(JF(n/d).phi())).*(Z_1(n))./(n)
A318433	lambdan	0	n -> (n == 0) ? Z.ONE : SD(n, d -> BI(5*d, d).*(Z_1(d)).*(JF(n/d).phi())).*(Z_1(n))./(n)
A318456	simtraf	1	new A001065()	(n, v) -> ZV(n).or(v)	a(n) = n OR A001065(n), where OR is bitwise-or (A003986) and A001065 = sum of proper divisors.
A318457	simtraf	1	new A001065()	(n, v) -> ZV(n).xor(v)	a(n) = n XOR A001065(n), where XOR is bitwise-xor (A003987) and A001065 = sum of proper divisors.
A318458	simtraf	1	new A001065()	(n, v) -> ZV(n).and(v)	a(n) = n AND A001065(n), where AND is bitwise-and (A004198) & A001065 = sum of proper divisors.
A318466	lambdan	0	n -> Functions.SIGMA.z(n).or(ZV(2*n))	a(n) = 2*n OR A000203(n)
A318469	#muldir	1	new ()	a(p^e) = A019565(A003714(e)).	nonn,mult	1..65537	nyi	_Antti Karttunen_
A318470	#muldir	1	new ()	a(p^e) = A260443(e).	nonn,mult	1..65537	nyi	_Antti Karttunen_
A318493	invtras	0	new A038040()	0	Expansion of 1/(1 - Sum_{i>=1, j>=1} i*j*x^(i*j)).
A318503	#nyi	0	Xor-Moebius transform of A001065, the sum of proper divisors.
A318509	muldirs	1	(p, e) -> SEQ.a(p).^(e)	new A002487()	Completely multiplicative with a(p) = A002487(p) new A002487().
A318510	muldirs	1	(p, e) -> SEQ.a(Puma.nextPrimeZ(p)).^(e)	new A002487()	Completely multiplicative with a(prime(k)) = A002487(prime(k+1)).
A318580	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(FA(k)).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"0,1"	new A000219()
A318651	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A046644(), new A318512()	a(n) = A046644(n) / A318512(n).
A318652	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A046645(), new A318513()	a(n) = A046645(n) -   A318513(n).
A318654	filtpos	0	1	new A318649()	EVEN	Positions of even terms in A318649.	nonn	1..21123	nyi	_Antti Karttunen_
A318660	simtraf	0	new A064988()	(n, v) -> v.mod(ZV(n))	Remainder when A064988(n) is divided by n.	nonn	1..65537	nyi	_Altug Alkan_ and _Antti Karttunen_
A318680	simtraf	1	new A318653()	(n, v) -> ZV(n).*(v)
A318681	multraf	1	(self, n) -> ZV(n).*(self.s(0))	""	new A299149()	n * new A299149()
A318702	dirtraf	0	new A053985()	new A059905()	a(n) = A053985(A059905(n)).
A318703	dirtraf	0	new A053985()	new A059906()	a(n) = A053985(A059906(n)).
A318704	multraf	0	(self, n) -> self.s(0).^(2).+(self.s(1).^(2))	""	new A318702(), new A318703()	a(n)=Annn(n)^(\d+)+Annn(n)^(\d+)	2,2
A318828	simtraf	1	new A063994()	(n, v) -> ZV(n).-(v)
A318831	rgs1	1	new DirectTransformSequence(1, new A278222(), new A000010())	.
A318832	rgs1	1	new DirectTransformSequence(1, new A278222(), new A000203())	.
A318836	#nyi	0	Product_{d|n, d<n, A007431(d) > 0} prime(A007431(d)), where A007431 is the Mââbius transform of Euler's totient function.	nonn	1..4096	nyi	_Antti Karttunen_
A318838	#nyi	0	Product_{d|n, A007431(d) > 0} prime(A007431(d)), where A007431 is the Mââbius transform of Euler's totient function.	nonn	1..4096	nyi	_Antti Karttunen_
A318886	#nyi	0		The sum of absolute values of the coefficients in the n - th cyclotomic polynomial minus the largest prime factor of n; a(1)=1 by convention
A319044	#nyi	0		a(n) is the least prime factor of all sufficiently large numbers of the form n  +  Sum_{j=1..k} j!
A319353	rgs1	1	new A319352()	.
A319377	multraf	2	(self, n) -> self.s(0).-(self.s(1).*(2))	""	new A050381(), new A000669()	a(n)=Annn(n)-(\d+)*Annn(n)	2
A319659	simtraf	1	new A003657()	v -> ZV(JF(v).omega() - 1)
A319660	simtraf	1	new A039957()	v -> ZV(JF(v).omega() - 1)
A319661	simtraf	1	new A191483()	v -> ZV(JF(v).omega() - 1)
A319662	simtraf	1	new A003643()	v -> ZV(v.bitLength() - 1)
A319665	trilamb0	2	(n, k)-> { int i = 0; final Z z2 = Z2(n); while (!z2.modPow(FA(i), ZV( 5)).equals(ZV(4*k + 1))) { ++i; } return ZV(i); }	Mod(5,2^n)^i!=4*k+1,i++);i
A319666	trilamb0	2	(n, k)-> { int i = 0; final Z z2 = Z2(n); while (!z2.modPow(FA(i), ZV(-3)).equals(ZV(4*k + 1))) { ++i; } return ZV(i); }	Mod(-3,2^n)^i!=4*k+1,i++);i
A319678	filnum	1	1	k -> String.valueOf(k).charAt(0) - '0' == k.toString().length()	Numbers with property that the first digit is the length of the number (written in base 10).
A319683	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A319684(), new A003415()	a(n)=Sum_{d|n,d<n}Annn(d)
A319684	multrad	1	(self, n) -> SD(n, d -> SEQ.a(d))	""	new A003415()
A319687	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A318509(), new A002487()	a(n)=Annn(n)-Annn(n)
A319710	simtraf	1	new A067029()	v -> (v.compareTo(Z.ONE) > 0) ? Z.ONE : Z.ZERO	a(n) = 1 iff A067029(n) > 1.
A319712	moetrafi	1	new A034968()	, 0	#
A319744	partsun	0	new A152054()			Partial sums of bouncy numbers (A152054).
A319821	simtraf	1	new A094269()	v -> ZV(v.bitLength() - 1)
A319875	#nyi	0		a(c) = a(c - 1)  +  pi(c)  -  pi(gpf(c)), for c a composite number, where gpf = A006530 denotes the "Largest prime factor of" function
A319988	#simtraf	0	For n > 1, a(n) = A000035(A336124(n)) = A122111(n) mod 2. - _Antti Karttunen_, Jul 18 2020
A319994	#nyi	0		Let g = A006530(n), the largest prime factor of n. This filter sequence combines (g mod 4), n/g (A052126), and a single bit â¬319988(n) telling whether the largest prime factor is unitary
A319996	#nyi	0		Let g = A006530(n), the largest prime factor of n. This filter sequence combines (g mod 6), n/g (A052126), and a single bit â¬319988(n) telling whether the largest prime factor is unitary
A320013	rgs2	1	new A319991()	new A319992()	ordered pair [A319991(n), A319992(n)].
A320015	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A320001(), new A320005()	a(n) = A320001(n) +   A320005(n).
A320283	simtraf	0	new FilterSequence(0, new A073791(), (k, v) -> (k & 1) == 0)	(n, v) -> v./(2)	a(n) = A073791(2*n) / 2.
A320300	simtraf	1	new A354482()	v -> v.+(2)	a(n) = A320300(n) - 2
A320420	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A058129(), new A000001()	a(n)=Annn(n)-Annn(n)
A320454	#nyi	0		Lexicographically earliest sequence of distinct positive terms such that a(1) = 1, a(2) = 2, and for any n > 2, the Largest prime factor of a(n) does not exceed the prime next to the Largest prime factor of a(n - 1)
A320503	#nyi	0		Lexicographically earliest sequence of distinct positive terms such that a(1) = 1, a(2) = 2, and for any n > 2, the least prime factor of a(n) does not exceed the prime next to the least prime factor of a(n - 1)
A320558	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A276724().skip(8), new A276723().skip(8)	a(n) = A276724(n) -   A276723(n).
A320562	trilamb0	1	(n, k)-> { int m = 1; final Z z2 = Z2(n); while (!z2.modPow(FA(m), ZV(m)).equals(ZV(2*k + 1))) { m += 2; } return ZV(m); }	Mod(m,2^n)^m!=2*k+1,m+=2);m
A320649	invtras	0	new A001157()	0	Expansion of 1/(1 - Sum_{k>=1} k^2*x^k/(1 - x^k)).
A320650	invtras	0	new A001227()	0	Expansion of 1/(1 - Sum_{k>=1} x^k/(1 - x^(2*k))).
A320651	invtras	0	new A000593()	0	Expansion of 1/(1 - Sum_{k>=1} k*x^k/(1 + x^k)).
A320652	invtras	0	new A006906()	0	.
A320654	invtras	0	new A015128()	0	.
A320802	moetraf	1	new A303546()	, 0	, where the Meobius transform of a sequence b is a(n) = Sum_{d|n} mu(d) * b(n/d).
A320839	factexp	0	CR.SEVEN.sqrt()	Factorial expansion of sqrt(7) = Sum_{n>=1} a(n)/n!.
A320857	lambdan	0	n -> SU(1, n, i -> (ZV(i).IPP() ? Z.ONE : Z.ZERO).*(KS( -2, i))).negate()
A320858	lambdan	0	n -> SU(1, n, i -> ZV(KS( -2, Puma.prime(i)))).negate()
A320895	lambdan	0	n -> SU(1, n, k -> ZV(k).^(3).*(JF(k).sigma0()))	a(n) = sum(k=1, n, k^3*numdiv(k))
A320898	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(FA(k)).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"0,1"	new A000122()
A320899	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(FA(k)).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"0,1"	new A015128()
A320903	rowsum	0	new A320902()
A320916	lambdan	0	n -> SU(0, n - 1, i -> Z2(i).*(Integer.bitCount(i) & 1))	a(n) = sum(i=0, n-1, 2^i*(hammingweight(i)%2))
A320942	moetrafi	1	new A015128()	, 0	#
A320962	lambdan	0	n -> (n <= 0) ? Z.ZERO : Z_1(n - 1).*(FA(n - 1)).*(SU(0, n, i -> S2(n, i)))	if (n>0, (-1)^(n-1)*(n-1)!*sum(i=0, n, stirling(n, i, 2)), 0)
A321015	multraf	1	(self, n) -> self.s(0).+(self.s(1)).+(self.s(2))	""	new A000005(), new A321013(), new A321014()
A321051	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A259778().skip(5), new A259777().skip(5)	a(n) = A259778(n) -   A259777(n).
A321052	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A259779().skip(6), new A259778().skip(6)	a(n) = A259779(n) -   A259778(n).
A321069	lpf	1	ZV(n).^(3).+(2)
A321154	lambdir	0	n -> { final int r = IntegerUtils.floorLog2(n) + 1; return SEQ.a(n).*(r).-(SEQ.a(Z2(r).+(n))); }	new A002487()	a(n) = s(n)*r - s(2^r + n), where s(n) = A002487(n) starting at n = 0 and r = 1 + floor(log_2(n)).
A321225	lingf	1	0,1,2,3,211,23,2112,3211,2321,12321,23210,32110,21120,23000,21100,30000,20000,10000	1,0,0,0,0,0,0,0,0,-100001,0,0,0,0,0,0,0,0,100000	0
A321262	invtras	0	new A001065()	0	Expansion of 1/(1 - Sum_{k>=1} k*x^(2*k)/(1 - x^k)).
A321284	lambdan	0	n -> (Z2(ZV(3).^(n).*(35)).+(1)).*(2)
A321297	lambdan	0	n -> SD(n, d -> (d > 1 && d < n) ? ZV(d >= n/d ? d : -d) : Z.ZERO)	a(n) = sumdiv(n, d, if(d>1&&d<n, if(d>=n/d, d, -d)))
A321539	simtraf	0	new A000244()	v -> Functions.DIGIT_SORT_DESCENDING.z(v)	a(n) = A004186(A000244(n)). - _Michel Marcus_, Nov 10 2022
A321540	lambdan	0	n -> Functions.DIGIT_SORT_ASCENDING.z(ZV(3).^(n))	a(n) = A004185(A000244(n)). - _Michel Marcus_, Nov 10 2022
A321582	filter	1	new A000040()	p -> { final Z pp = p.*( 4).+(1); return pp.mod( 5) == 0 && pp./( 5).IPP(); }	[((\d+)#+(\d+))/(\d+)]&]	100, 4,1,5
A321633	simtraf	0	new A190830()	(n, v) -> FA(n).*(v)
A321856	lambdan	0	n -> SU(1, n, i -> (ZV(i).IPP() ? Z.ONE : Z.ZERO).*(KS( -3, i))).negate()
A321857	lambdan	0	n -> SU(1, n, i -> (ZV(i).IPP() ? Z.ONE : Z.ZERO).*(KS(  5, i))).negate()
A321858	lambdan	0	n -> SU(1, n, i -> (ZV(i).IPP() ? Z.ONE : Z.ZERO).*(KS( 12, i))).negate()
A321859	lambdan	0	n -> SU(1, n, i -> (ZV(i).IPP() ? Z.ONE : Z.ZERO).*(KS( -7, i))).negate()
A321860	lambdan	0	n -> SU(1, n, i -> (ZV(i).IPP() ? Z.ONE : Z.ZERO).*(KS(-11, i))).negate()
A321861	lambdan	0	n -> SU(1, n, i -> ZV(KS(  2, Puma.prime(i)))).negate()
A321862	lambdan	0	n -> SU(1, n, i -> ZV(KS(  5, Puma.prime(i)))).negate()
A321863	lambdan	0	n -> SU(1, n, i -> ZV(KS( 12, Puma.prime(i)))).negate()
A321864	lambdan	0	n -> SU(1, n, i -> ZV(KS( -7, Puma.prime(i)))).negate()
A321865	lambdan	0	n -> SU(1, n, i -> ZV(KS(-11, Puma.prime(i)))).negate()
A321902	trilamb0	1	(n, k)-> { int m = 1; final Z z2 = Z2(n); while (!z2.modPow(FA(m), ZV(2*k + 1)).equals(ZV(2*k + 1))) { m += 2; } return ZV(m); }	Mod(m,2^n)^(2*k+1)!=2*k+1,m+=2);m
A321903	trilamb0	1	(n, k)-> { int m = 1; final Z z2 = Z2(n); while (!z2.modPow(FA(m), ZV(m)).equals(ZV(2*k + 1))) { m += 2; } return ZV(m); }	Mod(m,2^n)^(-(2*k+1))!=2*k+1,m+=2)m
A321904	trilamb0	1	(n, k)-> { int m = 1; final Z z2 = Z2(n); while (!z2.modPow(FA(m), ZV(m)).equals(ZV(2*k + 1))) { m += 2; } return ZV(m); }	Mod(m,2^n)^(-m)!=2*k+1,m+=2)m
A321905	trilamb0	1	(n, k)-> { int m = 1; final Z z2 = Z2(n); while (!z2.modPow(FA(m), ZV(2*k + 1)).equals(ZV(m))) { m += 2; } return ZV(m); }	Mod(2*k+1,2^n)^m!=m,m+=2);m
A321906	trilamb0	1	(n, k)-> { int m = 1; final Z z2 = Z2(n); while (!z2.modPow(FA(m), ZV(2*k + 1)).equals(ZV(m))) { m += 2; } return ZV(m); }	Mod(2*k+1,2^n)^(-m)!=m,m+=2)m
A321995	insect2	1	new A306587()	new A306588()
A322025	ordtraf	0	new A322023()		(k, v) -> v.compareTo(ZV(k)) < 0	Ordinal transform of A322023.	nonn	1..65537	nyi	_Antti Karttunen_
A322078	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(2))).*(ZV(n).^(2)).num()	a(n) = n^2  * Sum_{p|n} 1/p^2, where p are primes dividing n
A322119	factexp	0	CR.ONE.subtract(CR.FIVE.sqrt()).divide(CR.TWO)	Factorial expansion of (1-sqrt(5))/2 = Sum_{n>=1} a(n)/n!.
A322126	simtraf	0	new A190833()	(n, v) -> FA(n).*(v)
A322292	#nyi	0		a(n) = Max_{c composite, c < n} (c  +  least prime factor of c)
A322301	filter	0	new A000040()	p -> ZV(2).^(p).*( 5).+( 1).IPP()	[(\d+)^#+(\d+)]&]		400, 52, 1
A322302	filter	0	new A000040()	p -> ZV(2).^(p).*(11).+( 1).IPP()	[(\d+)^#+(\d+)]&]		100,112, 1
A322312	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A185633()	new A181819()	a(n)=Annn(Annn(n))		D181819,A185633
A322333	factexp	0	CR.FIVE.log()	Factorial expansion of log(5) = Sum_{n>=1} a(n)/n!.
A322334	factexp	0	CR.THREE.log()	Factorial expansion of log(3) = Sum_{n>=1} a(n)/n!.
A322351	tuptraf	1	(n, s) -> s[0].min(s[1])	""	new A003557(), new A173557()	a(n)=min(Annn(n),Annn(n))
A322352	tuptraf	1	(n, s) -> s[0].max(s[1])	""	new A003557(), new A173557()	a(n)=max(Annn(n),Annn(n))
A322371	#nyi	0		Proof: By Stewarts theorem (see link), since a(n) is practical, each prime factor of a(n) is at most 1 plus the sum of divisors of the product of the smaller primes in a(n). In particular, dividing a(n) by its largest prime factor will leave a practical number, since the criterion applies inductively on the product of smaller primes, so if the largest prime factor of a(n) is greater than p or the exponent of p is greater than 1, then a(n) can be reduced to a smaller multiple of p and is thus not minimal
A322505	factexp	0	CR.SQRT2.inverse()	Factorial expansion of 1/sqrt(2) = Sum_{n>=1} a(n)/n!.
A322506	factexp	0	CR.TWO.exp().inverse()	Factorial expansion of 1/exp(2) = Sum_{n>=1} a(n)/n!.
A322508	factexp	0	CR.valueOf(new Q(1, 3)).gamma()	Factorial expansion of Gamma(1/3) = Sum_{n>=1} a(n)/n!.
A322509	factexp	0	CR.valueOf(new Q(2, 3)).gamma()	Factorial expansion of Gamma(2/3) = Sum_{n>=1} a(n)/n!.
A322556	lambdan	0	n -> (Z2(n).-(1)).*(Z2(n*n-n))
A322568	#nyi	0		Integers k such that the least prime factor of 2^k  -  1 is not in â¬122094
A322584	moetrafi	1	new A322585()	, 0	#
A322604	factexp	0	CR.GAMMA.exp()	Factorial expansion of exp(gamma) = Sum_{n>=1} a(n)/n! with a(n) as large as possible.
A322701	tuptraf	0	(n, s) -> s[0].^(3).-(3).mod(Z2(n)).isZero() ? s[0] : s[0].+(Z2(n - 1))	"0"	PREVIOUS	For n > 0, a(n) = a(n-1) if a(n-1)^3 - 3 is divisible by 2^n, otherwise a(n-1) + 2^(n-1).
A322755	lambdan	0	n -> new Q(Z2(2*n - 1), BI(2*n,n)).+(n).+(Q.HALF).num()
A322756	lambdan	0	n -> new Q(Z2(2*n - 1), BI(2*n,n)).+(n).+(Q.HALF).den()
A322868	rgs1	1	new DirectTransformSequence(1, new A278222(), new A048675())	, or equivalently, of A278222(A322821(n)).
A322874	ordtraf	0	new A007431()		(k, v) -> v.compareTo(ZV(k)) < 0	Ordinal transform of A007431, which is Mââbius transform of Euler phi.	nonn	1..65537	nyi	_Antti Karttunen_
A322913	simtraf	1	new A032173().skip(2)	(n, v) -> v.*(n)	the sequence (n*A032173(n+2): n >= 1).
A322926	multrar	0	(self, n) -> { final Z v = self.a(n - 1).^(3).-(5).makeOdd(); return (v.auxiliary() >= n) ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1)); }	"0"		a(n) = a(n-1) if a(n-1)^3 - 5 is divisible by 2^n, otherwise a(n-1) + 2^(n-1).
A322934	multrar	0	(self, n) -> { final Z v = self.a(n - 1).^(3).-(7).makeOdd(); return (v.auxiliary() >= n) ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1)); }	"0"		a(n) = a(n-1) if a(n-1)^3 - 7 is divisible by 2^n, otherwise a(n-1) + 2^(n-1).
A322994	simtraf	1	new A156552()	v -> v.makeOdd()
A322999	multrar	0	(self, n) -> { final Z v = self.a(n - 1).^(3).-(9).makeOdd(); return (v.auxiliary() >= n) ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1)); }	"0"		a(n) = a(n-1) if a(n-1)^3 - 9 is divisible by 2^n, otherwise a(n-1) + 2^(n-1).
A323071	simtraf	1	new A060681()	(n, v) -> v.+(1).gcd(n)	a(n)=gcd(n,(\d+)+Annn(n))	1
A323129	#nyi	0		a(1) = 1, and for any n > 1, let p be the Largest prime factor of n, and e be its exponent, then a(n) = p^a(e)
A323130	#nyi	0		a(1) = 1, and for any n > 1, let p be the least prime factor of n, and e be its exponent, then a(n) = p^a(e)
A323160	simtraf	1	new A323159()	(n, v) -> v.gcd(n)	a(n)=gcd(n,Annn(n))
A323167	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A323174(), new A322867()	a(n) = A323174(n) -   A322867(n).
A323171	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numerator of the average of distinct prime factors of n (A008472(n)/A001221(n)).	nonn,frac	2..20000	nyi	_Antti Karttunen_
A323243	dirtraf	1	new A000203()	new A156552()	(n, v) -> v	0	,0,1,A000203,A156552	a((\d+))= (\d+); for n >(\d+), a(n)= Annnnnn(Annnnnn(n))
A323339	simtraf	0	new A007840()	(n, v) -> new Q(v, FA(n)).num()	a(n)=numerator(Annn(n)/n!)
A323340	simtraf	0	new A007840()	(n, v) -> new Q(v, FA(n)).den()	a(n)=denominor(Annn(n)/n!)
A323377	arrlamb	1	1	1	1	(n, k)-> ZV(KS(Puma.prime(n), Puma.prime(k)))
A323378	arrlamb	1	1	1	1	(n, k)-> ZV(KS(-n, k))
A323584	moetra	1	new A300275()	, 0	Second Moebius transform of A000219. Number of plane partitions of n whose multiset of rows is aperiodic and whose multiset of columns is also aperiodic.
A323585	moetra	1	new A323584()	, 0	Third Moebius transform of A000219. Number of plane partitions of n whose multiset of rows is aperiodic and whose multiset of columns is also aperiodic and whose parts are relatively prime.
A323631	stir2	0	new A000129()	, 0	Stirling transform of A000129
A323664	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A002426() 	Sum_{k=1..n} A002426(k)*binomial(n-1,k-1)*a(n-k).
A323666	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A000984()
A323667	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A001405()
A323668	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A001700()
A323672	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A001006()
A323774	lambdan	0	n -> (n==0) ? ZV(1) : SD(n, d -> BI(JF(d  ).sigma0AsLong() + n/d - 1, n/d))
A323776	lambdan	0	n -> SU(1, n, k -> BI(Z2(n - k).+(k - 1), ZV(k - 1)))
A323884	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A322026(), new A323883()	a(n) = A322026(n) +   A323883(n).
A323905	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A156552(), new A048675()	a(n) = A156552(n) -   A048675(n).
A323908	#nyi	0	nyi Fo  Reversing binary representation of A004718, Per N?rg?rd
A323909	#nyi	0	nyi Fo  Balanced ternary representation of A004718, Per N?rg?rd
A324050	filnum	1	1	k -> (k - 1) % Functions.CARMICHAEL_LAMBDA.i(k) == 0	Numbers n such that A002322(n) divides n-1.
A324052	dirtraf	0	new A083254()	new A005940()	,1	a(n)= Annnnnn(Annnnnn((\d+)+n))	
A324103	multraf	1	(self, n) -> self.s(0).*(2).-(self.s(1))	""	new A324104(), new A156552()
A324104	dirtraf	1	new A000010()	new A156552()	(n, v) -> v	0	,0,1,A000010,A156552	a((\d+))= (\d+); for n >(\d+), a(n)= Annnnnn(Annnnnn(n))
A324105	dirtraf	1	new A000005()	new A156552()	(n, v) -> v	0	,0,1,A000005,A156552	a((\d+))= (\d+); for n >(\d+), a(n)= Annnnnn(Annnnnn(n))
A324106	#muldir	1	new A005940()	mSeq.a(p.pow(e).intValueEaxct())	a(p^e) = A005940(p^e).	nonn,mult	1..16384	nyi	_Antti Karttunen_
A324108	#muldir	1	new A005940()	Jaguar.factor(mSeq.a(p.pow(e).intValueEaxct())).sigma()	 = A324054((p^e)-1).	A000203(A005940(1+n))
A324116	dirtraf	1	new A002487()	new SimpleTransformSequence(1, new A323247(), (n, v) -> v.+(1))
A324182	dirtraf	0	new A083254()	new A163511()	"null"		0				a(n) = A083254(A163511(n)), where A083254(n) = 2*phi(n) - n, the Mââbius transform of the deficiency of n.
A324189	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A324184(), new A324188()
A324201	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A000043()	new A062457()	a(n)=Annn(Annn(n))		D062457,A000043
A324285	dirtraf	1	new A002487()	new A297168()
A324288	dirtraf	0	new A002487()	new SimpleTransformSequence(1, new A005187(), (n, v) -> v.+(1))
A324294	dirtraf	1	new A002487()	new SimpleTransformSequence(1, new A000203(), (n, v) -> v.+(1))
A324338	dirtral	0	new A002487()	new A233279()	(n, v) -> n == 0 ? Z.ONE : v
A324396	dirtraf	1	new A009194()	new A156552()	(n, v) -> v	0	,0,1,A009194,A156552	a((\d+))= (\d+); for n >(\d+), a(n)= Annnnnn(Annnnnn(n))
A324470	partsun	0	new A092782()			Partial sums of ternary tribonacci word A092782.
A324545	#nyi	0		a(1) = 1; for n > 1, let p = A020639(n) [the Least prime factor of n], then a(n) = (((p^(1 + â¬302045(n))) - 1) / (p - 1)) * a(â¬302044(n))
A324574	dirtraf	1	new A033879()	new A087207()	(n, v) -> v	0	,0,1,A033879,A087207	a((\d+))= (\d+); for n >(\d+), a(n)= Annnnnn(Annnnnn(n))
A324575	tuptraf	0	(n, s) -> s[0].*(2).-(s[1])	""	new A048675(), new A324573()	a(n) = 2* A048675(n) -    A324573(n).
A324639	#filamb	0	1	k -> { final Z sig = JF(k).sigma(); return k.*(2).and(sig)     .equals(Z.TWO.*(ZV(k).and(sig.-(k)))); }	Numbers k such that bitand(2k,sigma(k)) = 2*bitand(k,sigma(k)-k), where bitand is bitwise-AND, A004198.	nonn	1..20000	nyi	_Antti Karttunen_
A324643	#filamb	0	1	k -> { final Z sig = JF(k).sigma(); return k.*(2).and(sig)./(2).equals(ZV(k).*); }	Numbers k such that bitand(2k,sigma(k))/2 = k = bitand(k,sigma(k)-k), where bitand is bitwise-AND, A004198.	nonn	1..17020	nyi	_Antti Karttunen_
A324718	#filamb	0	1	k -> { final Z sig = JF(k).sigma(); return 	Odd numbers n for which bitand(2n,sigma(n)) = 2*bitand(n,sigma(n)-n), where bitand is bitwise-AND, A004198.	nonn	1..20000	nyi	_Antti Karttunen_
A324719	#filamb	0	1	k -> { final Z sig = JF(k).sigma(); return 	Odd numbers n for which bitor (2n,sigma(n)) = 2*bitor (n,sigma(n)-n), where bitor is bitwise-OR, A003986.	nonn	1..20000	nyi	_Antti Karttunen_
A324726	#filamb	0	1	k -> { final Z sig = JF(k).sigma(); return 	Numbers such that 2n is equal to A318466(n), bitor(2*n,sigma(n)), where bitor is A003986.	nonn	1..20000	nyi	_Antti Karttunen_
A324727	filnum	1	1	n -> 2*n == (2*n | Functions.SIGMA.i(2*n))	 Odd numbers such that 2n is equal to A318466(n), bitor(2*n,sigma(n)), where bitor is A003986.
A324790	filtpos	0	0	new A022837()	v -> v.equals(ZV(0))	Indices of (\d+)s in Annnnnn	m	i 
A324813	filamb	0	1	k -> { final Z v = new A156552().a(k); return v.isSquare() || v./(2).isSquare(); }	Numbers n for which A156552(n) is a square or a twice a square.	nonn,base	1..10000	nyi	_Antti Karttunen_
A324814	filtpos	0	1	new A156552()	(k, v) -> JF(v).sigma().and(Z.THREE).equals(Z.TWO)	Numbers n > 1 for which sigma(A156552(n)) == 2 (mod 4).	nonn	1..68	nyi	_Antti Karttunen_
A324898	#filamb	0	1	k -> k.testBit(0) && JF(k).sigma().and(Z.THREE).equals(Z.TWO)	Odd numbers k such that sigma(k) is congruent to 2 modulo 4 and k = â¬318458(k), where â¬318458(k) is bitwise-AND of k and sigma(k)-k.	nonn	1..29	nyi	_Antti Karttunen_
A324899	filamb	0	1	k -> k.testBit(0) && JF(k).sigma().and(Z.THREE).equals(Z.THREE)	Odd numbers n for which sigma(n) == 3 (mod 4).	nonn	1..10000	nyi	_Antti Karttunen_
A324902	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A324904(), new A324903()	a(n)=Annn(n)-Annn(n)
A324903	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A361023(), new A361024()
A324909	filamb	0	1	k -> k.testBit(0) && JF(k.^(2)).sigma().and(Z.THREE).equals(Z.THREE)	sigma(n^2) == 3 (mod 4).	nonn	1..10000	nyi	_Antti Karttunen_
A324911	#muldir	1	new A156552()	mSeq.a(p.pow(e).intValueEaxct())	a(p^e) = A156552(p^e).	nonn,mult	1..4096	nyi	_Antti Karttunen_
A325006	arrlamb	1	1	1	-1	(n, k) -> BI(BI(k, 2), n)
A325007	arrlamb	1	1	1	-1	(n, k) -> BI(BI(k + 1, 2).+(n - 1), n).-(BI(BI(k, 2), n))
A325225	tuptraf	1	(n, s) -> s[0].min(s[1])	""	new A001222(), new A061395()	a(n)=min(Annn(n),Annn(n))
A325226	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A001222(), new A071178()
A325311	simtraf	1	new A325312()	v -> v.^(2)	. - _Amiram Eldar_, Apr 05 2024
A325312	filamb	0	1	k -> { final Z sikk = JF(k.^(2)).sigma(); return k.testBit(0) && sikk.and(Z.THREE).equals(Z.THREE) && sikk.compareTo(k.^(2).*(2)) > 0; } 	sigma(n^2) == 3 (mod 4) and sigma(n^2) > 2*n^2.	nonn	1..10000	nyi	_Antti Karttunen_
A325316	multraf	1	(self, n) -> self.s(0).or(self.s(1))	""	new A048250(), new A162296()
A325498	diffs	0	new A036668()	Difference sequence of Annnnnn
A325499	diffs	0	new A325424()	Difference sequence of Annnnnn
A325508	lambdir	0	n -> SEQ.a(FA(n))	new A181819()	a(n)=Annn(n!)		D181819
A325637	filamb	0	1	k -> k.*(2).gcd(JF(k).sigma()).equals(k.*(2))	Numbers n for which gcd(2n, sigma(n)) = 2n.	nonn	1..1013	nyi	_Antti Karttunen_
A325655	tablamb	1	1	n -> new Integer[] { 0, n - 1 }	(n, k) -> (ZV(2).*(Z.NEG_ONE.+(Z_1(n))).*(k).-(ZV(k).^(2).*(2*n)).+(ZV(n).*(ZV(2).-(Z_1(k)).-(Z_1(n)).+(ZV(n).^(2).*(2)))))./(4)	
A325892	multrar	0	(self, n) -> { final Z v = self.a(n - 1).^(5).-(3).makeOdd(); return (v.auxiliary() >= n) ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1)); }	"0"		a(n) = a(n-1) if a(n-1)^5 - 3 is divisible by 2^n, otherwise a(n-1) + 2^(n-1).
A325893	multrar	0	(self, n) -> { final Z v = self.a(n - 1).^(5).-(5).makeOdd(); return (v.auxiliary() >= n) ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1)); }	"0"		a(n) = a(n-1) if a(n-1)^5 - 5 is divisible by 2^n, otherwise a(n-1) + 2^(n-1).
A325894	multrar	0	(self, n) -> { final Z v = self.a(n - 1).^(5).-(7).makeOdd(); return (v.auxiliary() >= n) ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1)); }	"0"		a(n) = a(n-1) if a(n-1)^5 - 7 is divisible by 2^n, otherwise a(n-1) + 2^(n-1).
A325895	multrar	0	(self, n) -> { final Z v = self.a(n - 1).^(5).-(9).makeOdd(); return (v.auxiliary() >= n) ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1)); }	"0"		a(n) = a(n-1) if a(n-1)^5 - 9 is divisible by 2^n, otherwise a(n-1) + 2^(n-1).
A325974	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A000203(), new A325973()	a(n) = A000203(n) -   A325973(n).
A325979	#filtpos	0	0	new ()	(k, v) -> k.testBit(0) && v.compareTo(ZV(k)) < 0	Odd numbers k for which gcd(A325977(k), A325978(k)) is equal to abs(A325978(k)).	nonn	1..281	nyi	_Antti Karttunen_
A326044	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A033879(), new A326045()	a(n) = A033879(n) +   A326045(n).
A326066	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A000203(), new A326065()
A326073	#nyi	0		a(n) = gcd(1 + n - A020639(n), 1 + sigma(n) - A020639(n) - n), where A020639 gives the Least prime factor of n (and 1 for 1), and sigma is the sum of divisors of n
A326133	filtpos	0	1	new A005187()	(k, v) -> v.compareTo(JF(k).sigma()) < 0	Numbers n for which sigma(n) > A005187(n).	nonn	1..16260	nyi	_Antti Karttunen_
A326136	simtraf	0	new A028234()	(n, v) -> JF(n).sigma().-(JF(v).sigma())	a(n) = sigma(n) - sigma(A028234(n))
A326145	filtpos	0	1	new A007947()	(k, v) -> ZV(k).-(v).equals(JF(k).sigma().gcd(ZV(k).-(v)))	Numbers n for which n - A007947(n) is equal to gcd(n - A007947(n), sigma(n) - A007947(n) - n).	nonn,more	1..7	nyi	_Antti Karttunen_
A326181	filtpos	0	1	new A000203()	(k, v) -> v.*(3).equals(JF(v).sigma())	Numbers n for which sigma(sigma(n)) = 3*sigma(n).	nonn	1..756	nyi	_Antti Karttunen_
A326183	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n for which A003961(n) <= A064989(sigma(A003961(n))), but which are not squares.	nonn	1..24	nyi	_Antti Karttunen_
A326200	rgs1	1	new LambdaSequence(1, n -> JF(n).sigma()./(n))
A326222	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A000273(), new A326225()
A326844	multraf	1	(self, n) -> self.s(0).*(self.s(1)).-(self.s(2))	""	new A001222(), new A061395(), new A056239()	a(n)=Annn(n)*Annn(n)-Annn(n)
A326895	rowsum	1	new A305541()
A326935	#nyi	0		a(1) = 1; a(n) = the largest prime factor of a(n - 1) if a(n - 1) is a composite number, otherwise a(n)=a(n - 1) + n
A327114	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A001187(), new A013922()
A327136	filnum	1	1	k -> { final CR c2k[] = new CR[] {CV(2*k).sin(), CV(2*k + 2).sin(), CV(2*k + 4).sin()}; return c2k[0].compareTo(c2k[1]) > 0 && c2k[1].compareTo(c2k[2]) < 0 ; }	CV(k).sin(2*k) > sin(2*k + 2) < sin(2*k + 4)
A327137	filnum	1	1	k -> { final CR c2k[] = new CR[] {CV(2*k).sin(), CV(2*k + 2).sin(), CV(2*k + 4).sin(), CV(2*k + 6).sin()}; return c2k[0].compareTo(c2k[1]) > 0 && c2k[1].compareTo(c2k[2]) > 0 && c2k[2].compareTo(c2k[3]) < 0; }	CV(k).sin(2*k) > sin(2*k + 2) > sin(2*k + 4) < sin(2*k + 6)
A327138	filnum	1	1	k -> { final CR c2k[] = new CR[] {CV(2*k).cos(), CV(2*k + 2).cos()}; return c2k[0].compareTo(c2k[1]) < 0; }	cos(2*k) < cos(2*k + 2)
A327139	filnum	1	1	k -> { final CR c2k[] = new CR[] {CV(2*k).cos(), CV(2*k + 2).cos(), CV(2*k + 4).cos()}; return c2k[0].compareTo(c2k[1]) > 0 && c2k[1].compareTo(c2k[2]) < 0 ; }	CV(k).cos(2*k) > cos(2*k + 2) < cos(2*k + 4)
A327140	filnum	1	1	k -> { final CR c2k[] = new CR[] {CV(2*k).cos(), CV(2*k + 2).cos(), CV(2*k + 4).cos(), CV(2*k + 6).cos()}; return c2k[0].compareTo(c2k[1]) > 0 && c2k[1].compareTo(c2k[2]) > 0 && c2k[2].compareTo(c2k[3]) < 0; }	CV(k).cos(2*k) > cos(2*k + 2) > cos(2*k + 4) < cos(2*k + 6)
A327165	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers n that have a divisor d such that sigma(d)*d is equal to n.	nonn	1..10001	nyi	_Antti Karttunen_
A327430	filtpos	1	01	new A080383()	v -> v.equals(ZV(5))	Numbers k such that there are exactly 5 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., â¬080383(k) = 10.	nonn	1..5113	nyi	_Labos Elemer_
A327431	filtpos	1	0	new A080383()	v -> v.equals(ZV(9))	Numbers k such that there are exactly 9 numbers j for which binomial(k, floor(k/2)) / binomial(k,j) is an integer, i.e., â¬080383(k) = 10.	nonn	1..5113	nyi	_Labos Elemer_
A327474	tuptraf	0	(n, s) -> s[0].*(2).-(s[1]).+(JF(n - 1).phi())	"1,2,4,6"	PREVIOUS,PREVIOUS,PREVIOUS,PREVIOUS	a:= proc(n) option remember; `if`(n<4, [1, 2, 4, 6][n+1],2*a(n-1)-a(n-2)+numtheory[phi](n-1))
A327563	rowsum	0	new A119687()
A327738	invtras	0	new A046951()	0	.
A327739	invtras	0	new A038548()	0	.
A327764	invtras	0	new A007862()	0	.
A327798	invtras	0	new A032741()	0	.
A327862	filamb	0	1	k -> JF(k).arithmeticDerivative().mod(Z.FOUR).equals(Z.TWO)	Numbers whose arithmetic derivative is of the form 4k+2, cf. A003415.	nonn	1..10000	nyi	_Antti Karttunen_
A327867	filter	0	new A304526()	(n, v) -> (n & 1) == 0	a(n) =            A304526(2*n)	Even bisection of Mââbius transform of A064664, the inverse of EKG-sequence.	sign	1..16384	nyi	_Antti Karttunen_
A327930	#nyi	0	Product_{d|n, d>1} prime(A003415(d)), where A003415(x) gives the arithmetic derivative of x.	nonn	1..8192	nyi	_Antti Karttunen_
A327933	filamb	0	1	k -> JF(JF(k).arithmeticDerivative()).leastPrimeFactor().equals(Z.THREE)	Numbers such that the smallest prime factor of their arithmetic derivative is 3.	nonn	1..10000	nyi	_Antti Karttunen_
A327935	#nyi	0		Numbers for which the Least prime factor of their arithmetic derivative is 5
A327978	#filamb	0	1	k -> ZUtils.isPrimorial(JF(k).arithmeticDerivative())	Numbers whose arithmetic derivative (A003415) is a primorial number (A002110) > 1.	nonn	1..10000	nyi	_Antti Karttunen_
A327980	diffs	0	new A327985()	First differences of A327985, which gives indices of zeros in A051023.
A327981	diffs	0	new A327984()	First differences of A327984, which gives indices of ones in A051023.
A328004	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n, k)).*(self.a(n - k)))	"0,1"	new A000984()
A328006	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n, k)).*(self.a(n - k)))	"0,1"	new A000108()
A328232	#filamb	0	1	k -> { final Z ard = JF(k).arithmeticDerivative(); return ard.equals(Z.ONE) || ZUtils.isPrimorial(ard); }	Numbers whose arithmetic derivative (A003415) is a primorial number, including cases where it is the first primorial, A002110(0) = 1.	nonn	1..10000	nyi	_Antti Karttunen_
A328244	filtpos	0	1	new A068346()	SQUAREFREE	Numbers whose second arithmetic derivative (A068346) is a squarefree number (A005117).	nonn	1..10000	nyi	_Antti Karttunen_
A328245	filtpos	0	1	new A068346()	(k, v) -> JF(v).isSquareFree() && !JF(JF(k).arithmeticDerivative()).isSquareFree()	Numbers whose second arithmetic derivative (A068346) is a squarefree number (A005117), but the first derivative (A003415) is not.	nonn	1..10000	nyi	_Antti Karttunen_
A328247	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers whose third arithmetic derivative (A099306) is a squarefree number (A005117), but the second derivative (A068346) is not.	nonn	1..10000	nyi	_Antti Karttunen_
A328503	#nyi	0		a(1) = 1; a(n) = the least prime factor of a(n - 1) if a(n - 1) is a composite number, otherwise a(n) = a(n - 1)  +  n
A328614	simtraf	0	new A049345()	(k, v) -> ZV(ZUtils.digitCounts(v)[1])	Number of 1-digits in primorial base expansion of n.	nonn	0..32768	nyi	_Antti Karttunen_
A328638	#nyi	0		a(n) is the sum of m such that 2 <= m <= n and gpf(m) = gpf(n), where gpf(i) is the Largest prime factor of i (A006530), with a(1) = 1
A328989	multraf	1	(self, n) -> self.s(0).-(self.s(1))./(3)	""	new A000041(), new A053274()	(A000041(n) - A053274(n))/3
A329036	dirtraf	1	new A000005()	new A280491()	"null"		1				Number of common divisors of n and A122111(n).
A329274	invtras	0	new A000031()	0	.
A329275	invtras	0	new A001037()	0	.
A329276	invtras	0	new A000048()	0	.
A329348	multraf	1	(self, n) -> self.s(0).mod(self.s(1))	""	new A331188(), new A117366()
A329372	dirichcon2	0	new A000203()	1	new A297112()	1	Equally, Dirichlet convolution of sigma (A000203) with A297112 (Moebius transform of A156552).
A329374	dirtraf	0	new A000265()	new A329372()	(n, v) -> v	0
A329434	multrad	0	(self, n) -> SD(n, d -> SEQ.a(d))	""	new A000700()	a(n)=Sum_{d|n}Annn(d)    		D000700     
A329435	moetrafi	1	new A002865()	, 0	#
A329436	moetrafi	1	new A025147()	, 0	#
A329437	moetrafi	1	new A000607()	, 0	#
A329438	moetrafi	1	new A000586()	, 0	#
A329439	moetrafi	1	new A001156()	, 0	#
A329462	moetrafi	1	new A033461()	, 0	#
A329465	moetrafi	1	new A007294()	, 0	#
A329466	moetrafi	1	new A024940()	, 0	#
A329470	multrar	0	(self, n) -> self.a(n - 1).square().+(1)	"1,1"	a(n) = 2 a(n-1)^2 + 1 for n >=2 , where a(0) = 1, a(1) = 1.	nonn	0..9
A329471	multrar	0	(self, n) -> self.a(n - 1).square().+(3)	"1,3"	a(n) = a(n-1)^2 + 3 for n >=2 , where a(0) = 1, a(1) = 3.	nonn	0..8
A329722	lambdan	0	n -> SU(0, n, k -> BI(n + 2*k, 2*n - k).*(BI(n, k)).modZ(2))	a(n) = Sum_{k=0..n} ((binomial(n+2k,2n-k)*binomial(n,k)) mod 2).
A329897	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which the 2-adic and 3-adic valuations of A025487(k) are equal, where A025487(k) is the k-th number which is a product of primorial numbers.	nonn	1..7806	nyi	_Antti Karttunen_
A329966	lambdan	0	n -> RD(n, d -> new Q(BI(n - 1, d - 1), FA(d))).*(FA(n)).num()
A329967	multrar	0	(self, n) -> SU(1, n, k -> S1(n, k).*(self.a(n - k)))	"1"
A329968	multrar	0	(self, n) -> SU(1, n, k -> SA(n, k).*(self.a(n - k)))	"1"
A330019	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n, k)).*(self.a(n - k)))	"0,1"	new A001405()
A330037	simtraf	0	new A055778()	v -> v.modZ(2)	a(n)=Annn(n)mod(\d+)	2	A055778
A330343	simtraf	1	new A003400()	(n, v) -> FA(n).*(v)
A330353	multrar	1	(self, n) -> SU(1, n, k -> S2(n, k).*(FA(k - 1)).*(Sigma(k)))	"1"
A330354	multrar	1	(self, n) -> SU(1, n, k -> S1(n, k).*(FA(k - 1)).*(Sigma(k)))	"1"
A330378	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A115995().skip(1), new A000041().skip(1)
A330437	#nyi	0		Length of trajectory of n under the map n -> n  -  1  +  n/gpf(n) or 0 if no fixed point is reached, where gpf(n) is the Largest prime factor of n
A330492	#nyi	0		a(n) = (n/p - 1)*(p - 1), where p is the least prime factor of n.  -  _Nathaniel Gregg_, Apr 04 2021
A330494	multrar	1	(self, n) -> SU(1, n, k -> Z_1(n - k).*(S1(n, k)).*(FA(k - 1)).*(Sigma(k)))	"1"
A330591	lambdir	1	n -> SEQ.a(ZV(6).^(n).+(1))	new A006577()	a(n)=Annn((\d+)^n+(\d+))	6,1	D006577
A330641	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A330640(), new A117485()
A330645	simtraf	0	new A067142()	v -> v.*(2)	a(n) = 2 * A067142(n).
A330841	multraf	1	(self, n) -> self.s(0).*(9).*(self.s(1))	""	new A152922().skip(1), new A133049().skip(1)	a(n)=Annn(n+(\d+))*(\d+)*Annn(n+(\d+))	1,9,1
A331032	#nyi	0		Number of iterations of n -> n  +  gpf(n) needed for the trajectory of n to join the trajectory of A076271, where gpf(n) is the Largest prime factor of n
A331109	muldirs	0	(p, e) -> Z2(SEQ.a(e))	new A112310()	Multiplicativewitha(p^e)=(\d+)^Annn(e)	2	A112310
A331206	filtpos	0	1	new A053985().skip(1)	(k, v) -> ZV(k).mod(v).isZero()	Numbers k such that A053985(k) divides k.
A331289	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A329348(), new A001222()	a(n)=Annn(n)-Annn(n)
A331290	multraf	1	(self, n)-> self.s(0).gcd(self.s(1))	""	new A001222(), new A329348()
A331291	multraf	0	(self, n) -> self.s(0).*(self.s(1))	"1,1,1"	new A001222(), new A329348()	a(n) = D001222(n) * A329348(n).
A331297	rgs2	1	new A001222()	new A061395()	Restricted growth sequence transform of the unordered pair [A001222(n), A061395(n)].
A331300	rgs1	1	new A331166()	Restricted growth sequence transform of A331166. See comments in that sequence.
A331304	rgs1	1	new SimpleTransformSequence(1, new A000720(), (n, v) -> (n <= 4) ? ZV(n) : (ZV(n).isProbablePrime() ? v.and(Z.ONE).shiftLeft(1).+(3) : ZV(n + 3).-(v)))	For n <= 4, a(n) = n, for n > 4, if n is prime, a(n) = 3 + 2*A000035(A000720(n)), otherwise a(n) = 3 + n - A000720(n).
A331410	#nyi	0		a(n) is the number of iterations needed to reach a power of 2 starting at n and using the map k -> k  +  k/p, where p is the largest prime factor of k
A331424	filter	0	new A000040()	p -> ZV(31).^(p.-(1)).-(1).mod(p.^(2)).equals(Z.ZERO)	Prime numbers p such that p^2 divides 31^(p-1) - 1
A331426	filter	0	new A000040()	p -> ZV(37).^(p.-(1)).-(1).mod(p.^(2)).equals(Z.ZERO)	Prime numbers p such that p^2 divides 37^(p-1) - 1
A331427	filter	0	new A000040()	p -> ZV(41).^(p.-(1)).-(1).mod(p.^(2)).equals(Z.ZERO)	Prime numbers p such that p^2 divides 41^(p-1) - 1
A331477	lambdan	0	n -> BI(BI(2*n - 1, n).+(n - 1), n)
A331504	lambdan	0	n -> BI(BI(n, 2), n*(n-1)/4)
A331602	dirtraf	1	new A007947()	new A156552()	(n, v) -> v	0	,0,1,A007947,A156552	a((\d+))= (\d+); for n >(\d+), a(n)= Annnnnn(Annnnnn(n))
A331748	multraf	0	(self, n) -> self.s(0).xor(self.s(1))	""	new A002487(), new A323901()	a(n) = A002487(n) XOR A323901(n) = A002487(n) XOR A002487(A163511(n)).
A331749	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A323901(), new A002487()
A331752	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that squarefree part of sigma(k) is equal to squarefree part of 2*k.	nonn	1..257	nyi	_Antti Karttunen_
A332004	moetraf	1	new A032020()	, 0	#
A332086	dirtral	0	new A000720()	new A014688()	(n, v) -> v.-(n)	A000720(A014688(n)) - n
A332203	lambdan	0	n -> Z2((1 << n)-1).+(1)
A332208	filamb	0	1	k -> JF(JF(k).sigma()).squareFreeKernel().equals(JF(k.*(2)).squareFreeKernel())	Numbers k such that the squarefree kernel of sigma(k) is equal to the squarefree kernel of 2*k.	nonn	1..256	nyi	_Antti Karttunen_
A332217	filamb	0	0	n -> { final Z v = JF(n).sigma(); return (v.testBit(0) ? Z.ONE : Z.ZERO).*(Z.valueOf(ZUtils.valuation(v, Z.THREE))).equals(Z.ONE); }	{n: A000035(A000203(n))*A007949(A000203(n))==1}.
A332226	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) is congruent to 2 modulo 8.	nonn	1..25000	nyi	_Antti Karttunen_
A332227	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that sigma(k) is congruent to 2 modulo 8.	nonn	1..25000	nyi	_Antti Karttunen_
A332300	#nyi	0		The least prime factor of the numerator of Bernoulli(2*n), or 1 if the numerator is 1
A332382	filter	0	new A019565()	(k, v) -> (k & 1) == 0
A332446	#filtpos	0	0	new A087808()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A087808(sigma(k)) is equal to A087808(2*k).	nonn	1..20751	nyi	_Antti Karttunen_
A332456	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(sigma(k)) is congruent to 6 modulo 8.	nonn	1..10000	nyi	_Antti Karttunen_
A332457	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) == 2 modulo 8 and sigma(sigma(k)) == 6 modulo 8.	nonn	1..10000	nyi	_Antti Karttunen_
A332466	lambdan	1	n -> RD(n, d -> new Q(FA(n).*(MU(d)), FA(d))       ).num()
A332467	lambdan	1	n -> RD(n, d -> new Q(FA(n).*(MU(d)), FA(d).^(n/d))).num()
A332470	lambdan	0	n -> SD(n, d -> BI(n + d - 2, n - 1).*(MU(n/d)))
A332480	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) > 0 && CV(k    ).cos().compareTo(CR.ZERO) > 0
A332481	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) > 0 && CV(k    ).cos().compareTo(CR.ZERO) < 0
A332482	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) < 0 && CV(k    ).cos().compareTo(CR.ZERO) > 0
A332483	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) < 0 && CV(k    ).cos().compareTo(CR.ZERO) < 0
A332484	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) > 0 || CV(k    ).cos().compareTo(CR.ZERO) > 0
A332485	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) > 0 || CV(k    ).cos().compareTo(CR.ZERO) < 0
A332486	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) < 0 || CV(k    ).cos().compareTo(CR.ZERO) > 0
A332487	filnum	1	1	k -> CV(k).sin().compareTo(CR.ZERO) < 0 || CV(k    ).cos().compareTo(CR.ZERO) < 0
A332558	multraf	1	(self, n) -> self.s(0).-(1)	"4"	new A061836()	v -> v.-(1)	for n >= 1.
A332584	multraf	1	(self, n) -> ZV(n).+(self.s(0))	""	new A332580()	n + new A332580() (trivially from the definitions)
A332732	muldirs	0	(p, e) -> SEQ.a(e)	new A163810()	Multiplicativewitha(p^e)=Annn(e)		A163810
A332812	filtpos	0	1	new A156552()	(k, v) -> v.mod(Z.THREE).equals(Z.TWO)	Numbers n for which A156552(n) == 2 (mod 3).	nonn	1..25000	nyi	_Antti Karttunen_
A332823	#simtraf	0	a(1) = 0; for n > 1, a(n) = A102283[(A067029(n) * (2-(A000035(A055396(n))))) + a(A028234(n))].
A332834	tuptraf	0	(n, s) -> Z2(n - 1).*(s[0]).-(s[1])	""	new A000041(), new A000005()
A333125	lambdan	0	n -> BI(FI(n), n)
A333176	lambdan	0	n -> SU(1, n, k -> BI(n, k).testBit(0) ? Puma.primeZ(k) : Z.ZERO)
A333183	lambdan	0	n -> SU(1, n, i -> Z.ONE.+(Integer.toString(2*i).length()))	Sum_{i=1..n} (1+floor(log_10(2*i))) a(n) = A058183(n) - Sum_{1..A058183(n)} A000035(A058183(n)).
A333216	prepend	0	new DifferenceSequence(0, new A064113())	2	First differences of A064113.
A333298	lingf	0	1,6,9	1,-12,-18	0						Number of canonical sequences of moves of length n for the Rubik cube puzzle using the half-turn metric.
A333588	multrar	1	(self, n) -> self.a(n - 1).*(3)./(2).negate()	"-2"	a(n) = floor(-(3/2)*a(n-1)), a(1)=-2.
A333646	#nyi	0		Numbers k divisible by the largest prime factor of the sum of divisors of k; a(1) = 1
A333695	simtraf	1	new A057660()	(n, v) -> new Q(v, ZV(n)).num()	a(n)=numerator(Annn(n)/n)
A333742	filnum	1	1	k -> Functions.CARMICHAEL_LAMBDA.z(k).equals(Functions.CARMICHAEL_LAMBDA.z(k + 2))	Numbers k such that lambda(k) = lambda(k+2),
A333922	lambdir	0	n -> Z.ONE.-(Z2(n).*(SEQ.a(n)./(SEQ.a(n + 1)).mod(ZV(2))))	new A002487()	a(n) = 1 - (floor(2^n*A002487(n)/A002487(n+1)) mod 2).
A333961	#nyi	0		Numbers k with property that k is the least logarithmically smooth numbers (meaning largest prime factor of k is less than log(k)) having squarefree kernel equal to squarefree kernel of k
A334093	filter	0	new A000040()	v -> new A329697().a(v).equals(Z.valueOf(3))	Primes p for which â¬329697(p) == 3.	nonn	1..53	nyi	_Antti Karttunen_
A334094	filter	0	new A000040()	v -> new A329697().a(v).equals(Z.valueOf(4))	Primes p for which â¬329697(p) == 4.	nonn	1..330	nyi	_Antti Karttunen_
A334095	filter	0	new A000040()	v -> new A329697().a(v).equals(Z.valueOf(5))	Primes p for which â¬329697(p) == 5.	nonn	1..1454	nyi	_Antti Karttunen_
A334096	filter	0	new A000040()	v -> new A329697().a(v).equals(Z.valueOf(6))	Primes p for which â¬329697(p) == 6.	nonn	1..4827	nyi	_Antti Karttunen_
A334163	filter	1	new A063657()	PRIME	. - _Charles Kusniec_, Sep 04 2022
A334197	recpos	0	new A334090()	, 1		Positions of records in A334090; After 1, positions of record jumps upward in A064097.	nonn,more	1..13	nyi	_Antti Karttunen_
A334276	multraf	1	(self, n) -> Puma.primeZ(self.s(0))	""	new A003593()	prime(new A003593())
A334313	#nyi	0	Denominators of the partial sums of the Moebius transform of the harmonic numbers.
A334314	#nyi	0	Numerators of the partial sums of the Moebius transform of the harmonic numbers.
A334341	lambdan	0	n -> SP(n, p -> ZV(n - p))	a(n) = Sum_{p|n, p prime} (n - p)
A334360	simtraf	2	new A001661()	v -> v.+(1)	a(n)=Annn(n)+(\d+)	1	A001661				Anti-Waring numbers: least number k such that k and all larger numbers can be expressed as the sum of one or more distinct n-th powers.
A334655	simtraf	1	new A067003()	v -> v.-(1)	.
A334721	lambdan	1	n -> RU(1, n, k -> new Q(Z_1(k+1), ZV(k))).*(n).den()
A334724	lambdan	1	n -> RU(1, n, j -> RU(1, n, i -> new Q(Z_1(i + j).*(i), ZV(j)))).den()
A334734	lambdan	1	n -> new Q(SU(1, n, k ->ZV(k).^(4)), PR(1, n, k -> ZV(k).^(4))).den()
A334735	lambdan	1	n -> new Q(SU(1, n, k ->ZV(k).^(2)), PR(1, n, k -> ZV(k).^(2))).den()
A334746	lambdan	1	n -> RU(1, n, k -> new Q(Z.ONE, Functions.PRIME.z(k).-(1).^(2))).den()
A334840	multrar	1	(self, n) -> { final Z g = self.a(n - 1).gcd(ZV(n)); return g.compareTo(Z.ONE) > 0 ? self.a(n - 1)./(g) : self.a(n - 1).*(4); }	"1"	a(n-1) / gcd(a(n-1),n) if this gcd is > 1, else a(n) = 4*a(n-1).	nonn	1..65
A334852	multrar	1	(self, n) -> { final Z g = self.a(n - 1).gcd(ZV(n)); return g.compareTo(Z.ONE) > 0 ? self.a(n - 1)./(g) : self.a(n - 1).+(2); }	"1"	a(n-1) / gcd(a(n-1),n) if this gcd is > 1, else a(n) = a(n-1) + 2.	nonn	1..75
A334867	rgs2	1	new A329697()	new A334204().skip(1)	Restricted growth sequence transform of the ordered pair [A329697(n), A334204(n)].
A334873	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A329697(), new A334204().skip(1)	a(n) = A329697(n) * A334204(n).
A334874	lambdan	1	n -> SU(1, n, k -> Z_1(k + 1).*(JF(k).sigma(k % 2)))
A334897	simtraf	1	new A064047()	(n, v) -> ZV(n).-(v)
A334942	multrar	1	(self, n) -> { final Z g = self.a(n - 1).gcd(ZV(n)); return g.compareTo(Z.ONE) > 0 ? self.a(n - 1)./(g) : self.a(n - 1).*(2).+(4); }	"1"	a(n-1) / gcd(a(n-1),n) if this gcd is > 1, else a(n) = 2*a(n-1) + 4.	nonn	1..81
A334943	multrar	1	(self, n) -> { final Z g = self.a(n - 1).gcd(ZV(n)); return g.compareTo(Z.ONE) > 0 ? self.a(n - 1)./(g) : self.a(n - 1).*(3).+(n + 1); }	"1"	a(n-1) / gcd(a(n-1),n) if this gcd is > 1, else a(n) = 3*a(n-1) + n + 1.	nonn	1..10000
A335023	multraf	1	(self, n) -> self.s(0)./(self.s(1))	"1,1"	new A334958(), PREVIOUS	a(n)=Annn(n+(\d+))/Annn(n)			1	A334958,A334958	Ratios of consecutive terms of A334958.
A335024	multraf	1	(self, n) -> self.s(0)./(self.s(1))	"1,1"	new A056612(), PREVIOUS	a(n)=Annn(n+(\d+))/Annn(n)			1	A056612,A056612	Ratios of consecutive terms of A056612.
A335129	multraf	3	(self, n) -> ZV(n - 3).-(self.s(0))	"0"	new A079978()	n - 3 - new A079978()
A335262	trilambn	0	0	0	(n, k) -> ZV(2*k - 1 - n).*(2*k - n)./(2)
A335422	multrafd	0	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A163511()	new A005940()	a(n)=Annn((\d+)+Annn(n))
A335508	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A000670(), new A080599()	a(n) = A000670(n) -   A080599(n). - _Andrew Howroyd_, Jan 28 2024
A335515	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A000670(), new A226316()	a(n) = A000670(n) -   A226316(n). - _Andrew Howroyd_, Jan 28 2024
A335587	multraf	0	(self, n) -> self.s(0).*(self.s(1))./(2)	""	new A035327(), new A080100()	a(n) = A035327(n) * A080100(n) / 2 for any n > 0.
A335871	lambdan	0	n -> (n == 0) ? Z.ONE : RU(1, n, k -> new Q(                BI(n,k).*(BI(n+(n-1)*k,k-1))) )./(n).num()	 for n > 0
A335909	parity	0	new A323173()	: a(n) = A000035(A323173(n)).
A335956	lambdan	0	n -> (n == 0) ? Z.ZERO : Z2(n).-(1).*(Z2(ZUtils.valuation(ZV(n), Z.TWO)))	a(n) = (2^n - 1)*2^valuation(n, 2) for n > 0 and a(0) = 0.
A335986	multrar	1	(self, n) -> SU(1, n - 1, k -> Z_1(k).*(S2(n - 1, k)).*(self.a(k)))	"1"
A336020	multrar	0	(self, n) -> SU(0, n - 3, k -> S2(n - 3, k).*(self.a(k)))	"1, 1, 1"
A336021	multrar	0	(self, n) -> SU(0, n - 4, k -> S2(n - 4, k).*(self.a(k)))	"1, 1, 1, 1"
A336022	multrar	0	(self, n) -> SU(0, n - 5, k -> S2(n - 5, k).*(self.a(k)))	"1, 1, 1, 1, 1"
A336113	lambdan	1	n -> RD(n, d -> (d & 1) == 1 ? new Q(1, d) : Q.ZERO).num()
A336214	lambdan	0	n -> (n==0) ? ZV(1) : SU(0, n, k -> ZV(k).^(n).*(BI(n, k).^(n)))
A336241	lambdan	1	n -> RD(n, d -> new Q(Z.ONE, FA(d).^(2))).*(FA(n).^(2)).num()
A336242	lambdan	1	n -> RD(n, d -> new Q(Z_1(d + 1), FA(d).^(2))).*(FA(n).^(2)).num()
A336247	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE     , FA(k).^(n)              )).*(FA(n).^(n)).num()	a(n) = (n!)^n * sum(k=0, n, 1          / (k!)^n)           	 \\ _Michel Marcus_, Jul 14 2020
A336248	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k)    , FA(k).^(n)              )).*(FA(n).^(n)).num()	a(n) = (n!)^n * sum(k=0, n, (-1)^(k)   / (k!)^n)           	 \\ _Michel Marcus_, Jul 14 2020
A336249	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE     , FA(k).^(n).*(FA(n - k)) )).*(FA(n).^(n)).num()	a(n) = (n!)^n * sum(k=0, n, 1          / ((k!)^n * (n-k)!))	 \\ _Michel Marcus_, Jul 14 2020
A336250	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1), ZV(k).^(n)              )).*(FA(n).^(n)).num()	a(n) = (n!)^n * sum(k=1, n, (-1)^(k+1) / (k)^n)            	 \\ _Michel Marcus_, Jul 14 2020
A336291	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE     , FA(n - k).^(2).*(k)     )).*(FA(n).^(2)).num()	a(n) = (n!)^2 * sum(k=1, n, 1          / (k * ((n-k)!)^2)) 	 \\ _Michel Marcus_, Jul 17 2020
A336292	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(n - k), FA(n - k).^(2).*(k)     )).*(FA(n).^(2)).num()	a(n) = (n!)^2 * sum(k=1, n, (-1)^(n-k) / (k * ((n-k)!)^2)) 	 \\ _Michel Marcus_, Jul 17 2020
A336316	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A336315(), new A034444()
A336347	spf	0	ZV(44745755).^(4).*(Z2(4*n + 2)).+(1)
A336352	#nyi	0		Number of prime divisors of sigma(n) that are larger than the largest prime factor of n; a(1) = 0
A336353	#nyi	0		Numbers k such that sigma(k) does not have any prime factor larger than the largest prime factor of k
A336354	#nyi	0		Numbers k such that p^2 divides k, where p = A006530(k), the largest prime factor of k, and sigma(k) does not have any prime factor larger than p
A336357	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) has fewer distinct prime factors than k.	nonn	1..64	nyi	_Antti Karttunen_
A336359	filtpos	0	0	new A001222()	(k, v) -> v.compareTo(JF(k).sigma()) > 0	Numbers k for which bigomega(sigma(k)) < bigomega(k), where bigomega (A001222) gives the number of prime factors with multiplicity, and sigma (A000203) gives the sum of divisors.	nonn	1..20000	nyi	_Antti Karttunen_
A336360	filtpos	0	0	new A001222()	(k, v) -> v.compareTo(JF(k).sigma()) <= 0	Numbers k for which bigomega(sigma(k)) >= bigomega(k), where bigomega (A001222) gives the number of prime factors with multiplicity, and sigma (A000203) gives the sum of divisors.	nonn	1..82	nyi	_Antti Karttunen_
A336363	#nyi	0		Number of iterations of map k -> k*sigma(p^e)/p^e needed to reach a power of 2, where p is the largest prime factor of k and e is its exponent, when starting from k = n. a(n) =  - 1 if number of the form 2^k is never reached
A336395	#rgs2	1	new ()	new ()	Restricted growth sequence transform of the function f(n) = A278221(A000265(n)), the prime signature of the conjugated prime factorization of the
A336458	filtpos	0	1	new A065330()	(k, v) -> v.equals(new A065330().a(JF(k).sigma()))	Numbers k for which A065330(k) = A065330(sigma(k)).	nonn	1..43	nyi	_Antti Karttunen_
A336460	rgs3	1	new A278222().skip(1)	new A336158()	new A336466()	Restricted growth sequence transform of the ordered triple [A278222(n), A336158(n), A336466(n)].
A336461	filamb	0	1	k -> { final A335915 seq = new A335915(); final Z sig = JF(k).sigma(); return seq.a(k).equals(seq.a(sig)); }	Numbers k for which A335915(k) = A335915(sigma(k)).	nonn	1..62	nyi	_Antti Karttunen_
A336462	filamb	0	1	k -> { final A335915 seq = new A335915(); final Z sig = JF(k).sigma(); final Z sig2 = JF(sig).sigma(); return seq.a(sig).equals(seq.a(sig2)); }	Numbers k for which A335915(sigma(k)) = A335915(sigma(sigma(k))).	nonn	1..68	nyi	_Antti Karttunen_
A336463	filamb	0	1	k -> { final A335915 seq = new A335915(); final Z sig = JF(k).sigma(); final Z sig2 = JF(sig).sigma(); return seq.a(k).equals(seq.a(sig2)); }	Numbers k for which A335915(k) = A335915(sigma(sigma(k))).	nonn	1..66	nyi	_Antti Karttunen_
A336464	filamb	0	1	k -> { final A335915 seq = new A335915(); final Z sig = JF(k).sigma(); final Z sig2 = JF(sig).sigma(); return seq.a(k).equals(seq.a(sig)) && seq.a(sig).equals(seq.a(sig2)); }	Numbers k for which A335915(k), A335915(sigma(k)) and A335915(sigma(sigma(k))) obtain the same value.	nonn,more	1..28	nyi	_Antti Karttunen_
A336469	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A329697(), new A005087()
A336519	#nyi	0		Primes in Pi (variant of â¬336520): a(n) is the Least prime factor of â¬090897(n) that does not appear in earlier terms of a, or 1, if no such factor exists
A336520	#nyi	0		Primes in Pi: a(n) is the Least prime factor of â¬090897(n) that does not appear in earlier terms of â¬090897, or 1, if no such factor exists
A336546	multraf	1	(self, n) -> self.s(0).equals(self.s(1)) ? Z.ONE : Z.ZERO	""	new A051027(), new A353802()
A336553	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that gcd(A336551(k), A326143(k)) is equal to A336551(k).	nonn	1..10000	nyi	_Antti Karttunen_
A336554	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that rad(k) divides sigma(k).	nonn	1..216	nyi	_Antti Karttunen_
A336555	#filtpos	0	0	new A326144()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A326144(k) <> A336566(k).	nonn	1..10000	nyi	_Antti Karttunen_
A336588	lambdan	0	n -> RU(0, n, k -> new Q(S2(n+1, k+1), FA(k))            ).*(FA(n)).num()
A336589	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k).*(S2(n+1, k+1)), FA(k))  ).*(FA(n)).num()
A336645	simtraf	0	new A326129()	(n, v) -> ZV(n).-(v)		a(n)= n - Annnnnn(n)	
A336646	simtraf	0	new A326144()	(n, v) -> ZV(n).-(v)		a(n)= n - Annnnnn(n)	
A336647	simtraf	0	new A336566()	(n, v) -> ZV(n).-(v)		a(n)= n - Annnnnn(n)	
A336654	filnum	1	1	k -> Predicates.SQUARE_FREE.is(Functions.CARMICHAEL_LAMBDA.z(k))	Numbers k such that lambda(k) is squarefree,
A336693	dirtraf	0	new A007733()	new LambdaSequence(1, n -> JF(n).sigma().+(1))	Period of binary representation of 1/(1+sigma(n)).	nonn	1..16384	nyi	_Antti Karttunen_
A336700	filamb	0	1	k -> JF(k).sigma().makeOdd().+(1).mod(k.+(1).makeOdd()).isZero()	Numbers k such that the odd part of (1+k) divides (1 + odd part of sigma(k)).	nonn	1..77	nyi	_Antti Karttunen_
A336712	lambdan	0	n -> (n == 0) ? Z.ONE : RU(1, n, k -> new Q(Z2(n-k)      .*(BI(n,k).*(BI(n+(n-1)*k,k-1)))))./(n).num()	 for n > 0
A336713	lambdan	0	n -> (n == 0) ? Z.ONE : RU(1, n, k -> new Q(Z_1(n-k)     .*(BI(n,k).*(BI(n+(n-1)*k,k-1)))))./(n).num()	 for n > 0
A336714	lambdan	0	n -> (n == 0) ? Z.ONE : RU(1, n, k -> new Q(ZV(-2).^(n-k).*(BI(n,k).*(BI(n+(n-1)*k,k-1)))))./(n).num()	 for n > 0
A336839	multraf	1	(self, n) -> new Q(self.s(0), self.s(1)).den()	""	new A003973(), new A000005()
A336843	dirtraf	0	new A007733()	new A003961()	Period of binary representation of 1/A003961(n): a(n) = A007733(A003961(n)).	nonn	1..16383	nyi	_Antti Karttunen_
A336855	rgs1	1	new LambdaSequence(1, n -> ZV(n).isProbablePrime() ? ZV(n).-(Puma.nextPrime(n + 1)) : ZV(n))	Restricted growth sequence transform of function f defined as: f(n) = -{distance to the next larger prime} when n is a prime, otherwise f(n) = -n
A336918	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A000005(k) divides A003973(k); numbers k for which â¬336839(k) = 1.	nonn	1..10000	nyi	_Antti Karttunen_
A336919	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A000005(k) does not divide A003973(k); numbers k for which â¬336839(k) > 1.	nonn	1..20000	nyi	_Antti Karttunen_
A336925	#rgs2	1	new ()	new ()	Restricted growth sequence transform of the function f(n) = A336147(A088580(n)).
A336930	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that the 2-adic valuation of A003973(k), the sum of divisors of the prime shifted k is equal to the 2-adic valuation of the number of divisors of k.	nonn	1..72	nyi	_Antti Karttunen_
A336943	spf	0	ZV(44745755).^(4).+(Z2(4*n + 2))
A336997	lambdan	1	n -> RD(n, d -> new Q(ZV(2).^(d-1), FA(d))).*(FA(n)).num()
A336998	lambdan	1	n -> RD(n, d -> new Q(ZV(3).^(d-1), FA(d))).*(FA(n)).num()
A336999	lambdan	1	n -> RD(n, d -> new Q(ZV(n).^(d)  , FA(d))).*(FA(n)).num()
A337025	lambdan	0	n -> ZV((4*n)*(4*n)).^(n)
A337127	tablamb	1	1	n -> new Integer[] { 1, 10 }	(n, k) -> PR(0, k - 2, j -> ZV(j + 11 - k)).*(9).*(S2(n, k))	9*Pochhammer(11-k, k-1)*S2(n, k)
A337200	rgs1	1	new DirectTransformSequence(1, new A278222(), new A337194())	Restricted growth sequence transform of f(n) = A278222(A337194(n)).
A337201	#rgs2	1	new ()	new ()	Restricted growth sequence transform of f(n) = A278221(A337194(n)).
A337257	lambdir	0	n -> SEQ.a(FA(n))	new A183063()	a(n)=Annn(n!)		D183063
A337273	lambdan	0	n -> BI(ZV(n).-(JF(n).sigma0()), 2)
A337349	multrafd	0	(self, n) -> SEQ.a(self.s(0))	"1"	new A067745().skip(1)	new A075677()	a(n)=Annn(Annn(n+(\d+)))
A337373	filtpos	0	1	new A003961()	(k, v) -> v.compareTo(ZV(3*k)) > 0	Numbers k for which A003961(k) > 3*k.	nonn,changed	1..10000	nyi	_Antti Karttunen_
A337374	filtpos	0	1	new A003961()	(k, v) -> v.compareTo(ZV(4*k)) > 0	Numbers k for which A003961(k) > 4*k.	nonn,changed	1..10000	nyi	_Antti Karttunen_
A337378	filtpos	0	1	new A003961()	(k, v) -> v.compareTo(JF(k).sigma().*(2)) > 0	Numbers k for which A003961(k) > 2*sigma(k).	nonn	1..20000	nyi	_Antti Karttunen_
A337379	filtpos	0	1	new A003961()	(k, v) -> v.compareTo(JF(k).sigma().*(2)) < 0	Numbers k for which A003961(k) < 2*sigma(k).	nonn	1..20000	nyi	_Antti Karttunen_
A337381	filtpos	0	1	new A003973()	(k, v) -> v.compareTo(JF(k).sigma().*(2)) >= 0	Numbers k for which A003973(k) >= 2*sigma(k).	nonn	1..20000	nyi	_Antti Karttunen_
A337382	filtpos	0	1	new A003973()	(k, v) -> v.compareTo(JF(k).sigma().*(2)) < 0	Numbers k for which A003973(k) < 2*sigma(k).	nonn	1..20000	nyi	_Antti Karttunen_
A337384	filtpos	0	1	new A003973()	(k, v) -> v.compareTo(JF(k).sigma().*(2)) == 0	Numbers k for which A003973(k) is equal to 2*sigma(k).	nonn	1..600	nyi	_Antti Karttunen_
A337385	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A003973(k) >= 2*A003961(k).	nonn	1..26	nyi	_Antti Karttunen_
A337386	filtpos	0	1	new A003973()	(k, v) -> v.compareTo(new A003961().a(Math.toIntExact(k)).*(2)) >= 0	Numbers k for which A003973(k) >= 2*A003961(k).	nonn	1..25993	nyi	_Antti Karttunen_
A337430	#nyi	0		Numbers k such that the largest prime factor of 2^k  -  1 is less than the largest prime factor of 2^k  +  1
A337431	#nyi	0		Numbers k such that the largest prime factor of 2^k  -  1 is greater than the largest prime factor of 2^k  +  1
A337482	tuptraf	0	(n, s) -> Z2(n - 1).*(s[0]).-(s[1]).+(1)	""	new A000009(), new A000041()
A337485	multraf	0	(self, n) -> self.s(0).-(1)	"0,0"	new A007359()	v -> v.-(1)	for n > 1.
A337725	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE, FA(3*k + 1))).*(FA(n*3 + 1)).num()	3,1,0,1,3,1	a(n)= ((\d+)*n+(\d+))!* Sum_{n=(\d+)..n}(\d+)/ ((\d+)*n+(\d+))!	
A337726	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE, FA(3*k + 2))).*(FA(n*3 + 2)).num()	3,2,0,1,3,2	a(n)= ((\d+)*n+(\d+))!* Sum_{n=(\d+)..n}(\d+)/ ((\d+)*n+(\d+))!	
A337728	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE, FA(4*k + 1))).*(FA(n*4 + 1)).num()	4,1,0,1,4,1	a(n)= ((\d+)*n+(\d+))!* Sum_{n=(\d+)..n}(\d+)/ ((\d+)*n+(\d+))!	a(n) = (4*n+1)! * Sum_{k=0..n} 1 / (4*k+1)!.
A337729	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE, FA(4*k + 2))).*(FA(n*4 + 2)).num()	4,2,0,1,4,2	a(n)= ((\d+)*n+(\d+))!* Sum_{n=(\d+)..n}(\d+)/ ((\d+)*n+(\d+))!	
A337730	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE, FA(4*k + 3))).*(FA(n*4 + 3)).num()	4,3,0,1,4,3	a(n)= ((\d+)*n+(\d+))!* Sum_{n=(\d+)..n}(\d+)/ ((\d+)*n+(\d+))!	
A337764	invtraf	0	new A060354()	0	0	Number of compositions (ordered partitions) of the n-th n-gonal number into n-gonal numbers. A060354
A337903	#nyi	0		a(0) = 0, a(1) = 1; for n>1, if a(n - 1) is composite then a(n) = a(n - 1)/â¬107286(n - 1), where â¬107286(n) = the Least prime factor of n, otherwise a(n) = a(n - 1)  +  n
A338086	multraf	0	(self, n) -> self.s(0).*(4)	""	new A037314()	4*new A037314()
A338252	simtraf	0	new FilterSequence(0, new A317050(), v -> v.compareTo(Z.ZERO) <= 0)	v -> v.negate()	Nonpositive values in Annnnnn
A338254	inverse	0	new A338252()	0	0
A338490	lambdan	0	n -> SP(n, p -> (p != 2) ? Puma.primePiZ(p) : Z.ZERO)	a(n) = Sum_{p|n, p odd prime} A000720(p)
A338655	lambdan	0	n -> SD(n, d -> JF(d).phi().*(BI(d+n/d-1, d)))
A338693	lambdan	0	n -> RD(n, d -> new Q(d).^(d - n/d)    .*(BI(d, n/d  ))).num()
A338713	lambdan	1	n -> SU(1, n,     i -> Functions.SIGMA0.i(i*n) == 4 ? Z.ONE : Z.ZERO)
A338848	multraf	0	(self, n) -> self.s(0).*(FA(self.s(1).intValueExact()))	""	new A039966(), new A062756()	a(n) = A039966(n) * A062756(n)!. - _Kevin Ryde_, Nov 14 2020
A338953	holos	1	[[0,0,0,0,0,0,0,0,96,0,0,0,144,0,0,0,144,0,128,0,192,0,0,0,228,0,0,0,0,0,0,0,48,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,43,0,72,0,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[-1152]]	1	0	0
A338969	multraf	1	(self, n) -> self.s(0).+(self.s(1)).+(self.s(2))	""	new A066186(), new A000041(), new A225596()	a(n)=Annn(n)+Annn(n)+Annn(n)
A339061	diffs	0	new A004080()	First differences of A004080.
A339141	multrar	1	(self, n) -> Functions.REVERSE.z(Z.TEN.*(n).-(self.a(n - 1)))	"1"	a(n) = reverse(10* n - a(n-1)) where reverse means reverse the order of the digits.
A339335	dirichcon2	1	new A328706()	1	new A045778()	1	2,1,3	Dirichlet g.f.: Product_{n>=(\d+)}((\d+)+ n^(-s))^(\d+)	m	i
A339336	dirichcon2	1	new A339335()	1	new A045778()	1	2,1,4	Dirichlet g.f.: Product_{n>=(\d+)}((\d+)+ n^(-s))^(\d+)	m	i
A339337	dirichcon2	1	new A339336()	1	new A045778()	1	2,1,5	Dirichlet g.f.: Product_{n>=(\d+)}((\d+)+ n^(-s))^(\d+)	m	i
A339338	dirichcon2	1	new A339337()	1	new A045778()	1	2,1,6	Dirichlet g.f.: Product_{n>=(\d+)}((\d+)+ n^(-s))^(\d+)	m	i
A339339	dirichcon2	1	new A339338()	1	new A045778()	1	2,1,7	Dirichlet g.f.: Product_{n>=(\d+)}((\d+)+ n^(-s))^(\d+)	m	i
A339340	dirichcon2	1	new A339339()	1	new A045778()	1	2,1,8	Dirichlet g.f.: Product_{n>=(\d+)}((\d+)+ n^(-s))^(\d+)	m	i
A339341	dirichcon2	1	new A339340()	1	new A045778()	1	2,1,9	Dirichlet g.f.: Product_{n>=(\d+)}((\d+)+ n^(-s))^(\d+)	m	i
A339347	#nyi	0		Primes p such that p < (gpf((p  -  1)/gpf(p  -  1)))^4, where gpf(k) is the Largest prime factor of k, A006530
A339463	#nyi	0		Primes p such that (p - 1)/gpf(p - 1) = 2^q * 5^r with q, r >= 1, where gpf(m) is the Largest prime factor of m, A006530
A339465	#nyi	0		Primes p such that (p - 1)/gpf(p - 1) = 2^q * 3^r with q, r >= 1, where gpf(m) is the Largest prime factor of m, A006530
A339466	#nyi	0		Primes p such that gpf((p  -  1)/gpf(p  -  1)) > 3, where gpf(m) is the Largest prime factor of m, A006530
A339531	lambdan	1	n -> ZV(((9*n)/2)*4 + 1)	for n>=2, a(n) = 4*floor((9*n)/2) + 1 for all n. - _Hugo Pfoertner_, Dec 08 2020
A339567	filtpos	1	0	new A007088()	(k, v) -> v.mod(k) == 1	Numbers k such that Annnnnn(k)==(\d+)(mod k)
A339580	multraf	1	(self, n) -> self.s(0).+(1)	"1"	new A339581()	v -> v.+(1)	for n >= 2. - _David A. Corneth_, Dec 24 2020						Indices of records in A339579.
A339625	ordsup	1	new A100923().skip()	2	0
A339643	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(3)).+(self.s(2).*(3))	""	new A038059(), new A038055(), new A000081()	a(n)=Annn(n)-(\d+)*Annn(n)+(\d+)*Annn(n)	3,3
A339767	#nyi	0		a(n) = 2*gpf(n)  -  Sum_{p | n, p prime} p*m(p), where gpf(n) = A006530(n) is the Largest prime factor of n and m(p) is the multiplicity of p in the prime factorization of n
A339816	#filtpos	0	0	new A339814()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A339814(k) >= â¬339822(k).	nonn	1..19468	nyi	_Antti Karttunen_
A339821	filter	0	new A339820()	(k, v) -> (k & 1) == 1
A339879	#filtpos	0	0	new A053575()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which k-1 is a multiple of A053575(k) [the odd part of phi(k)].	nonn	1..12855	nyi	_Antti Karttunen_
A339893	lambdan	0	n -> ZV(IntegerUtils.floorLog2(n) - JF(n).bigOmega())	A000523(n) - A001222(n)
A339894	dirtraf	0	new A000523()	new A122111()
A339895	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A339894(), new A061395()	a(n) = A339894(n) -   A061395(n).
A339896	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A056239(), new A339894()	a(n) = A056239(n) -   A339894(n).
A339902	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A339821()	new A001222()	a(n)=Annn(Annn(n))		D001222,A339821
A339906	#filtpos	0	0	new A339812()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A339812(2k) >= â¬339902(k).	nonn	1..514	nyi	_Antti Karttunen_
A339921	filnum	1	0	n -> ZV(20).^(n).+(3).IPP()		isprime(20^n+3)
A339922	filnum	1	0	n -> ZV(20).^(n).-(3).IPP()		isprime(20^n-3)
A339923	filnum	1	0	n -> ZV(14).^(n).+(3).IPP()		isprime(14^n+3)
A339924	filnum	1	0	n -> ZV(14).^(n).-(3).IPP()		isprime(14^n-3)
A339963	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that gcd(k+1, sigma(k)) is 2.	nonn	1..16023	nyi	_Antti Karttunen_
A339968	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) and k+2 are relatively prime, where sigma gives the sum of divisors of k.	nonn	1..25064	nyi	_Antti Karttunen_
A339971	simtraf	0	new A339821()	v -> v.makeOdd()	Odd part of A339821(n)
A339972	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd part of phi(A019565(8*n)).	nonn,look	0..16383	nyi	_Antti Karttunen_
A339973	#filtpos	0	0	new A019565()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A019565(2k)-1 is a multiple of A000265(phi(A019565(2k))).	nonn	1..94	nyi	_Antti Karttunen_
A340071	dirtraf	1	new A049559()	new A003961()	"null"
A340072	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A003972(), new A340071()
A340090	dirichinv	1	new A219428()	, 0	Dirichlet inverse of A219428, n - phi(n) - 1.	sign	1..16384	nyi	_Antti Karttunen_
A340161	multraf	0	(self, n) -> self.s(0).+(1)	"1"	new A018900()	v -> v.+(1)	for n >= 1 (see A340068). (End)
A340189	simtraf	0	new A340187()	(n, v) -> ZV(n).+(v)		a(n)= n + Annnnnn(n)	
A340191	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A063994(), new A340190()	Difference between A063994 and its Mââbius transform.	sign	1..8191	nyi	_Antti Karttunen_
A340192	moetrafi	1	new A063994()	, 0	#
A340193	moetrafi	1	new A318840()	, 0	#
A340195	moetrafi	1	new A049559()	, 0	#
A340196	moetrafi	1	new A318830()	, 0	#
A340269	#nyi	0		Numbers k > 1 such that lpf(k) - 1 does not divide d - 1 for at least one divisor d of k, where lpf(k) is the least prime factor of k (A020639)
A340273	#nyi	0		a(n) is the number of divisors d of n such that phi(n)/phi(lpf(n)) mod phi(n)/phi(d) = 0, where phi is Eulers totient function (A000010), and lpf(n) is the least prime factor of n (A020639)
A340367	dirichinv	1	new SimpleTransformSequence(1, new A318833(), v -> Z.ONE.-(v))	, 0	Dirichlet inverse of sequence b(n) = 1-A318833(n).	sign	1..16384	nyi	_Antti Karttunen_
A340370	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A000265()	new A280710()	a(n)=Annn(Annn(n))
A340374	lambdan	0	n -> { final Z nodd = ZV(n).makeOdd(); return nodd.mod(Functions.CARMICHAEL_LAMBDA.z(nodd)).isZero() ? Z.ONE : Z.ZERO; }	a(n) = [A002322(A000265(n)) divides A000265(n)-1], where [ ] is the Iverson bracket.
A340376	filtpos	0	1	new A048673()	(k, v) -> v.toString(3).indexOf('1') < 0	Numbers k such that there are no 1-digits in the ternary expansion of A048673(k).	nonn	1..20000	nyi	_Antti Karttunen_
A340377	filtpos	0	1	new A048673()	(k, v) -> v.toString(3).indexOf('2') < 0	Numbers k such that there are no 2-digits in the ternary expansion of A048673(k).	nonn	1..20000	nyi	_Antti Karttunen_
A340378	simtraf	0	new A048673()	(k, v) -> ZV(ZUtils.digitCounts(v, 3)[1])	Number of 1-digits in the ternary representation of A048673(n).	nonn	1..16384	nyi	_Antti Karttunen_
A340379	simtraf	0	new A048673()	(k, v) -> ZV(ZUtils.digitCounts(v, 3)[2])	Number of 2-digits in the ternary representation of A048673(n).	nonn	1..65537	nyi	_Antti Karttunen_
A340481	ordsum	5	new A010052().skip(2)	5
A340520	simtras	1	new A006463().skip(1)	v -> v.*(2).+(1)	.
A340562	simtraf	1	new A212800()	(n, v) -> v./(n*n)	^2.
A340582	filnum	0	0	k -> JF(k  ).sigma().equals(Z.FOUR.*(JF(k + 1).sigma()))
A340684	rgs2	1	new A291759()	new DirectTransformSequence(1, new A278222(), new A304759())	Restricted growth sequence transform of the ordered pair [A291759(n), A278222(A304759(n))].
A340713	filnum	0	0	k -> JF(k+1).sigma().equals(Z.FOUR.*(JF(k).sigma()))
A340763	lambdan	1	n -> SU(1, n,     i -> i%3 == 1 && ZV(i).IPP() ? Z.ONE : Z.ZERO)
A340764	lambdan	1	n -> SU(1, n,     i -> i%3 == 2 && ZV(i).IPP() ? Z.ONE : Z.ZERO)
A340767	lambdan	0	n -> SU(1, 6*n+5, i -> i%3 == 2 && ZV(i).IPP() ? Z.ONE : Z.ZERO)
A340905	ordsum	6	new A010052().skip(2)	6
A340906	ordsum	7	new A010052().skip(2)	7
A340915	ordsum	8	new A010052().skip(2)	8
A340946	ordsum	9	new A010052().skip(2)	9
A340947	ordsum	10	new A010052().skip(2)	10
A340949	ordsum	4	new A010054().skip(2)	4		Number of ways to write n as an ordered sum of 4 nonzero triangular numbers.	nonn
A340950	ordsum	5	new A010054().skip(2)	5		Number of ways to write n as an ordered sum of 5 nonzero triangular numbers.	nonn
A340951	ordsum	6	new A010054().skip(2)	6		Number of ways to write n as an ordered sum of 6 nonzero triangular numbers.	nonn
A340952	ordsum	7	new A010054().skip(2)	7		Number of ways to write n as an ordered sum of 7 nonzero triangular numbers.	nonn
A340953	ordsum	8	new A010054().skip(2)	8		Number of ways to write n as an ordered sum of 8 nonzero triangular numbers.	nonn
A340954	ordsum	9	new A010054().skip(2)	9		Number of ways to write n as an ordered sum of 9 nonzero triangular numbers.	nonn
A340955	ordsum	10	new A010054().skip(2)	10		Number of ways to write n as an ordered sum of 10 nonzero triangular numbers.	nonn
A340960	ordsum	8	new A010051().skip(2)	4	Number of ways to write n as an ordered sum of 4 primes.	nonn	8..10000
A340961	ordsum	10	new A010051().skip(2)	5	Number of ways to write n as an ordered sum of 5 primes.	nonn	10..10000
A340962	ordsum	12	new A010051().skip(2)	6	Number of ways to write n as an ordered sum of 6 primes.	nonn	12..10000
A340963	ordsum	14	new A010051().skip(2)	7	Number of ways to write n as an ordered sum of 7 primes.	nonn	14..10000
A340964	ordsum	16	new A010051().skip(2)	8	Number of ways to write n as an ordered sum of 8 primes.	nonn	16..10000
A340965	ordsum	18	new A010051().skip(2)	9	Number of ways to write n as an ordered sum of 9 primes.	nonn	18..10000
A340966	ordsum	20	new A010051().skip(2)	10	Number of ways to write n as an ordered sum of 10 primes.	nonn	20..10000
A340977	ordsum	4	new A010057().skip(2)	4	Number of ways to write n as an ordered sum of 4 positive cubes.	nonn	4..10000
A340978	ordsum	5	new A010057().skip(2)	5	Number of ways to write n as an ordered sum of 5 positive cubes.	nonn	5..10000
A340979	ordsum	6	new A010057().skip(2)	6	Number of ways to write n as an ordered sum of 6 positive cubes.	nonn	6..10000
A340980	ordsum	7	new A010057().skip(2)	7	Number of ways to write n as an ordered sum of 7 positive cubes.	nonn	7..10000
A340981	ordsum	8	new A010057().skip(2)	8	Number of ways to write n as an ordered sum of 8 positive cubes.	nonn,look	8..10000
A340982	ordsum	9	new A010057().skip(2)	9	Number of ways to write n as an ordered sum of 9 positive cubes.	nonn	9..10000
A340983	ordsum	10	new A010057().skip(2)	10	Number of ways to write n as an ordered sum of 10 positive cubes.	nonn,look	10..10000
A341015	filtpos	0	1	new A124446()	v -> v.equals(ZV(1))	Numbers n such that Annnnnn(n)= (\d+)
A341064	ordsum	4	new A008966().skip(1)	4
A341065	ordsum	5	new A008966().skip(1)	5
A341066	ordsum	6	new A008966().skip(1)	6
A341067	ordsum	7	new A008966().skip(1)	7
A341068	ordsum	8	new A008966().skip(1)	8
A341069	ordsum	9	new A008966().skip(1)	9
A341070	ordsum	10	new A008966().skip(1)	10
A341133	ordsum	4	new A010055().skip(1)	4		Number of ways to write n as an ordered sum of 4 prime powers (including 1).	nonn
A341134	ordsum	5	new A010055().skip(1)	5		Number of ways to write n as an ordered sum of 5 prime powers (including 1).	nonn
A341135	ordsum	6	new A010055().skip(1)	6		Number of ways to write n as an ordered sum of 6 prime powers (including 1).	nonn
A341136	ordsum	7	new A010055().skip(1)	7		Number of ways to write n as an ordered sum of 7 prime powers (including 1).	nonn
A341137	ordsum	8	new A010055().skip(1)	8		Number of ways to write n as an ordered sum of 8 prime powers (including 1).	nonn
A341138	ordsum	9	new A010055().skip(1)	9		Number of ways to write n as an ordered sum of 9 prime powers (including 1).	nonn
A341139	ordsum	10	new A010055().skip(1)	10		Number of ways to write n as an ordered sum of 10 prime powers (including 1).	nonn
A341184	ordsum	5	new A136522().skip(2)	5	Number of ways to write n as an ordered sum of 5 nonzero decimal palindromes.	nonn,base	5..10000
A341191	ordsum	2	new A136522().skip(2)	2	Number of ways to write n as an ordered sum of 2 nonzero decimal palindromes.	nonn,base	2..20000
A341192	ordsum	3	new A136522().skip(2)	3	Number of ways to write n as an ordered sum of 3 nonzero decimal palindromes.	nonn,base	3..20000
A341193	ordsum	4	new A136522().skip(2)	4	Number of ways to write n as an ordered sum of 4 nonzero decimal palindromes.	nonn,base	4..20000
A341203	ordsum	6	new A136522().skip(2)	6	Number of ways to write n as an ordered sum of 6 nonzero decimal palindromes.	nonn,base	6..10000
A341204	ordsum	7	new A136522().skip(2)	7	Number of ways to write n as an ordered sum of 7 nonzero decimal palindromes.	nonn,base	7..10000
A341205	ordsum	8	new A136522().skip(2)	8	Number of ways to write n as an ordered sum of 8 nonzero decimal palindromes.	nonn,base	8..10000
A341206	ordsum	9	new A136522().skip(2)	9	Number of ways to write n as an ordered sum of 9 nonzero decimal palindromes.	nonn,base	9..10000
A341207	ordsum	10	new A136522().skip(2)	10	Number of ways to write n as an ordered sum of 10 nonzero decimal palindromes.	nonn,base	10..10000
A341210	filter	1	new A000040()	p -> p.^(16).+( 1)./( 2).IPP()	[(#^(\d+)+(\d+))/(\d+)]&]	750,16, 1, 2
A341255	multrar	1	(self, n) -> { final CR r = CR.TWO.+(CR.FIVE.sqrt())./(2); return r.*(r.*(self.a(n - 1)).floor()).floor(); }	"1"	Let f(n) = floor(r*floor(r*n)) = A341254(n), where r = (2 + sqrt(5))/2.  Let a(1) = 1. Then a(n) = f(a(n-1)) for n >= 2.	nonn,easy	1..25
A341349	filtpos	0	1	new A254049()	(k, v) -> v.mod(3) != 0	Numbers k for which A254049(k) is not a multiple of 3.	nonn	1..16369	nyi	_Antti Karttunen_
A341350	filtpos	0	1	new A254049()	(k, v) -> v.mod(3) == 0	Numbers k for which A254049(k) [= A048673(2k-1)] is a multiple of 3.	nonn	1..16399	nyi	_Antti Karttunen_
A341436	filnum	0	1	k -> SU(1, k, j -> ZV(j).^(k + 1 - j)).mod(ZV(k)).isZero()	k divides Sum_{j=1,k} j^(k+1-j)
A341437	filnum	0	1	k -> SU(0, k, j -> ZV(j).^(k - j)).mod(ZV(k)).isZero()	k divides Sum_{j=0,k} j^(k-j)
A341480	ordsum	3	new A005171().skip(1)	3
A341481	ordsum	4	new A005171().skip(1)	4
A341482	ordsum	5	new A005171().skip(1)	5
A341483	ordsum	6	new A005171().skip(1)	6
A341484	ordsum	7	new A005171().skip(1)	7
A341485	ordsum	8	new A005171().skip(1)	8
A341486	ordsum	9	new A005171().skip(1)	9
A341504	ordsum	10	new A005171().skip(1)	10
A341509	lambdan	0	n -> (Integer.bitCount(n) == 2) ? ZV(n - Integer.highestOneBit(n)) : Z.ZERO	a(0) = 0, and for n >= 1, a(n) = A340375(n) * A006519(n).
A341538	multrar	2	(self, n) -> self.a(n - 1).^(2).-(17).mod(Z2(n + 1)).isZero() ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1))	"1"		a(n) = a(n-1) if a(n-1)^2 - 17 is divisible by 2^(n+1), otherwise a(n-1) + 2^(n-1).
A341539	multrar	2	(self, n) -> self.a(n - 1).^(2).-(17).mod(Z2(n + 1)).isZero() ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1))	"3"		a(n) = a(n-1) if a(n-1)^2 - 17 is divisible by 2^(n+1), otherwise a(n-1) + 2^(n-1).
A341600	multrar	2	(self, n) -> self.a(n - 1).^(2).*(5).+(3).mod(Z2(n + 1)).isZero() ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1))	"1"		a(n) = a(n-1) if 5*a(n-1)^2 + 3 is divisible by 2^(n+1), otherwise a(n-1) + 2^(n-1).
A341601	multrar	2	(self, n) -> self.a(n - 1).^(2).*(5).+(3).mod(Z2(n + 1)).isZero() ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1))	"3"		a(n) = a(n-1) if 5*a(n-1)^2 + 3 is divisible by 2^(n+1), otherwise a(n-1) + 2^(n-1).
A341612	charfunc	0	new A341614()					Characteristic function of A341614: a(n) = 1 if sigma(n) <= 2n < A003961(n), 0 otherwise.	nonn	1..65537	nyi	_Antti Karttunen_
A341613	charfunc	0	new A341615()					Characteristic function for A341615: 
A341614	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) <= 2k < A003961(k).	nonn	1..74	nyi	_Antti Karttunen_
A341615	filtpos	0	0	new A003961()	(k, v) -> JF(k).sigma().compareTo(ZV(2*k)) < 0 && ZV(2*k).compareTo(v) < 0	Numbers k for which sigma(k) < 2k < A003961(k).	nonn	1..72	nyi	_Antti Karttunen_
A341620	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A294927(), new A294936()	a(n) = A294927(n) +   A294936(n).
A341623	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(3*k) = 8*k.	nonn,more	1..10	nyi	_Antti Karttunen_
A341700	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A034387(2*n) - A034387(n).
A341712	simtraf	1	new FilterSequence(1, new A120963().skip(2), (k, v) -> (k & 1) == 0)	(n, v) -> v./(2)	a(n) = A120963(2*n) / 2.						a(n) = A120963(2*n)/2.
A341734	simtraf	0	new FilterSequence(0, new A007678(), (k, v) -> (k & 1) == 0)	(n, v) -> v./(2*n)	a(n) = A007678(2*n) / (2*n).
A341751	multrar	2	(self, n) -> self.a(n - 1).^(4).-(17).mod(Z2(n + 2)).isZero() ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1))	"1"		a(n) = a(n-1) if a(n-1)^4 - 17 is divisible by 2^(n+2), otherwise a(n-1) + 2^(n-1).
A341752	multrar	2	(self, n) -> self.a(n - 1).^(4).-(17).mod(Z2(n + 2)).isZero() ? self.a(n - 1) : self.a(n - 1).+(Z2(n - 1))	"3"		a(n) = a(n-1) if a(n-1)^4 - 17 is divisible by 2^(n+2), otherwise a(n-1) + 2^(n-1).
A341794	ordsum	3	new A023533().skip(2)	3	Number of ways to write n as an ordered sum of 3 nonzero tetrahedral numbers.	nonn	3..95
A341795	ordsum	4	new A023533().skip(2)	4	Number of ways to write n as an ordered sum of 4 nonzero tetrahedral numbers.	nonn	4..85
A341796	ordsum	5	new A023533().skip(2)	5	Number of ways to write n as an ordered sum of 5 nonzero tetrahedral numbers.	nonn	5..1000
A341797	ordsum	6	new A023533().skip(2)	6	Number of ways to write n as an ordered sum of 6 nonzero tetrahedral numbers.	nonn	6..1000
A341806	ordsum	7	new A023533().skip(2)	7	Number of ways to write n as an ordered sum of 7 nonzero tetrahedral numbers.	nonn	7..1000
A341807	ordsum	8	new A023533().skip(2)	8	Number of ways to write n as an ordered sum of 8 nonzero tetrahedral numbers.	nonn	8..1000
A341808	ordsum	9	new A023533().skip(2)	9	Number of ways to write n as an ordered sum of 9 nonzero tetrahedral numbers.	nonn	9..1000
A341809	ordsum	10	new A023533().skip(2)	10	Number of ways to write n as an ordered sum of 10 nonzero tetrahedral numbers.	nonn	10..1000
A341857	lambdan	1	n -> Functions.CARMICHAEL_LAMBDA.z(n*n)./(n)	a(n) = psi(n^2)/n, psi = A002322.
A341866	#nyi	0		a(n) = A341865(n)  -  A341865(n/p)  +  1, where p is the Least prime factor of n
A341916	dirtraf	0	new A006068()	new PrependSequence(0, new A059893(), 0)	
A341982	ordsum	2	new A080339().skip()	2
A341983	ordsum	4	new A080339().skip()	4
A341984	ordsum	5	new A080339().skip()	5
A341985	ordsum	6	new A080339().skip()	6
A341986	ordsum	7	new A080339().skip()	7
A341987	ordsum	8	new A080339().skip()	8
A341988	ordsum	9	new A080339().skip()	9
A341989	ordsum	10	new A080339().skip()	10
A342008	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that Euler totient phi(k) is a multiple of the arithmetic derivative of k.	nonn	1..71	nyi	_Antti Karttunen_
A342009	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that the arithmetic derivative of k is a multiple of phi(k).	nonn	1..1001	nyi	_Antti Karttunen_
A342018	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that the arithmetic derivative of â¬276086(k) is divisible by at least one prime power divisor of the form p^p, where â¬276086 gives the prime product form of primorial base expansion of its argument.	nonn	1..10000	nyi	_Antti Karttunen_
A342021	filtpos	1	1	new A000203()	(k, v) -> new A003415().a(v).compareTo(ZV(k)) == 0	that A003415(sigma(k)) = k, where A003415 is the arithmetic derivative, and sigma is the sum of divisors of n.	nonn,more,hard	1..4	nyi	_Antti Karttunen_
A342123	multraf	1	(self, n) -> ZV(n).mod(self.s(0))	""	new A030101()	n mod new A030101()
A342228	multrad2	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(SEQ.a(n - k)))	""	new A035316()	new A000041()	a(n)=Sum_{k=(\d+),n}Annn(k)*Annn(n-k)	1	D035316,D000041   
A342229	multrad2	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(SEQ.a(n - k)))	""	new A113061()	new A000041()	a(n)=Sum_{k=(\d+),n}Annn(k)*Annn(n-k)	1	D113061,D000041   
A342230	multrad2	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(SEQ.a(n - k)))	""	new A001511()	new A000041()	a(n)=Sum_{k=(\d+),n}Annn(k)*Annn(n-k)	1	D001511,D000041   
A342250	ordsum	7	new A036987().skip()	7
A342251	ordsum	8	new A036987().skip()	8
A342252	ordsum	9	new A036987().skip()	9
A342254	ordsum	10	new A036987().skip()	10
A342255	#nyi	0		For k > 1, let p be the largest prime factor of k, then T(n,k) = p if p does not divide n and k = p^e*ord(p,n) for some e > 0, where ord(p,n) is the multiplicative order of n modulo p. See my link above for the proof
A342259	filnum	0	1	k -> JF(k - 1).omega() == JF(k).omega() - 1 && JF(k + 1).omega() == JF(k).omega() + 1	Numbers k such that omega(k-1) = omega(k)-1 and omega(k+1) = omega(k)+1, where omega(m) is the number of distinct primes dividing m, A001221(m).
A342323	#nyi	0		For k > 1, let p be the largest prime factor of k, then T(n,k) = p if p does not divide n and k = p^e*ord(p,n) for some e > 0, where ord(p,n) is the multiplicative order of n modulo p
A342609	#nyi	0		Positive integers that cannot be written in the form k  -  gpf(k)  +  -  1 for some integer k, where gpf(k) is the Largest prime factor of k
A342654	multrafd	1	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A324104()	new A005940()	a(n)=Annn((\d+)+Annn(n))
A342656	multraf	2	(self, n) -> self.s(0).-(self.s(1)).+(1)	""	new A342655(), new A055396()	1 + new A342655() - new A055396()
A342657	dirtraf	0	new A339893()	new A156552()		= A339893(â¬322993(n)) = A000523(A156552(n)) - A001222(A156552(n)).
A342663	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A342661(), new A342670()
A342664	tuptraf	0	(n, s) -> new Q(s[0], s[1]).den()	""	new A342661(), new A342662()	Denominator of ratio A342661(n)/A342662(n).	nonn,frac	1..73	nyi	_Antti Karttunen_
A342665	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which phi(k)+1 is a multiple of d(k), where phi is Euler totient function (A000010) and d(n) gives the number of divisors of n (A000005).	nonn	1..10000	nyi	_Antti Karttunen_
A342768	simtraf	1	new A006530()	(n, v) -> ZV(n).^(2)./(v)	is the Largest prime factor of n, then a(n) = n^2/g
A342841	lambdir	0	n -> SEQ.a(ZV(10).^(n))	new A071778()	a(n)=Annn((\d+)^n)	10	D071778
A342922	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A342925(k) = k + 2*A003415(k).	nonn,more	1..12	nyi	_Antti Karttunen_
A342923	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A342925(k) = k + 3*A003415(k).	nonn,more	1..8	nyi	_Antti Karttunen_
A342935	lambdir	0	n -> SEQ.a(ZV( 2).^(n))	new A071778()	a(n)=Annn((\d+)^n)	2	D071778
A343193	lambdir	0	n -> SEQ.a(ZV(10).^(n))	new A082540()	a(n)=Annn((\d+)^n)	10	D082540
A343216	filtpos	1	1	new A000203()	(k, v) -> new A003415().a(v).compareTo(ZV(k)) <  0	that A003415(sigma(k)) < k.	nonn	1..68	nyi	_Antti Karttunen_
A343217	filtpos	1	1	new A000203()	(k, v) -> new A003415().a(v).compareTo(ZV(k)) >= 0	that A003415(sigma(k)) >= k.	nonn	1..82	nyi	_Antti Karttunen_
A343218	filtpos	1	1	new A000203()	(k, v) -> new A003415().a(v).compareTo(ZV(k)) >  0	that A003415(sigma(k)) > k.	nonn	1..81	nyi	_Antti Karttunen_
A343228	lambdan	0	n -> new Z(Integer.toString(n, 3).replaceAll("2", "0"), 2)	digits "+1" in balanced ternary representation of n.
A343229	lambdan	0	n -> new Z(Integer.toString(n, 3).replaceAll("1", "0").replaceAll("2", "1"), 2)	digits "-1" in balanced ternary representation of n.
A343230	lambdan	0	n -> new Z(Integer.toString(n, 3).replaceAll("0", "x").replaceAll("\\d", "0").replaceAll("x", "1"), 2)	digits "0" in balanced ternary representation of n.
A343231	lambdan	0	n -> new Z(Integer.toString(n, 3).replaceAll("[12]", "1"), 2)	nonzero digits in balanced ternary representation of n.
A343282	lambdir	0	n -> SEQ.a(ZV(10).^(n))	new A082544()	a(n)=Annn((\d+)^n)	10	D082544
A343517	lambdan	0	n -> SD(n, d -> JF(n/d).phi().*(BI(d+n-1, n)))
A343518	lambdan	0	n -> SD(n, d -> JF(n/d).phi().*(BI(d+3, 4)))
A343519	lambdan	0	n -> SD(n, d -> JF(n/d).phi().*(BI(d+4, 5)))
A343520	lambdan	0	n -> SD(n, d -> JF(n/d).phi().*(BI(d+5, 6)))
A343521	lambdan	0	n -> SD(n, d -> JF(n/d).phi().*(BI(d+6, 7)))
A343527	lambdir	0	n -> SEQ.a(ZV( 2).^(n))	new A082540()	a(n)=Annn((\d+)^n)	2	D082540
A343544	lambdan	0	n -> RD(n, d -> new Q(BI(d + 2, 3), ZV(d))).*(n).num()
A343545	lambdan	0	n -> RD(n, d -> new Q(BI(d + 3, 4), ZV(d))).*(n).num()
A343546	lambdan	0	n -> RD(n, d -> new Q(BI(d + 4, 5), ZV(d))).*(n).num()
A343553	lambdan	0	n -> SD(n, d -> JF(n/d).phi().*(BI(d+n-2, n-1)))
A343562	multraf	1	(self, n) -> self.s(0).+(self.s(1)).+(self.s(2))	""	new A056877(), new A142886(), new A006746()	a(n)=Annn(n)+Annn(n)+Annn(n)
A343565	lambdan	0	n -> SD(n, d -> ZV(Mobius.mobius(n/d)).*(BI(d+n-1, n)))
A343696	multraf	1	(self, n) -> FA(n).^(n).*(self.s(0))	""	new A002860()	n!^n * new A002860()
A343754	simtraf	0	new A174574()	(n, v) -> ZV(n).-(v)
A343912	lambdan	1	n -> ZV(n - Euler.phiAsLong(n - Euler.phiAsLong(n)))	a(n) = n - phi(n - phi(n)), where phi is the Euler totient function.
A343930	filnum	0	1	k -> SU(1, k, j -> ZV(-j).^(j)).mod(ZV(k)).equals(Z.ONE)	 == 1 (mod k)
A343931	filnum	0	1	k -> SU(1, k, j -> ZV(-j).^(j)).mod(ZV(k)).isZero()	 == 0 (mod k)
A343982	filnum	0	1	k -> SD(k, j -> ZV(j).^(j).mod(ZV(k))).isZero()
A343983	filnum	0	1	k -> SD(k, j -> ZV(j).^(j).mod(ZV(k))).equals(Z.ONE)	j|k} j^j == 1 (mod k)
A344026	dirtraf	0	new A003415()	new A005940()	Arithmetic derivative applied to the Doudna sequence: a(n) = A003415(A005940(1+n))
A344042	lambdan	0	n -> RD(n, d -> new Q(JF(d).sigma().^(2),  ZV(d))).*(n).num()
A344043	lambdan	0	n -> RD(n, d -> new Q(JF(d).sigma().^(3),  ZV(d))).*(n).num()
A344082	lambdan	0	n -> RD(n, d -> new Q(JF(d).sigma0().^(3), ZV(d))).num()
A344113	lambdan	1	n -> Z2(n*n).-(ZV(n).^(n))
A344114	lambdan	1	n -> Z2(n*n).-(FA(n))
A344372	lambdan	0	n -> SU(1, n, k -> ZV(2*k).gcd(ZV(n)))	a(n)= Sum_{n =(\d+)..n} gcd((\d+)*n, n)
A344478	lambdan	0	n -> SP(n, p -> (IU.gcd(p, n/p) == 1 && JF(n/p).isSquareFree()) ? Z.ONE : Z.ZERO)	a(n) = Sum_{p|n, gcd(p,n/p) = 1} mu(n/p)^2, where mu is the MÃ¶bius function (A008683)
A344558	rowsum	0	new A344557()
A344584	moetrafi	1	new A344178()	, 0	#
A344585	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers whose sum of proper divisors (A001065) is greater than their arithmetic derivative (A003415).	nonn	1..20000	nyi	_Antti Karttunen_
A344587	moetrafi	1	new A337544()	, 0	#
A344693	multraf	1	(self, n) -> FA(n).*(self.s(0))	""	new A002860()	n!*new A002860()
A344700	#filtpos	0	0	new A306927()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A306927(k) [= A001615(k)-k] is a multiple of A344705(k) [= A001615(k)-A001065(k)], and their quotient is nonnegative.	nonn	1..782	nyi	_Antti Karttunen_
A344703	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which sigma(k^2) and psi(k^2) share a factor, where sigma is the sum of divisors, A000203, and psi is the Dedekind psi function, A001615.	nonn,changed	1..10000	nyi	_Antti Karttunen_ and _Peter Munn_
A344731	filtpos	1	1	new A306069()	(n, v) -> v.mod(n) == 0	Numbers n such that n divides Annnnnn(n)
A344733	filtpos	1	1	new A327573()	(n, v) -> v.mod(n) == 0	Numbers n such that n divides Annnnnn(n)
A344745	lambdan	0	n -> BI(new Q(-1, n), n).num()
A344754	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A344753(k) is a multiple of A048250(k).	nonn	1..58	nyi	_Antti Karttunen_
A344755	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A344753(k) is a multiple of A048250(k), and k is a multiple of A344753(k)/A048250(k).	nonn	1..50	nyi	_Antti Karttunen_
A344908	lambdan	0	n -> SP(n, p -> ZV(p).*(Puma.primePi(p) & 1))	a(n) = Sum_{p|n} p * (pi(p) mod 2)
A344931	lambdan	0	n -> SP(n, p -> ZV(p).*((Puma.primePi(p) + 1) & 1))	a(n) = Sum_{p|n} p * ((pi(p)+1) mod 2 )
A344972	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A344875(), new A011772()
A344977	#filtpos	0	0	new A011772()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A011772(k) exceeds â¬344878(k).	nonn	1..68	nyi	_Antti Karttunen_
A345003	#filtpos	0	0	new A344998()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A344998(k) = A344999(k).	nonn	1..44	nyi	_Antti Karttunen_
A345005	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers whose arithmetic derivative (A003415) is equal to Dedekind psi (A001615) applied to the same number.	nonn,more	1..25	nyi	_Antti Karttunen_
A345019	lingf	1	0,1,1,6,1,1	1,-1,0,0,-1,1	0
A345054	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that A173557(k) divides nonzero A051709(k).	nonn	1..38	nyi	_Antti Karttunen_
A345131	lambdan	0	n -> SU(1, n, k -> SD(k, d -> BI(d + n - 2, d - 1).*(JF(k/d).mobius())))
A345177	multrar	0	(self, n) -> SU(0, n - 2, k -> S2(n - 2, k).*(self.a(k)))	"1, 0"
A345178	multrar	0	(self, n) -> SU(0, n - 2, k -> S2(n - 2, k).*(self.a(k)))	"0, 1"
A345230	lambdan	0	n -> SU(1, n, k -> SD(k, d -> BI(d + n - 2, n - 1).*(JF(k/d).phi())))
A345278	lambdan	0	n -> SP(n, p -> ZV(p).^(Puma.primePi(p) & 1))	a(n) = Sum_{p|n} p^(pi(p) mod 2)
A345279	lambdan	0	n -> SP(n, p -> ZV(p).^((Puma.primePi(p) + 1) & 1))	a(n) = Sum_{p|n} p^((pi(p)+1) mod 2)
A345280	lambdan	0	n -> SP(n, p -> Puma.nextPrimeZ(ZV(p)))	a(n) = Sum_{p|n} nextprime(p), where nextprime(n) is the smallest prime > n
A345281	lambdan	0	n -> SP(n, p -> Puma.nextPrimeZ(ZV(n/p)))	a(n) = Sum_{p|n} nextprime(n/p), where nextprime(m) is the smallest prime > m
A345282	lambdan	0	n -> SP(n, p -> ZV(p).*(Puma.nextPrime(n/p)    ))	a(n) = Sum_{p|n, p prime} p * nextprime(n/p)
A345283	lambdan	0	n -> SP(n, p -> ZV(p).^(Puma.nextPrime(n/p)    ))	a(n) = Sum_{p|n, p prime} p^nextprime(n/p), where nextprime(n) is the smallest prime > n
A345284	lambdan	0	n -> SP(n, p -> ZUtils.primorial(p))	a(n) = Sum_{p|n} (p #)
A345298	lambdan	0	n -> SP(n, p -> JF(ZUtils.primorial(p)).tau())	a(n) = Sum_{p|n, p prime} tau(p #)
A345299	lambdan	0	n -> SP(n, p -> ZV(p).^(Puma.primePi(p)))	a(n) = Sum_{p|n} p^pi(p)
A345301	lambdan	0	n -> SP(n, p -> ZV(p).^(Puma.primePi(n/p)      ))	a(n) = Sum_{p|n, p prime} p^pi(n/p)
A345302	lambdan	0	n -> SP(n, p -> ZV(IU.lcm(p, n/p)))	a(n) = Sum_{p|n, p prime} lcm(p,n/p)
A345303	lambdan	0	n -> SP(n, p -> ZV(p).*(IU.gcd(p,n/p)          ))	a(n) = Sum_{p|n, p prime} p * gcd(p,n/p)
A345304	lambdan	0	n -> SP(n, p -> ZV(p).*(IU.lcm(p,n/p)          ))	a(n) = Sum_{p|n, p prime} p * lcm(p,n/p)
A345305	lambdan	0	n -> RP(n, p -> new Q(ZV(IU.gcd(p, n/p)), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} gcd(p,n/p) / p
A345306	lambdan	0	n -> RP(n, p -> new Q(ZV(IU.lcm(p, n/p)), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} lcm(p,n/p) / p
A345310	lambdan	0	n -> SP(n, p -> ZV(p).^(IU.gcd(p,n/p)          ))	a(n) = Sum_{p|n, p prime} p^gcd(p,n/p)
A345311	lambdan	0	n -> SP(n, p -> ZV(p).^(IU.lcm(p,n/p)          ))	a(n) = Sum_{p|n, p prime} p^lcm(p,n/p)
A345312	lambdan	0	n -> SP(n, p -> ZV(n/p).^(IU.gcd(p, n/p)))	a(n) = Sum_{p|n} (n/p)^gcd(p,n/p)
A345313	lambdan	0	n -> SP(n, p -> ZV(n/p).^(IU.lcm(p, n/p)))	a(n) = Sum_{p|n, p prime} (n/p)^lcm(p,n/p)
A345354	lambdan	0	n -> SP(n, p -> ZV(JF(n/p).omega()         ))	a(n) = Sum_{p|n, p prime} omega(n/p)
A345355	lambdan	0	n -> SP(n, p -> ZV(p).^(JF(n/p).omega()        ))	a(n) = Sum_{p|n, p prime} p^omega(n/p)
A345373	lambdan	0	n -> RP(n, p -> new Q(ZV(1/(IU.gcd(p, n/p))), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} floor(1/gcd(p,n/p)) / p
A345374	lambdan	0	n -> SP(n, p -> Puma.primePiZ(p).and(Z.ONE).*(1 / IU.gcd(p, n/p)))	a(n) = Sum_{p|n, p prime} (pi(p) mod 2) * floor(1/gcd(p,n/p))
A345375	lambdan	0	n -> SP(n, p -> Puma.primePiZ(p).add(1).and(Z.ONE).*(1 / IU.gcd(p, n/p)))	a(n) = Sum_{p|n, p prime} ((pi(p)+1) mod 2) * floor(1/gcd(p,n/p))
A345402	filnum	0	0	n -> ZV( 42).^(n).-(1)./(41).IPP()		isprime((42^n-1)/41)
A345463	multraf	1	(self, n) -> self.s(0).*(self.s(1))./(self.s(2))	""	new A001037(), new A002884(), new A000225()	a(n)=Annn(n)*Annn(n)/Annn(n)
A345647	arrlamb	1	1	1	-1	(n, k) -> Puma.primePiZ(n + k).-(Puma.primePiZ(n + 1))
A345681	multraf	0	(self, n) -> Functions.DIGIT_SORT_ASCENDING.z(self.a(n - 1).+(n))	"0"		a(0) = 0; for n >= 1, a(n) = A004185(a(n-1)+n).
A345876	lambdan	0	n -> SU(0, n, k -> BI(2*n, n - k).*(ZV(k).^(n)))
A345902	multraf	0	(self, n) -> Functions.DIGIT_SORT_ASCENDING.z(self.a(n - 1).*(n))	"1"		a(0) = 1; for n >= 1, a(n) = A004185(a(n-1)*n).
A345944	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A002034(d) < A002034(k) for all the proper divisors d of k.	nonn	1..73	nyi	_Antti Karttunen_
A346019	multraf	1	(self, n) -> self.s(0).*(self.s(1))./(self.s(2))	""	new A011260(), new A002884(), new A000225()	a(n)=Annn(n)*Annn(n)/Annn(n)
A346037	multrar	0	(self, n) -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, FA(d).*(FA(k/d)   )  ).*(self.a(n - k))./(FA(n - k))).*(k)).*(FA(n - 1)).num()	"1"
A346039	multrar	0	(self, n) -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, FA(d).*(FA(k/d)   )  ).*(self.a(n - k))./(FA(n - k))).*(k)).*(FA(n - 1)).negate().num()	"1"
A346055	multrar	0	(self, n) -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, FA(d).*(ZV(k/d).^(d))).*(self.a(n - k))./(FA(n - k))).*(k)).*(FA(n - 1)).num()	"1"
A346056	multrar	0	(self, n) -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, FA(d).*(FA(k/d).^(d))).*(self.a(n - k))./(FA(n - k))).*(k)).*(FA(n - 1)).num()	"1"
A346057	multrar	0	(self, n) -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, FA(d).*(ZV(k/d).^(d))).*(self.a(n - k))./(FA(n - k))).*(k)).*(FA(n - 1)).negate().num()	"1"
A346058	multrar	0	(self, n) -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, FA(d).*(FA(k/d).^(d))).*(self.a(n - k))./(FA(n - k))).*(k)).*(FA(n - 1)).negate().num()	"1"
A346087	multraf	1	(self, n)-> self.s(0).min(self.s(1))	""	new A071178(), new A329348()
A346236	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A341530(), new A346235()	a(n) = A341530(n) +   A346235(n).
A346240	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A341512(), new A346239()	Difference between A341512 and its Mââbius transform.	nonn,look	1..16384	anopan	_Antti Karttunen_
A346247	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A344587(), new A346246()	a(n) = A344587(n) +   A346246(n).
A346255	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A336849(), new A346254()	a(n) = A336849(n) +   A346254(n).
A346256	filtpos	0	1	new A346254()	ZERO	Positions of zeros in A346254.	nonn	1..68	nyi	_Antti Karttunen_
A346430	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n, k)).*(self.a(n - k)))	"0,1"	new A008578()
A346488	rgs1	1	new SimpleTransformSequence(1, new A008683(), (n, v) -> v.equals(Z.NEG_ONE) ? Z.ZERO : ZV(n))	Restricted growth sequence transform of the sequence f(n) = 0 if mu(n) = -1, and f(n) = n for mu(n) >= 0.
A346550	lambdan	0	n -> SU(n/2, n  , k -> FA(k).*(BI(k + 1, n - k)))
A346635	multraf	1	(self, n) -> self.s(0)./(2)	"1"	new A129597()	a(n)=Annn(n)/(\d+)forn>(\d+)	2,1	A129597			Numbers whose division (or multiplication) by their greatest prime factor yields a perfect square. Numbers k such that k*A006530(k) is a perfect square.
A346652	filter	1	new A171102()	v -> ZUtils.isPolygonal(v, 6)	Hexagonal pandigitals.
A346758	lambdan	1	n -> n <= 2 ? ZV(n - 1) : RD(n, d -> new Q(d*d, 4).*(MU(n/d))).num()
A346959	filter	1	new A171102()	v -> ZUtils.isPolygonal(v, 5)	Pentagonal pandigitals.
A346968	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n, k)).*(self.a(n - k)))	"0,1"	new A000085()	Sum_{k=1..n} binomial(n,k) * A000085(k) * a(n-k).
A347041	stir2	0	new A000720()	, 0	Stirling transform of A000720
A347064	lambdir	0	n -> SEQ.a(ZV( 2).^(n))	new A061799()	a(n)=Annn((\d+)^n)	2	D061799
A347103	lambdan	0	n -> SP(n, p -> Z_1(n/p).*(Puma.primePi(p))).negate()	a(n) = -Sum_{p|n, p prime} (-1)^(n/p) * pi(p), where pi = A000720
A347104	moetraf	1	new A328260()	, 0	#
A347108	lambdan	1	n -> SU(1, n, k -> SIGMA(k).*(SIGMA(2*k)))
A347114	filter	1	new A171102()	v -> ZUtils.isPolygonal(v, 7)	Heptagonal pandigitals.
A347138	filnum	0	0	n -> ZV(100).^(n).+(1)./(101).IPP()		isprime((100^n+1)/101)
A347141	#nyi	0		a(1) = 11; for n > 1, a(n) is the Least prime factor of 2^a(n - 1)  -  1
A347226	insect2	1	new A005385()	new A097443()
A347229	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A344695(), new A347228()	a(n) = A344695(n) +   A347228(n).
A347231	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A344695(), new A347230()	Difference between A344695 [gcd(psi(n),sigma(n))] and its Mââbius transform.	sign	1..16384	nyi	_Antti Karttunen_
A347247	#nyi	0		Numbers k such that the Largest prime factor of A000593(k) [the sum of their odd divisors] is at least as large as the Largest prime factor of k itself
A347248	#nyi	0		Numbers k such that the Largest prime factor of A000593(k) [the sum of odd divisors of k] is less than the Largest prime factor of k itself
A347252	lambdan	0	n -> SU(0, n, a -> SU(0, n - a, b -> SU(0, n - a - b, c -> a*b*c <= n ? Z.ONE : Z.ZERO)))
A347390	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k that can be factored to such a pair of coprime factors x and y that â¬347381(k) < min(â¬347381(x), â¬347381(y)).	nonn	1..46	nyi	_Antti Karttunen_
A347391	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) is either their sibling in Doudna tree (A005940), or one of the siblings descendants.	nonn,hard,more	1..13	nyi	_Antti Karttunen_
A347399	lambdan	1	n -> SU(1, n, k -> (ZV(n).^(n).mod(ZV(k).^(k)).isZero() ? Z.ONE : Z.ZERO).*(ZV(k).^(k)))
A347516	lambdan	1	n -> SD(n, d -> ZV(d).^(3).compareTo(n) <= 0 ? ZV(1) : ZV(0))
A347526	lambdan	1	n -> SD(n, d -> ZV(d).^(4).compareTo(n) <= 0 ? ZV(1) : ZV(0))
A347614	lambdan	1	n -> SU(1, n, k -> ZV(n).^(Functions.BIG_OMEGA.i(k)))
A347654	lambdir	0	n -> SEQ.a(ZV(10).^(n))	new A000700()	a(n)=Annn((\d+)^n)	10	D000700
A347870	parity	0	new A342925()	a(n) = A000035(A342925(n)) = A165560(A000203(n)).
A347871	simtraf	1	new A342926()	v -> v.modZ(2)	a(n)=Annn(n)mod(\d+)	2	A342926				a(n) = (n+A003415(sigma(n))) mod 2, where A003415 gives the arithmetic derivative of its argument.
A347872	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that k and A003415(sigma(k)) have the same parity.	nonn	1..73	nyi	_Antti Karttunen_
A347873	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that k and A003415(sigma(k)) are of different parity.	nonn	1..75	nyi	_Antti Karttunen_
A347876	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A332221(), new A331750()	a(n) = A332221(n) -   A331750(n).
A347881	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A003415(sigma(k^2)) > k^2, where A003415 is the arithmetic derivative.	nonn	1..59	nyi	_Antti Karttunen_
A347882	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A003415(sigma(k^2))-(k^2) is strictly positive and a multiple of 3. Here A003415 is the arithmetic derivative.	nonn	1..10000	nyi	_Antti Karttunen_
A347883	simtraf	1	new A342926()	v -> v.modZ(3)	a(n)=Annn(n)mod(\d+)	3	A342926				a(n) = A342926(n) mod 3.
A347885	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that sigma(k^2) has an odd number of prime factors when counted with multiplicity.	nonn	1..69	nyi	_Antti Karttunen_
A347886	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that sigma(k^2) has an even number of prime factors when counted with multiplicity.	nonn	1..70	nyi	_Antti Karttunen_
A347887	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A003415(sigma(k^2))-(k^2) is strictly positive and even. Here A003415 is the arithmetic derivative.	nonn	1..56	nyi	_Antti Karttunen_
A347888	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A003415(sigma(k^2))-(k^2) is strictly positive and a multiple of six. Here A003415 is the arithmetic derivative.	nonn	1..54	nyi	_Antti Karttunen_
A347889	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) > 2*k and A003415(sigma(k)) < k, where A003415 is the arithmetic derivative, and sigma is the sum of divisors function.	nonn	1..51	nyi	_Antti Karttunen_
A347890	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that sigma(k) > 2*k and A003415(sigma(k)) < k, where A003415 is the arithmetic derivative, and sigma is the sum of divisors function.	nonn	1..32	nyi	_Antti Karttunen_
A347891	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that sigma(k^2) > 2*k^2 and A003415(sigma(k^2)) < k^2.	nonn	1..50	nyi	_Antti Karttunen_
A347912	partsun	1	new A122197()			Partial sums of A122197.					a(n) = Sum_{k=1..n} k - floor(sqrt(k)+1/2) * floor(sqrt(k-1)).
A347948	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n, k)).*(self.a(n - k)))	"0,1"	new A010051()
A347960	#filtpos	0	0	new A348036()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A348036(k) > A007947(k).	nonn	1..62	nyi	_Antti Karttunen_
A347989	lambdan	0	n -> RU(n, 2*n, k -> new Q(SA(k, n).*(2*n + 1 - k), FA(k))).*(FA(2*n)).num()
A347991	lambdan	1	n -> SD(n, d -> Z2(Functions.SIGMA.i(d) - 1))
A347993	lambdan	1	n -> RU(1, n, k -> new Q(Z_1(k + 1).*(ZV(n).^(n-k)), FA(n-k))).*(FA(n)).num()
A348072	filnum	1	0	n -> Functions.OMEGA.l(n) == 8	omega(n)==(\d+)	8
A348073	filnum	0	0	n -> Functions.OMEGA.l(n) == 9	omega(n)==(\d+)	9
A348170	filnum	0	0	n -> ZV( 35).^(n).-(1)./(34).IPP()		isprime((35^n-1)/34)
A348193	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A348195(), new A348196()	a(n)=Annn(n)-Annn(n)
A348195	lambdan	1	n -> SU(2, n*n - 1, k -> k % 4 == 3 && ZV(k).IPP() ? Z.ONE : Z.ZERO)
A348196	lambdan	1	n -> SU(2, n*n - 1, k -> k % 4 == 1 && ZV(k).IPP() ? Z.ONE : Z.ZERO)
A348203	lambdan	0	n -> ZV(n - JF(n).omega()).+(RP(n, p -> new Q(Z.ONE, ZV(p))).*(n).num())	a(n) = n - omega(n) + n * Sum_{p|n} 1/p
A348223	lambdan	1	n -> SD(n, d -> Z_1(Functions.SIGMA.i(d) - 1))
A348279	moetrafi	1	new A190116()	, 0	#
A348295	lambdan	0	n -> SU(1, n, k -> Z_1(IntegerUtils.sqrt(2*k*k) - k))
A348304	moetrafi	1	new A068346()	, 0	 (2nd arithmetic derivative).
A348332	lambdan	1	n -> Z2(n).-(1).*(ZV(2).^(Z2(n).-(n)))
A348350	lambdan	1	n -> SD(n, d -> ZV(d).^(Functions.SIGMA.i(d) - 1))
A348406	multraf	1	(self, n) -> self.s(0).+(1)	""	new A067742()	1 + new A067742()
A348506	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) is a multiple of usigma(k), where sigma is the sum of divisors function, A000203, and usigma is the unitary sigma, A034448.	nonn	1..20000	nyi	_Antti Karttunen_
A348514	filtpos	0	1	new A003961()	(k, v) -> v.compareTo(ZV(2*k + 1)) == 0	Numbers k for which A003961(k) = 2k+1, where A003961 shifts the prime factorization of n one step towards larger primes.	nonn,hard,more	1..13	nyi	_Antti Karttunen_
A348615	simtraf	0	new A001250()	(n, v) -> FA(n).-(v)
A348741	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A161942(k) < k, where A161942 is the odd part of sigma.	nonn	1..16291	nyi	_Antti Karttunen_
A348742	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A161942(k) > k, where A161942 is the odd part of sigma.	nonn	1..56	nyi	_Antti Karttunen_
A348841	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A000720(), new A055460()
A348853	multrafd	1	(self, n) -> SEQ.a(self.s(0).+(1))	""	new A019586()	new A003622()	a(n)=Annn(Annn(n)+(\d+))
A348875	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> ZV(2 ).^(k).*(self.a(k)).*(self.a(n-k-1))))	"1"
A348876	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> ZV(3 ).^(k).*(self.a(k)).*(self.a(n-k-1))))	"1"
A348877	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> ZV(4 ).^(k).*(self.a(k)).*(self.a(n-k-1))))	"1"
A348878	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-2, k -> ZV(2 ).^(k).*(self.a(k)).*(self.a(n-k-2))))	"1"
A348879	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-2, k -> ZV(3 ).^(k).*(self.a(k)).*(self.a(n-k-2))))	"1"
A348880	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-2, k -> ZV(4 ).^(k).*(self.a(k)).*(self.a(n-k-2))))	"1"
A348901	multrar	0	(self, n) -> self.a(n-1).negate().+(SU(0, n-1, k -> ZV(2 ).^(k+1)  .*(self.a(k)).*(self.a(n-k-1)))        )	"1"
A348902	multrar	0	(self, n) -> self.a(n-1).negate().+(SU(0, n-1, k -> ZV(2 ).^(2*k+1).*(self.a(k)).*(self.a(n-k-1)))        )	"1"
A348903	multrar	0	(self, n) -> self.a(n-1).*(2).+(SU(0, n-1, k -> Z2(k).*(self.a(k)).*(self.a(n-k-1))))	"1"
A348904	multrar	0	(self, n) -> self.a(n-1).*(3).+(SU(0, n-1, k -> Z2(k).*(self.a(k)).*(self.a(n-k-1))))	"1"
A348942	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A326042(), new A348940()
A348944	multraf	1	(self, n) -> self.s(0).+(self.s(1))./(2)	""	new A003959(), new A034448()
A348947	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A008336(), new A055773()	a(n)=Annn(n)/Annn(n)=Annn(n)/gcd(Annn(n),Annn(n))		A348944,A348946,A348944,A000203,A348944			a(n) = A348944(n) / gcd(sigma(n), A348944(n)), where A348944 is the arithmetic mean of A003959 and A034448, and sigma is the sum of divisors function.
A348948	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A000203(), new A348946()
A348957	multrar	0	(self, n) -> Z_1(n+1).*(self.a(n-1)).+(SU(0, n-1, k -> self.a(k).*(self.a(n-k-1))))	"1"
A348985	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A000203(), new A348984()
A348986	tuptraf	0	(n, s) -> new Q(s[0], s[1]).den()	""	new A000203(), new A325973()	Denominator of ratio sigma(n) / A325973(n), where A325973 is the arithmetic mean of {sum of squarefree divisors} and {sum of unitary divisors}.	nonn,frac	1..20000	nyi	_Antti Karttunen_
A349011	multrar	0	(self, n) -> Z_1(n  ).*(self.a(n-1)).+(SU(0, n-1, k -> self.a(k).*(self.a(n-k-1))).*(2)  )	"1"
A349012	multrar	0	(self, n) -> Z2(n-1).*(self.a(n-1)).+(SU(0, n-1, k -> self.a(k).*(self.a(n-k-1))))	"1"
A349013	multrar	0	(self, n) -> Z2(n-1).*(self.a(n-1)).+(SU(0, n-2, k -> self.a(k).*(self.a(n-k-2))))	"1"
A349032	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> ZV(-2).^(k).*(self.a(k)).*(self.a(n-k-1))))	"1"
A349033	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> ZV(-3).^(k).*(self.a(k)).*(self.a(n-k-1))))	"1"
A349034	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> ZV(-4).^(k).*(self.a(k)).*(self.a(n-k-1))))	"1"
A349035	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-2, k -> ZV(-2).^(k).*(self.a(k)).*(self.a(n-k-2))))	"1"
A349036	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-2, k -> ZV(-3).^(k).*(self.a(k)).*(self.a(n-k-2))))	"1"
A349037	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-2, k -> ZV(-4).^(k).*(self.a(k)).*(self.a(n-k-2))))	"1"
A349038	multrar	0	(self, n) -> self.a(n-1).negate().-(SU(0, n-1, k -> ZV(-2).^(k+1)  .*(self.a(k)).*(self.a(n-k-1)))        )	"1"
A349045	multrar	0	(self, n) -> self.a(n-1).negate().+(SU(0, n-1, k -> ZV(-3).^(k)    .*(self.a(k)).*(self.a(n-k-1))).*(2)   )	"1"
A349046	multrar	0	(self, n) -> self.a(n-1).negate().+(SU(0, n-1, k -> ZV(-4).^(k)    .*(self.a(k)).*(self.a(n-k-1))).*(2)   )	"1"
A349144	#filtpos	0	0	new A342671()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A342671(k) [= gcd(sigma(k), A003961(k))] and A349161(k) [= A003961(k)/A342671(k)] are relatively prime, where A003961(n) is fully multiplicative with a(prime(k)) = prime(k+1), and sigma is the sum of divisors function.	nonn,changed	1..81	nyi	_Antti Karttunen_
A349165	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) and A003961(k) are relatively prime, where A003961(n) is fully multiplicative function with a(prime(k)) = prime(k+1).	nonn	1..76	nyi	_Antti Karttunen_
A349166	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) and A003961(k) share a prime factor, where A003961(n) is fully multiplicative function with a(prime(k)) = prime(k+1).	nonn	1..73	nyi	_Antti Karttunen_
A349168	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) and A003961(k) share a prime power divisor that is not a unitary divisor of A003961(k). Here A003961(n) is fully multiplicative function with a(prime(k)) = prime(k+1).	nonn	1..67	nyi	_Antti Karttunen_
A349169	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that k * gcd(sigma(k), A003961(k)) is equal to the odd part of {sigma(k) * gcd(k, A003961(k))}, where A003961 shifts the prime factorization one step towards larger primes, and sigma is the sum of divisors function.	nonn	1..63	nyi	_Antti Karttunen_
A349174	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which gcd(k, A003961(k)) is equal to gcd(sigma(k), A003961(k)), where A003961(n) is fully multiplicative with a(prime(k)) = prime(k+1), and sigma is the sum of divisors function.	nonn	1..72	nyi	_Antti Karttunen_
A349175	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which gcd(k, A003961(k)) <> gcd(sigma(k), A003961(k)), where A003961(n) is fully multiplicative with a(prime(k)) = prime(k+1), and sigma is the sum of divisors function.	nonn	1..65	nyi	_Antti Karttunen_
A349176	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which gcd(k, A003961(k)) = gcd(sigma(k), A003961(k)) > 1, where A003961(n) is fully multiplicative with a(prime(k)) = prime(k+1), and sigma is the sum of divisors function.	nonn	1..54	nyi	_Antti Karttunen_
A349177	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which gcd(k, A003961(k)) = gcd(sigma(k), A003961(k)) = 1, where A003961(n) is fully multiplicative with a(prime(k)) = prime(k+1), and sigma is the sum of divisors function.	nonn	1..72	nyi	_Antti Karttunen_
A349339	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd bisection of the Mââbius transform of A126760.	nonn	1..90	nyi	_Antti Karttunen_
A349401	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A000112(), new A000608()	a(n) = A000112(n) -   A000608(n).
A349555	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A001221(), new A066911()	a(n) = A001221(n) +   A066911(n).
A349623	dirichinv	1	new A326042()
A349625	dirichcon2	1	new A000027()	1	new A349623()	1
A349626	moetra	1	new A326042()	, 0		Mââbius transform of A326042, where A326042(n) = A064989(sigma(A003961(n))).	sign,mult	1..20000	nyi	_Antti Karttunen_
A349627	#nyi	0	Numerators of the Moebius transform of ratio A003961(n)/sigma(n).
A349628	#nyi	0	Denominators of the Moebius transform of ratio A003961(n)/sigma(n).
A349633	#nyi	0	Numerators of the Moebius transform of ratio A003961(n)/n.
A349634	#nyi	0	Denominators of the Moebius transform of ratio A003961(n)/n.
A349745	filtpos	0	0	new A003961()	(k, v) -> { final Z sig = JF(k).sigma(); return v.gcd(sig).*(k).equals(v.gcd(ZV(k)).*(sig)); }	Numbers k for which k * gcd(sigma(k), A003961(k)) is equal to sigma(k) * gcd(k, A003961(k)), where A003961 shifts the prime factorization one step towards larger primes, and sigma is the sum of divisors function.	nonn	1..52	nyi	_Antti Karttunen_
A349746	filamb	0	0	k -> { final A003961 seq = new A003961(); final Z sig = JF(k).sigma(); final Z u = seq.a(seq.a(k)); return sig.gcd(u).*(k).equals(k.gcd(u).*(sig)); }	Numbers k for which k * gcd(sigma(k), u) is equal to sigma(k) * gcd(k, u), where u is obtained by shifting the prime factorization of k two steps toward larger primes [with u = A003961(A003961(k))].	nonn	1..25	nyi	_Antti Karttunen_
A349749	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which the 3-adic valuation of sigma(k) is equal to the 3-adic valuation of k, where sigma is the sum of divisors function.	nonn	1..68	nyi	_Antti Karttunen_
A349750	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that sigma(k) == k (mod 3), where sigma is the sum of divisors function.	nonn	1..66	nyi	_Antti Karttunen_
A349751	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k such that sigma(k) == -k (mod 3), where sigma is the sum of divisors function.	nonn	1..67	nyi	_Antti Karttunen_
A349752	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which the sigma(k) == -k (mod 3) and sigma(k) preserves the 3-adic valuation of k.	nonn	1..66	nyi	_Antti Karttunen_
A349753	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A003961(k)-2k divides A003961(k)-sigma(k), where A003961 shifts the prime factorization one step towards larger primes, and sigma is the sum of divisors function.	nonn	1..36	nyi	_Antti Karttunen_
A349755	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which the 3-adic valuations of k and sigma(k) are equal, and that also satisfy Eulers criterion for odd perfect numbers (see â¬228058).	nonn	1..51	nyi	_Antti Karttunen_
A349756	filtpos	0	1	new A003961()	(k, v) -> { final Z sig = JF(k).sigma(); return sig.makeOdd().equals(v.gcd(sig)); }	Numbers k such that the odd part of sigma(k) is equal to gcd(sigma(k), A003961(k)), where A003961 is fully multiplicative with a(p) = nextprime(p), and sigma is the sum of divisors function.	nonn	1..23008	nyi	_Antti Karttunen_
A349835	holos	0	[[0],[-40,16],[6],[0,-1]]	1	0	0
A349857	lambdan	0	n -> SU(0, n, k -> ZV(k).^(3).negate().^(n-k)     )
A349858	lambdan	0	n -> SU(0, n, k -> ZV(k).^(4).negate().^(n-k)     )
A349860	lambdan	0	n -> SU(0, n, k -> ZV(k).^(3).negate().^(n-k).*(k))
A349861	lambdan	0	n -> SU(0, n, k -> ZV(k).^(4).negate().^(n-k).*(k))
A349916	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A113415(), new A349915()	a(n) = A113415(n) +   A349915(n).
A349971	arrlamb	1	1	1	1	(n, k) -> RQ(0, k - 2, j -> new Q(j*n + n - 1, n)).*(ZV(n).^(k - 1)).num()	n^(k-1)*Pochhammer((n-1)/n, k-1) (array).
A350036	filnum	1	0	n -> ZV( 81).^(n).+(1)./(82).IPP()		isprime((81^n+1)/82)
A350062	multrafd	1	(self, n) -> SEQ.a(self.s(0))	"0"	new A156552()	new A046523()	a(n)=Annn(Annn(n))
A350067	#rgs2	1	new ()	new ()	Restricted growth sequence transform of the function f(1) = 0, f(n) = A336470(A156552(n)) for n > 1.
A350076	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which the maximal digit in their primorial base expansion (â¬328114) is greater than or equal to the maximal exponent in the prime factorization of k (A051903).	nonn,base	1..81	nyi	_Antti Karttunen_
A350229	simtraf	0	new A065363()	(n, v) -> ZV(n).+(v)
A350493	simtraf	1	new A065730()	(n, v) -> v.modZ(n)	a(n)=Annn(n)modn		A065730
A350960	simtraf	0	new A006285()	v -> v.-(1)./(2)	a(n)= (Annnnnn(n)-(\d+))/(\d+)	
A350968	simtraf	0	new A350967()	v -> v.-(1)./(2)	a(n)= (Annnnnn(n)-(\d+))/(\d+)	
A351194	parmof2	1	A005063	6	a(n) = Sum_{p|n, p prime} p^6
A351195	parmof2	1	A005063	7	a(n) = Sum_{p|n, p prime} p^7
A351196	parmof2	1	A005063	8	a(n) = Sum_{p|n, p prime} p^8
A351197	parmof2	1	A005063	9	a(n) = Sum_{p|n, p prime} p^9
A351198	parmof2	1	A005063	10	a(n) = Sum_{p|n, p prime} p^10
A351242	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(3))).*(ZV(n).^(3)).num()	a(n) = n^3  * Sum_{p|n, p prime} 1/p^3
A351244	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(4))).*(ZV(n).^(4)).num()	a(n) = n^4  * Sum_{p|n, p prime} 1/p^4
A351245	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(5))).*(ZV(n).^(5)).num()	a(n) = n^5  * Sum_{p|n, p prime} 1/p^5
A351246	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(6))).*(ZV(n).^(6)).num()	a(n) = n^6  * Sum_{p|n, p prime} 1/p^6
A351247	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(7))).*(ZV(n).^(7)).num()	a(n) = n^7  * Sum_{p|n, p prime} 1/p^7
A351248	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(8))).*(ZV(n).^(8)).num()	a(n) = n^8  * Sum_{p|n, p prime} 1/p^8
A351249	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(9))).*(ZV(n).^(9)).num()	a(n) = n^9  * Sum_{p|n, p prime} 1/p^9
A351262	lambdan	0	n -> RP(n, p -> new Q(Z.ONE, ZV(p).pow(10))).*(ZV(n).^(10)).num()	a(n) = n^10  * Sum_{p|n, p prime} 1/p^10  	a(n) = n^10 * Sum_{p|n, p prime} 1/p^10
A351331	lambdan	1	n -> ZV(n+1).*(ZV(n).^(n)).-(n - 1)	a(n) = (n+1)*n^n + n - 1.
A351365	lambdan	0	n -> SP(n, p -> ZV(n).^(p                  ))	a(n) = Sum_{p|n, p prime} n^p
A351366	lambdan	0	n -> SP(n, p -> ZV(p).^(p                      ))	a(n) = Sum_{p|n, p prime} p^p
A351367	lambdan	0	n -> SP(n, p -> ZV(p).^(Puma.nextPrime(p)      ))	a(n) = Sum_{p|n, p prime} p^nextprime(p), where nextprime(n) is the smallest prime > n
A351368	lambdan	0	n -> SP(n, p -> Puma.primeZ(p))	a(n) = Sum_{p|n, p prime} prime(p)
A351369	lambdan	0	n -> SP(n, p -> ZV(p).*(Puma.prime(p)          ))	a(n) = Sum_{p|n, p prime} p * prime(p)
A351370	lambdan	0	n -> SP(n, p -> ZV(p).^(Puma.prime(p)          ))	a(n) = Sum_{p|n, p prime} p^prime(p)
A351371	lambdan	0	n -> SP(n, p -> ZV(p + n/p))	a(n) = Sum_{p|n, p prime} (p + n/p)
A351394	multraf	1	(self, n) -> self.s(0).+(self.s(1))	""	new A048105(), new A046660()	a(n)=Annn(n)+Annn(n)		A048105,A046660			Number of divisors of n that are either squarefree, prime powers, or both.
A351408	multraf	1	(self, n) -> self.s(0).-(self.s(1)).+(2)	""	new A048105(), new A046951()
A351418	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(2)).+(self.s(2))	""	new A034444(), new A001221(), new A001222()	a(n)=Annn(n)-(\d+)*Annn(n)+Annn(n)	2
A351443	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A003958(sigma(k)) = A003958(k), where A003958 is multiplicative with a(p^e) = (p-1)^e and sigma is the sum of divisors function.	nonn	1..33	nyi	_Antti Karttunen_
A351444	multraf	1	(self, n) -> self.s(0).+(self.s(1))	""	new A322582(), new A351442()
A351445	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A351442(), new A003958()
A351448	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which A003958(sigma(k)) = 2*A003958(k), where A003958 is multiplicative with a(p^e) = (p-1)^e and sigma is the sum of divisors function.	nonn	1..29	nyi	_Antti Karttunen_
A351455	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A003557(), new A351450()	a(n) = A003557(n) * A351450(n).
A351457	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A351456(), new A339905()	a(n) = A351456(n) -   A339905(n).
A351458	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which k * gcd(sigma(k), â¬276086(k)) is equal to sigma(k) * gcd(k, â¬276086(k)), where â¬276086 is the primorial base exp-function, and sigma gives the sum of divisors of its argument.	nonn	1..132	nyi	_Antti Karttunen_
A351519	multraf	1	(self, n) -> self.s(0).+(self.s(1)).-(self.s(2))	""	new A000005(), new A000720(), new A001221()	a(n)=Annn(n)+Annn(n)-Annn(n)
A351533	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k that are multiples of 3 and for which sigma(k) is congruent to 2 modulo 4.	nonn	1..55	nyi	_Antti Karttunen_
A351535	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k that are not multiples of 3 and for which sigma(k) is congruent to 2 modulo 4.	nonn	1..66	nyi	_Antti Karttunen_
A351537	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which sigma(k) is congruent to 2 modulo 4 and is not a multiple of 3.	nonn	1..10000	nyi	_Antti Karttunen_
A351538	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that both k and sigma(k) are congruent to 2 modulo 4 and the 3-adic valuation of sigma(k) is exactly 1.	nonn	1..25000	nyi	_Antti Karttunen_
A351549	filtpos	0	0	new A019565()	(k, v) -> { final Z sig = JF(k).sigma(); return v.gcd(sig).*(k).equals(v.gcd(ZV(k)).*(sig)); }	Numbers k for which k * gcd(sigma(k), A019565(k)) is equal to sigma(k) * gcd(k, A019565(k)).	nonn,more	1..11	nyi	_Antti Karttunen_
A351550	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers of the form 4u+2 in â¬351551.	nonn,more	1..15	nyi	_Antti Karttunen_
A351551	#filamb	0	1	k -> 	Numbers k such that the largest unitary divisor of sigma(k) that is coprime with A003961(k) is also a unitary divisor of k.	nonn	1..20223	nyi	_Antti Karttunen_
A351578	#rgs2	1	new ()	new ()	Restricted growth sequence transform of the ordered pair [A007814(A109812(n)), A046523(A005940(1+A109812(n)))].
A351580	lambdan	0	n -> BI(FA(n).+(n - 2), n - 1)
A351619	lambdan	0	n -> SP(n, p -> Z_1(p))	a(n) = Sum_{p|n, p prime} (-1)^p
A351681	stir2	0	new A008578()	, 0	Stirling transform of A008578
A351708	lambdan	0	n -> SP(n, p -> FA(n/p))	a(n) = Sum_{p|n, p prime} (n/p)!
A351709	lambdan	0	n -> SP(n, p -> FA(p))	a(n) = Sum_{p|n, p prime} p!
A351710	lambdan	0	n -> SP(n, p -> FA(n - p))	a(n) = Sum_{p|n, p prime} (n-p)!
A351711	lambdan	0	n -> SP(n, p -> SD(n, d -> ZV(IU.gcd(d, p))))	a(n) = Sum_{p|n, p prime} Sum_{d|n} gcd(d,p)
A351746	lambdan	0	n -> SP(n, p -> ZV(p - 1).*(JF(n/p).tau()))	a(n) = Sum_{p|n, p prime} (p-1) * tau(n/p)
A351747	lambdan	0	n -> SP(n, p -> ZV(n).^(IU.lcm(p,n/p)      ))	a(n) = Sum_{p|n, p prime} n^lcm(p,n/p)
A351748	lambdan	0	n -> SP(n, p -> ZV(n).^(IU.gcd(p,n/p)      ))	a(n) = Sum_{p|n, p prime} n^gcd(p,n/p)
A351749	lambdan	0	n -> SP(n, p -> JF(p).sigma(p))	a(n) = Sum_{p|n, p prime} sigma_p(p)
A351750	lambdan	0	n -> SP(n, p -> ZV(p).*(JF(p).sigma(p)         ))	a(n) = Sum_{p|n, p prime} p * sigma_p(p)
A351751	lambdan	0	n -> SP(n, p -> ZV(p).^(JF(p).sigma(p).intValueExact()))	a(n) = Sum_{p|n, p prime} p^sigma_p(p)
A351758	lambdan	0	n -> SP(n, p -> SD(n, d -> ZV(IU.lcm(d, p))))	a(n) = Sum_{p|n, p prime} Sum_{d|n} lcm(d,p)
A351773	lambdan	0	n -> SD(n, d -> SP(n, p -> ZV(p).^(d)))	a(n) = Sum_{d|n} Sum_{p|n, p prime} p^d
A351774	lambdan	0	n -> SD(n, d -> SP(n, p -> ZV(d).^(p)))	a(n) = Sum_{d|n} Sum_{p|n, p prime} d^p
A351844	lambdan	0	n -> SD(n, d -> SP(n, p -> ZV(n).^(IU.gcd(d, p))))	a(n) = Sum_{d|n} Sum_{p|n, p prime} n^gcd(d,p)
A351845	lambdan	0	n -> SD(n, d -> SP(n, p -> ZV(n).^(IU.lcm(d, p))))	a(n) = Sum_{d|n} Sum_{p|n, p prime} n^lcm(d,p)
A351867	filter	1	new A000566()	v -> isPDP(4)	Heptagonal numbers (or 7-gonal numbers) which are products of four distinct primes.
A351963	rgs1	1	new DirectTransformSequence(1, new A278222(), new A109812())	Restricted growth sequence transform of A278222(A109812(n)), or equally of, A278222(A351965(n)).
A352012	lambdan	0	n -> RP(n, p -> new Q(FA(n - 1), FA(p - 1))).num()	a(n) = Sum_{p|n, p prime} (n-1)!/(p-1)!
A352014	lambdan	0	n -> RP(n, p -> new Q(Z_1(n/p + 1).*(FA(n - 1)), FA(p - 1))).num()	a(n) = Sum_{p|n, p prime} (-1)^(n/p+1) * (n-1)!/(p-1)!
A352058	lambdan	0	n -> RP(n, p -> new Q(FA(n), FA(p).*(FA(n/p)))).num()	a(n) = Sum_{p|n, p prime} n!/(p!*(n/p)!)
A352059	lambdan	0	n -> RP(n, p -> new Q(FA(n - 1), FA(n/p - 1))).num()	a(n) = Sum_{p|n, p prime} (n-1)!/(n/p-1)!
A352063	filter	0	new A002033()	(n, v) -> (n & 1) == 0
A352177	lingf	1	0,1,1,-1,1,-1,2,-2,0,1,-1	1,-1	0
A352182	simtraf	0	new A200994()	v -> v.*(2)	Twice Annnnnn
A352290	#nyi	0		Numbers m such that the Largest prime factor of m^2  +  1 is a Fibonacci number
A352299	multrar	0	(self, n)-> { final int m = 3; return SU(1, n, k -> self.a(n - k).*(BI(n, k)).*(FA(m).*(k == m ? 1 : 0).+(1))); }	"1"		(1+(k==m)*m!)*binomial(n,k)*b(n-k, m)))
A352300	multrar	0	(self, n)-> { final int m = 4; return SU(1, n, k -> self.a(n - k).*(BI(n, k)).*(FA(m).*(k == m ? 1 : 0).+(1))); }	"1"		(1+(k==m)*m!)*binomial(n,k)*b(n-k,m)))
A352302	multrar	0	(self, n)-> { final int m = 2; return SU(1, n, k -> self.a(n - k).*(BI(n, k)).*(FA(m).*(k == m ? 1 : 0).-(1))); }	"1"		(-1+(k==m)*m!)*binomial(n,k)*b(n-k,m)))
A352303	multrar	0	(self, n)-> { final int m = 3; return SU(1, n, k -> self.a(n - k).*(BI(n, k)).*(FA(m).*(k == m ? 1 : 0).-(1))); }	"1"		(-1+(k==m)*m!)*binomial(n,k)*b(n-k,m)))
A352304	multrar	0	(self, n)-> { final int m = 4; return SU(1, n, k -> self.a(n - k).*(BI(n, k)).*(FA(m).*(k == m ? 1 : 0).-(1))); }	"1"		(-1+(k==m)*m!)*binomial(n,k)*b(n-k,m)))
A352306	multrar	0	(self, n)-> { final int m = 2; return n == 0 ? Z.ONE : SU(1, n, k -> self.a(n - k).*(BI(n, k)).*((k == m ? 1 : 0)+ 1)); }	""		( 1+(k==m))*binomial(n,k)*b(n-k,m)));
A352307	multrar	0	(self, n)-> { final int m = 3; return n == 0 ? Z.ONE : SU(1, n, k -> self.a(n - k).*(BI(n, k)).*((k == m ? 1 : 0)+ 1)); }	""		( 1+(k==m))*binomial(n,k)*b(n-k,m)));
A352308	multrar	0	(self, n)-> { final int m = 4; return n == 0 ? Z.ONE : SU(1, n, k -> self.a(n - k).*(BI(n, k)).*((k == m ? 1 : 0)+ 1)); }	""		( 1+(k==m))*binomial(n,k)*b(n-k,m)));
A352309	multrar	0	(self, n)-> { final int m = 2; return n == 0 ? Z.ONE : SU(1, n, k -> self.a(n - k).*(BI(n, k)).*((k == m ? 1 : 0)- 1)); }	""		(-1+(k==m))*binomial(n,k)*b(n-k,m)));
A352310	multrar	0	(self, n)-> { final int m = 3; return n == 0 ? Z.ONE : SU(1, n, k -> self.a(n - k).*(BI(n, k)).*((k == m ? 1 : 0)- 1)); }	""		(-1+(k==m))*binomial(n,k)*b(n-k,m)));
A352311	multrar	0	(self, n)-> { final int m = 4; return n == 0 ? Z.ONE : SU(1, n, k -> self.a(n - k).*(BI(n, k)).*((k == m ? 1 : 0)- 1)); }	""		(-1+(k==m))*binomial(n,k)*b(n-k,m)));
A352357	multrar	0	(self, n) -> SU(1, n  , k -> BI(k+2, 3).*(BI(n, k)).*(self.a(n-k)))	"1"
A352358	multrar	0	(self, n) -> SU(1, n  , k -> BI(k+3, 4).*(BI(n, k)).*(self.a(n-k)))	"1"
A352491	simtraf	1	new A122111()	(n, v) -> ZV(n).-(v)
A352544	lambdan	0	n -> (n & 1) == 0 ? ZV(n/2) : Functions.DIGIT_SORT_DESCENDING.z(n).+(n)	a(n) = n/2 if n is even, otherwise n + A004186(n), where A004186 = arrange digits in decreasing order.
A352655	multraf	1	(self, n) -> self.s(0).*(2).-(self.s(1))./(2)	""	new A103882().skip(1), new A352654().skip(1)
A352693	multrar	0	(self, n) -> SU(1, n  , k -> JF(k).sigma(2).*(BI(n, k)).*(self.a(n-k)))	"1"
A352694	multrar	0	(self, n) -> SU(1, n  , k -> JF(k).sigma(2).*(BI(n-1, k-1)).*(self.a(n-k)))	"1"
A352839	multrar	0	(self, n) -> SU(1, n  , k -> JF(k).sigma(k).*(self.a(n-k)))	"1"
A352841	multrar	0	(self, n) -> SU(1, n  , k -> JF(k).sigma(k).*(BI(n, k)).*(self.a(n-k)))	"1"
A352842	multrar	0	(self, n) -> RU(1, n  , k -> new Q(ZV(k).*(JF(k).sigma(k)).*(self.a(n-k)), FA(n-k))).*( FA(n-1)      ).num()	"1"
A352843	multrar	0	(self, n) -> SU(1, n  , k -> JF(k).sigma(k).*(BI(n-1, k-1).*(self.a(n-k))))	"1"
A352868	multrar	0	(self, n) -> RU(1, n  , k -> new Q(ZV(k).*(MU(k)).*(self.a(n-k))  , FA(n-k))).*(FA(n-1)).num()	"1"
A352869	multrar	0	(self, n) -> SU(1, n  , k -> MU(k).*(BI(n, k)).*(self.a(n-k)))	"1"
A352887	multrar	0	(self, n) -> SU(1, n  , k -> PHI(k).*(BI(n, k)).*(self.a(n-k)))	"1"
A352888	rgs1	1	new DirectTransformSequence(1, new A278219(), new A109812())	Restricted growth sequence transform of A278219(A109812(n)).
A352914	multrar	0	(self, n) -> RU(1, n  , k -> new Q(Functions.PRIME.z(k).*(k).*(self.a(n-k))      , FA(n-k))).*(FA(n-1)).num()	"1"
A352915	moetraf	1	new A000040().skip(1)	, 0	odd primes.
A353019	filter	1	new A000566()	v -> isPDP(5)	Heptagonal numbers (or 7-gonal numbers): n*(5*n-3)/2 which are products of five distinct primes.
A353027	filter	1	new A000292()	v -> isPDP(4)	Tetrahedral (or triangular pyramidal) numbers which are products of four distinct primes.
A353157	multraf	0	(self, n)-> self.s(0).min(self.s(1))	""	new A006257(), new A080079()
A353162	multrar	0	(self, n) -> RU(1, n  , k -> new Q((ZV(k).IPP() ? Z.ONE : Z.ZERO).*(k*k).*(self.a(n-k))     , FA(n-k))).*(FA(n-1)       ).num()	"1"
A353163	multrar	0	(self, n) -> SU(1, n  , k -> (ZV(k).IPP() ? Z.ONE : Z.ZERO).*(BI(n-1, k-1).*(self.a(n-k))).*(k))	"1"
A353164	multrar	0	(self, n) -> SU(1, n  , k -> (ZV(k).IPP() ? Z.ONE : Z.ZERO).*(self.a(n-k)).*(k))	"1"
A353165	multrar	0	(self, n) -> SU(1, n  , k -> (ZV(k).IPP() ? Z.ONE : Z.ZERO).*(BI(n, k)).*(self.a(n-k)).*(k))	"1"
A353166	multrar	0	(self, n) -> RU(1, n  , k -> new Q(Functions.PRIME.z(k).*(self.a(n-k))           , FA(n-k))).*(FA(n-1)).num()	"1"
A353177	multrar	0	(self, n) -> SU(1, n, k -> Z_1(n - k).*(k).*(S2(n, k)).*(self.a(k - 1)))	"1"		a(0) = 1; a(n) = Sum_{k=1..n} (-1)^(n-k) * k * Stirling2(n,k) * a(k-1).
A353233	moetraf	1	new A023887()	, 0	sigma_n(n).
A353277	#rgs2	1	new (), new ()	Restricted growth sequence transform of function f(1) = 1, and for n > 1, f(n) = [A007814(u), A007949(u)], where u = A156552(n).
A353292	multraf	0	(self, n) -> self.s(0).+(self.s(1).*(self.s(2)))	""	new A062050(), new A088512(), new A080100()	a(n) = A062050(n) + A088512(n) * A080100(n) for any n > 0.
A353308	#filtpos	0	0	new A046523()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A046523(â¬332223(k)) is equal to A046523(k).	nonn	1..66	nyi	_Antti Karttunen_
A353330	dirtraf	0	new A006047()	new A156552()		a(n)= Annnnnn(Annnnnn(n))	
A353360	dirtraf	0	new A006047()	new A048675()		a(n)= Annnnnn(Annnnnn(n))	
A353365	filamb	0	1	k -> { final Z sig = JF(k).sigma(); return sig.makeOdd().equals(JF(sig).sigma().makeOdd()); }	Numbers k such that the odd part of sigma(sigma(k)) is equal to the odd part of sigma(k).	nonn	1..48	nyi	_Antti Karttunen_
A353527	filter	0	new A353526()	(n, v) -> (n & 1) == 0
A353564	#nyi	0	Product_{d|n, d<n} â¬276086(phi(d)), where â¬276086 is primorial base exp-function, and phi is Euler totient function.	nonn	1..65	nyi	_Antti Karttunen_
A353612	trilambn	1	1	1	(n, k) -> ZV(n + k).IPP() ? ZV(n + k) : Z.ZERO	T(n,k) = (n + k) if (n + k) is a prime number, otherwise T(n,k) = 0; n >= 1, k >= 1.
A353635	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that phi(k) = phi(sigma(k)) and A003958(k) = A003958(sigma(k)).	nonn	1..56	nyi	_Antti Karttunen_
A353663	trilambn	1	1	1	(n, k) ->ZV(n + k).IPP() ? Z.ONE : Z.ZERO	T(n,k) = 1 if n+k is a prime, otherwise T(n,k) = 0; n >= 1, k >= 1.	nonn,tabl
A353679	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which phi(k) = phi(sigma(k)).	nonn	1..57	nyi	_Antti Karttunen_
A353683	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which phi(sigma(k)) > phi(k).	nonn	1..75	nyi	_Antti Karttunen_
A353684	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which phi(sigma(k)) >= phi(k).	nonn	1..77	nyi	_Antti Karttunen_
A353685	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which phi(sigma(k)) <= phi(k).	nonn	1..75	nyi	_Antti Karttunen_
A353686	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which phi(sigma(k)) < phi(k).	nonn	1..73	nyi	_Antti Karttunen_
A353746	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which phi(sigma(k)) + A064989(sigma(k)) is equal to phi(k) + A064989(k).	nonn,more	1..14	nyi	_Antti Karttunen_
A353755	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A062401(), new A353754()
A353756	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A353752(), new A353754()
A353757	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A353750(), new A353749()	a(n) = A353750(n) -   A353749(n).
A353758	filtpos	0	1	new A353749()	(k, v) -> v.compareTo(new A353749().a(JF(k).sigma())) > 0	Numbers k for which A353749(k) > A353749(sigma(k)), where A353749(k) = phi(k) * A064989(k), and A064989 shifts the prime factorization one step towards lower primes.	nonn	1..76	nyi	_Antti Karttunen_
A353759	filtpos	0	1	new A353749()	(k, v) -> v.compareTo(new A353749().a(JF(k).sigma())) <= 0	Numbers k for which A353749(k) <= A353749(sigma(k)), where A353749(k) = phi(k) * A064989(k), and A064989 shifts the prime factorization one step towards lower primes.	nonn	1..73	nyi	_Antti Karttunen_
A353761	tuptraf	1	(n, s) -> s[0].gcd(s[1])	""	new A353749(), new A353750()	a(n)=gcd(Annn(n),Annn(n))
A353762	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A353749(), new A353761()
A353763	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A353750(), new A353761()
A353764	filtpos	0	1	new A353749()	(k, v) -> new A353749().a(JF(k).sigma()).mod(v).isZero()	Numbers k for which A353749(sigma(k)) is a multiple of A353749(k), where A353749(k) = phi(k) * A064989(k), and A064989 shifts the prime factorization one step towards lower primes.	nonn	1..229	nyi	_Antti Karttunen_
A353765	filtpos	0	1	new A353749()	(k, v) -> v.mod(new A353749().a(JF(k).sigma())).isZero()	Numbers k for which A353749(k) is a multiple of A353749(sigma(k)), where A353749(k) = phi(k) * A064989(k), and A064989 shifts the prime factorization one step towards lower primes.	nonn,more	1..19	nyi	_Antti Karttunen_
A353790	dirtraf	1	new A353749()	new SimpleTransformSequence(1, new A003961(), (n, v) -> JF(v).sigma())	"null"
A353792	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A351442(), new A350073()
A353794	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A326042(), new A351456()
A353805	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A051027(), new A353804()	a(n) = A051027(n) / A353804(n).
A353806	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A353802(), new A353804()
A353807	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A353802(k) / sigma(sigma(k)) is an integer > 1, where A353802(n) = Product_{p^e||n} sigma(sigma(p^e)).	nonn	1..46	nyi	_Antti Karttunen_
A353812	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A347870(), new A353811()	a(n) = A347870(n) -   A353811(n).
A353868	filter	1	new A001615()	(k, v) -> v.mod(Functions.CARMICHAEL_LAMBDA.z(k)).isZero()	Numbers k such that the Carmichael function A002322(k) divides Dedekind psi A001615(k).
A353880	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/4, k -> new Q(S1(n-2*k, 2*k).abs().*(FA(2*k)), Z.FOUR.^(k).*(FA(n-2*k))).*(FA(n))).num()
A353881	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/6, k -> new Q(S1(n-3*k, 3*k).abs().*(FA(3*k)), ZV( 36).^(k).*(FA(n-3*k))).*(FA(n))).num()
A353882	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/8, k -> new Q(S1(n-4*k, 4*k).abs().*(FA(4*k)), ZV(576).^(k).*(FA(n-4*k))).*(FA(n))).num()
A353883	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/4, k -> new Q(S2(n-2*k, 2*k).*(FA(2*k)), Z.FOUR.^(k).*(FA(n-2*k))).*(FA(n))).num()
A353884	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/6, k -> new Q(S2(n-3*k, 3*k).*(FA(3*k)), ZV( 36).^(k).*(FA(n-3*k))).*(FA(n))).num()
A353885	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/8, k -> new Q(S2(n-4*k, 4*k).*(FA(4*k)), ZV(576).^(k).*(FA(n-4*k))).*(FA(n))).num()
A353891	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/4, k -> new Q(S1(n-2*k, 2*k).abs().*(FA(2*k)), Z.FOUR.^(k).*(FA(k)).*(FA(n-2*k))).*(FA(n))).num()
A353892	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/6, k -> new Q(S1(n-3*k, 3*k).abs().*(FA(3*k)), ZV( 36).^(k).*(FA(k)).*(FA(n-3*k))).*(FA(n))).num()
A353893	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/8, k -> new Q(S1(n-4*k, 4*k).abs().*(FA(4*k)), ZV(576).^(k).*(FA(k)).*(FA(n-4*k))).*(FA(n))).num()
A353894	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/4, k -> new Q(S2(n-2*k, 2*k).*(FA(2*k)), Z.FOUR.^(k).*(FA(k)).*(FA(n-2*k))).*(FA(n))).num()
A353895	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/6, k -> new Q(S2(n-3*k, 3*k).*(FA(3*k)), ZV( 36).^(k).*(FA(k)).*(FA(n-3*k))).*(FA(n))).num()
A353896	lambdan	0	n -> (n == 0) ? Z.ONE : RU(0, n/8, k -> new Q(S2(n-4*k, 4*k).*(FA(4*k)), ZV(576).^(k).*(FA(k)).*(FA(n-4*k))).*(FA(n))).num()
A354002	lambdan	1	n -> SU(1, n, k -> S1(n, k).*(Functions.PRIME.z(k + 1)))	a(n)=Sum_{k=(\d+),n}Stirling(\d+)(n,k)*prime(k+(\d+))	1,1,1
A354038	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sum of the proper divisors of k is a multiple of 4.	nonn	1..68	nyi	_Antti Karttunen_
A354039	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Odd numbers k for which sigma(k^2) == 1 (mod 4).	nonn	1..70	nyi	_Antti Karttunen_
A354086	filter	1	new A051682()	v -> isPDP(4)	11-gonal (or hendecagonal) numbers which are products of four distinct primes.
A354090	simtraf	1	new A304776()	(n, v) -> ZV(n)./(v)
A354097	lambdan	1	n -> ((n - Euler.phiAsLong(n)) & 3) == 0 ? Z.ONE : Z.ZERO	a(n) = 1 iff A010873(A051953(n)) == 0.
A354098	filtpos	1	1	new A051953()	v -> v.and(Z.THREE).isZero()	Numbers k such that the cototient of k (= k-phi(k)) is a multiple of 4.
A354183	#nyi	0		Primes p such that p divides 2^((p - 1)/x)  -  1, where x is the Largest prime factor of p  -  1
A354189	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which phi(â¬267099(k)) is equal to phi(k), where â¬267099 is fully multiplicative involution swapping the positions of 4k+1 and 4k+3 primes, and phi is Euler totient function.	nonn	1..5200	nyi	_Antti Karttunen_
A354194	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which phi(â¬267099(k)) is equal to phi(k), but the number of 4m+1 and 4m+3 primes in the prime factorization of k (when counted with multiplicity) is not equal. Here â¬267099 is fully multiplicative involution swapping the positions of 4m+1 and 4m+3 primes, and phi is Euler totient function.	nonn	1..377	nyi	_Antti Karttunen_
A354288	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A088501()
A354289	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A335531()
A354291	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A032033()
A354338	lambdan	0	n -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, ZV(d).*(FA(k/d)     ))./(FA(n - k)))).*(FA(n)).num() 	( Sum_{d|k} 1/(d * (k/d)!)     )/(n-k)!  FA(n) *
A354339	lambdan	0	n -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, ZV(d).*(ZV(k/d).^(d)))./(FA(n - k)))).*(FA(n)).num() 	( Sum_{d|k} 1/(d * (k/d)^d)    )/(n-k)!  FA(n) *
A354341	lambdan	0	n -> RU(1, n, k -> RD(k, d -> new Q(Z.ONE, ZV(d).*(FA(k/d).^(d)))./(FA(n - k)))).*(FA(n)).num() 	( Sum_{d|k} 1/(d * ((k/d)!)^d) )/(n-k)!  FA(n) *
A354345	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that k = x * A005383(i), where x is either 2, 3, 8, 9 or 15 and i > 2 [i.e., A005383(i) > 5].	nonn	1..58	nyi	_Antti Karttunen_
A354350	simtraf	0	new A354365()	(n, v) -> ZV(n).+(v)		a(n)= n + Annnnnn(n)	
A354352	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A108951(), new A354351()	a(n) = A108951(n) +   A354351(n).
A354356	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that sigma(k) is 3-smooth (has no larger prime factors than 3).	nonn	1..10000	nyi	_Antti Karttunen_
A354446	filter	1	new A051682()	v -> isPDP(3)	11-gonal numbers (numbers of the form k*(9*k-7)/2), which are products of three distinct primes.
A354447	filter	0	new A011541()	v -> isPDP(4)	Taxicab numbers (sums of 2 cubes in more than 1 way) which are products of four distinct primes.
A354448	filter	1	new A051682()	v -> isPDP(2)	11-gonal (or hendecagonal) numbers which are products of two distinct primes.
A354451	filter	1	new A067742()	(k, v) -> (k & 1) == 1
A354452	filter	1	new A067742()	(k, v) -> (k & 1) == 0
A354482	filtpos	1	-1	new A004601()	ZERO	Positions of 0's in binary expansion of Pi.					Positions of 0's in binary expansion of Pi.
A354574	multrar	0	(self, n) -> SU(0, n - 1, k -> Z_1(n - k - 1).*(S2(n - 1, k)).*(self.a(k))).*(n)	"1"		a(0) = 1; a(n) = n * Sum_{k=0..n-1} (-1)^(n-k-1) * Stirling2(n-1,k) * a(k).
A354610	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A007114()
A354612	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A007113()
A354710	recval	0	new A009101()		Records in Annnnnn
A354729	multrar	0	(self, n) -> SU(0, n - 1, k -> S1(n - 1, k).*(self.a(k))).*(n)	"1"
A354730	multrar	0	(self, n) -> SU(0, n - 1, k -> SA(n - 1, k).*(self.a(k))).*(n)	"1"
A354843	lambdan	0	n -> RD(n, d -> new Q(ZV(n/d).^(d)     , FA(d)                                )).*(FA(n)).num()
A354844	lambdan	0	n -> RD(n, d -> new Q(ZV(n/d).^(d)     , FA(d).*(FA(n/d))                     )).*(FA(n)).num()
A354845	lambdan	0	n -> RD(n, d -> new Q(ZV(n/d).^(d-1)   , FA(d)                                )).*(FA(n)).num()
A354849	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n/d) , FA(d-1))).*(FA(n-1)).num()
A354862	lambdan	0	n -> RD(n, d -> new Q(ZV(n/d)          , FA(d)                                )).*(FA(n)).num()
A354863	lambdan	0	n -> RD(n, d -> new Q(ZV(n/d)          , FA(d)                                )).*(FA(n)).num()
A354867	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A122111(), new A354866()	a(n) = A122111(n) +   A354866(n).
A354869	filtpos	0	1	new A354866()	ODD	Positions of odd terms in A354866, the Dirichlet inverse of A122111.	nonn	1..8192	nyi	_Antti Karttunen_
A354870	moetrafi	1	new A354819()	, 0	#
A354888	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(d)       , FA(d)                                )).*(FA(n)).num()
A354889	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(d-1)     , FA(d)                                )).*(FA(n)).num()
A354890	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n)       , FA(d)                                )).*(FA(n)).num()
A354891	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n - d)   , FA(d)                                )).*(FA(n)).num()
A354892	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n)       , FA(n/d)                              )).*(FA(n)).num()
A354893	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n - d)   , FA(n/d)                              )).*(FA(n)).num()
A354897	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n)       , FA(d).*(FA(n/d))                     )).*(FA(n)).num()
A354898	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n - d)   , FA(d).*(FA(n/d))                     )).*(FA(n)).num()
A354899	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(d)       , FA(d).*(FA(n/d))                     )).*(FA(n)).num()
A354900	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(d)       , FA(n/d)                              )).*(FA(n)).num()
A354976	filter	1	new A000292()	v -> isPDP(5)	Tetrahedral numbers which are products of five distinct primes.
A355095	filter	0	new A011541()	v -> isPDP(5)	Taxicab numbers (sums of 2 cubes in more than 1 way) which are products of five distinct primes.
A355100	multrar	0	(self, n) -> SU(0, n - 1, k -> S2(n - 1, k).*(self.a(k))).*(2*n)	"1"
A355101	multrar	0	(self, n) -> SU(0, n - 1, k -> S2(n - 1, k).*(self.a(k))).*(3*n)	"1"
A355102	multrar	0	(self, n) -> SU(0, n - 1, k -> Z_1(n - k - 1).*(S2(n - 1, k)).*(self.a(k))).*(2*n)	"1"
A355103	multrar	0	(self, n) -> SU(0, n - 1, k -> Z_1(n - k - 1).*(S2(n - 1, k)).*(self.a(k))).*(3*n)	"1"
A355104	multrar	0	(self, n) -> SU(0, n - 1, k -> S1(n - 1, k).*(self.a(k))).*(2*n)	"1"
A355105	multrar	0	(self, n) -> SU(0, n - 1, k -> S1(n - 1, k).*(self.a(k))).*(3*n)	"1"
A355106	multrar	0	(self, n) -> SU(0, n - 1, k -> SA(n - 1, k).*(self.a(k))).*(2*n)	"1"
A355107	multrar	0	(self, n) -> SU(0, n - 1, k -> SA(n - 1, k).*(self.a(k))).*(3*n)	"1"
A355124	multrar	0	(self, n) -> SU(0, n - 1, k -> Z2(k).*(S1(n - 1, k)).*(self.a(k))).*(n)	"1"
A355126	multrar	0	(self, n) -> SU(0, n - 1, k -> Z2(k).*(SA(n - 1, k)).*(self.a(k))).*(n)	"1"
A355128	multrar	0	(self, n) -> SU(0, n - 1, k -> Z2(k).*(S2(n - 1, k)).*(self.a(k))).*(n)	"1"
A355130	multrar	0	(self, n) -> SU(0, n - 1, k -> Z_1(n - k - 1).*(Z2(k)).*(S2(n - 1, k)).*(self.a(k))).*(n)	"1"
A355203	multrar	0	(self, n) -> SU(1, n - 1, k -> Z_1(n - 1 - k).*(S2(n - 1, k)).*(self.a(k))).*(2)	"1"		a(1) = 1; a(n+1) = Sum_{k=1..n} (-1)^(n-k) * Stirling2(n,k) * a(k).
A355204	multrar	1	(self, n) -> SU(1, n - 1, k -> S1(n - 1, k).*(self.a(k))).*(2)	"1"
A355205	multrar	1	(self, n) -> SU(1, n - 1, k -> SA(n - 1, k).*(self.a(k))).*(2)	"1"
A355206	multrar	1	(self, n) -> SU(1, n - 1, k -> S2(n - 1, k).*(self.a(k))).*(2)	"1"
A355207	multrar	1	(self, n) -> SU(1, n - 1, k -> Z_1(n - 1-k).*(S2(n - 1, k)).*(self.a(k))).*(2)	"1"
A355209	multrar	1	(self, n) -> SU(1, n - 1, k -> Z2(k).*(SA(n - 1, k)).*(self.a(k)))	"1"
A355210	multrar	1	(self, n) -> SU(1, n - 1, k -> Z2(k).*(S2(n - 1, k)).*(self.a(k)))	"1"
A355211	multrar	1	(self, n) -> SU(1, n - 1, k -> Z_1(n - 1-k).*(Z2(k)).*(S2(n - 1, k)).*(self.a(k)))	"1"
A355214	multrar	1	(self, n) -> SU(1, n - 1, k -> Z2(k - 1).*(S1(n - 1, k)).*(self.a(k)))	"1"
A355215	multrar	1	(self, n) -> SU(1, n - 1, k -> Z2(k - 1).*(SA(n - 1, k)).*(self.a(k)))	"1"
A355216	multrar	1	(self, n) -> SU(1, n - 1, k -> Z2(k - 1).*(S2(n - 1, k)).*(self.a(k)))	"1"
A355217	multrar	1	(self, n) -> SU(1, n - 1, k -> Z_1(n - 1-k).*(Z2(k - 1)).*(S2(n - 1, k)).*(self.a(k)))	"1"
A355390	lambdan	0	n -> BI(PT(n), Z.TWO).*(2)
A355481	multraf	0	(self, n) -> self.s(0).-(self.s(1))./(2)	""	new A001246(), new A129123()	)/2
A355591	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A070826().skip(1), new A071148()	a(n)=Annn(n+(\d+))-Annn(n)			1	A070826,A071148	a(n) = (product of the first n odd primes) - (sum of the first n odd primes).
A355669	lambdan	0	n -> RD(n, d -> new Q(FA(d)).^(d - n/d)                                        ).*(FA(n)).num()
A355821	#filtpos	0	1	new A003961()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A003961(k) and â¬276086(k) are relatively prime, where A003961 is fully multiplicative with a(p) = nextprime(p), and â¬276086 is primorial base exp-function.	nonn	1..71	nyi	_Antti Karttunen_
A355823	muldirs	0	(p, e) -> SEQ.a(e)	new A209229()	Multiplicativewitha(p^e)=Annn(e)		A209229
A355825	muldirs	0	(p, e) -> SEQ.a(e)	new A010060()	Multiplicativewitha(p^e)=Annn(e)		A010060
A355859	trilambn	1	1	1	(n, k) -> ((n + k) & 1) == 0 ? ZV(n + k)./(2) : Z.ZERO	T(n,k) = (n + k)/2 if (n + k) is congruent to 0 (mod 2), otherwise T(n,k) = 0; n >=
A355860	trilambn	1	1	1	(n, k) -> (n*k) % (n + k) == 0 ? ZV(n*k / (n + k)) : Z.ZERO	T(n,k) = n*k/(n + k) if n+k divides n*k, otherwise T(n,k) = 0; n >= 1, k >= 1.
A355893	#nyi	0		Let â¬090252(n) = Product_{i >= 1} prime(i)^e(i); then a(n) is the concatenation, in reverse order, of e_1, e_2, ..., ending at the exponent of the largest prime factor of â¬090252(n); a(1)=0 by convention
A355894	#nyi	0		Let â¬354790(n) = Product_{i >= 1} prime(i)^e(i); then a(n) is the concatenation, in reverse order, of e_1, e_2, ..., ending at the exponent of the largest prime factor of â¬354790(n); a(1)=0 by convention
A355930	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A056239(), new A356159()
A355942	filtpos	1	1	new A326042()	(n, v) -> ZV(n).mod(v).isZero()	Numbers n such that n is a multiple of Annnnnn(n)
A356095	filter	1	new A000292()	v -> isPDP(3)	Tetrahedral (or triangular pyramidal) numbers which are products of three distinct primes (or sphenic numbers).
A356101	insect2	0	new A000201()	new A022839()	Intersection
A356131	lambdan	0	n -> SU(1, n, k -> ZV(k - 1).^(n).*(BI(n/k + 1,2)))
A356135	filter	0	new A001358()	(k, v) -> v.mod(k) == 6	Semiprimes k such that k is congruent to 6 modulo k s index in the sequence of semiprimes.      nonn,hard       1.
A356219	insect2	0	new A001952()	new A003151()	Intersection
A356244	lambdan	0	n -> SU(1, n, k -> ZV(k - 1).^(n).*(SU(1, n/k, j -> ZV(j).^(2))))
A356282	lambdan	0	n -> SU(0, n, k -> BI(3*n, n-k).*(PT(k)))
A356284	lambdan	0	n -> SU(0, n, k -> BI(3*n,   k).*(PT(k)))
A356286	lambdan	0	n -> SU(0, n, k -> BI(3*k,   k).*(PT(k)))
A356291	simtraf	0	new A003319()	(n, v) -> FA(n).-(v)
A356297	lambdan	0	n -> RU(1,n, k -> new Q(JF(k).sigma0(), ZV(k)                                 )).*(FA(n)).num()
A356298	lambdan	0	n -> RU(1,n, k -> new Q(JF(k).sigma(2), ZV(k)                                 )).*(FA(n)).num()
A356312	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A003415(k) and â¬276086(k) are not relatively prime, where A003415 is the arithmetic derivative, and â¬276086 is the primorial base exp-function.	nonn	1..74	nyi	_Antti Karttunen_
A356323	lambdan	0	n -> RU(1,n, k -> new Q(JF(k).sigma(3), ZV(k)                                 )).*(FA(n)).num()
A356355	filter	1	new A001106()	v -> isPDP(5)	9-gonal numbers which are products of five distinct primes.
A356357	filter	0	new A001358()	(k, v) -> v.mod(k) == 7	Semiprimes k such that k is congruent to 7 modulo k s index in the sequence of semiprimes       nonn,hard       1.
A356419	inverse	1	new A067576()	1	1	considered as a permutation of the positive integers.
A356422	filter	1	new A000566()	v -> isPDP(3)	Heptagonal numbers (or 7-gonal numbers, i.e., numbers of the form k*(5*k - 3)/2) which are products of three distinct primes (or sphenic numbers).
A356424	filter	1	new A001106()	v -> JF(v).isSemiprime()	9-gonal numbers that are semiprimes.
A356437	lambdan	0	n -> RU(1,n, k -> new Q(JF(k).sigma(k), ZV(k)                                 )).*(FA(n)).num()
A356472	simtraf	1	new A018804()	(n, v) -> new Q(v, ZV(n)).num()	a(n)=numerator(Annn(n)/n)
A356473	multraf	1	(self, n) -> new Q(self.s(0), ZV(n)).den()	""	new A018804()	denominator of new A018804()/n
A356486	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n)   , FA(d-1))).*(FA(n-1)).num()
A356589	lambdan	0	n -> RU(1,n, k -> new Q(JF(k).sigma(k), ZV(k).*(FA(n-k))                      )).*(FA(n)).num()
A356600	lambdan	0	n -> RU(1,n, k -> new Q(JF(k).sigma(2), ZV(k).*(FA(n-k))                      )).*(FA(n)).num()
A356661	lambdan	0	n -> RD(n, d -> new Q(Z.ONE, ZV(d).^(n/d - 1)                       )          ).*(FA(n)).num()
A356662	lambdan	0	n -> RD(n, d -> new Q(Z.ONE, FA(d).^(n/d - 1)                       )          ).*(FA(n)).num()
A356755	filter	0	new A001358()	(k, v) -> v.mod(k) == 2	Semiprimes k such that k is congruent to 2 modulo k s index in the sequence of semiprimes.      nonn,hard       1.
A356764	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A357741(), new A106125()
A356839	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A005132(2*n) + A005132(2*n+1).
A357023	filter	0	new A001358()	(k, v) -> v.mod(k) == 5	Semiprimes k such that k is congruent to 5 modulo k s index in the sequence of semiprimes.      nonn,hard       1.
A357112	multraf	1	(self, n) -> self.s(0)./(6)	"1"	new A035019()	v -> v./(6)	for n > 0.
A357188	#nyi	0		Numbers with (WLOG adjacent) prime indices x <= y such that the Largest prime factor of x is greater than the least prime factor of y
A357238	moetrafi	1	new A000073()	, 0	).
A357239	moetrafi	1	new A000078()	, 0	).
A357259	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A038548(), new A079667()	a(n) = A038548(n) +   A079667(n). (End)
A357332	simtraf	0	new A000793().skip(1)	v -> ZV(ZUtils.valuation(v, ZV(2)))	2-adic valuation of A000793(n).
A357448	simtraf	0	new A244040()	v -> v.modZ(2)	a(n)=Annn(n)mod(\d+)	2	A244040
A357508	multraf	0	(self, n) -> self.s(0).-(self.s(1).*(2))	""	new A001448(), new A005810()	a(n)=Annn(n)-(\d+)*Annn(n)	2
A357509	tuptraf	0	(n, s) -> s[0].*(2).-(s[1].*(9))	""	new A005809(), new A000984()	a(n) = 2* A005809(n) - 9* A000984(n).
A357511	lambdan	0	n -> (n == 0) ? Z.ZERO : RU(1, n, k -> new Q(BI(n, k).^(2).*(BI(n + k, k).^(2)), ZV(k)     )).num()
A357513	lambdan	0	n -> (n == 0) ? Z.ZERO : RU(1, n, k -> new Q(BI(n, k).^(2).*(BI(n + k, k).^(2)), ZV(k).^(3))).num()
A357567	tuptraf	0	(n, s) -> s[0].*(5).-(s[1].*(14))	""	new A005259(), new A005258()	a(n) = 5* A005259(n) - 14*A005258(n).
A357590	filter	1	new A000217()	v -> isPDP(5)	Triangular numbers which are products of five distinct primes (or pentaprimes).
A357652	multraf	0	(self, n) -> self.s(0).+(self.s(1))./(2)	""	new A001246(), new A129123()	)/2
A357688	ordsum	4	new A010056().skip(2)	4	Number of ways to write n as an ordered sum of four positive Fibonacci numbers (with a single type of 1).	nonn	4..10000
A357690	ordsum	5	new A010056().skip(2)	5	Number of ways to write n as an ordered sum of five positive Fibonacci numbers (with a single type of 1).	nonn	5..10000
A357691	ordsum	6	new A010056().skip(2)	6	Number of ways to write n as an ordered sum of six positive Fibonacci numbers (with a single type of 1).	nonn	6..17711
A357694	ordsum	7	new A010056().skip(2)	7	Number of ways to write n as an ordered sum of seven positive Fibonacci numbers (with a single type of 1).	nonn	7..49
A357698	multraf	1	(self, n) -> self.s(0).-(self.s(1).*(n))	""	new A073185(), new A212793()	a(n)=Annn(n)-(Annn(n)*n)
A357716	ordsum	8	new A010056().skip(2)	8	Number of ways to write n as an ordered sum of eight positive Fibonacci numbers (with a single type of 1).	nonn	8..48
A357717	ordsum	9	new A010056().skip(2)	9	Number of ways to write n as an ordered sum of nine positive Fibonacci numbers (with a single type of 1).	nonn	9..47
A357730	ordsum	10	new A010056().skip(2)	10	Number of ways to write n as an ordered sum of ten positive Fibonacci numbers (with a single type of 1).	nonn	10..45
A357731	simtraf	3	new A121549()	v -> v./(2)	a(n)=floor(Annn(n)/(\d+))	2		A121549			Number of partitions of n into 2 distinct positive Fibonacci numbers (with a single type of 1).
A357741	filter	0	new A001358()	(k, v) -> v.mod(k) == 0	Semiprimes k such that k is divisible by its index in the sequence of semiprimes.       nonn,hard,more  1..17   ny
A357781	filter	0	new A001358()	(k, v) -> v.mod(k) == 1	Semiprimes k such that k is congruent to 1 modulo k s index in the sequence of semiprimes.      nonn,hard       1.
A357807	filter	0	new A001358()	(k, v) -> v.mod(k) == 3	Semiprimes k such that k is congruent to 3 modulo k s index in the sequence of semiprimes.      nonn,hard       1.
A357808	filter	0	new A001358()	(k, v) -> v.mod(k) == 4	Semiprimes k such that k is congruent to 4 modulo k s index in the sequence of semiprimes.      nonn,hard,more  1.
A357818	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, A001615.dedekindPsi(k))).num()	Numerators of the partial sums of the reciprocals of the Dedekind psi function (A001615).
A357819	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, A001615.dedekindPsi(k))).den()	xxxerators of the partial sums of the reciprocals of the Dedekind psi function (A001615).
A357820	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1), A001615.dedekindPsi(k))).num()	Numerators of the partial alternating sums of the reciprocals of the Dedekind psi function (A001615).
A357821	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1), A001615.dedekindPsi(k))).den()	xxxerators of the partial alternating sums of the reciprocals of the Dedekind psi function (A001615).
A357843	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1), JF(k).sigma0())).num()	Numerators of the partial alternating sums of the reciprocals of the number of divisors function (A000005).
A357844	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1), JF(k).sigma0())).den()	xxxerators of the partial alternating sums of the reciprocals of the number of divisors function (A000005).
A357845	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1), JF(k).sigma())).num()	Numerators of the partial alternating sums of the reciprocals of the sum of divisors function (A000203).
A357846	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1), JF(k).sigma())).den()	xxxerators of the partial alternating sums of the reciprocals of the sum of divisors function (A000203).
A357889	simtraf	0	new A022010()	v -> v.-(179)./(210)	a(n)= (Annnnnn(n)- (\d+))/(\d+)	
A357890	simtraf	0	new A022013()	v -> v.-(173)./(210)	a(n)= (Annnnnn(n)- (\d+))/(\d+)	
A357906	simtraf	1	new A073103()	v -> ZV(v.bitLength() - 1)
A357935	filter	1	new A279771()	PRIME	.
A357956	tuptraf	0	(n, s) -> s[0].*(5).-(s[1].*(2))	""	new A005259(), new A005258()	a(n) = 5* A005259(n) - 2* A005258(n).
A357970	parmof2	0	A357970	new A006942()	a(n) = A006942(A055643(n)) + 6*(4 - ceiling(log10(A055643(n) + 1))) for n > 0.
A357971	parmof2	0	A357970	new A010371()	a(n) = A010371(A055643(n)) + 6*(4 - ceiling(log10(A055643(n) + 1))) for n > 0.
A357972	parmof2	0	A357970	new A063720()	a(n) = A063720(A055643(n)) + 6*(4 - ceiling(log10(A055643(n) + 1))) for n > 0.
A357973	parmof2	0	A357970	new A074458()	a(n) = A074458(A055643(n)) + 6*(4 - ceiling(log10(A055643(n) + 1))) for n > 0.
A357974	parmof2	0	A357970	new A277116()	a(n) = A277116(A055643(n)) + 6*(4 - ceiling(log10(A055643(n) + 1))) for n > 0.
A358038	partsun	0	new A004709()			Partial sums of the cubefree numbers.
A358173	diffs	0	new A286708()	First differences of A286708.
A358221	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A003415(k) divides â¬276086(k), where A003415 is the arithmetic derivative, and â¬276086 is the primorial base exp-function.	nonn	1..72	nyi	_Antti Karttunen_
A358273	simtraf	1	new A007442()	v -> ZV(v.bitLength())	Number of binary digits of A007442(n)..
A358367	lambdan	0	n -> BI(new Q(n * 3, 2), n).*(ZV(8).^(n))              .num()
A358389	lambdan	0	n -> RD(n, d -> new Q(FA(d + n/d - 2), FA(d))).*(ZV(n)).num()
A358416	simtraf	1	new A036449()	v -> v.sqrt()	a(n)=sqrt(Annn(n))		A036449
A358440	lpf	1	4*n + 1	a(n) is the largest prime factor of 4n + 1.  -  _Charles R Greathouse IV_, Nov 16 2022
A358495	lambdan	0	n -> SU(0, n, k -> BI(BI(n, k), ZV(n)))
A358496	lambdan	0	n -> SU(0, n, k -> BI(BI(n, k), ZV(k)))
A358530	simtraf	1	new A051634()	v -> v.+(2)	a(n)=Annn(n)+(\d+)	2	A051634				a(n) = n-th prime p(k) such that p(k) - p(k-1) < p(k-1) - p(k-2).
A358565	simtras	2	new A358548().skip(1)	v -> v./(6)	.
A358587	lingf	1	0,0,0,0,0,1,-1,1	1,-5,7,1,-8,4	0
A358588	lingf	1	0,0,0,0,0,1,-1,1	1,-9,32,-58,58,-32,9,-1	0
A358593	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n-d), FA(d).^(n/d))                              ).*(FA(n)).num()
A358595	lambdan	0	n -> RD(n, d -> new Q(ZV(d).^(n)  , FA(d).^(n/d))                              ).*(FA(n)).num()
A358638	tuptraf	0	(n, s) -> s[0].+(s[1])	"1"	new A005171(), new A302479()	a(0) = 1  For n > 0, a(n) = A005171(n) +   A302479(n).
A358678	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A000035().skip(1), new A353812()
A358679	dirichinv	1	new A174275()	, 0	Dirichlet inverse of the characteristic function of A061345, odd prime powers.	A174275 sign	1..100000	nyi	_Antti Karttunen_
A358684	#nyi	0		a(n) is the minimum integer k such that the Least prime factor of the n - th Fermat number exceeds 2^(2^n  -  k)
A358760	filtpos	0	1	new A349905()	(k, v) -> v.and(Z.THREE).isZero()	Numbers k for which A349905(k) is a multiple of 4, where A349905(k) is the arithmetic derivative applied to the prime shifted k.	nonn	1..10000	nyi	_Antti Karttunen_
A358761	filtpos	0	1	new A001222()	(k, v) -> v.and(Z.THREE).equals(Z.ONE)	Numbers k for which bigomega(k) == 1 (mod 4).	nonn	1..67	nyi	_Antti Karttunen_
A358762	filtpos	0	1	new A349905()	(k, v) -> v.and(Z.THREE).equals(Z.TWO)	Numbers k for which A349905(k) == 2 (mod 4), where A349905(k) is the arithmetic derivative applied to the prime shifted k.	nonn	1..65	nyi	_Antti Karttunen_
A358763	filtpos	0	1	new A001222()	(k, v) -> v.and(Z.THREE).equals(Z.THREE)	Numbers k for which bigomega(k) == 3 (mod 4).	nonn	1..10000	nyi	_Antti Karttunen_
A358767	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k with an even number of prime factors (when counted with multiplicity) in sigma(k), the sum of divisors of k.	nonn	1..70	nyi	_Antti Karttunen_
A358768	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k with an odd number of prime factors (when counted with multiplicity) in sigma(k), the sum of divisors of k.	nonn	1..72	nyi	_Antti Karttunen_
A358770	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A035263(), new A358769()	a(n) = A035263(n) * A358769(n).
A358772	filamb	0	1	k -> JF(k).arithmeticDerivative().and(Z.THREE).equals(Z.ONE)	Numbers whose arithmetic derivative is of the form 4k+1, cf. A003415.	nonn	1..69	nyi	_Antti Karttunen_
A358774	filamb	0	1	k -> JF(k).arithmeticDerivative().and(Z.THREE).equals(Z.THREE)	Numbers whose arithmetic derivative is of the form 4k+3, cf. A003415.	nonn	1..64	nyi	_Antti Karttunen_
A358780	muldirs	0	(p, e) -> SEQ.a(e)	new A001400()	Multiplicativewitha(p^e)=Annn(e)		A001400
A358848	filtpos	0	0	new A053669()	(k, v) -> k % 6 == 0 && v.mod(6) == 1	Numbers k for which A053669(6*k) [the smallest prime not dividing 6k] is of the form 6m+1.	nonn	1..67	nyi	_Antti Karttunen_
A358849	filtpos	0	0	new A053669()	(k, v) -> k % 6 == 0 && v.mod(6) == 5	Numbers k for which A053669(6*k) [the smallest prime not dividing 6k] is of the form 6m-1.	nonn	1..78	nyi	_Antti Karttunen_
A358904	lambdan	0	n -> (n == 0) ? Z.ONE : SD(n, d -> BI(Z2(d - 1), n/d))
A358988	filter	1	new A002378()	v -> isPDP(4)	Oblong numbers which are products of four distinct primes.
A359041	lambdan	0	n -> (n == 0) ? Z.ONE : SD(n, d -> BI(PT(d), n/d))
A359063	#nyi	0		Integers k such that A005420(k) = A005420(2*k) = A005420(4*k) where A005420(k) is the largest prime factor of 2^k - 1
A359066	lambdan	0	n -> SU(0, (n-1)/2, k -> BI(n,k).*(BI(n-1-k, (n-1)/2 - k)))	
A359071	lambdan	0	n -> RU(2, n, k -> new Q(Z.ONE, ZV(JF(k).maxExponent()))).num()	Numerators of the partial sums of the reciprocals of the maximal exponent in prime factorization of the positive integers (A051903).
A359072	lambdan	0	n -> RU(2, n, k -> new Q(Z.ONE, ZV(JF(k).maxExponent()))).den()	xxxerators of the partial sums of the reciprocals of the maximal exponent in prime factorization of the positive integers (A051903).
A359088	#nyi	0		Odd integers k that are not equal to A002326((A005420(k) - 1)/2) where A005420(n) is the largest prime factor of 2^n  -  1 and A002326(n) is the multiplicative order of 2 mod 2*n + 1
A359101	lambdan	0	n -> Functions.PHI.z(n*5 )./(4 )
A359102	lambdan	0	n -> Functions.PHI.z(n*7 )./(6 )
A359123	simtraf	0	new DifferenceSequence(0, new A068811())	v -> v./(2)	First differences of A068811, halved.
A359125	simtraf	0	new A359124()	v -> JF(v).largestPrimeFactor()	Largest prime factor
A359151	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers of the form 4u+1 with an odd number of prime factors (counted with multiplicity).	nonn	1..63	nyi	_Antti Karttunen_
A359153	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers of the form 4u+3 with an odd number of prime factors (counted with multiplicity).	nonn	1..64	nyi	_Antti Karttunen_
A359157	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers whose odd part is squarefree and the number of prime factors (with multiplicity) is even.	nonn	1..10000	nyi	_Antti Karttunen_
A359159	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers whose odd part is squarefree and the number of prime factors (with multiplicity) is odd.	nonn	1..10000	nyi	_Antti Karttunen_
A359161	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers of the form 4u+1 with an even number of prime factors (counted with multiplicity).	nonn	1..63	nyi	_Antti Karttunen_
A359163	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers of the form 4u+3 with an even number of prime factors (counted with multiplicity).	nonn	1..62	nyi	_Antti Karttunen_
A359164	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A003602(), new A349136()	Difference between Kimberlings paraphrases and its Mââbius transform.	nonn	1..16384	nyi	_Antti Karttunen_
A359165	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A126760(), new A347233()	Difference between A126760 and its Mââbius transform.	nonn	1..12000	anopan	_Antti Karttunen_
A359171	filter	0	new A010872()	v -> !v.isZero() && Jaguar.factor(v).lambda() == 1	Nonmultiples of 3 that have an even number of prime factors (with multiplicity).	nonn	1..67	nyi	_Antti Karttunen_
A359188	lambdan	0	n -> SD(n, d -> ZV(MU(n/d)).*(d).*(ZV(n/d).^(d-1)))		Sum_{d|n} mu(n/d) * d * (n/d)^(d-1), where mu() is the Moebius function (A008683)
A359293	lambdan	0	n -> Puma.prevPrimeZ(BI(2*n, n))
A359300	multraf	2	(self, n) -> self.s(0).+(self.s(1)).-(2*n)	""	new A007917(), new A007918().skip(2)
A359371	filter	0	new A010873()	v -> !v.isZero() && Jaguar.factor(v).lambda() == 1	Nonmultiples of 4 that have an even number of prime factors (with multiplicity).	nonn	1..68	nyi	_Antti Karttunen_
A359373	filter	0	new A010873()	v -> !v.isZero() && Jaguar.factor(v).lambda() == -1	Nonmultiples of 4 that have an odd number of prime factors (with multiplicity).	nonn	1..69	nyi	_Antti Karttunen_
A359381	filter	0	new A010872()	v -> !v.isZero() && Jaguar.factor(v).lambda() == -1	Nonmultiples of 3 that have an odd number of prime factors (with multiplicity).	nonn	1..69	nyi	_Antti Karttunen_
A359387	#nyi	0		Primes p such that the Least prime factor of (2^(p - 1) - 1)/(3*p) is greater than p
A359411	muldirs	0	(p, e) -> SEQ.a(e)	new A246600()	Multiplicativewitha(p^e)=Annn(e)		A246600
A359431	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A325973(), new A326043()	a(n) = A325973(n) -   A326043(n).
A359467	multraf	1	(self, n) -> self.s(0).+(self.s(1)).modZ(2)	""	new A166486().skip(1), new A353627()	)mod2
A359503	partsun	1	new A066839()			Partial sums of A066839.---- 2024-04-02 22:58:22
A359553	multraf	0	(self, n) -> new Q(self.s(0), FA(2*n + 1)).num()	""	new A003712()	numerator of new A003712()/(2n+1)!
A359554	multraf	0	(self, n) -> new Q(self.s(0), FA(2*n + 1)).den()	""	new A003712()	denominator of new A003712()/(2n+1)!
A359583	parity	0	new A329697()	.
A359624	filter	1	new A005448()	v -> isPDP(3)	Centered triangular numbers which are products of three distinct primes.
A359777	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A356163(k) = 1 but A359774(k) = 0, where A359774 is the parity of Dirichlet inverse of the former (which is the characteristic function of the numbers with an even sum of prime factors, with repetition).	nonn	1..63	nyi	_Antti Karttunen_
A359784	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A358680(k) = 1 but A359781(k) = 0, where A359781 is the parity of Dirichlet inverse of the former (which is the characteristic function of the numbers with even arithmetic derivative).	nonn	1..57	nyi	_Antti Karttunen_
A359808	#nyi	0		a(n) is the least prime factor of the alternating factorial n!  -  (n - 1)!  +  (n - 2)!  -  ... 1! for n > 2; a(1) = a(2) = 1
A359821	filamb	0	1	k -> !JF(k).arithmeticDerivative().and(Z.ONE).equals(k.and(Z.ONE))	Numbers k whose arithmetic derivative, A003415(k), has the opposite parity to k.	nonn,easy	1..71	nyi	_Antti Karttunen_
A359822	filamb	0	1	k -> JF(k).arithmeticDerivative().and(Z.ONE).equals(k.and(Z.ONE))	Numbers k whose arithmetic derivative, A003415(k), has the same parity as k.	nonn,easy	1..73	nyi	_Antti Karttunen_
A359845	filter	1	new A005448()	v -> isPDP(4)	Centered triangular numbers which are products of four distinct primes.
A359875	filter	1	new A023900()	(k, v) -> Functions.CARMICHAEL_LAMBDA.z(k).equals(v)	Numbers k such that A002322(k) = A023900(k).
A359937	lambdan	0	n -> SD(n, d -> ZV(d-1).isSquare() ? ZV(d) : Z.ZERO)	Sum_{d|n, d-1 is square} d
A359943	lambdan	0	n -> SD(n, d -> ZUtils.isCube(ZV(d-1)) ? ZV(d) : Z.ZERO)	Sum_{d|n, d-1 is cube} d
A359944	lambdan	0	n -> SD(n, d -> { final Z d1 = ZV(d - 1); return d1.isPower() != null && d1.auxiliary() == 3 ? Z.ONE : Z.ZERO; })
A359950	lpf	2	ZV(n).^(n).-(FA(n))	a(n) is the Largest prime factor of n^n  -  n!
A359955	lambdan	1	n -> { int k=1; while (!SD(k, d -> (d >= 4) ? Z.ONE : Z.ZERO).equals(ZV(n))) { ++k; } return ZV(k); }
A359956	lambdan	1	n -> { int k=1; while (!SD(k, d -> (d >= 5) ? Z.ONE : Z.ZERO).equals(ZV(n))) { ++k; } return ZV(k); }
A359957	lambdan	1	n -> { int k=1; while (!SD(k, d -> (d >= 6) ? Z.ONE : Z.ZERO).equals(ZV(n))) { ++k; } return ZV(k); }
A359958	lambdan	1	n -> { int k=1; while (!SD(k, d -> (d >= n) ? Z.ONE : Z.ZERO).equals(ZV(n))) { ++k; } return ZV(k); }
A359960	lambdan	0	n -> { int k=1; while (k % Functions.DIGIT_SUM.i(k) != 0 || Functions.OMEGA.i(k) != n) { ++k; } return ZV(k); }
A359967	lambdan	0	n -> SD(n, d -> ZV(d+1).isSquare() ? ZV(d) : Z.ZERO)	Sum_{d|n, d+1 is square} d
A360091	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1).*(ZV(k).^(k)), FA(n - k))).*(FA(n - 2)).num()
A360092	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k + 1).*(ZV(k).^(k)), FA(n - k))).*(FA(n - 2)).den()
A360109	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A166486(), new A353494()	a(n) = A166486(n) * A353494(n).
A360110	filter	0	new A010873()	v -> !v.isZero() && new A003415().a(v).mod(Z.FOUR).isZero()	Nonmultiples of 4 whose arithmetic derivative is a multiple of 4.	nonn	1..20000	nyi	_Antti Karttunen_
A360183	filter	1	new A069099()	v -> isPDP(3)	Centered heptagonal numbers which are sphenic numbers.
A360392	multraf	1	(self, n) -> self.s(0).+(2)	""	new A026430()	2 + new A026430()
A360445	prepend	0	new PartialSumSequence(0, new A178244())	0			Partial sums of A178244, including the empty sum as initial term, so that a(n) gives the sum of all distinct permutations of the binary representation of all numbers less than n, which is also the index where terms with first half of binary expansion equal to n (in binary) start in ?272653.
A360545	lambdan	0	n -> RU(1, n, k -> new Q(3*k, 2).^(n-1).*(BI(n, k))).num()
A360605	lambdan	0	n -> ZV(4-n).*(ZV(-2).^(n+1).+(ZV(3*n+2)))./(27)
A360606	lambdan	0	n -> ZV(8+4*n+n*n).+(ZV(n-4).*(Z2(n+1)))
A360612	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A008793().skip(1), new A071095()	a(n)=Annn(n+(\d+))-Annn(n)			1	A008793,A071095	Number of binary operators defined on the finite chain L_n={0,1,...n}, C:L_n^2-> L_n, which are increasing in each argument, and satisfy the boundary conditions C(0,n)=C(n,0)=0 and C(n,n)=n.
A360739	filnum	1	1	n -> JF(ZV(n).^(2).+(2)).isSemiprime()	2,2	Semiprimes of the form n^(\d+)+ (\d+)
A360740	filnum	1	1	n -> JF(ZV(n).^(2).+(3)).isSemiprime()	2,3	Semiprimes of the form n^(\d+)+ (\d+)
A360741	filnum	1	1	n -> JF(ZV(n).^(2).+(4)).isSemiprime()	2,4	Semiprimes of the form n^(\d+)+ (\d+)
A360770	lambdan	0	n -> RD(n, d -> new Q(d).^(d - n/d + 1).*(BI(d, n/d-1))).num()
A360793	setdiff	1	new A048109()	new A030078()
A361016	simtraf	0	new A004718()	v -> v.isZero() ? Z.ONE : Z.ZERO	CharacteristicFunction  a(n) = 1 if A004718(n) = 0, otherwise 0, where A004718 is the Danish composer Per N?rg?rd
A361152	simtraf	0	new A051894()	v -> v.-(  1)./(  2)	a(n)= (Annnnnn(n)- (\d+))/(\d+)	
A361229	#findre	0	(n+4)*a(n) +(-3*n-7)*a(n-1) +(3*n+2)*a(n-2) +(-n+1)*a(n-3) +4*(-n+2)*a(n-4) +4*(n-4)*a(n-5)=0
A361316	multraf	1	(self, n) -> new Q(self.s(0).*(n), self.s(1)).num()	""	new A037445(), new A049417()
A361317	multraf	1	(self, n) -> new Q(self.s(0).*(n), self.s(1)).den()	""	new A037445(), new A049417()
A361385	multrafd	1	(self, n) -> ZV(SEQ.a(self.s(0)).bitLength() - 1)	""	new A063947()	new A064547()	a(n)=Annn(Annn(n))
A361520	tuptraf	1	(n, s) -> JF(s[0].^(2).+(s[1].^(2))).largestPrimeFactor()	"2,3"	PREVIOUS,PREVIOUS	a(n) is the Largest prime factor of a(n - 2)^2  +  a(n - 1)^2 where a(1)=2 and a(2)=3
A361565	multraf	1	(self, n) -> new Q(self.s(0).+(self.s(1)), ZV(2)).num()	""	new A033676(), new A033677()
A361566	multraf	1	(self, n) -> new Q(self.s(0).+(self.s(1)), ZV(2)).den()	""	new A033676(), new A033677()
A361628	filter	1	new A007304()	v -> v.toString(10).matches("[2357]+")	Sphenic numbers (products of 3 distinct primes) whose digits are primes.
A361696	filnum	1	1	n -> JF(ZV(n).^(2).+(5)).isSemiprime()	2,5	Semiprimes of the form n^(\d+)+ (\d+)
A361708	moetrafi	1	new A018252()	, 0	nonprimes.
A361782	multraf	1	(self, n) -> new Q(self.s(0).*(n), self.s(1)).num()	""	new A286324(), new A188999()
A361783	multraf	1	(self, n) -> new Q(self.s(0).*(n), self.s(1)).den()	""	new A286324(), new A188999()
A361808	inverse	1	new A181820()	1	1
A361846	lambdan	0	n -> RU(0, n, k -> new Q(-9).^(k).*(BI(new Q(-1, 3), k)).*(BI(n*k, n - k))).num()
A361847	lambdan	0	n -> Z_1(n).*(RU(0, n, k -> BI(new Q(-1, 3), k).*(Z.NINE.^(k)).*(BI(n*k, n - k))).num())
A361895	holos	0	[[0],[-4,1],[12,-4],[-36,15],[10,-13],[0,1]]	1	0	0
A361896	holos	0	[[0],[-5,1],[20,-5],[-30,10],[47,-19],[-11,14],[0,-1]]	1	0	0
A361916	lambdan	0	n -> RU(0, n/2, k -> new Q(Z_1(k).*(ZV(k+1).^(k-1))  , FA(k).*(ZV(n-2*k) )     )).*(FA(n)).num()
A361917	lambdan	0	n -> RU(0, n/3, k -> new Q(Z_1(k).*(ZV(k+1).^(k-1))  , FA(k).*(ZV(n-3*k) )     )).*(FA(n)).num()
A362008	filtpos	1	2	new A051953().skip(1)	v -> v.mod(9) == 0	Numbers whose Euler s cototient is divisible by 9.
A362028	lambdan	0	n -> SU(1, n, k -> Z_1(n - k).*(ZV(MU(k)).^(2)))
A362029	lambdan	1	n -> SU(1, n, k -> Z_1(n - k).*(k).*(Functions.MOEBIUS.z(k).^(2)))
A362071	#nyi	0		a(1) = 1, and thereafter a(n) is the number of terms with index m < n such that gpf(a(m)) = gpf(a(n - 1)), where gpf(k) = A006530(k) is the Largest prime factor of k (or 1 if k=1)
A362072	lambdan	0	n -> SU(1, n, k -> Functions.DIGIT_SUM.z(k*(n - k)))
A362078	arrlamb0	0	(n, k) -> SU(0, n, j -> BI(n + j - 1, j).*(BI(k*j, n - j)))	T(n,k) = Sum_{j=0..n} (-1)^j * binomial(-n,j) * binomial(k*j,n-j) = Sum_{j=0..n} binomial(n+j-1,j) * binomial(k*j,n-j)
A362079	arrlamb0	0	(n, k) -> SU(0, n, j -> BI(j + k - 1, j).*(BI(n*j, n - j)))
A362118	lambdan	1	n -> (Z.TEN.^(n*(n+1)/2).-(1))./(9)
A362125	arrlamb0	0	(n, k) -> SU(0, n, j -> BI(j + k - 1, j).*(BI(k*j, n - j)))
A362154	holos	0	[[0],[672,-528,96],[-264,268,-64],[24,-38,14],[168,-131,23],[-24,34,-10],[0,-1,1]]	1,-1	0	0
A362155	holos	0	[[0],[-14929920,8771328,-1679616,104976],[4621536,-3178116,714420,-52488],[-500256,421902,-116235,10449],[21600,-24318,8829,-1035],[1658592,-974058,186327,-11613],[-329184,244834,-58641,4535],[19008,-19674,6399,-657],[-288,516,-270,42],[0,-2,3,-1]]	1,-1,4,2,46,221,1627	0	0
A362156	holos	0	[[0],[672,-528,96],[-264,268,-64],[24,-38,14],[168,-131,23],[-24,34,-10],[0,-1,1]]	-1,-1,1,5,9,11	0	0
A362157	holos	0	[[0],[-14929920,8771328,-1679616,104976],[4621536,-3178116,714420,-52488],[-500256,421902,-116235,10449],[21600,-24318,8829,-1035],[-1659168,975126,-186921,11715],[329184,-244838,58647,-4537],[-19008,19674,-6399,657],[288,-516,270,-42],[0,2,-3,1]]	-1,-1,2,14,62,317,1967	0	0
A362173	lambdan	0	n -> RU(0, n/3, k -> new Q(n, 6).^(k)  .*(BI(n - 2*k, k))./(FA(n-2*k))         ).*(FA(n)).num()
A362276	lambdan	0	n -> RU(0, n/2, k -> new Q(-n, 2).^(k) .*(BI(n - k, k)  )./(FA(n-k)  )         ).*(FA(n)).num()
A362281	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(n).^(k) .*(BI(n-k,k)  ), FA(n-k)                 )).*(FA(n)).num()
A362282	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(-n).^(k).*(BI(n-k,k)  ), FA(n-k)                 )).*(FA(n)).num()
A362292	lambdan	0	n -> new Q(3*n + 1, 3).^(n).*(FA(3*n))./(FA(n)).num()	a(n) = (n+1/3)^n*(3*n)!/n!
A362300	lambdan	0	n -> RU(0, n/3, k -> new Q(n, 3).^(k)  .*(BI(n - 2*k, k))./(FA(n-2*k))         ).*(FA(n)).num()
A362301	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(n).^(k) .*(BI(n-2*k,k)), FA(n-2*k)               )).*(FA(n)).num()
A362303	lambdan	0	n -> RU(0, n/3, k -> new Q(-n, 6).^(k) .*(BI(n - 2*k, k))./(FA(n-2*k))         ).*(FA(n)).num()
A362304	lambdan	0	n -> RU(0, n/3, k -> new Q(-n, 3).^(k) .*(BI(n - 2*k, k))./(FA(n-2*k))         ).*(FA(n)).num()
A362305	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(-n).^(k).*(BI(n-2*k,k)), FA(n-2*k)               )).*(FA(n)).num()
A362314	lambdan	0	n -> RU(0, n/4, k -> new Q(n, 4).^(k)                ./(FA(k).*(FA(n - 4*k))  )).*(FA(n)).num()
A362315	lambdan	0	n -> RU(0, n/4, k -> new Q(-n, 4).^(k)               ./(FA(k).*(FA(n - 4*k))  )).*(FA(n)).num()
A362317	lambdan	0	n -> RU(0, n/4, k -> new Q(n, 24).^(k)               ./(FA(k).*(FA(n - 4*k))  )).*(FA(n)).num()
A362319	lambdan	0	n -> RU(0, n/5, k -> new Q(n, 5).^(k)                ./(FA(k).*(FA(n - 5*k))  )).*(FA(n)).num()
A362320	lambdan	0	n -> RU(0, n/5, k -> new Q(-n, 5).^(k)               ./(FA(k).*(FA(n - 5*k))  )).*(FA(n)).num()
A362321	lambdan	0	n -> RU(0, n/4, k -> new Q(ZV(n).^(k)                , FA(k).*(FA(n - 4*k))    )).*(FA(n)).num()
A362322	lambdan	0	n -> RU(0, n/4, k -> new Q(ZV(-n).^(k)               , FA(k).*(FA(n - 4*k))    )).*(FA(n)).num()
A362323	lambdan	0	n -> RU(0, n/5, k -> new Q(ZV(n).^(k)                , FA(k).*(FA(n - 5*k))    )).*(FA(n)).num()
A362324	lambdan	0	n -> RU(0, n/5, k -> new Q(ZV(-n).^(k)               , FA(k).*(FA(n - 5*k))    )).*(FA(n)).num()
A362333	#nyi	0		Least nonnegative integer k such that (gpf(n)!)^k is divisible by n, where gpf(n) is the Largest prime factor of n
A362336	lambdan	0	n -> RU(0, n/5, k -> new Q(n, 120).^(k)              ./(FA(k).*(FA(n - 5*k))  )).*(FA(n)).num()
A362337	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(-k).^(k)               , FA(k).*(FA(n - 2*k))    )).*(FA(n)).num()
A362338	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(-k).^(k)               , FA(k).*(FA(n - 3*k))    )).*(FA(n)).num()
A362339	lambdan	0	n -> RU(0, n/4, k -> new Q(ZV(-k).^(k)               , FA(k).*(FA(n - 4*k))    )).*(FA(n)).num()
A362340	lambdan	0	n -> RU(0, n/2, k -> new Q(-k, 2).^(k)               ./(FA(k).*(FA(n - 2*k))  )).*(FA(n)).num()
A362341	lambdan	0	n -> RU(0, n/3, k -> new Q(-k, 6).^(k)               ./(FA(k).*(FA(n - 3*k))  )).*(FA(n)).num()
A362342	lambdan	0	n -> RU(0, n/4, k -> new Q(-k, 24).^(k)              ./(FA(k).*(FA(n - 4*k))  )).*(FA(n)).num()
A362345	lambdan	0	n -> RU(0, n/4, k -> new Q(-n, 24).^(k)              ./(FA(k).*(FA(n - 4*k))  )).*(FA(n)).num()
A362346	lambdan	0	n -> RU(0, n/5, k -> new Q(-n, 120).^(k)             ./(FA(k).*(FA(n - 5*k))  )).*(FA(n)).num()
A362347	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k).^(k)                , FA(k).*(FA(n - 2*k))    )).*(FA(n)).num()
A362348	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(k)                , FA(k).*(FA(n - 3*k))    )).*(FA(n)).num()
A362349	lambdan	0	n -> RU(0, n/4, k -> new Q(ZV(k).^(k)                , FA(k).*(FA(n - 4*k))    )).*(FA(n)).num()
A362350	lambdan	0	n -> RU(0, n/2, k -> new Q(k, 2).^(k)                ./(FA(k).*(FA(n - 2*k))  )).*(FA(n)).num()
A362351	lambdan	0	n -> RU(0, n/3, k -> new Q(k, 6).^(k)                ./(FA(k).*(FA(n - 3*k))  )).*(FA(n)).num()
A362352	lambdan	0	n -> RU(0, n/4, k -> new Q(k, 24).^(k)               ./(FA(k).*(FA(n - 4*k))  )).*(FA(n)).num()
A362354	lambdan	0	n -> (n == 0) ? Z.ONE : ZV(n + 3).^(n - 1).*(3)	a(n) = 3*(n+3)^(n-1).	nonn,easy	0..19	nyi	_Wolfdieter Lang_
A362355	lambdan	0	n -> (n == 0) ? Z.ONE : ZV(n + 4).^(n - 1).*(4)	a(n) = 4*(n+4)^(n-1).	nonn,easy	0..18	nyi	_Wolfdieter Lang_
A362356	lambdan	0	n -> (n == 0) ? Z.ONE : ZV(n + 5).^(n - 1).*(5)	a(n) = 5*(n + 5)^(n-1).	nonn,easy	0..18	nyi	_Wolfdieter Lang_
A362364	multrar	0	(self, n) -> Functions.PRIMORIAL_COUNT.z(2*n - 1)./(self.a(n - 1))	"1"		a(0) = 1, for n >= 1, a(n) = A002110(2n-1)/a(n-1).
A362377	arrlamb	0	0	0	-1	(n, k) -> RU(0, n/2, j -> new Q( k, 2).^(j).*(new Q(  j + 1).^(n -   j - 1))./(FA(j).*(FA(n - 2*j)))).*(FA(n)).num()	T(n,k)=n!*sum(j=0,n\2,(k/2)^j*(j+1)^(n-j-1)/(j!*(n-2*j)!));
A362378	arrlamb	0	0	0	-1	(n, k) -> RU(0, n/3, j -> new Q( k, 6).^(j).*(new Q(  j + 1).^(n - 2*j - 1))./(FA(j).*(FA(n - 3*j)))).*(FA(n)).num()
A362394	arrlamb	0	0	0	-1	(n, k) -> RU(0, n/2, j -> new Q(-k, 2).^(j).*(new Q(  j + 1).^(n -   j - 1))./(FA(j).*(FA(n - 2*j)))).*(FA(n)).num()
A362426	ordsup	0	new A075802().skip()	2	0,0
A362456	recval	0	new A362451()		Records in A362451.	nonn,more	1..12	nyi	_N. J. A. Sloane_
A362457	recpos	0	new A362451()	, 1, false	Indices of records in A362451.	nonn,more	1..12	nyi	_N. J. A. Sloane_
A362458	recval	0	new A362452()		Records in A362452.	nonn,more	1..9	nyi	_N. J. A. Sloane_
A362459	recpos	0	new A362452()	, 1, false	Indices of records in A362452.	nonn,more	1..9	nyi	_N. J. A. Sloane_
A362460	simtraf	0	new A054978().skip(1)	v -> { v = v./(2); return v.compareTo(Z.ONE) <= 0 ? v : Z.NEG_ONE; }	a(n) = A054978(n)/2 if that number is 0 or 1, otherwise -1.	nonn	1..20000	nyi	_N. J. A. Sloane_
A362461	filtpos	0	1	new A362460()	v -> v.equals(ZV(0))	Indices of (\d+)s in Annnnnn	m	i 
A362462	filtpos	0	1	new A362460()	v -> v.equals(ZV(1))	Indices of (\d+)s in Annnnnn	m	i  
A362469	lambdan	0	n -> SU(1, n, k -> ZV(n).mod(JF(k).phi()).isZero() ? ZV(k) : Z.ZERO)	Sum of the numbers k, 1 <= k <= n, such that phi(k) | n.	nonn,easy	1..77	nyi	_Wesley Ivan Hurt_
A362470	#nyi o	0	Number of divisors d of n such that phi(d) | n.	nonn,easy	1..94	nyi	_Wesley Ivan Hurt_
A362483	arrlamb	0	0	0	-1	(n, k) -> RU(0, n/2, j -> new Q( k, 2).^(j).*(new Q(2*j + 1).^(n -   j - 1))./(FA(j).*(FA(n - 2*j)))).*(FA(n)).num()
A362490	arrlamb	0	0	0	-1	(n, k) -> RU(0, n/3, j -> new Q( k, 6).^(j).*(new Q(3*j + 1).^(n - 2*j - 1))./(FA(j).*(FA(n - 3*j)))).*(FA(n)).num()
A362522	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k+1).^(k-1)            , FA(k).*(FA(n - 2*k))    )).*(FA(n)).num()
A362523	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k+1).^(k-1)            , FA(k).*(FA(n - 3*k))    )).*(FA(n)).num()
A362524	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k+1).^(k-1)            , Z.TWO.^(k).*(FA(k)).*(FA(n-2*k)) )).*(FA(n)).num()
A362525	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k+1).^(k-1)            , Z.SIX.^(k).*(FA(k)).*(FA(n-3*k)) )).*(FA(n)).num()
A362565	lambdan	0	n -> FA(6*n)./(ZV(30).^(n))	a(n)=(6n)!/30^n
A362587	simtraf	0	new A094088()	(n, v) -> v.*(Z2(n))	a(n) = 2^n * A094088(n). Row sums of A362586.	nonn	0..15	nyi	_Peter Luschny_
A362588	trilamb0	0	(n, k) -> Z_1(k).*(PR(0, k - 1, j -> ZV(j + n - k))).*(PR(0, k - 1, j -> ZV(j - n)))
A362695	decexp	0	() -> CR.THREE.-(CR.THREE.sqrt())./(CR.FOUR)	Decimal expansion of (3 - sqrt(3))/4.	nonn,cons	0..86	nyi	_Jodi Spitz_
A362707	multraf	1	(self, n) -> ZV(n).*(self.s(0)).-(self.s(1))	""	new A351112(), new A351113()
A362719	lambdan	1	n -> SU(1, n, k -> Functions.PHI.z(k).equals(Functions.PHI.z(n - k + 1)) ? Z.ONE : Z.ZERO)
A362721	lambdan	1	n -> SU(1, n, k -> Functions.PRIME_PI.z(k).equals(Functions.PRIME_PI.z(n - k + 1)) ? Z.ONE : Z.ZERO)
A362751	holos	1	[[0],[-32],[72],[128],[-264],[-63],[270],[-84],[-66],[50],[-12],[1]]	4,36,121,484,1764,6561,24336,91204,344569,1313316	0	0
A362758	filter	1	new A000217()	v -> isPDP(6)	Triangular numbers which are products of six distinct primes.
A362778	trilambn	0	1	1	(n, k) -> JF(FA(n).*(k).+(1)).leastPrimeFactor()	Triangular array read by rows: T(n,k) is the least prime factor of n!*k + 1, n >= 1, 1 <= k <= n.	tabl,nonn	1..55	nyi	_Joe B. Stephen_
A362779	trilambn	0	1	1	(n, k) -> JF(FA(n).*(k).+(1)).largestPrimeFactor()	Triangular array read by rows: T(n,k) is the greatest prime factor of n!*k + 1, n >= 1, 1 <= k <= n.	tabl,nonn	1..55	nyi	_Joe B. Stephen_
A362787	trilamb0	0	(n, k) -> PR(0, k - 1, j -> ZV(j + n)).*(PR(0, k - 1, j -> ZV(j + n - k)))
A362791	trilambn	0	1	1	(n, k) -> S2(k, 3).*(n).*(n - 1).*(n - 2)	Triangle of numbers read by rows, T(n, k) = (n*(n-1)*(n-2))*Stirling2(k, 3), for n >= 1 and 1 <= k <= n.	nonn,tabl	1..55	nyi	_Statsenko Igor Victorovich_
A362806	lambdan	1	n -> SU(1, n, k -> Functions.MOEBIUS.z(k).equals(Functions.MOEBIUS.z(n - k + 1)) ? Z.ONE : Z.ZERO)
A362838	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(n).^(n - k).*(S1(n - k, k)), FA(n-k))).*(Z_1(n)).*(FA(n)).num()
A362870	mulr	0	(p, e) -> p.^(25*e + 29).-(1)./(p.^(29).-(1))	a(p^e)=(p^((\d+)*e+(\d+))-(\d+))/(p^(\d+)-(\d+))	29,29,1,29,1	
A362941	multraf	1	(self, n) -> self.s(0).-(1)	""	new A108604()	a(n)=Annn(n)-(\d+)	1
A362948	union2	1	new A000351().skip(1)	new A033845()		Union of A000351 = {5^k ; k > 0} and A033845 = {2^j*3^k, j,k > 0}.					Numbers whose sum of (distinct) prime divisors (A008472) equals 5.
A362966	filtpos	1	1	new A007908()	(k, v) -> v.mod(k) == 1	Numbers k such that Annnnnn(k)==(\d+)(mod k)
A363017	simtraf	0	new A057632()	v -> Puma.primePiZ(v)	a(n)=primepi(Annn(n))
A363060	parmof2	0	A067497	5	,1,2	Numbers n such that (\d+) is the (\d+)st digit of (\d+)^k
A363257	multrar	0	(self, n) -> self.a(n - 1).+(1).^(2)./(4).+(1)	"0"	a(n) = floor( ((a(n-1) + 1) / 2)^2 ) + 1 for n >= 1, with a(0) = 0.
A363292	union2	1	new A000420().skip(1)	new A033846()		Union of A000420 = {7^k ; k > 0} and A033846 = {2^j*5^k ; j, k > 0}.					Numbers whose sum of (distinct) prime divisors (A008472) equals 7.
A363347	#nyi	0		a(n) = gpf(n^2  +  2*n  -  4) if gpf(n^2  +  2*n  -  4) > n, otherwise a(n) = 1 (where gpf(n) denotes the Largest prime factor of n)
A363497	partsun	0	new SimpleTransformSequence(0, new A000196(), v -> v.^(3))		Partial sums of the third powers of the terms of A000196.
A363498	partsun	0	new SimpleTransformSequence(0, new A000196(), v -> v.^(4))		Partial sums of the fourth powers of the terms of A000196.
A363499	partsun	0	new SimpleTransformSequence(0, new A000196(), v -> v.^(5))		Partial sums of the fifth powers of the terms of A000196.
A363533	lambdan	1	n -> { int k = 1; while(!Functions.FIBONACCI.z(k).*(n).+(1).IPP()) { k++; } return ZV(k); }
A363690	filtpos	0	1	new A246600()	v -> v.equals(ZV(2))	Numbers n such that Annnnnn(n)= (\d+)
A363697	lambdan	0	n -> RD(n, d -> new Q(ZV(-n/d).^(d), FA(FA(d).intValueExact()))).*(FA(n).negate()).num()
A363698	lambdan	0	n -> RD(n, d -> new Q(Z_1(d+1).*(ZV(n/d).^(n)), FA(d)))                               .*(FA(n)).num()
A363736	lambdan	0	n -> RD(n, d -> new Q(Z_1(d+1)     , FA(d-1))).*(FA(n-1)).num()
A363737	lambdan	0	n -> RD(n, d -> new Q(Z_1(d+1), FA(d).*(FA(n/d))))                                    .*(FA(n)).num()
A363776	convprod	0	-1	new A173677()	Convolution inverse of A173677.
A363803	lambdan	0	n -> SD(n, d -> (d%7 == 0 || d%7 == 2 || d%7 == 5) ? ZV(d) : Z.ZERO)	, or 5 mod 7} d 		Sum_{d|n, d == 0, 2, or 5 mod 7} d
A363804	lambdan	0	n -> SD(n, d -> (d%7 == 0 || d%7 == 3 || d%7 == 4) ? ZV(d) : Z.ZERO)	d == 0, 3, or 4 mod 7} d 		Sum_{d|n, d == 0, 3, or 4 mod 7} d
A363816	lambdan	0	n -> Z_1(n-1).*(SU(0, n, k -> BI(2*k-1, k).*(BI(2*(  k-1), n-k))./(2*k-1)))		a(n) = (-1)^(n-1)*sum(k=0, n, BI(2*k-1, k)*BI(2*(k-1), n-k)/(2*k-1));
A363817	lambdan	0	n -> Z_1(n-1).*(SU(0, n, k -> BI(2*k-1, k).*(BI(3*(  k-1), n-k))./(2*k-1)))		a(n) = (-1)^(n-1)*sum(k=0, n, BI(2*k-1, k)*BI(3*(k-1), n-k)/(2*k-1));
A363818	lambdan	0	n -> Z_1(n-1).*(SU(0, n, k -> BI(3*k-1, k).*(BI(2*(2*k-1), n-k))./(3*k-1)))		a(n) = (-1)^(n-1)*sum(k=0, n, BI(3*k-1, k)*BI(2*(2*k-1), n-k)/(3*k-1));
A363819	lambdan	0	n -> Z_1(n-1).*(SU(0, n, k -> BI(3*k-1, k).*(BI(3*(2*k-1), n-k))./(3*k-1)))		a(n) = (-1)^(n-1)*sum(k=0, n, BI(3*k-1, k)*BI(3*(2*k-1), n-k)/(3*k-1));
A363895	multraf	2	(self, n) -> self.s(0)./(self.s(1))	""	new A008472().skip(1), new A001221().skip(1)
A363911	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A000142(), new A000112()	a(n) = A000142(n) * A000112(n).
A363917	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A363923(), new A005361()	a(n)=Annn(n)*Annn(n)
A363919	multraf	1	(self, n) -> ZV(n).^(self.s(0))	""	new A046660()	n^new A046660()
A363923	multraf	1	(self, n) -> ZV(n).^(self.s(0))./(self.s(1))	""	new A001222(), new A007947()
A364011	lambdan	0	n -> SD(n, d -> ZV(d   % 3 == 1 ? 1 : 0).*(Z_1(d        ))).negate()	a(n) = -sumdiv(n, d, ZV(d%3   == 1 ? 1 : 0)*(-1)^d        )
A364012	lambdan	0	n -> SD(n, d -> ZV(n/d % 3 == 1 ? 1 : 0).*(Z_1(n/d)).*(d  )).negate()	a(n) = -sumdiv(n, d, (n/d%3==1)*(-1)^(n/d)*d);
A364013	lambdan	0	n -> SD(n, d -> ZV(n/d % 3 == 1 ? 1 : 0).*(Z_1(n/d)).*(d*d)).negate()	a(n) = -sumdiv(n, d, ZV(n/d%3 == 1 ? 1 : 0)*(-1)^(n/d)*d^2)
A364019	lambdan	0	n -> SD(n, d -> ZV(n/d % 5 == 1 ? 1 : 0).*(Z_1(n/d)).*(d  )).negate()	a(n) = -sumdiv(n, d, ZV(n/d%5 == 1 ? 1 : 0)*(-1)^(n/d)*d  )
A364021	lambdan	0	n -> SD(n, d -> ZV(n/d % 5 == 3 ? 1 : 0).*(Z_1(n/d)).*(d  )).negate()	a(n) = -sumdiv(n, d, ZV(n/d%5 == 3 ? 1 : 0)*(-1)^(n/d)*d  )
A364042	multraf	1	(self, n) -> ZV(2).^(self.s(0)).-(self.s(1))	""	new A329697(), new A000120().skip(1)
A364043	lambdan	0	n -> SD(n, d -> ZV(d   % 5 == 1 ? 1 : 0).*(Z_1(d))).negate()	a(n) = -sumdiv(n, d, ZV(d%5   == 1 ? 1 : 0)*(-1)^d        )
A364045	lambdan	0	n -> SD(n, d -> ZV(d   % 5 == 3 ? 1 : 0).*(Z_1(d))).negate()	a(n) = -sumdiv(n, d, ZV(d%5   == 3 ? 1 : 0)*(-1)^d        )
A364076	filnum	0	1	k -> ZV(12).^(k).-(1).^(2).-(2).IPP()
A364077	filnum	0	1	k -> ZV(12).^(k).+(1).^(2).-(2).IPP()
A364078	filnum	0	1	k -> ZV(18).^(k).-(1).^(2).-(2).IPP()
A364079	filnum	0	1	k -> ZV(18).^(k).+(1).^(2).-(2).IPP()
A364080	filnum	0	1	k -> ZV(20).^(k).-(1).^(2).-(2).IPP()
A364081	filnum	0	1	k -> ZV(20).^(k).+(1).^(2).-(2).IPP()
A364091	multraf	1	(self, n) -> self.s(0).min(self.s(1))	"13,7,11,5,3,2,16651"	new A005602(), new A005603()	a(n) is the first prime p such that the longest sequence of primes p = p_1, p_2, ... with |p_{k+1} - 2*p_k| = 1 has length n.
A364154	#nyi	0		Lexicographically earliest sequence of distinct positive integers such that a(n) is least novel multiple m of the product of all primes less than the Largest prime factor of a(n - 1) which do not divide a(n - 1); a(1) = 1
A364194	lambdan	0	n -> SU(1, n, k -> ZV(k).^(3).*(JF(k).sigma()))
A364250	simtraf	0	new A364249()	v -> v.modZ(2)	,2	a(n)= Annnnnn(n) mod (\d+)	m	i
A364268	lambdan	0	n -> SU(1, n, k -> ZV(k).^(2).*(JF(k).sigma(2)))
A364269	lambdan	0	n -> SU(1, n, k -> ZV(k).^(3).*(JF(k).sigma(2)))
A364288	simtraf	0	new A243071()	(n, v) -> ZV(n).-(v)		a(n)= n - Annnnnn(n)	
A364293	filter	0	new A364292()	ODD	Odd numbers k for which A163511(k) <= k.	nonn	1..15157	nyi	_Antti Karttunen_
A364411	multraf	1	(self, n) -> self.s(0).+(self.s(1))	""	new A000040().skip(1), new A001043()	a(n)=Annn(n+(\d+))+Annn(n)	1
A364492	multraf	0	(self, n) -> self.s(0)./(self.s(1))	""	new A163511(), new A364255()
A364494	filtpos	1	1	new A163511()	(n, v) -> v.mod(n) == 0	Numbers n such that n divides Annnnnn(n)
A364495	filter	0	new A364494()	ODD	Odd numbers k such that k divides A163511(k).	nonn	1..801	nyi	_Antti Karttunen_
A364496	filtpos	1	1	new A163511()	(n, v) -> ZV(n).mod(v).isZero()	Numbers n such that n is a multiple of Annnnnn(n)
A364497	filtpos	0	1	new A243071()	(k, v) -> v.mod(ZV(k)).isZero()	Numbers k such that k divides A243071(k).	nonn	1..52	nyi	_Antti Karttunen_
A364498	filter	0	new A364497()	ODD	Odd numbers k such that k divides A243071(k).	nonn,more	1..10	nyi	_Antti Karttunen_
A364540	filtpos	0	1	new A005940()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A005940(k) < k.	nonn	1..66	nyi	_Antti Karttunen_
A364541	filtpos	0	1	new A005940()	(k, v) -> v.compareTo(ZV(k)) <= 0	Numbers k for which A005940(k) <= k.	nonn	1..72	nyi	_Antti Karttunen_
A364542	filtpos	0	1	new A005940()	(k, v) -> v.compareTo(ZV(k)) >= 0	Numbers k for which A005940(k) >= k.	nonn	1..81	nyi	_Antti Karttunen_
A364543	filter	0	new A364544()	ODD	Odd numbers k for which A005940(k) <= k.	nonn	1..11023	nyi	_Antti Karttunen_
A364544	filtpos	0	1	new A005940()	(k, v) -> v.mod(ZV(k)).isZero()	Numbers k such that k divides A005940(k).	nonn	1..63	nyi	_Antti Karttunen_
A364545	filter	0	new A364544()	ODD	Odd numbers k such that k divides A005940(k).	nonn	1..46	nyi	_Antti Karttunen_
A364546	filtpos	0	1	new A005940()	(k, v) -> ZV(k).mod(v).isZero()	Numbers k such that k is a multiple of A005940(k).	nonn	1..58	nyi	_Antti Karttunen_
A364547	filter	0	new A364546()	ODD	Odd numbers k such that k is a multiple of A005940(k).	nonn,more	1..6	nyi	_Antti Karttunen_
A364548	filtpos	0	1	new A005941()	(k, v) -> v.mod(ZV(k)).isZero()	Numbers k such that k divides A005941(k).	nonn	1..63	nyi	_Antti Karttunen_
A364549	filter	0	new A364548()	ODD	Odd numbers k that divide A005941(k).	nonn,more	1..11	nyi	_Antti Karttunen_
A364550	filtpos	0	1	new A005941()	(k, v) -> ZV(k).mod(v).isZero()	Numbers k such that k is a multiple of A005941(k).	nonn	1..59	nyi	_Antti Karttunen_
A364551	filter	0	new A364550()	ODD	Odd numbers k such that k is a multiple of A005941(k).	nonn,more	1..16	nyi	_Antti Karttunen_
A364558	tuptraf	1	(n, s) -> s[0].-(s[1])	""	new A364557(), new A000010()	a(n) = A364557(n) - A000010(n), where A364557 is the Moebius transform of A005941, and A000010 (Euler phi) is the Moebius transform of A000027.
A364560	filtpos	0	1	new A156552()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which A156552(k) < k.	nonn	1..74	nyi	_Antti Karttunen_
A364561	filtpos	0	1	new A156552()	(k, v) -> (k & 1) == 1 && v.compareTo(ZV(k)) < 0	Odd numbers k for which A156552(k) < k.	nonn	1..13739	nyi	_Antti Karttunen_
A364562	filtpos	0	1	new A156552()	(k, v) -> v.compareTo(ZV(k)) > 0	Numbers k for which A156552(k) > k.	nonn	1..74	nyi	_Antti Karttunen_
A364564	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A364561()	new A006530()	a(n)=Annn(Annn(n))		D006530,A364561
A364565	#nyi	0	Numbers k at which point A364557 (the Moebius transform of A005941) is equal to A000010 (Euler phi function).
A364566	filtpos	0	1	new A364557()	(k, v) -> v.compareTo(JF(k).phi()) < 0	Numbers k such that A364557(k) < A000010(k), where A364557 is the Mââbius transform of A005941, and A000010 is Euler totient function phi.	nonn	1..69	nyi	_Antti Karttunen_
A364567	#nyi	0	a(n) = A297112(A005940(1+n)), where A297112 is the Moebius transform of A156552 [the inverse of map n -> A005940(1+n)].
A364571	#nyi	0	a(n) = A297171(A163511(n)), where A297171 is the Moebius transform of the inverse permutation of A163511.
A364579	holos	1	[[-3360,2424,-270,-145,30,1],[-120]]	0,0,1,11	0	0
A364582	lambdan	1	n -> { int k = 1; while (!SD(k, d -> ZV(d % 3 ==1 ? 1 : 0)).equals(ZV(n))) { ++k; } return ZV(k); }
A364583	lambdan	0	n -> { int k = 1; while (!SD(k, d -> ZV(d % 3 ==2 ? 1 : 0)).equals(ZV(n))) { ++k; } return ZV(k); }
A364586	lambdan	1	n -> { int k = 1; while (!SD(k, d -> ZV(d % 5 ==1 ? 1 : 0)).equals(ZV(n))) { ++k; } return ZV(k); }
A364610	filter	1	new A005891()	v -> isPDP(3)	Centered pentagonal numbers which are products of three distinct primes (or sphenic numbers).
A364657	filnum	0	0	k -> JF(k).sigma().compareTo(JF(k+1).sigma()) > 0 && JF(k+1).sigma().compareTo(JF(k+2).sigma()) > 0
A364659	filnum	0	0	k -> JF(k).sigma().compareTo(JF(k+1).sigma()) < 0 && JF(k+1).sigma().compareTo(JF(k+2).sigma()) < 0
A364662	filnum	0	0	k -> JF(k).sigma().compareTo(JF(k+1).sigma()) < 0 && JF(k+1).sigma().compareTo(JF(k+2).sigma()) < 0 && JF(k+2).sigma().compareTo(JF(k+3).sigma()) < 0
A364691	filter	1	new A007504()	v -> ZUtils.isPolygonal(v, 5)	Pentagonal numbers which are the sum of the first k primes A007504, for some k >= 0.
A364713	lambdan	0	n -> BI(new Q(1 , n), n).num()
A364715	filnum	0	0	k -> JF(k).sigma0AsLong() < JF(k+1).sigma0AsLong() && JF(k+1).sigma0AsLong() < JF(k+2).sigma0AsLong()						, where d(n) is the number of divisors of n
A364716	filnum	0	0	k -> JF(k).sigma0AsLong() < JF(k+1).sigma0AsLong() && JF(k+1).sigma0AsLong() < JF(k+2).sigma0AsLong() && JF(k+2).sigma0AsLong() < JF(k+3).sigma0AsLong()			, where d(n) is the number of divisors of n
A364717	filnum	0	0	k -> JF(k).sigma0AsLong() < JF(k+1).sigma0AsLong() && JF(k+1).sigma0AsLong() < JF(k+2).sigma0AsLong() && JF(k+2).sigma0AsLong() < JF(k+3).sigma0AsLong() && JF(k+3).sigma0AsLong() < JF(k+4).sigma0AsLong()	, where d(n) is the number of divisors of n
A364718	filnum	0	0	k -> JF(k).sigma0AsLong() > JF(k+1).sigma0AsLong() && JF(k+1).sigma0AsLong() > JF(k+2).sigma0AsLong()						, where d(n) is the number of divisors of n
A364719	filnum	0	0	k -> JF(k).sigma0AsLong() > JF(k+1).sigma0AsLong() && JF(k+1).sigma0AsLong() > JF(k+2).sigma0AsLong() && JF(k+2).sigma0AsLong() > JF(k+3).sigma0AsLong()			, where d(n) is the number of divisors of n
A364720	filnum	0	0	k -> JF(k).sigma0AsLong() > JF(k+1).sigma0AsLong() && JF(k+1).sigma0AsLong() > JF(k+2).sigma0AsLong() && JF(k+2).sigma0AsLong() > JF(k+3).sigma0AsLong() && JF(k+3).sigma0AsLong() > JF(k+4).sigma0AsLong()	, where d(n) is the number of divisors of n
A364767	moetrafi	1	new A322860()	, 0	#
A364777	lambdan	1	n -> FA(n*n).*(FA(n).^(2))./(FA(2*n-1))	a(n) = (n^2)!*(n!)^2/(2*n-1)!.
A364849	multraf	1	(self, n) -> self.s(1)./(2)	"1,1,1,1"	new A010551(), PREVIOUS	Number of even parity alternating permutations of [1..n] starting with an odd integer.
A364850	multraf	1	(self, n) -> new Q(self.s(0).*(self.s(1)), ZV(2)).num().negate()	""	new A014963(), new A023900()
A364903	filtpos	0	1	new A060778()	v -> v.equals(ZV(7))	Numbers n such that Annnnnn(n)= (\d+)
A364922	lambdan	2	n -> ZV(n).^(3).*(2*n + 2)	a(n) = 2*n^3*(n+1)		a(n) is the square of the side length of a simplex whose n-dimensional inner hypervolume is equal to its (n-1)-dimensional surface hypervolume. As a result, the sequence starts at n=2.
A364930	insect2	1	new A025487()	new A286708()
A364953	#nyi	0	a(n) = A364952(A005940(1+n)), where A364952 is Dirichlet inverse of A364557, which is Moebius transform of A005941 [the inverse permutation of A005940].
A364963	filter	0	new A364496()	ODD	Odd numbers k such that k is a multiple of A163511(k).	nonn,hard,more	1..4	nyi	_Antti Karttunen_
A364964	filtpos	1	2	new A243071().skip()	(n, v) -> ZV(n).mod(v).isZero()	Numbers n such that n is a multiple of Annnnnn(n)
A364965	filter	0	new A364964()	ODD	Odd numbers k such that k is a multiple of A243071(k).	nonn,more	1..10	nyi	_Antti Karttunen_
A364970	lambdan	0	n -> SU(1, n, k -> BI(n/k + 2, 3))
A365007	lambdan	0	n -> SD(n, d -> Z_1(n/d-1).*(BI(d+1,2)))		Sum_{d|n} (-1)^(n/d-1) * BI(d+1,2)
A365070	prepend	0	new DifferenceSequence(0, new A093971())	0,0	First differences of A093971.
A365161	multrafd	0	(self, n) -> SEQ.a(self.s(0).-(1))	""	new A059305()	new A001223()	a(n)=Annn(Annn(n)-(\d+))	1	D001223,D059305
A365296	muldirs	0	(p, e) -> p.^(SEQ.a(e))	new A006519()	Multiplicativewitha(p^e)=p^Annn(e)		A006519
A365310	lambdan	0	n -> ZV(2).^(Z2(n)).+(ZV(2).^(Z2(n+1).-(1)))
A365394	#rgs2	1	new ()	new ()	Restricted growth sequence transform of the function f(n) = A336470(A163511(n)).
A365395	#rgs2	1	new ()	new ()	Restricted growth sequence transform of the function f(n) = A336390(A163511(n)).
A365409	lambdan	0	n -> SU(1, n, k -> BI(n/k + 3, 4))
A365422	#filtpos	0	0	new A163511()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k for which k and A163511(k) have the same prime signature.	nonn	1..68	nyi	_Antti Karttunen_
A365438	lambdan	0	n -> RU(0, n,   k -> new Q(FA(2*n - k  ), FA(2*n - 2*k + 1)).*(SA(n, k))).num()	a(n) = sum(k=0, n, (2*n-k)!/(2*n-2*k+1)!*abs(stirling(n, k, 1)));
A365439	lambdan	0	n -> SU(1, n, k -> BI(n/k + 4, 5))
A365456	#tuptraf	0	(n, s) -> s[0].-(s[1])	a(n) = A156552(2*n) / gcd(sigma(n), A156552(2*n)).
A365466	rgs2	1	new A336466()	new A365426().skip(1)	Restricted growth sequence transform of the ordered pair [A336466(n), A365426(n)].
A365467	rgs2	1	new A336467()	new A365427().skip(1)	Restricted growth sequence transform of the ordered pair [A336467(n), A365427(n)].
A365499	mulr	0	(p, e) -> e <= 3 ? ZV(2) : ZV(1)	Multiplicativewitha(p^e)=(\d+)ife<=(\d+),and(\d+)otherwise	2,3,1	
A365511	multraf	0	(self, n) -> self.s(0).^(3).*(self.s(1))	""	new A088218(), new A110706()	a(n)=Annn(n)^(\d+)*Annn(n)
A365522	#decexp	0	Decimal expansion of (Pi*sqrt(3) + 9*log(3))/24.	nonn,cons	0..109	nyi	_Claude H. R. Dequatre_
A365523	#decexp	0	Decimal expansion of 6*log(2) - 4.	nonn,cons	0..109	nyi	_Claude H. R. Dequatre_
A365524	#decexp	0	Decimal expansion of 4*log(2) - 5/2.	nonn,cons	0..109	nyi	_Claude H. R. Dequatre_
A365546	lambdan	0	n -> RU(0, n,   k -> new Q(FA(3*n - 2*k), FA(3*n - 3*k + 1)).*(SA(n, k))).num()
A365554	lambdan	0	n -> SU(n/2, n-1, k -> ZV(k).*(BI(k + 1, n - k)).-((BI(k - 1, n - k)).*(FA(k)).*(FA(n-k))))	a(n) = sum(k=n\2, n-1, k*(binomial(k+1, n-k)-binomial(k-1, n-k))*k!*(n-k)!)
A365647	lambdan	1	n -> SD(n, d -> Functions.CARMICHAEL_LAMBDA.z(n/d).*(A001615.dedekindPsi(d)))	a(n) = Sum{d|n} A001615(d) * A002322(n/d).
A365648	lambdan	1	n -> SD(n, d -> Functions.CARMICHAEL_LAMBDA.z(n/d).*(Functions.SIGMA.z(d)))	a(n) = Sum{d|n} A000203(d) * A002322(n/d).
A365684	muldirs	0	(p, e) -> p.^(SEQ.a(e))	new A067535()	Multiplicativewitha(p^e)=p^Annn(e)		A067535
A365685	muldirs	0	(p, e) -> p.^(SEQ.a(e))	new A081221()	Multiplicativewitha(p^e)=p^Annn(e)		A081221
A365767	diffs	0	new A086688()	First differences of A086688.
A365771	multraf	0	(self, n) -> self.s(0).*(self.s(1))	""	new A000108(), new A165817()	a(n) = D000108(n) * A165817(n) for n >= 0.
A365777	lambdan	0	n -> SU(0, n,   k -> ZV(-2).^(n - k).*(PR(0, k - 1, j -> ZV(4*j + 3)).*(S2(n, k))))
A365778	lambdan	0	n -> SU(0, n,   k -> ZV(-3).^(n - k).*(PR(0, k - 1, j -> ZV(6*j + 1)).*(S2(n, k))))
A365779	lambdan	0	n -> SU(0, n,   k -> ZV(-3).^(n - k).*(PR(0, k - 1, j -> ZV(6*j + 5)).*(S2(n, k))))
A365802	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A163511(k) is a fifth power.	nonn,changed	1..51	nyi	_Antti Karttunen_
A365804	multraf	1	(self, n) -> self.s(0).+(self.s(1))	""	new A263273().skip(1), new A365803()
A365809	filtpos	0	0	new A163511()	(k, v) -> (k & 1) == 1 && v.isSquare()	Odd numbers k such that A163511(k) is a square.	nonn	1..63	nyi	_Antti Karttunen_
A365928	spf	1	ZV(10).^(2*n    ).+((ZV(10).^(n).-(1))./(9))
A365958	lambdan	1	n -> { int k = 1; while(!ZV(8*n*k + 1).IPP()) { k++; } return ZV(k); }
A365966	spf	0	ZV(10).^(2*n + 1).+((ZV(10).^(n).-(1))./(9))
A366108	lambdan	0	n -> BI(n - 1, (n - 1)/2)./(2)
A366125	dirtral	0	new A001222()	new A366126()	(n, v) -> v./(3)	A001222(A366126(n))/3
A366151	lambdan	0	n -> ZV(n).*(n).*(n + 3)	a(n)=n^2*(n+3)
A366244	muldirs	0	(p, e) -> p.^(SEQ.a(e))	new A063694()	Multiplicativewitha(p^e)=p^Annn(e)		A063694
A366245	muldirs	0	(p, e) -> p.^(SEQ.a(e))	new A063695()	Multiplicativewitha(p^e)=p^Annn(e)		A063695
A366269	filter	0	new A007504()	v -> ZUtils.isPolygonal(v, 6)	Hexagonal numbers which are the sum of the first k primes, for some k >= 0.
A366270	filtpos	0	1	new A007504()	v -> ZUtils.isPolygonal(v, 6)	Nonnegative integers k such that the sum of the first k primes is a hexagonal number.
A366287	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A163511(k) is a seventh power.	nonn	1..45	nyi	_Antti Karttunen_
A366294	rgs1	1	new A326042()	Restricted growth sequence transform of A326042.
A366295	rgs1	1	new A349623()	1	Lexicographically earliest infinite sequence such that a(i) = a(j) => A349623(i) = A349623(j) for all i, j >= 1, where A349623 is the Dirichlet inverse of A064989(sigma(A003961(n))).						Lexicographically earliest infinite sequence such that a(i) = a(j) => A349623(i) = A349623(j) for all i, j >= 1, where A349623 is the Dirichlet inverse of A064989(sigma(A003961(n))).
A366308	muldirs	0	(p, e) -> Z2(SEQ.a(e))	new A139351()	Multiplicativewitha(p^e)=(\d+)^Annn(e)	2	A139351
A366309	muldirs	0	(p, e) -> Z2(SEQ.a(e))	new A139352()	Multiplicativewitha(p^e)=(\d+)^Annn(e)	2	A139352
A366313	lambdan	0	n -> PR(0, 2*n, k -> ZV(n).^(2).+(ZV(k).^(2)))
A366368	multraf	0	(self, n) -> self.s(0).*(self.s(1))	""	new A003418(), new A139550()
A366369	multraf	0	(self, n) -> self.s(0)./(self.s(1))	""	new A003418(), new A139550()
A366385	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A052126(), new A061395()
A366387	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A032742(), new A055396()
A366391	#filtpos	0	0	new ()	(k, v) -> v.compareTo(ZV(k)) < 0	Numbers k such that A163511(k) is an eleventh power.	nonn	1..37	nyi	_Antti Karttunen_
A366395	lambdan	0	n -> SU(1, n, k -> Z_1(k-1).*(BI(n/k + 2,3))        )
A366400	lambdan	0	n -> RU(0, n, k -> BI(new Q( 3*k, 2).+(n    ), n - k).*(BI(new Q(5*k, 2)         ,     k))./(new Q( 3*k, 2).+(Z.ONE))).num()
A366401	lambdan	0	n -> RU(0, n, k -> BI(new Q( 5*k, 2).+(n    ), n - k).*(BI(new Q(7*k, 2)         ,     k))./(new Q( 5*k, 2).+(Z.ONE))).num()
A366402	lambdan	0	n -> RU(0, n, k -> BI(new Q( 7*k, 2).+(n    ), n - k).*(BI(new Q(9*k, 2)         ,     k))./(new Q( 7*k, 2).+(Z.ONE))).num()
A366403	lambdan	0	n -> RU(0, n, k -> BI(new Q( 3*k, 2).-(1)    ,     k).*(BI(new Q(  k, 2).-(1)    , n - k))./(new Q( 3*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366404	lambdan	0	n -> RU(0, n, k -> BI(new Q( 5*k, 2).-(1)    ,     k).*(BI(new Q(3*k, 2).-(1)    , n - k))./(new Q( 5*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366405	lambdan	0	n -> RU(0, n, k -> BI(new Q( 7*k, 2).-(1)    ,     k).*(BI(new Q(5*k, 2).-(1)    , n - k))./(new Q( 7*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366406	lambdan	0	n -> RU(0, n, k -> BI(new Q( 9*k, 2).-(1)    ,     k).*(BI(new Q(7*k, 2).-(1)    , n - k))./(new Q( 9*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366407	lambdan	0	n -> RU(0, n, k -> BI(new Q(11*k, 2).-(1)    ,     k).*(BI(new Q(9*k, 2).-(1)    , n - k))./(new Q(11*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366431	lambdan	0	n -> RU(0, n, k -> BI(new Q( 3*k, 2).+(n - 1), n - k).*(BI(new Q(5*k, 2)         ,     k))./(new Q( 3*k, 2).+(Z.ONE))).num()
A366432	lambdan	0	n -> RU(0, n, k -> BI(new Q( 5*k, 2).+(n - 1), n - k).*(BI(new Q(7*k, 2)         ,     k))./(new Q( 5*k, 2).+(Z.ONE))).num()
A366433	lambdan	0	n -> RU(0, n, k -> BI(new Q( 5*k, 2).-(1)    ,     k).*(BI(new Q(3*k, 2)         , n - k))./(new Q( 5*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366435	lambdan	0	n -> RU(0, n, k -> BI(new Q( 7*k, 2).-(1)    ,     k).*(BI(new Q(5*k, 2)         , n - k))./(new Q( 7*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366437	lambdan	0	n -> RU(0, n, k -> BI(new Q( 9*k, 2).-(1)    ,     k).*(BI(new Q(7*k, 2)         , n - k))./(new Q( 9*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366451	multraf	2	(self, n) -> self.s(0)./(self.s(1))	""	new A060644()	a(n)=Annn(n)-n		A060644			The sum s > n which has the greatest probability of occurring when summing rolls of an n-sided die.
A366452	lambdan	0	n -> RU(0, n, k -> BI(new Q( 3*k, 2).+(1)    , n - k).*(BI(new Q(5*k, 2)         ,     k))./(new Q( 3*k, 2).+(Z.ONE))).num()
A366453	lambdan	0	n -> RU(0, n, k -> BI(new Q( 5*k, 2).+(1)    , n - k).*(BI(new Q(7*k, 2)         ,     k))./(new Q( 5*k, 2).+(Z.ONE))).num()
A366454	lambdan	0	n -> RU(0, n, k -> BI(new Q( 5*k, 2).-(1)    ,     k).*(BI(new Q(3*k, 2).+(n - 2), n - k))./(new Q( 5*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366455	lambdan	0	n -> RU(0, n, k -> BI(new Q( 7*k, 2).-(1)    ,     k).*(BI(new Q(5*k, 2).+(n - 2), n - k))./(new Q( 7*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366456	lambdan	0	n -> RU(0, n, k -> BI(new Q( 9*k, 2).-(1)    ,     k).*(BI(new Q(7*k, 2).+(n - 2), n - k))./(new Q( 9*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366459	lambdan	0	n -> RU(1, n/2, k -> new Q(k).^(n - 2*k - 1)./(FA(n - 2*k))).*(FA(n)).num()
A366487	diffs	1	new A121805()	First differences of "commas" sequence A121805.
A366492	parmof2	1	A121805	4
A366495	lambdan	0	n -> RU(0, n, k -> BI(new Q( 3*k, 2)         , n - k).*(BI(new Q(5*k, 2)         ,     k))./(new Q( 3*k, 2).+(Z.ONE))).num()
A366496	lambdan	0	n -> RU(0, n, k -> BI(new Q( 5*k, 2)         , n - k).*(BI(new Q(7*k, 2)         ,     k))./(new Q( 5*k, 2).+(Z.ONE))).num()
A366497	lambdan	0	n -> RU(0, n, k -> BI(new Q( 7*k, 2)         , n - k).*(BI(new Q(9*k, 2)         ,     k))./(new Q( 7*k, 2).+(Z.ONE))).num()
A366498	lambdan	0	n -> RU(0, n, k -> BI(new Q( 3*k, 2).+(n - 1), n - k).*(BI(new Q(5*k, 2).-(1)    ,     k))./(new Q( 5*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366500	lambdan	0	n -> RU(0, n, k -> BI(new Q( 5*k, 2).+(n - 1), n - k).*(BI(new Q(7*k, 2).-(1)    ,     k))./(new Q( 7*k, 2).-(Z.ONE))).*(Z_1(n - 1)).num()
A366546	lambdan	0	n -> RU(1, n/3, k -> new Q(k).^(n - 3*k - 1)./(FA(n - 3*k))).*(FA(n)).num()	a(n) = n!*sum(k=1, n\3, k^(n-3*k-1)/(n-3*k)!);
A366564	lambdan	0	n -> RU(1, n/3, k -> new Q(FA(k-1).*(S2(n - 2*k, k)), FA(n - 2*k))).*(FA(n)).num()
A366659	lambdan	0	n -> SU(1, n, k -> Z_1(k-1).*(BI(n/k + 3, 4))       )
A366672	simtraf	0	new A002720()	(n, v) -> v.^(n)	.
A366723	lambdan	0	n -> SU(1, n, k -> Z_1(k-1).*(BI(n/k + 4, 5))       )
A366729	lambdan	0	n -> RU(0, n,   k -> new Q(FA(2*n - k  ), FA(2*n - 2*k + 1)).*(S1(n, k))).num()	a(n) = Sum{k=0..n} (2*n-k)!/(2*n-2*k+1)! * Stirling1(n,k).
A366744	muldirs	0	(p, e) -> p.^(SEQ.a(e).+(1)).-(1)./(p.-(1))	new A006519()	Multiplicativewitha(p^e)=(p^(Annn(e)+(\d+))-(\d+))/(p-(\d+))	1,1,1	A006519
A366751	lambdan	0	n -> RU(1, n/4, k -> new Q(FA(k-1).*(S2(n - 3*k, k)), FA(n - 3*k))).*(FA(n)).num()
A366752	lambdan	0	n -> RU(1, n/3, k -> new Q(FA(k-1).*(SA(n - 2*k, k)), FA(n - 2*k))).*(FA(n)).num()
A366777	lambdan	0	n -> RU(1, n/4, k -> new Q(FA(k-1).*(SA(n - 3*k, k)), FA(n - 3*k))).*(FA(n)).num()
A366779	lambdan	1	n -> Functions.CARMICHAEL_LAMBDA.z(Functions.CARMICHAEL_LAMBDA.z(Functions.CARMICHAEL_LAMBDA.z(n)))	a(n) = lambda(lambda(lambda(n))), where lambda(
A366786	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A073481(), new A005117()	a(n) = A073481(n) * A005117(n).
A366792	#rgs2	1	new ()	new ()	Restricted growth sequence transform of the function f(n) = A366790(A163511(n)).
A366793	simtraf	0	new A004718()	v -> new Z(v.toString(3).replaceAll("2", "0"), 2)	ones in the balanced ternary representation of Per NÃ¸rgÃ¥rds "infinity sequence" A004718
A366794	simtraf	0	new A004718()	v -> new Z(v.toString(3).replaceAll("1", "0").replaceAll("[2]", "1"), 2)	twos (-1's) in the balanced ternary representation of Per NÃ¸rgÃ¥rd's "infinity sequence" A004718
A366813	lambdan	0	n -> SD(n, d -> Z_1(n/d-1).*(BI(d+2,3)))		Sum_{d|n} (-1)^(n/d-1) * BI(d+2,3)
A366814	lambdan	0	n -> SD(n, d -> Z_1(n/d-1).*(BI(d+3,4)))		Sum_{d|n} (-1)^(n/d-1) * BI(d+3,4)
A366815	lingf	1	0,448,1304,1054,-90,-12	1,-5,10,-10,5,-1	0						Hyper-Wiener index in diamond nanowires obtained by connecting n unit cells in a sequence.
A366839	simtraf	0	new A001511()	v -> v.*(2)	a(n) = 2 * A001511(n).
A366840	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A100006(), new A366839()
A366881	#rgs2	1	new ()	new ()	Restricted growth sequence transform of sequence b(n) = A351461(A163511(n)).
A366889	simtraf	0	new DirichletInverseSequence(1, new A082903())	(n, v) -> (n == 1) ? Z.ONE : v	Dirichlet inverse of the highest power of two that divides the sum of divisors of n.	sign,mult	1..16384	nyi	_Antti Karttunen_
A366901	muldirs	0	(p, e) -> SEQ.a(e).+(1)	new A115384()	Multiplicativewitha(p^e)=Annn(e)+(\d+)	1	A115384
A366902	muldirs	0	(p, e) -> SEQ.a(e)	new A159481()	Multiplicativewitha(p^e)=Annn(e)		A159481
A366915	lambdan	1	n -> SU(1, n, k -> Z_1(k  ).*(k).*(k).*(n/k))
A366917	lambdan	1	n -> SU(1, n, k -> Z_1(k  ).*(k).*(k).*(k).*(n/k))
A366922	simtraf	1	new A007949()	v -> v.+(2)	= A051064(n) + 1.
A366924	simtras	1	new A054474().skip(1)	v -> v./(4)	.
A366925	multraf	1	(self, n) -> self.s(0)./(8)	"1"	new A010575()	v -> v./(8)	for n>0.
A366931	lambdan	1	n -> { int k = 1; while(!ZV(3*n*k + 1).IPP()) { k++; } return ZV(k); }
A366933	lambdan	0	n -> SD(n, d -> ZV(d).^(4).*(BI(n/d + 2, 3)))
A366934	lambdan	0	n -> SD(n, d -> ZV(d).^(5).*(BI(n/d + 3, 4)))
A366937	lambdan	0	n -> SU(1, n, k -> Z_1(k-1).*(BI(k+1, 2)).*(n/k)    )
A366938	lambdan	0	n -> SU(1, n, k -> Z_1(k-1).*(BI(k+2, 3)).*(n/k)    )
A366939	lambdan	0	n -> SU(1, n, k -> Z_1(k-1).*(BI(k+3, 4)).*(n/k)    )
A366950	holose	0	[[0],[-9],[-2],[0],[0,1]]	1	0	1
A366967	lambdan	0	n -> SU(2, n, k -> BI(k, 2).*(n/k)                  )
A366968	lambdan	0	n -> SU(3, n, k -> ZV(n/k)                          )
A366969	lambdan	0	n -> SU(3, n, k -> ZV(k-2).*(n/k)                   )
A366970	lambdan	0	n -> SU(3, n, k -> BI(k-1, 2).*(n/k)                )
A366971	lambdan	0	n -> SU(3, n, k -> BI(k, 3).*(n/k)                  )
A366972	lambdan	0	n -> SU(4, n, k -> ZV(n/k)                          )
A366974	lambdan	0	n -> RD(n, d -> new Q(BI(d + n/d - 2, d))).num()
A366975	lambdan	0	n -> (n < 2)  ? ZV(0) : SD(n, d -> BI(d + n/d - 3, d))
A366983	lambdan	0	n -> SU(1, n, k -> ZV(k+1).*(n/k)                   )
A366984	lambdan	0	n -> SU(1, n, k -> BI(k+2, 2).*(n/k)                )
A366985	lambdan	0	n -> SU(1, n, k -> BI(k+3, 3).*(n/k)                )
A366991	muldirs	1	(p, e) -> SEQ.a(e).+(2)	new A000720()	Multiplicativewitha(p^e)=Annn(e)+(\d+)	2	A000720
A367011	lambdan	0	n -> SU(0, n, k -> FA(k).*(ZV(k).^(n-k)))
A367012	lambdan	0	n -> SU(0, n, k -> FA(k).*(ZV(n-k).^(k)))
A367056	#findre	0	(n+1)*a(n) +2*(-2*n+1)*a(n-1) +(-2*n+7)*a(n-3) +(n-8)*a(n-6)=0
A367071	#findre	0	(n+2)*a(n) +8*(-n+1)*a(n-2) +8*(-2*n+5)*a(n-3)=0
A367078	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k),       FA(2*n - k + 1))).*(FA(2*n)).num()	a(n) = (2*n)! * Sum_{k=0..n} Stirling1(n,k)/(2*n-k+1)!
A367079	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k),       FA(3*n - k + 1))).*(FA(3*n)).num()	a(n) = (3*n)! * Sum_{k=0..n} Stirling1(n,k)/(3*n-k+1)!
A367080	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).abs(), FA(2*n - k + 1))).*(FA(2*n)).num()	a(n) = (2*n)! * Sum_{k=0..n} Stirling1(n,k)/(2*n-k+1)!
A367100	lambdan	0	n -> SU(0, n, k -> Functions.CATALAN.z(k).*(Functions.PARTITIONS.z(k)))	a(n) = Sum_{k=0..n} D000108(k) * D000041(k).
A367134	lambdan	0	n -> SU(0, n, k -> S2(n, k)      .*(FA(2*n + k)))./(FA(2*n + 1))	a(n) = (1/(2*n+1)!) * Sum_{k=0..n} (2*n+k)! * Stirling2(n,k)
A367135	lambdan	0	n -> SU(0, n, k -> S2(n, k)      .*(FA(3*n + k)))./(FA(3*n + 1))	a(n) = (1/(3*n+1)!) * Sum_{k=0..n} (3*n+k)! * Stirling2(n,k)
A367136	lambdan	0	n -> SU(0, n, k -> S1(n, k)      .*(FA(2*n + k)))./(FA(2*n + 1))	a(n) = (1/(2*n+1)!) * Sum_{k=0..n} (2*n+k)! * Stirling1(n,k).
A367137	lambdan	0	n -> SU(0, n, k -> S1(n, k)      .*(FA(3*n + k)))./(FA(3*n + 1))	a(n) = (1/(3*n+1)!) * Sum_{k=0..n} (3*n+k)! * Stirling1(n,k).
A367138	lambdan	0	n -> SU(0, n, k -> S1(n, k).abs().*(FA(2*n + k)))./(FA(2*n + 1))	a(n) = (1/(2*n+1)!) * Sum_{k=0..n} (2*n+k)! * |Stirling1(n,k)|.
A367139	lambdan	0	n -> SU(0, n, k -> S1(n, k).abs().*(FA(3*n + k)))./(FA(3*n + 1))	a(n) = (1/(3*n+1)!) * Sum_{k=0..n} (3*n+k)! * |Stirling1(n,k)|.
A367152	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).abs(), FA(3*n - k + 1))).*(FA(3*n)).num()	a(n) = (3*n)! * Sum_{k=0..n} |Stirling1(n,k)|/(3*n-k+1)!.
A367153	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).abs(), FA(2*n - k + 1)).*(Z_1(n - k))).*(FA(2*n)).num()	a(n) = (2*n)! * Sum_{k=0..n} (-1)^(n-k) * Stirling2(n,k)/(2*n-k+1)!.
A367154	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).abs(), FA(3*n - k + 1)).*(Z_1(n - k))).*(FA(3*n)).num()	a(n) = (3*n)! * Sum_{k=0..n} (-1)^(n-k) * Stirling2(n,k)/(3*n-k+1)!
A367155	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).*(FA(3*k)), FA(2*k + 1))).num()	a(n) = Sum_{k=0..n} (3*k)!/(2*k+1)! * Stirling1(n,k).
A367156	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).*(FA(n + 2*k)), FA(n +   k + 1))).num()	a(n) = Sum_{k=0..n} (n + 2*k)!/(n +   k + 1)! * Stirling1(n,k).
A367157	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).*(FA(n + 3*k)), FA(n + 2*k + 1))).num()	a(n) = Sum_{k=0..n} (n + 3*k)!/(n + 2*k + 1)! * Stirling1(n,k).
A367158	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).abs().*(FA(    3*k)), FA(    2*k + 1))).num()	a(n) = Sum_{k=0..n} (    3*k)!/(    2*k + 1)! * |Stirling1(n,k)|.
A367159	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).abs().*(FA(n + 2*k)), FA(n +   k + 1))).num()	a(n) = Sum_{k=0..n} (n + 2*k)!/(n +   k + 1)! * |Stirling1(n,k)|.
A367160	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).abs().*(FA(n + 3*k)), FA(n + 2*k + 1))).num()	a(n) = Sum_{k=0..n} (n + 3*k)!/(n + 2*k + 1)! * |Stirling1(n,k)|.
A367161	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).*(FA(    3*k)), FA(    2*k + 1))).num()	a(n) = Sum_{k=0..n} (    3*k)!/(    2*k + 1)! * Stirling2(n,k).
A367162	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).*(FA(n + 2*k)), FA(n +   k + 1))).num()	a(n) = Sum_{k=0..n} (n + 2*k)!/(n +   k + 1)! * Stirling2(n,k).
A367163	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).*(FA(n + 3*k)), FA(n + 2*k + 1))).num()	a(n) = Sum_{k=0..n} (n + 3*k)!/(n + 2*k + 1)! * Stirling2(n,k).
A367164	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).*(Z_1(n - k)).*(FA(    3*k)), FA(    2*k + 1))).num()	a(n) = Sum_{k=0..n} (-1)^(n-k) * (    3*k)!/(    2*k + 1)! * Stirling2(n,k).
A367165	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).*(Z_1(n - k)).*(FA(n + 2*k)), FA(n +   k + 1))).num()	a(n) = Sum_{k=0..n} (-1)^(n-k) * (n + 2*k)!/(n +   k + 1)! * Stirling2(n,k).
A367166	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).*(Z_1(n - k)).*(FA(n + 3*k)), FA(n + 2*k + 1))).num()	a(n) = Sum_{k=0..n} (-1)^(n-k) * (n + 3*k)!/(n + 2*k + 1)! * Stirling2(n,k).
A367168	muldirs	1	(p, e) -> p.^(SEQ.a(e))	new A048298()	Multiplicativewitha(p^e)=p^Annn(e)		A048298
A367169	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A367168()	new A001222()	a(n)=Annn(Annn(n))
A367170	muldirs	1	(p, e) -> SEQ.a(e).+(1)	new A048298()	Multiplicativewitha(p^e)=Annn(e)+(\d+)	1	A048298
A367171	muldirs	1	(p, e) -> p.^(SEQ.a(e).+(1)).-(1)./(p.-(1))	new A048298()	Multiplicativewitha(p^e)=(p^(Annn(e)+(\d+))-(\d+))/(p-(\d+))	1,1,1	A048298
A367175	simtraf	0	new A008472()	(n, v) -> JF(n).sigma().-(v.*(2))	a(n) = sigma(n) - 2 * A008472(n).
A367179	lambdan	0	n -> RU(0, n, k -> new Q(S1(n, k).*(FA(3*n - 2*k)), FA(3*n - 3*k + 1))).num()	a(n) = Sum_{k=0..n} (3*n - 2*k)!/(3*n - 3*k + 1)! * Stirling1(n,k).
A367180	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).*(FA(2*n -   k)), FA(2*n - 2*k + 1))).num()	a(n) = Sum_{k=0..n} (2*n -   k)!/(2*n - 2*k + 1)! * Stirling2(n,k).
A367181	lambdan	0	n -> RU(0, n, k -> new Q(S2(n, k).*(FA(3*n - 2*k)), FA(3*n - 3*k + 1))).num()	a(n) = Sum_{k=0..n} (3*n - 2*k)!/(3*n - 3*k + 1)! * Stirling2(n,k).
A367199	lambdan	0	n -> RU(0, n, k -> new Q(n + 3*k + 1).^(k - 1).*(S1(n, k))).num()	a(n) = Sum_{k=0..n} (n + 3*k + 1)^(k-1) * Stirling1(n,k).
A367200	lambdan	0	n -> RU(0, n, k -> new Q(n + 3*k + 1).^(k - 1).*(S1(n, k).abs())).num()	a(n) = Sum_{k=0..n} (n + 3*k + 1)^(k-1) * |Stirling1(n,k)|.
A367201	lambdan	0	n -> RU(0, n, k -> new Q(n + 3*k + 1).^(k - 1).*(S2(n, k))).num()	a(n) = Sum_{k=0..n} (n + 3*k + 1)^(k-1) * Stirling2(n,k).
A367228	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A000215(), PREVIOUS	a(n) = A000215(n) * A000215(n+1).
A367254	lambdan	0	n -> BI(2*n - 1, n - 1).*(ZV(2*n).^(n))	a(n) = binomial(2*n - 1, n - 1)*(2*n)^n.	nonn	0..15	nyi	_Peter Luschny_                                         
A367255	lambdan	0	n -> new Q(n + 1).^(n - 2).*(3*n + 1).num()	a(n) = (n + 1)^(n - 2)*(3*n + 1).	nonn	0..19	nyi	_Peter Luschny_                                                 
A367256	lambdan	0	n -> SU(0, n, k -> BI(n, k).*(BI(n - 1, k - 1)).*(ZV(n).^(n - k)))	a(n) = Sum_{k=0..n} binomial(n, k) * binomial(n - 1, k - 1) * n^(n - k).	nonn	0..350	nyi	_Peter Luschny_         
A367257	lambdan	0	n -> SU(0, n, k -> BI(n, k).*(BI(n - 1, n - k - 1)).*(ZV(-n).^(k)))	a(n) = Sum_{k=0..n} binomial(n, k) * binomial(n - 1, n - k - 1) * (-n)^k.	sign	0..350	nyi	_Peter Luschny_         
A367259	#findre	0	8*n*(26345215448853860010445423574*n -20961990363613887876514780359) *(2*n+1)*(2*n-1) *(n+1)*a(n) +8*n*(2*n-1)* (52690430897707720020890847148*n^3 -8177454564962587489822763646077*n^2 +19278991143331529980160099092658*n-11257584930903257675329694643457) *a(n-1) +2*(-268110383402413819740981254825038*n^5 +2815977437639263120434136294300085*n^4 -10349136726006717489413692948200650*n^3 +17659039091779726381787370980047525*n^2 -14385155927699861644653059971375422*n +4528097093401255127907905744957880) *a(n-2) +2*(2433809541139490470204589489378644*n^5 -29695021140710269817720089645612595*n^4 +147295722233051282998786410783007430*n^3 -369735985683645289967183608338045205*n^2 +467786753736867474630837654962591406*n -237792800129696483300250545739991320) *a(n-3) +2*(-2771166843885660051994398777044296*n^5 +70669385063622159693270493531099173*n^4 -615983650096141972053534317661369592*n^3 +2483715780351994976504831765723882733*n^2 -4785455586973998561063713309602358866*n +3584098048545781487176463022333484200) *a(n-4) +(-9719685405660460345432742140418255*n^5 +101488259196839193588678566387929584*n^4 +90729575616085725241944658061815579*n^3 -4613811089886954307541928620224211376*n^2 +19004407111946953332012410754931442164*n -24034005967022354223275806054437127680) *a(n-5) +5*(4577999937824616490204866357596875*n^5 -139866352876176382080407833814299250*n^4 +1615537655758910403049946493111918725*n^3 -8980705919938192198141139371077714070*n^2 +24274376174445463863335689528941329496*n -25684691566228873512769902557616240960) *a(n-6) +30*(1336493817891495200869338759185*n -5552932550849126027962496889033) *(5*n-32)*(5*n-26)*(5*n-29)*(5*n-28)*a(n-7)=0
A367271	lambdan	0	n -> (n == 0) ? Z.ONE : BI(2*n, n).*(ZV(n).^(n))	binomial(2*n, n) * n^n.	nonn	0..322	nyi	_Peter Luschny_                             
A367272	lambdan	0	n -> SU(0, n, k -> BI(n, k).^(2).*(ZV(k).^(n - k)))	Sum_{k=0..n} binomial(n, k)^2 * k^(n - k).	nonn	0..20	nyi	_Peter Luschny_         
A367273	lambdan	0	n -> SU(0, n, k -> BI(n, k).^(2).*(ZV(k - n).^(k)))	Sum_{k=0..n} binomial(n, k)^2 * (k - n)^k.	sign	0..21	nyi	_Peter Luschny_         
A367274	lambdan	0	n -> { final int k = n/2; return BI(n, k).*(ZV(n - k).^(k)); }	binomial(n, k) * (n - k)^k where k = floor(n/2).
A367294	parmof2	0	A067497	4	,1,2	Numbers n such that (\d+) is the (\d+)st digit of (\d+)^k
A367295	parmof2	0	A067497	6	,1,2	Numbers n such that (\d+) is the (\d+)st digit of (\d+)^k
A367296	parmof2	0	A067497	8	,1,2	Numbers n such that (\d+) is the (\d+)st digit of (\d+)^k
A367326	lambdan	0	n -> (n == 0) ? Z.ZERO : SD(n, d -> ZV(n - d).^(2))	a(n) = Sum_{(n - k)|n} k^2
A367327	lambdan	0	n -> SU(0, n - 1, k -> ZV(n).mod(n - k) != 0 ? ZV(k*k) : Z.ZERO)	a(n) = Sum_{(n - k) does not divide n, 0 <= k < n} k^2
A367337	parmof2	1	A121805	5
A367350	parmof2	1	A121805	6
A367351	parmof2	1	A121805	7
A367352	parmof2	1	A121805	8
A367353	parmof2	1	A121805	9
A367354	parmof2	1	A121805	10
A367369	central	0	new A340556()	a(n) = A340556(2*n, n), the central terms of the second order Eulerian numbers.
A367371	lambdan	0	n -> SU(0, n,   k -> Z_1(n-k).*(PR(0, k - 1, j -> ZV(3*j + 2))).*(S2(n, k)))
A367372	lambdan	0	n -> SU(0, n,   k -> Z_1(n-k).*(PR(0, k - 1, j -> ZV(4*j + 2))).*(S2(n, k)))
A367373	lambdan	0	n -> SU(0, n,   k -> Z_1(n-k).*(PR(0, k - 1, j -> ZV(4*j + 3))).*(S2(n, k)))
A367374	lambdan	0	n -> SU(0, n,   k -> Z_1(n-k).*(PR(0, k - 1, j -> ZV(5*j + 2))).*(S2(n, k)))
A367375	lambdan	0	n -> SU(0, n,   k -> Z_1(n-k).*(PR(0, k - 1, j -> ZV(5*j + 3))).*(S2(n, k)))
A367376	lambdan	0	n -> SU(0, n,   k -> Z_1(n-k).*(PR(0, k - 1, j -> ZV(5*j + 4))).*(S2(n, k)))
A367406	tuptraf	1	(n, s) -> s[0].^(2)./(s[1])	""	new A268335(), new A367418()	new A367407()	v -> v.^(2)
A367407	simtraf	1	new A367406()	v -> v.sqrt()	dirtraf	1	new A064549()
A367417	dirtraf	1	new A007947()	new A268335()	The squarefree kernels of the exponentially odd numbers: a(n) = A007947(A268335(n)).
A367419	simtraf	0	new A367418()	v -> v.sqrt()	a(n)= sqrt(Annnnnn(n))	m	i  	
A367470	lambdan	0	n -> SU(0, n,   k -> Z2(k).*(FA(k+1)).*(S2(n, k)))
A367471	lambdan	0	n -> RU(0, n,   k -> new Q(Z2(k).*(FA(k+2)).*(S2(n, k)), Z.TWO)).num()
A367472	lambdan	0	n -> SU(0, n,   k -> Z.THREE.^(k).*(FA(k+1)).*(S2(n, k)))
A367473	lambdan	0	n -> RU(0, n,   k -> new Q(Z.THREE.^(k).*(FA(k+2)).*(S2(n, k)), Z.TWO)).num()     
A367474	lambdan	0	n -> SU(0, n,   k -> Z2(k).*(FA(k+1)).*(SA(n, k)))
A367475	lambdan	0	n -> RU(0, n,   k -> new Q(Z2(k).*(FA(k+2)).*(SA(n, k)), Z.TWO)).num()
A367476	lambdan	0	n -> SP(n, p -> ZV(p % 10))	a(n) = Sum_{p|n, p prime} (p mod 10)
A367488	multrad	0	(self, n) -> SU(1, n, k -> SEQ.a(k).*(BI(n - 1, k - 1)).*(self.a(n - k)))	"1"	new A367490()
A367504	tuptraf	0	(n, s) -> s[0].+(JF(s[0]).largestPrimeFactor())	"2"	PREVIOUS	a(1) = 2; for n > 1, a(n) = a(n-1) + 2*gpf(a(n-1)), where gpf(k) = A006530(k) = greatest prime dividing k.
A367506	lambdan	0	n -> SD(n, d -> ZV(d+n  ).^(n))		Sum_{d|n} (d+n)^n
A367507	lambdan	0	n -> SD(n, d -> ZV(d+2  ).^(n))		Sum_{d|n} (d+2)^n
A367509	lambdan	0	n -> SD(n, d -> ZV(2*d + 1  ).^(n))	Sum_{d|n} (2*d+1)^n
A367510	lambdan	0	n -> SD(n, d -> ZV(n*d + 1).^(n))	Sum_{d|n} (n*d+1)^n
A367515	muldirs	1	(p, e) -> SEQ.a(e)	new A001285()	Multiplicativewitha(p^e)=Annn(e)		A001285
A367516	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A034444(), new A367515()	a(n)=Annn(n)/Annn(n)
A367517	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A093883(), new A203312()	a(n) = A093883(n) * A203312(n).
A367543	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A324426().skip(1), new A079478().skip(1)	a(n) = A324426(n) / A079478(n).
A367548	#findre	0	9*n*a(n) +6*(6*n-7)*a(n-1) +16*(-n-4)*a(n-2) +32*(-2*n+5)*a(n-3)=0
A367551	lambdan	0	n -> SD(n, d -> ZV(d*d + 1).^(n))	Sum_{d|n} (d^2+1)^n
A367552	lambdan	0	n -> SD(n, d -> ZV(d*d - 1).^(n))	Sum_{d|n} (d^2-1)^n
A367553	lambdan	0	n -> SD(n, d -> ZV(d+n/d).^(n))	Sum_{d|n} (d+n/d)^n
A367559	multraf	0	(self, n) -> ZV(2).^(self.s(0)).-(self.s(1))	""	new A002262(), new A025581()
A367567	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A007685(), new A268196()	a(n) = A007685(n) * A268196(n).
A367568	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A268505(), new A168488()	a(n) = A268505(n) / A168488(n).
A367569	multraf	0	(self, n) -> self.s(0)./((self.s(1).^(5)))	""	new A268506(), new A000178()
A367570	multraf	0	(self, n) -> self.s(0)./((self.s(1).^(6)))	""	new A271946(), new A000178()
A367571	multraf	0	(self, n) -> self.s(0)./((self.s(1).^(7)))	""	new A271947(), new A000178()
A367625	simtraf	0	new A036991().skip(1)	v -> v.-(1)./(2)	,1,2	(Annnnnn(n)-(\d+))/(\d+)
A367626	diffs	0	new A036991()	First differences of A036991.
A367627	simtraf	1	new A367626()	v -> ZV(v.bitLength() - 1)
A367629	lambdan	1	n -> ZV(2).^(Z2(n+1)).-(Z2(n+2))	seq(2^(2^(n + 1)) - 2^(n + 2),n=0..6)
A367639	#findre	0	(n+1)*a(n) +(-3*n+1)*a(n-1) +2*(-4*n+9)*a(n-2) +4*(-n+4)*a(n-3)=0
A367640	#findre	0	2*n*(14*n+71)*(2*n+1)*a(n) +3*(-150*n^3-209*n^2-379*n+228)*a(n-1) +9*(-30*n^3-981*n^2+4297*n-3624)*a(n-2) +27*(n-4)*(22*n^2-491*n+1151)*a(n-3) +81*(n-4)*(n-5)*(6*n-49)*a(n-4)=0
A367641	#findre	0	3*n*(5589*n-14914)*(3*n-1)*(3*n+1)*a(n) +(150903*n^4 -5939762*n^3 +21653157*n^2 -22049842*n +6856944)*a(n-1) +6*(-2312427*n^4 +15333754*n^3 -28367401*n^2 +6040114*n +14892656)*a(n-2) +24*(-3942141*n^4 +46541449*n^3 -199851671*n^2 +367766019*n -243569600)*a(n-3) -32*(n-5)*(8043984*n^3 -85808428*n^2 +305023231*n -361082892)*a(n-4) -384*(n-5)*(n-6)*(885234*n^2 -6808468*n +12951185)*a(n-5) -1536*(n-6)*(n-7)*(144699*n^2 -1203919*n +2337211)*a(n-6) -2048*(n-6)*(n-7)*(n-8)*(27819*n-74186)*a(n-7)=0
A367655	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> self.a(k/2).*(self.a(n-1-k))))	"1"
A367656	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> self.a(k/3).*(self.a(n-1-k))))	"1"
A367657	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> self.a(k/4).*(self.a(n-1-k))))	"1"
A367658	multrar	0	(self, n) -> self.a(n-1).+(SU(0, n-1, k -> self.a(k/5).*(self.a(n-1-k))))	"1"
A367659	multrar	0	(self, n) -> self.a(n-1).+(SU(0, (n-1)/3, k -> self.a(k).*(self.a(n-1-3*k))))	"1"
A367660	multrar	0	(self, n) -> self.a(n-1).+(SU(0, (n-1)/4, k -> self.a(k).*(self.a(n-1-4*k))))	"1"
A367661	multrar	0	(self, n) -> self.a(n-1).+(SU(0, (n-1)/5, k -> self.a(k).*(self.a(n-1-5*k))))	"1"
A367679	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A324438().skip(1), new A079478().skip(1)	a(n) = A324438(n) / A079478(n).
A367777	lambdan	0	n -> SA(2*n + 1, n)
A367778	#findre	0	-(n+2)*(37012171*n -222599339)*a(n) +3*(n+1)*(108071243*n -631482704)*a(n-1) +(-512534971*n^2 +2421530181*n +1780794712)*a(n-2) +3*(-641100693*n^2 +4745437175*n -5322233482)*a(n-3) +(4162359143*n^2 -33175360881*n +59296953526)*a(n-4) +3*(1437180249*n^2 -9681487559*n +8357806732)*a(n-5) +9*(-754462425*n^2 +6932112703*n -14939114852)*a(n-6) -27*(218140823*n -693079002)*(n-5)*a(n-7)=0
A367780	#findre	0	-(n+1)*(133*n-262)*a(n) +4*(564*n^2-1229*n+262)*a(n-1) +4*(-2916*n^2+7294*n-2765)*a(n-2) +16*(596*n-553)*(2*n-3)*a(n-3)=0
A367792	filter	1	new A062786()	v -> JF(v).isSemiprime()	Centered 10-gonal numbers which are products of two primes.
A367807	simtraf	1	new A029951()	v -> v./(2)	.
A367823	lambdan	0	n -> PR(0, n  , k -> ZV(n).^(6).+(ZV(k).^(6)))
A367828	multrar	0	(self, n) -> self.a(n - 1).*(n).+(SU(1, n, k -> ZV(2).^(n - k).*(BI(n, k)).*(self.a(n - k)).*(FA(k - 1))))	"1"	a(0) = 1; a(n) = n * a(n-1) + Sum_{k=1..n} 2^(n-k) * (k-1)! * binomial(n,k) * a(n-k)
A367829	multrar	0	(self, n) -> self.a(n - 1).*(n).+(SU(1, n, k -> ZV(3).^(n - k).*(BI(n, k)).*(self.a(n - k)).*(FA(k - 1))))	"1"	a(0) = 1; a(n) = n * a(n-1) + Sum_{k=1..n} 3^(n-k) * (k-1)! * binomial(n,k) * a(n-k)
A367830	multrar	0	(self, n) -> self.a(n - 1).*(n).+(SU(1, n, k -> ZV(2).^(n - k).*(BI(n, k)).*(self.a(n - k)))             )	"1"	a(0) = 1; a(n) = n * a(n-1) + Sum_{k=1..n} 2^(n-k) * binomial(n,k) * a(n-k).
A367831	multrar	0	(self, n) -> self.a(n - 1).*(n).+(SU(1, n, k -> ZV(3).^(n - k).*(BI(n, k)).*(self.a(n - k)))             )	"1"	a(0) = 1; a(n) = n * a(n-1) + Sum_{k=1..n} 3^(n-k) * binomial(n,k) * a(n-k).
A367863	lambdan	0	n -> SU(0, n, k -> Z_1(n-k).*(BI(n,k)).*(BI(BI(k,     2), n)))
A367864	lambdan	0	n -> SD(n, d -> ZV(d).*(BI(n,d)))
A367865	lambdan	1	n -> { final FactorSequence fs = JF(n); return fs.phi().*(n).*(ZV(fs.mobius()).square()); }		 n * phi(n) * mu(n)^2.
A367866	lambdan	1	n -> { final FactorSequence fs = JF(n); return fs.sigma().*(n).*(ZV(fs.mobius()).square()); }		new n * sigma(n) * mu(n)^2.
A367870	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A245579(), new A000593()	a(n) = A245579(n) -   A000593(n).
A367941	lambdan	0	n -> PR(1, n, i -> PR(1, n, j -> ZV(i).^(2).+(ZV(j).^(2).*(2))))	a(n) = Product_{i=1..n, j=1..n} (i^2 + 2*j^2).	nonn	0..6	nyi	_Vaclav Kotesovec_
A367942	lambdan	0	n -> PR(1, n, i -> PR(1, n, j -> ZV(i).^(2).+(ZV(j).^(2).*(3))))	a(n) = Product_{i=1..n, j=1..n} (i^2 + 3*j^2).	nonn	0..6	nyi	_Vaclav Kotesovec_
A367943	lambdan	0	n -> PR(1, n, i -> PR(1, n, j -> ZV(i).^(2).+(ZV(j).^(2).*(4))))	a(n) = Product_{i=1..n, j=1..n} (i^2 + 4*j^2).	nonn	0..6	nyi	_Vaclav Kotesovec_
A367944	lambdan	0	n -> PR(1, n, i -> PR(1, n, j -> ZV(i).^(2).+(ZV(j).^(2).*(5))))	a(n) = Product_{i=1..n, j=1..n} (i^2 + 5*j^2).	nonn	0..6	nyi	_Vaclav Kotesovec_
A367956	lambdan	0	n -> PR(1, n, i -> PR(1, n, j -> ZV(i + 3*j)))	a(n) = Product_{i=1..n, j=1..n} (i + 3*j).	nonn	0..7	nyi	_Vaclav Kotesovec_
A367957	lambdan	0	n -> PR(1, n, i -> PR(1, n, j -> ZV(i + 4*j)))	a(n) = Product_{i=1..n, j=1..n} (i + 4*j).	nonn	0..7	nyi	_Vaclav Kotesovec_
A367958	lambdan	0	n -> PR(1, n, i -> PR(1, n, j -> ZV(i + 5*j)))	a(n) = Product_{i=1..n, j=1..n} (i + 5*j).	nonn	0..7	nyi	_Vaclav Kotesovec_
A367970	lambdan	1	n -> { int k = 1; while(!ZV(5*n*k + 1).IPP()) { k++; } return ZV(k); }
A367987	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A071974()	new A000005()	a(n)=Annn(Annn(n))
A367988	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A071974()	new A000203()	a(n)=Annn(Annn(n))
A368033	lambdan	0	n -> RU(1, n, k -> new Q(FA(2*n + k - 2), FA(2*n - 1)).*(S1(n, k))).num()
A368058	multraf	1	(self, n) -> ZV(n).*(self.s(0)).-(self.s(1))	""	new A294602(), new A294487()
A368068	simtraf	0	new A324402()	v -> v.^(2)	.
A368106	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A057521()	new A037445()	a(n)=Annn(Annn(n))
A368131	multraf	0	(self, n) -> self.s(0).-(2*n)	""	new A117630()	(n, v) -> v.-(2*n)	*n.
A368165	lambdan	0	n -> RU(1, n/3, k -> new Q(FA(k-1).*(SA(n - 2*k, k)), ZV(2).^(k).*(FA(n -2 *k)))).*(FA(n)).num()
A368166	lambdan	0	n -> RU(1, n/4, k -> new Q(FA(k-1).*(SA(n - 3*k, k)), ZV(6).^(k).*(FA(n -3 *k)))).*(FA(n)).num()
A368173	lambdan	0	n -> RU(1, n/3, k -> new Q(FA(k-1).*(S2(n - 2*k, k)), ZV(2).^(k).*(FA(n -2 *k)))).*(FA(n)).num()
A368174	lambdan	0	n -> RU(1, n/4, k -> new Q(FA(k-1).*(S2(n - 3*k, k)), ZV(6).^(k).*(FA(n -3 *k)))).*(FA(n)).num()
A368178	lambdan	0	n -> (n == 0) ? Z.ONE : SU(1, n, k -> BI(n+k, k).*(BI(n, k - 1)).*(BI(n, k))./(n))	
A368201	lambdan	1	n -> { int k = 1; while(!ZV(9*n*k + 1).IPP()) { k++; } return ZV(k); }
A368202	lambdan	1	n -> { int k = 1; while(!ZV(6*n*k + 1).IPP()) { k++; } return ZV(k); }
A368203	lambdan	1	n -> { int k = 1; while(!ZV(7*n*k + 1).IPP()) { k++; } return ZV(k); }
A368205	holos	0	[0,-1,-2,3,-1]	1	0	0
A368247	mulr	1	(p, e) -> e <= 2 ? ZV(1) : ZV(3)	Multiplicativewitha(p^e)=(\d+)ife<=(\d+),and(\d+)otherwise	1,2,3
A368270	lambdan	0	n -> SU(0, n, k -> Z2(n-k).*(ZV(k).^(n))        )
A368326	multrar	0	(self, n) -> self.a(n - 1).+(1).^(4)	"0"	a(0) = 0; a(n) = (1+a(n-1))^4 for n > 0.
A368327	multrar	0	(self, n) -> self.a(n - 1).+(1).^(5)	"0"	a(0) = 0; a(n) = (1+a(n-1))^5 for n > 0.
A368406	filtpos	0	1	new A368405()	v -> v.equals(ZV(0))	Numbers n such that Annnnnn(n)= (\d+)
A368426	filter	1	new A062786()	v -> isPDP(3)	Centered 10-gonal numbers which are sphenic numbers.
A368466	lambdan	0	n -> SU(0, n, k -> Z2(k).*(ZV(k).^(n))          )
A368467	lambdan	0	n -> SU(0, n, k -> Z_1(k).*(BI(2*n, k)).*(BI(4*n, n-k)))	
A368488	lambdan	0	n -> SU(0, n, k -> ZV(n).^(k).*(BI(k+n-1,k)  )  )
A368489	lambdan	0	n -> SU(0, n, k -> ZV(n).^(k).*(BI(k+n,k)    )  )
A368492	lambdan	0	n -> SU(0, n, k -> ZV(k).^(n+k)                 )
A368505	lambdan	0	n -> SU(0, n, k -> ZV(n).^(n-k).*(ZV(k).^(n))   )
A368510	lambdan	0	n -> SU(0, n, k -> ZV(n).^(n-k).*(BI(k+n,k))    )
A368524	lambdan	0	n -> SU(1,n, k -> ZV(k).^(2).*(ZV(n).^(n-k)  ))
A368525	lambdan	0	n -> SU(1,n, k -> ZV(k).^(3).*(ZV(n).^(n-k)  ))
A368526	lambdan	0	n -> SU(1,n, k -> ZV(k).^(2).*(ZV(n).^(k)    ))
A368527	lambdan	0	n -> SU(1,n, k -> ZV(k).^(3).*(ZV(n).^(k)    ))
A368534	lambdan	0	n -> SU(1,n, k -> BI(k + 1,2).*(ZV(n).^(n-k)))
A368535	lambdan	0	n -> SU(1,n, k -> BI(k + 2,3).*(ZV(n).^(n-k)))
A368536	lambdan	0	n -> SU(1,n, k -> BI(k + 1,2).*(ZV(n).^(k) ))
A368537	lambdan	0	n -> SU(1,n, k -> BI(k + 2,3).*(ZV(n).^(k) ))
A368553	lambdan	0	n -> SU(0, n, k -> ZV(k).^(k).*(Z2(n-k))        )
A368555	lambdan	0	n -> SU(0, n, k -> FA(k).*(Z.THREE.^(n-k))      )
A368561	lambdan	0	n -> SU(0, n, k -> FA(k).*(ZV(n).^(k))          )
A368573	lambdan	0	n -> SU(0, n, k -> FA(k).*(ZV(n).^(k))          )
A368574	lambdan	0	n -> RU(0,n, k -> new Q(BI(k+2,3)             , FA(k))).*(FA(n)).num()
A368575	lambdan	0	n -> RU(0,n, k -> new Q(BI(k+3,4)             , FA(k))).*(FA(n)).num()
A368576	lambdan	0	n -> RU(0,n, k -> new Q(BI(k+4,5)             , FA(k))).*(FA(n)).num()
A368585	lambdan	0	n -> RU(0,n, k -> new Q(Z_1(n-k).*(BI(k+2,3) ), FA(k))).*(FA(n)).num()
A368586	lambdan	0	n -> RU(0,n, k -> new Q(Z_1(n-k).*(BI(k+3,4) ), FA(k))).*(FA(n)).num()
A368587	lambdan	0	n -> RU(0,n, k -> new Q(Z_1(n-k).*(BI(k+4,5) ), FA(k))).*(FA(n)).num()
A368595	altsum	1	new A006519()	"-+"	Alternating sum of A006519.
A368597	lambdan	0	n -> SU(0, n, k -> Z_1(n-k).*(BI(n,k)).*(BI(BI(k + 1, 2), n)))	a(n) = sum(k=0, n, (-1)^(n-k) * binomial(n, k) * binomial(binomial(k+1, 2), n))
A368616	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A046992(), new A062774()	a(n) = A046992(n) -   A062774(n).
A368641	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A368616(), new A048865()
A368647	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A005090(), new A005088()	a(n) = A005090(n) -   A005088(n).
A368673	lambdan	1	n -> SU(1, n - 1, k -> (n%k != 0) && Predicates.SQUARE_FREE.is(  k) ? ZV(1) : Z.ZERO)
A368674	lambdan	1	n -> SU(1, n - 1, k -> (n%k != 0) && Predicates.SQUARE_FREE.is(  k) ? ZV(k) : Z.ZERO)
A368677	lambdan	1	n -> SU(1, n - 1, k -> (n%k != 0) && Predicates.SQUARE_FREE.is(n-k) ? ZV(1) : Z.ZERO)
A368680	lambdan	1	n -> SU(1, n - 1, k -> (n%k != 0) && Predicates.SQUARE_FREE.is(n-k) ? ZV(k) : Z.ZERO)
A368696	filamb	0	1	k -> { final Z ard = JF(k).arithmeticDerivative(); return ard.and(Z.THREE).equals(Z.TWO) && JF(ard).isSquareFree(); }	Numbers whose arithmetic derivative (A003415) is a squarefree number of the form 4k+2.	nonn,new ()	1..65	nyi	_Antti Karttunen_
A368716	lambdan	0	n -> RU(0,n, k -> new Q(Z_1(n-k).*(ZV(k).^(3)), FA(k))).*(FA(n)).num()
A368717	lambdan	0	n -> RU(0,n, k -> new Q(Z_1(n-k).*(ZV(k).^(4)), FA(k))).*(FA(n)).num()
A368718	lambdan	0	n -> RU(0,n, k -> new Q(Z_1(n-k).*(ZV(k).^(5)), FA(k))).*(FA(n)).num()
A368719	lambdan	0	n -> RU(0,n, k -> new Q(ZV(k).^(5)            , FA(k))).*(FA(n)).num()
A368725	lambdan	0	n -> RU(0,n, k -> new Q(Z_1(n-k).*(ZV(k).^(n)), FA(k))).*(FA(n)).num()
A368736	lambdan	1	n -> SU(1, n, k -> ZV(2*k + 1).gcd(ZV(n)))
A368737	lambdan	0	n -> SU(1, n, k -> ZV(3*k).gcd(ZV(n)))	a(n)= Sum_{n =(\d+)..n} gcd((\d+)*n, n)
A368739	lambdan	0	n -> SU(1, n, k -> ZV(4*k).gcd(ZV(n)))	a(n)= Sum_{n =(\d+)..n} gcd((\d+)*n, n)
A368740	lambdan	0	n -> SU(1, n, k -> ZV(5*k).gcd(ZV(n)))	a(n)= Sum_{n =(\d+)..n} gcd((\d+)*n, n)
A368742	lambdan	0	n -> SU(1, n, k -> ZV(6*k).gcd(ZV(n)))	a(n)= Sum_{n =(\d+)..n} gcd((\d+)*n, n)
A368760	lambdan	0	n -> RU(0, n, k -> new Q(ZV(k).^(3)           , FA(k))).+(Q.ONE).*(FA(n)).num()
A368762	lambdan	0	n -> RU(0, n, k -> new Q(BI(k+1,2)            , FA(k))).+(Q.ONE).*(FA(n)).num()
A368763	lambdan	0	n -> RU(0, n, k -> new Q(BI(k+2,3)            , FA(k))).+(Q.ONE).*(FA(n)).num()
A368764	lambdan	0	n -> RU(0, n, k -> new Q(BI(k+3,4)            , FA(k))).+(Q.ONE).*(FA(n)).num()
A368765	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k).*(k        )  , FA(k))).+(Q.ONE).*(FA(n)).num()
A368766	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k).*(BI(k+1,2))  , FA(k))).+(Q.ONE).*(FA(n)).num()
A368767	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k).*(BI(k+2,3))  , FA(k))).+(Q.ONE).*(FA(n)).num()
A368768	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k).*(BI(k+3,4))  , FA(k))).+(Q.ONE).*(FA(n)).num()
A368769	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE     , (FA(k)).^(3))).*(FA(n).^(3)).num()
A368770	lambdan	0	n -> RU(0, n, k -> new Q(ZV(k)     , (FA(k)).^(3))).*(FA(n).^(3)).num()
A368771	lambdan	0	n -> RU(0, n, k -> new Q(ZV(k).^(2), (FA(k)).^(3))).*(FA(n).^(3)).num()
A368772	lambdan	0	n -> RU(0, n, k -> new Q(ZV(k).^(3), (FA(k)).^(3))).*(FA(n).^(3)).num()
A368775	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE, ZV(k+1).*(FA(k).^(3)))).*(ZV(n+1)).*(FA(n).^(3)).num()
A368776	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE, ZV(k+1).^(2).*(FA(k).^(3)))).*(ZV(n+1).^(2)).*(FA(n).^(3)).num()
A368781	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A051903()	new A053644()	a(n)=Annn(Annn(n))
A368787	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, ZV(k+1).*(FA(k).^(2)))).*(ZV(n+1)).*(FA(n).^(2)).num()
A368788	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, ZV(k+1).*(FA(k).^(3)))).*(ZV(n+1)).*(FA(n).^(3)).num()
A368789	lambdan	0	n -> RU(1, n, k -> new Q(Z.ONE, ZV(k+1).^(2).*(FA(k).^(3)))).*(ZV(n+1).^(2)).*(FA(n).^(3)).num()
A368790	holos	0	[[1],[-2,3],[-1]]	1	0	0	a(n) = (3*n-2)!!! * Sum_{k=0..n} 1/(3*k-2)!!!.
A368791	holos	0	[[1],[-1,3],[-1]]	1	0	0
A368792	lambdan	0	n -> RU(0, n, k -> new Q(ZV(k), FD(2*k - 1))).*(FD(2*n -1)).num()
A368793	holos	0	[[0,1],[-2,3],[-1]]	0	0	0	n -> RU(0, n, k -> new Q(ZV(k), FM(3*n - 2, 3))).*(FM(3*n - 2, 3)).num()	a(n) = (3*n-2)!!! * Sum_{k=0..n} k/(3*k-2)!!!.
A368794	lambdan	0	n -> RU(1, n, k -> new Q(Z_1(k-1), FD(2*k - 1))).*(FD(2*n -1)).num()
A368821	ordsup	1	new A336040().skip()	2	0
A368837	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE                 , FA(k).*(FA(k+2))                  )).*(FA(n+2))            .*(FA(n)).num()
A368838	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE                 , FA(k).*(FA(k+3))                  )).*(FA(n+3))            .*(FA(n)).num()
A368839	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE        , FA(k).*(FA(k+1)).*(FA(k+2))                )).*(FA(n+1)).*(FA(n+2)) .*(FA(n)).num()
A368840	lambdan	0	n -> RU(0, n, k -> new Q(Z.ONE        , Z.SIX.^(n-k).*(FA(k)).*(FA(k+1)).*(FA(k+2)))).*(FA(n+1)).*(FA(n+2)) .*(FA(n)).num()
A368852	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k)    , (FA(k)).^(3))).*(FA(n).^(3)).num()
A368853	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k)                , FA(k).*(FA(k+1))                  )).*(FA(n+1))            .*(FA(n)).num()
A368854	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(k)       , FA(k).*(FA(k+1)).*(FA(k+2))                )).*(FA(n+1)).*(FA(n+2)) .*(FA(n)).num()
A368880	filter	0	new A024528()	PRIME	Primes in Annnnnn
A368888	lambdan	0	n -> SU(0, n/2, k -> ZV(n).^(2*k)      .*(BI(n-k,k)  ) )
A368889	lambdan	0	n -> SU(0, n/2, k -> ZV(n).^(3*k)      .*(BI(n-k,k)  ) )
A368890	lambdan	0	n -> SU(0, n/2, k -> ZV(n).^(3*(n-2*k)).*(BI(n-k,k)  ) )
A368891	lambdan	0	n -> SU(0, n/3, k -> ZV(n).^(k).*(BI(n-2*k,k))       )
A368892	lambdan	0	n -> SU(0, n/3, k -> ZV(n).^(n-3*k)    .*(BI(n-2*k,k)) )
A368893	lambdan	0	n -> SU(0, n/3, k -> ZV(n).^(n-2*k)    .*(BI(n-2*k,k)) )
A368894	lambdan	0	n -> SU(0, n/2, k -> ZV(-n).^(k)       .*(BI(n-k,k)  )    )
A368895	lambdan	0	n -> SU(0, n/3, k -> ZV(-n).^(k)       .*(BI(n-2*k,k))    )
A368898	lambdan	0	n -> SU(0, n/4, k -> ZV(n).^(k).*(BI(n-3*k,k))       )
A368902	filtpos	1	2	new A342001().skip(1)	SQUAREFREE	Numbers k for which A342001(k) is squarefree, where A342001(n) is the arithmetic derivative of n divided by its greatest common divisor with n.	nonn,new ()	1..79	nyi	_Antti Karttunen_	Numbers k for which A342001(k) is squarefree.
A368909	dirtral	0	new A003415()	new A324054()	(n, v) -> v.modZ(2)	A003415(A324054(n)) mod 2
A368921	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A003415(), new A068346()	a(n) = A003415(n) -   A068346(n).
A368922	multraf	0	(self, n) -> self.s(0).-(self.s(1))	""	new A368921(), new A068346()
A368925	dirtraf	1	new A051904()	new A001694()	"null"		1				The minimal exponent in the prime factorization of the powerful numbers.
A368941	simtraf	0	new A000194()	v -> v.+(1)	. - _Andrew Howroyd_, Jan 10 2024
A368942	filter	0	new A204166()	(n, v) -> (n & 1) == 0
A368956	lingf	1	0,-2,12,-12	1,-6,11,-6	0						a(n) = 3^n - 2^(n+1) - 1.
A368979	muldirs	1	(p, e) -> SEQ.a(e)	new A001227()	Multiplicativewitha(p^e)=Annn(e)		A001227
A368983	tuptraf	0	(n, s) -> s[0].+(s[1])	""	new A000081(), new A001429()
A369002	filtpos	1	1	new A003415()	(k, v) -> !v./(v.gcd(ZV(k))).testBit(0)	Numbers k for which k' / gcd(k,k') is even, where k' stands for the arithmetic derivative of k, A003415.	nonn,changed	1..70	nyi	_Antti Karttunen_
A369003	filtpos	1	1	new A003415()	(k, v) -> v./(v.gcd(ZV(k))).testBit(0)	Numbers k for which k' / gcd(k,k') is odd, where k' stands for the arithmetic derivative of k, A003415.	nonn	1..78	nyi	_Antti Karttunen_
A369005	filtpos	1	1	new A003415()	(k, v) -> v./(v.gcd(ZV(k))).mod( 4) == 0	Numbers k for which k' / gcd(k,k') is a multiple of four, where k' stands for the arithmetic derivative of k, A003415(k).	nonn	1..67	nyi	_Antti Karttunen_
A369007	filtpos	1	1	new A003415()	(k, v) -> v./(v.gcd(ZV(k))).mod(27) == 0	Numbers k for which k' / gcd(k,k') is a multiple of 27, where k' stands for the arithmetic derivative of k, A003415(k).	nonn	1..57	nyi	_Antti Karttunen_
A369008	tuptraf	0	(n, s) -> s[0]./(s[1])	""	new A085731(), new A003557()	a(n) = A085731(n) / A003557(n).
A369040	rgs2	1	new A003415().skip(1)	new A342014()	Restricted growth sequence transform of the ordered pair [A003415(n), A342014(n)].
A369046	rgs2	1	new A003415().skip(1)	new A069359()	Restricted growth sequence transform of the ordered pair [A003415(n), A069359(n)].
A369049	multraf	2	(self, n) -> ZV(n).mod(self.s(0))	""	new A003415()	n mod new A003415()
A369052	simtraf	0	new A003415()	(n, v) -> ZV(n).-(v.*(2))
A369058	lambdan	0	n -> (((n & 1) == 1) && JF(n).bigOmega() == 3) ? Z.ONE : Z.ZERO	A369058(n) = ((n%2)&&(3==bigomega(n)));
A369065	rgs1	1	new A344026()	Restricted growth sequence transform of A344026, i.e., of the arithmetic derivative (A003415) as reordered by the Doudna sequence (A005940).
A369069	dirichcon2	1	new A008836()	1	new A083345()	1	Dirichlet convolution of Liouvilles lambda (A008836) with A083345, where A083345(n) = n' / gcd(n,n'), and n' stands for the arithmetic derivative of n, A003415.
A369115	partsun	0	new A186537().skip(1)			Partial sums of A186537 starting at n = 1.					Expansion of (1 - x)^(-2) * Sum_{j>=0} (x^j / (1 - Sum_{k=1..j} x^k)).
A369180	lambdan	1	n -> SU(2, n, k -> Z_1(k).*(ZUtils.valuation(ZV(n), ZV(k))))	Sum_{k=2..n} (-1)^k * valuation(n,k).Alternating sum of the k-adic valuations (ruler functions) of n.
A369181	lambdan	1	n -> FA(ZV(n).^(3).-(1))
A369183	simtraf	0	new A329004()	(n, v) -> ZV(n).-(v)		a(n)= n - Annnnnn(n)	      
A369190	serrev	0	1	[0,1]	[1,2,-1,-4,-1,2,1]	Expansion of (1/x) * Series_Reversion( x / ((1-x)^2 * (1+x)^4) ). 2x - 1x? - 2?x? - 1x? + 2x? + 1x? + 1      #
A369253	parity	1	new A038548()	1	Parity of A038548, where A038548(n) is the number of divisors of n that are at most sqrt(n).						Parity of A038548, where A038548(n) is the number of divisors of n that are at most sqrt(n).
A369257	multraf	1	(self, n) -> self.s(0).+(self.s(1))./(2)	""	new A001227(), new A053866()	)/2
A369258	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A001227(), new A369257()	a(n)=Annn(n)-Annn(n)
A369259	rgs3	1	new A003557()	new A048250()	new A342671()	Restricted growth sequence transform of the triplet [A003557(j), A048250(i), A342671(n)].
A369260	rgs2	1	new A342671()	new A349162()	Restricted growth sequence transform of the ordered pair [A342671(n), A349162(n)], or equally, of the pair [A000203(n), A342671(n)], or equally,
A369273	#diff1	0	nyi p	Nonnegative numbers k satisfying sin(k) < sin(k+1) < sin(k+2).	nonn,easy,new	1..66	nyi	_R. J. Mathar_
A369274	#diff1	0	nyi	Nonnegative numbers k satisfying sin(k) < sin(k+1) < sin(k+2) < sin(k+3).	nonn,easy,new	1..63	nyi	_R. J. Mathar_
A369275	#diff1	0	nyi	Nonnegative numbers k satisfying sin(k) < sin(k+1) < sin(k+2) < sin(k+3) < sin(k+4).	nonn,easy,new	1..52	nyi	_R. J. Mathar_
A369304	lingf	1	0,3,3,2,-1,-1	1,-1,-2,2,1,-1	0						Numbers k for which the polynomial (x-1)^3*(x+1)^k has more than one zero coefficient.
A369305	lambdan	0	n -> SU(1, (n < 18 ? n : 18) + 1, k -> BI(9, k/2))
A369315	multraf	4	(self, n) -> self.s(0).-(self.s(1))	""	new A005034().skip(4), new A005036().skip(3)
A369374	insect2	1	new A286708()	new A055932()
A369393	lambdan	0	n -> ZV(n+1).^(n).-(FA(n).*(Z2(n)))	(n + 1)^n - 2^n*n!
A369404	tuptraf	0	(n, s) -> s[0].*(3).+(s[1].*(5))	""	new A000079(), new A033999()	a(n) = 3* A000079(n) + 5* A033999(n).
A369405	lingf	1	0,100	1,-1100,100000	0						Context-free language 1^n.0^(2n).
A369416	holos	0	[[0],[216],[-540],[558],[-305],[93],[-15],[1]]	0,0,0,0,1,15	0	0
A369418	holos	0	[0,108,-216,171,-67,13,-1]	0,0,0,1	0	0
A369420	insect2	1	new A056808()	new A286708()
A369421	holos	0	[0,72,-156,134,-57,12,-1]	0,0,0,1	0	0
A369447	rgs2	1	new A001065()	new A342671()	Restricted growth sequence transform of the ordered pair [A001065(n), A342671(n)].
A369454	dirichinv	1	new A369257()	1	Dirichlet inverse of A369257, where A369257 is the number of divisors of n that are odd numbers with an even number of prime factors with multiplicity.
A369455	dirichcon2	1	new A083345()	1	new A055615()	1	Dirichlet convolution of A083345 with A055615 (Dirichlet inverse of n), where A083345(n) = (n'/gcd(n,n')) and n' is the arithmetic derivative of n.
A369466	rgs1	1	new A369465()	Restricted growth sequence transform of A369465.
A369468	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A263416(), new A263417()	a(n) = A263416(n) * A263417(n).
A369471	multraf	4	(self, n) -> self.s(0).-(self.s(1))	""	new A005038().skip(3), new A005040().skip(3)
A369472	multraf	1	(self, n) -> self.s(0).*(2).-(self.s(1))	""	new A005040(), new A005038()
A369491	holos	0	[0,-2,3,-1]	1,2,4,10	0	0
A369520	convprod	0	1,1	new A001156(), new A000041()	Convolution of A001156 and A000041
A369523	lambdan	0	n -> FA(n*n -1).*(n)	a(n) = n*(n^2-1)!
A369529	multraf	1	(self, n)-> self.s(0).gcd(self.s(1))	""	new A007953(), new A007954()
A369567	simtraf	1	new A138302()	v -> v.^(2)	.
A369569	lambdan	0	n -> FA(n - 1).*(ZV(n).^(n))	a(n) = (n-1)!*n^n
A369570	convprod	0	1,1	new A033461(), new A000009()	Convolution of A033461 and A000009
A369575	convprod	0	1,1	new A369570(), new A279329()
A369576	convprod	0	1,1	new A369520(), new A003108()	Convolution of A000041 and A001156 and A003108
A369601	lambdan	1	n -> SD(n, d -> Functions.PHI.z(d).*(Functions.CARMICHAEL_LAMBDA.z(n/d)))	a(n) = Sum_{d|n} A000010(d) * A002322(n/d).
A369610	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A014689(), new A079952()	a(n) = A014689(n) -   A079952(n). - _Jinyuan Wang_, Feb 09 2024
A369627	holos	0	[[0],[-70421400,28467450,-3772575,164025],[24850800,-12156480,1920915,-98415],[-3128544,1939356,-378999,23571],[163296,-139392,35721,-2817],[-2880,4170,-1566,168],[-633792600,256207018,-33953151,1476221],[294078600,-137875770,21060810,-1049760],[-53007696,29610684,-5331906,310554],[4598208,-3193884,700488,-48924],[-189216,176922,-49815,4329],[2880,-4458,1782,-204],[0,32,-24,4]]	1,0,1,3,19, 132,991,7740,62020,505857,4180132,34889514,293518072,2485191753	0	0
A369667	multraf	0	(self, n) -> self.s(0).*(self.s(1))	""	new A358773(), new A065043()	a(n)=Annn(n)*Annn(n)
A369669	tuptraf	0	(n, s) -> s[0].gcd(s[1])	""	new A003415(), new A068346()	a(n)=gcd(Annn(n),Annn(n))
A369673	lambdan	0	n -> PR(0, n, k -> ZV(2).^(k).+(ZV(2).^(n - k)))	0..14	nyi	_Paul D. Hanna_
A369674	lambdan	0	n -> PR(0, n, k -> ZV(3).^(k).+(ZV(3).^(n - k)))	0..11	nyi	_Paul D. Hanna_
A369675	lambdan	0	n -> PR(0, n, k -> ZV(4).^(k).+(ZV(4).^(n - k)))	0..11	nyi	_Paul D. Hanna_
A369676	lambdan	0	n -> PR(0, n, k -> ZV(5).^(k).+(ZV(5).^(n - k)))	0..10	nyi	_Paul D. Hanna_
A369677	lambdan	0	n -> PR(0, n, k -> ZV(2).^(k).+(ZV(5).^(n - k)))	0..11	nyi	_Paul D. Hanna_
A369678	lambdan	0	n -> PR(0, n, k -> ZV(3).^(k).+(ZV(5).^(n - k)))	0..10	nyi	_Paul D. Hanna_
A369679	lambdan	0	n -> PR(0, n, k -> ZV(3).^(k).+(ZV(4).^(n - k)))	0..11	nyi	_Paul D. Hanna_
A369680	lambdan	0	n -> PR(0, n, k -> ZV(2).^(k).+(ZV(3).^(n - k)))	0..12	nyi	_Paul D. Hanna_
A369681	lambdan	0	n -> PR(0, n, k -> ZV(4).^(k).+(ZV(5).^(n - k)))	0..10	nyi	_Paul D. Hanna_
A369687	lambdan	0	n -> SP(n, p -> ZV(p).^(JF(n/p).phi()  .intValueExact()))	a(n) = Sum_{p|n, p prime} p^phi(n/p)
A369690	multraf	1	(self, n)-> self.s(0).max(self.s(1))	""	new A119288(), new A053669()
A369699	lambdan	0	n -> PR(0, n-1, k -> ZV(k).^(2*k).*(2))
A369700	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(d).*(Functions.CARMICHAEL_LAMBDA.z(n/d)))	a(n) = Sum_{d|n} A008683(d) * A002322(n/d).
A369701	multraf	1	(self, n) -> self.s(0).^(n).-(self.s(1).*(self.s(2)))	""	new A026905(), new A000312(), new A058694()	a(n) = A026905(n)^n - A000312(n)*A058694(n).
A369722	holose	0	[[0],[9],[6,-10,4],[0,1,-1]]	1,3,15	0	1
A369723	holose	0	[[0],[16],[6,-10,4],[0,1,-1]]	1,4,24	0	1
A369724	holose	0	[[0],[25],[6,-10,4],[0,1,-1]]	1,5,35	0	1
A369739	lambdan	0	n -> SP(n, p -> ZV(p).^(JF(n/p).tau()  .intValueExact()))	a(n) = Sum_{p|n, p prime} p^tau(n/p)
A369740	lambdan	0	n -> SP(n, p -> ZV(p).^(JF(n/p).sigma().intValueExact()))	a(n) = Sum_{p|n, p prime} p^sigma(n/p)
A369741	lambdan	0	n -> SP(n, p -> ZV(p).^(JF(n/p).bigOmega()     ))	a(n) = Sum_{p|n, p prime} p^Omega(n/p)
A369742	lambdan	0	n -> SP(n, p -> ZV(p).^(JF(n/p).isSquareFree() ? 1 : 0))	a(n) = Sum_{p|n, p prime} p^(mu(n/p)^2)
A369743	lambdan	0	n -> SP(n, p -> ZV(p).*(JF(n/p).bigOmega()     ))	a(n) = Sum_{p|n, p prime} p * Omega(n/p)
A369744	lambdan	0	n -> SP(n, p -> ZV(p).*(JF(n/p).omega()        ))	a(n) = Sum_{p|n, p prime} p * omega(n/p)
A369745	lambdan	0	n -> SP(n, p -> ZV(p).*(Puma.primePi(n/p)      ))	a(n) = Sum_{p|n, p prime} p * pi(n/p)
A369747	lambdan	0	n -> SP(n, p -> Puma.primePiZ(n/p))	a(n) = Sum_{p|n, p prime} pi(n/p)
A369748	lambdan	0	n -> SP(n, p -> Puma.primeZ(n/p))	a(n) = Sum_{p|n, p prime} prime(n/p)
A369749	lambdan	0	n -> SP(n, p -> ZV(p).*(Puma.prime(n/p)        ))	a(n) = Sum_{p|n, p prime} p * prime(n/p)
A369750	lambdan	0	n -> SP(n, p -> ZV(p).^(Puma.prime(n/p)        ))	a(n) = Sum_{p|n, p prime} p^prime(n/p)
A369751	holose	0	[[0],[3],[6],[3],[0,1]]	1	0	1	Expansion of e.g.f. exp(1 - (1+x)^3).	sign,new	0..22	nyi	_Seiichi Manyama_
A369752	holose	0	[[0],[4],[12],[12],[4],[0,1]]	1	0	1	Expansion of e.g.f. exp(1 - (1+x)^4).
A369753	holose	0	[[0],[5],[20],[30],[20],[5],[0,1]]	1	0	1
A369755	holose	0	[[0],[1],[3],[3],[1],[0,1]]	1	0	1
A369756	holose	0	[[0],[1],[4],[6],[4],[1],[0,1]]	1	0	1
A369779	lambdan	0	n -> RP(n, p -> new Q(JF(n/p).phi  (), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} phi  (n/p) / p
A369782	lambdan	0	n -> SP(n, p -> ZV(n).^(JF(n/p).phi()  .intValueExact()))	a(n) = Sum_{p|n, p prime} n^phi(n/p)
A369801	lingf	2	0,0,1,2,2,2,2,0,0,-1	1,-1,-1,1	0
A369810	simtraf	1	new A284816()	(n, v) -> ZV(n).*(v)
A369854	simtraf	0	new A037031()	v -> v.-(1)	= binomial(n,pi(n)) - 1. - _Alois P. Heinz_, Feb 03 2024
A369857	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A000420()	new A000120()	a(n)=Annn(Annn(n))
A369864	lambdan	0	n -> SP(n, p -> ZV(n).^(JF(n/p).isSquareFree() ? 1 : 0))	a(n) = Sum_{p|n, p prime} n^(mu(n/p)^2)
A369865	lambdan	0	n -> RP(n, p -> new Q(ZV(JF(n/p).isSquareFree() ? 1 : 0), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} mu(n/p)^2 / p
A369866	lambdan	0	n -> SP(n, p -> ZV(n).^(Puma.prime(n/p)    ))	a(n) = Sum_{p|n, p prime} n^prime(n/p)
A369867	lambdan	0	n -> RP(n, p -> new Q(Puma.primeZ(n/p), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} prime(n/p) / p
A369868	lambdan	0	n -> SP(n, p -> ZV(n).^(Puma.primePi(n/p)  ))	a(n) = Sum_{p|n, p prime} n^pi(n/p)
A369869	lambdan	0	n -> RP(n, p -> new Q(Puma.primePiZ(n/p), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} pi(n/p) / p
A369871	simtraf	1	new A024411()	v -> SPF(v)	a(n) = least prime factor of A024411(n)
A369890	muldirs	0	(p, e) -> SEQ.a(e).+(1)	new A053644()	Multiplicativewitha(p^e)=Annn(e)+(\d+)	1	A053644
A369893	lambdan	0	n -> SP(n, p -> ZV(n).^(JF(n/p).tau()  .intValueExact()))	a(n) = Sum_{p|n, p prime} n^tau(n/p)
A369894	lambdan	0	n -> RP(n, p -> new Q(JF(n/p).tau  (), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} tau  (n/p) / p
A369903	lambdan	0	n -> SP(n, p -> ZV(n).^(JF(n/p).sigma().intValueExact()))	a(n) = Sum_{p|n, p prime} n^sigma(n/p)
A369904	lambdan	0	n -> RP(n, p -> new Q(JF(n/p).sigma(), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} sigma(n/p) / p
A369905	lambdan	0	n -> SP(n, p -> ZV(n).^(JF(n/p).omega()    ))	a(n) = Sum_{p|n, p prime} n^omega(n/p)
A369906	holos	0	[[0],[-288,64],[600,-160],[-420,148],[120,-64],[-12,13],[0,-1]]	0,0,1,9,50	0	0	-n*a(n)+   ((13*n-12)*a(n-1)-8*(8*n-15)*a(n-2)+4*(37*n-105)*a(n-3)-40*(4*n-15)*a(n-4)+32*(2*n-9)*a(n-5))
A369907	lambdan	0	n -> RP(n, p -> new Q(ZV(JF(n/p).   omega()), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} omega(n/p) / p
A369908	lambdan	0	n -> SP(n, p -> ZV(n).^(JF(n/p).bigOmega() ))	a(n) = Sum_{p|n, p prime} n^Omega(n/p)
A369909	lambdan	0	n -> RP(n, p -> new Q(ZV(JF(n/p).bigOmega()), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} Omega(n/p) / p
A369911	lambdan	0	n -> SP(n, p -> ZV(p).*(JF(n/p).sopf()         ))	a(n) = Sum_{p|n, p prime} p * sopf(n/p)
A369912	lambdan	0	n -> SP(n, p -> ZV(p).^(JF(n/p).sopf().intValueExact()))	a(n) = Sum_{p|n, p prime} p^sopf(n/p)
A369913	lambdan	0	n -> SP(n, p -> ZV(n).^(JF(n/p).sopf() .intValueExact()))	a(n) = Sum_{p|n, p prime} n^sopf(n/p)
A369914	lambdan	0	n -> RP(n, p -> new Q(JF(n/p).sopf (), ZV(p))).*(ZV(n)).num()	a(n) = n * Sum_{p|n, p prime} sopf (n/p) / p
A369915	lambdan	0	n -> RP(n, p -> new Q(ZV(IU.lcm(p, n/p)), ZV(p))).num()	a(n) = Sum_{p|n, p prime} lcm(p, n/p) / p
A369922	lambdan	0	n -> ZV(8*n*n*n-6*n-1)
A369934	simtraf	0	new A369933()	v -> ZV(v.bitLength() - 1)
A369940	holos	0	[[0],[-27495936,10181376,-1213056,46656],[9922896,-4396536,613656,-27216],[-1296648,719442,-121329,6345],[71880,-54350,11619,-739],[-1400,1798,-531,43],[0,-18,9,-1],[0],[0],[-247463424,91632384,-10917504,419904],[116802000,-49750200,6735960,-291600],[-21592728,10871514,-1705617,84321],[1943568,-1208592,225900,-12996],[-84480,70532,-16398,1126],[1400,-1960,612,-52],[0,18,-9,1]]	1,0,0,1,3,18,127	0	0
A369957	filter	0	new A000040()	(n, p) -> n > 9 && JF(p.-(3)).bigOmega() == 3 && JF(p.+(3)).bigOmega() == 3	Primes p such that p - 3 and p + 3 are triprimes.	nonn,new	1..10000	nyi	_Zak Seidov_ and _Robert Israel_
A369965	tuptraf	0	(n, s) -> s[0].*(s[1])	""	new A165560(), new PrependSequence(0, new A065043(), 0)	a(n) = A165560(n) * A065043(n).
A369966	simtraf	0	new A067019()	v -> v.*(2)	a(n) = 2 * A067019(n).
A369967	simtraf	0	new A003415()	v -> v.mod(Z.FIVE).isZero() ? Z.ONE : Z.ZERO	a(n) = 1 if the arithmetic derivative of n is a multiple of 5, otherwise 0.	nonn	0..100000	nyi	_Antti Karttunen_
A369968	lambdan	0	n -> (n % 5 != 0 && JF(n).arithmeticDerivative().mod(Z.FIVE).isZero()) ? Z.ONE : Z.ZERO	a(n) = 1 if n is not multiple of 5, but its arithmetic derivative is, otherwise 0.	nonn	0..100000	nyi	_Antti Karttunen_
A369969	filnum	1	0	n -> n % 5 != 0 && JF(n).arithmeticDerivative().mod(Z.FIVE).isZero()	Numbers that are not multiples of 5, but their arithmetic derivative is.	nonn	1..67	nyi	_Antti Karttunen_
A369978	dirichinv	1	new SimpleTransformSequence(0, new A083345(), v -> v.+(1))	1	Dirichlet inverse of sequence b(n) = 1+A083345(n), where A083345(n) = n' / gcd(n,n'), and n' stands for the arithmetic derivative of n, A003415.
A370008	lambdan	0	n -> Puma.prevPrimeZ(ZV(3).*(Puma.prime(n)))
A370009	lambdan	0	n -> Puma.nextPrimeZ(ZV(3).*(Puma.prime(n)))
A370010	lambdan	0	n -> Puma.prevPrimeZ(ZV(4).*(Puma.prime(n)))
A370011	lambdan	0	n -> Puma.nextPrimeZ(ZV(4).*(Puma.prime(n)))
A370014	lambdan	0	n -> PR(0, n, k -> Z2(k).+(Z2(2*(n - k))))	a(n) = Product_{k=0..n} (2^k + 4^(n-k)).	nonn	0..11	nyi	_Paul D. Hanna_
A370054	lambdan	0	n -> FA(3*n + 1).*(2)./(FA(2*n + 2))	a(n) = 2*(3*n+1)!/(2*n+2)!.	nonn,new	0..17	nyi	_Seiichi Manyama_
A370055	lambdan	0	n -> FA(3*n + 2).*(3)./(FA(2*n + 3))	a(n) = 3*(3*n+2)!/(2*n+3)!.	nonn,new	0..17	nyi	_Seiichi Manyama_
A370056	lambdan	0	n -> FA(4*n + 1).*(2)./(FA(3*n + 2))	a(n) = 2*(4*n+1)!/(3*n+2)!.	nonn,new	0..16	nyi	_Seiichi Manyama_
A370057	lambdan	0	n -> FA(4*n + 2).*(3)./(FA(3*n + 3))	a(n) = 3*(4*n+2)!/(3*n+3)!.	nonn,new	0..16	nyi	_Seiichi Manyama_
A370058	lambdan	0	n -> FA(4*n + 3).*(4)./(FA(3*n + 4))	a(n) = 4*(4*n+3)!/(3*n+4)!.	nonn,new	0..16	nyi	_Seiichi Manyama_
A370070	lambdan	0	n -> SU(0, n - 1, i -> BI((1 << i) + (1 << (n - i - 1)) - 2, (1 << i) - 1))	a(n) = Sum_{i=0..n-1} binomial(2^i+2^(n-i-1)-2,2^i-1).	nonn,new	0..14	nyi	_Chai Wah Wu_
A370074	multrar	0	(self, n) -> self.a(n - 1).*(9).-(self.a(n - 2).*(28)).+(self.a(n - 3).*(35)).-(self.a(n - 4).*(15)).+(self.a(n - 5))	"1, 3, 9, 28, 90"	a(n) = 9*a(n-1) - 28*a(n-2) + 35*a(n-3) - 15*a(n-4) + a(n-5) for n >= 5.
A370076	filtpos	1	1	new A005361()	v -> v.isProbablePrime()	Numbers k such that A005361(k) is prime.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A370082	simtraf	1	new A004613()	v -> v.*(7).-(3)	.
A370097	lambdan	0	n -> SU(0, n, k -> BI(3*n, k).*(BI(3*n -k- 1, n - k)))	a(n) = Sum_{k=0..n} binomial(3*n, k) * binomial(3*n -k- 1, n - k).	nonn,new	0..19	nyi	_Seiichi Manyama_
A370098	lambdan	0	n -> SU(0, n, k -> BI(3*n, k).*(BI(4*n -k- 1, n - k)))	a(n) = Sum_{k=0..n} binomial(3*n, k) * binomial(4*n -k- 1, n - k).	nonn,new	0..18	nyi	_Seiichi Manyama_
A370099	lambdan	0	n -> SU(0, n, k -> BI(2*n, k).*(BI(3*n -k- 1, n - k)))	a(n) = Sum_{k=0..n} binomial(2*n, k) * binomial(3*n -k- 1, n - k).	nonn,new	0..20	nyi	_Seiichi Manyama_
A370100	lambdan	0	n -> SU(0, n, k -> BI(4*n, k).*(BI(2*n -k- 1, n - k)))	a(n) = Sum_{k=0..n} binomial(4*n, k) * binomial(2*n -k- 1, n - k).	nonn,new	0..19	nyi	_Seiichi Manyama_
A370101	lambdan	0	n -> SU(0, n, k -> BI(4*n, k).*(BI(4*n -k- 1, n - k)))	a(n) = Sum_{k=0..n} binomial(4*n, k) * binomial(4*n -k- 1, n - k).	nonn,new	0..18	nyi	_Seiichi Manyama_
A370102	lambdan	0	n -> SU(0, n, k -> BI(4*n, k).*(BI(5*n -k- 1, n - k)))	a(n) = Sum_{k=0..n} binomial(4*n, k) * binomial(5*n -k- 1, n - k).	nonn,new	0..17	nyi	_Seiichi Manyama_
A370103	lambdan	0	n -> SU(0, n, k -> BI(2*n + k - 1, k).*(BI(4*n - k - 1, n - k)).*(Z_1(k)))	a(n) = Sum_{k=0..n} (-1)^k * binomial(2*n + k - 1, k) * binomial(4*n - k - 1, n - k).	nonn,new	0..23	nyi	_Seiichi Manyama_
A370104	lambdan	0	n -> SU(0, n, k -> BI(2*n + k - 1, k).*(BI(6*n - k - 1, n - k)).*(Z_1(k)))	a(n) = Sum_{k=0..n} (-1)^k * binomial(2*n + k - 1, k) * binomial(6*n - k - 1, n - k).	nonn,new	0..20	nyi	_Seiichi Manyama_
A370105	lambdan	0	n -> SU(0, n, k -> BI(n + k - 1, k  ).*(BI(5*n - k - 1, n - k)).*(Z_1(k)))	a(n) = Sum_{k=0..n} (-1)^k * binomial(n + k - 1, k  ) * binomial(5*n - k - 1, n - k).	nonn,new	0..20	nyi	_Seiichi Manyama_
A370106	lambdan	0	n -> SU(0, n, k -> BI(2*n, k        ).*(BI(3*n        , n - k)).*(Z_1(k)))	a(n) = Sum_{k=0..n} (-1)^k * binomial(2*n, k        ) * binomial(3*n        , n - k).	sign,new	0..25	nyi	_Seiichi Manyama_
A370107	serrev	0	1	[0,1]	[1,1,-2,-2,1,1]	Expansion of (1/x) * Series_Reversion( x / ((1-x)^2 * (1+x)^3) ). x^5+x^4-2*x^3-2*x^2+x+1
A370109	lambdan	0	n -> ZV(n).^(2).*(2*n*n - 23)	nyi Ft	a(n) = n^2*(2*n^2-23)
A370110	lingf	1	0,0,0,0,0,24,132,12,-44,72,112,-284,168,192,-152,-120,80	1,-5,10,-10,5,-1	0						Number of chordless cycles in the complement of the n X n antelope graph.
A370118	simtraf	0	new A003415()	v -> v.mod(Z.NINE).isZero() ? Z.ONE : Z.ZERO	a(n) = 1 if the arithmetic derivative of n is a multiple of 9, otherwise 0.	nonn,new	0..100000	nyi	_Antti Karttunen_
A370119	filnum	1	0	n -> JF(n).arithmeticDerivative().mod(Z.NINE).isZero()	Numbers whose arithmetic derivative is a multiple of 9.	nonn,new	1..66	nyi	_Antti Karttunen_
A370122	simtraf	0	new A068346()	v -> v.mod(Z.THREE).isZero() ? Z.ONE : Z.ZERO	a(n) = 1 if the second arithmetic derivative of n is a multiple of 3, otherwise 0.	nonn,new	0..100000	nyi	_Antti Karttunen_
A370123	filnum	1	0	n -> JF(JF(n).arithmeticDerivative()).arithmeticDerivative().mod(Z.THREE).isZero()		Numbers whose second arithmetic derivative (A068346) is a multiple of 3.	nonn,new	1..74	nyi	_Antti Karttunen_
A370145	holos	0	[[0],[-32,8],[-16,6],[4,-3],[0,-1]]	1	0	0
A370147	holos	0	[[0],[-1372,343],[-1064,399],[-76,57],[0,1]]	1	0	0
A370156	filter	1	new A000040()	p -> !p.*(3).+(2).isProbablePrime() && (p.mod(3) == 2 && p.-(2)./(3).isProbablePrime())	Primes p such that (p-2)/3 is prime and 3*p+2 is composite.	nonn,new	1..47	nyi	_Clark Kimberling_
A370157	filter	1	new A000040()	p -> p.equals(Z.TWO) || !p.*(3).+(2).isProbablePrime() && (p.mod(3) != 2 || !p.-(2)./(3).isProbablePrime())	Primes p such that both 3p+2 and (p-2)/3 are composite or 0.	nonn,new	1..53	nyi	_Clark Kimberling_
A370159	lambdan	0	n -> { final int s = 2; final int t = 2; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370160	lambdan	0	n -> { final int s = 2; final int t = 2; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370170	lambdan	0	n -> { final int s = 2; final int t = 3; final int u = 0;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370171	lambdan	0	n -> { final int s = 2; final int t = 3; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370172	lambdan	0	n -> { final int s = 2; final int t = 3; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370175	lingf	0	1,-1,-1	1,-6,0,5	0
A370176	lingf	0	1,-1,-1	1,-7,0,6	0
A370177	lingf	0	1,-1,-1	1,-8,0,7	0
A370178	lingf	0	1,-1,-1	1,-9,0,8	0
A370180	lambdan	1	n -> { final Z p = ZV(3); final int e = ZUtils.valuation(ZV(n), p); final Z pe = p.^(e); return pe.*(p.-(1).gcd(ZV(n)./(pe))); }	* p^e*gcd(p-1, n/p^e)
A370181	lambdan	1	n -> { final Z p = ZV(5); final int e = ZUtils.valuation(ZV(n), p); final Z pe = p.^(e); return pe.*(p.-(1).gcd(ZV(n)./(pe))); }	* p^e*gcd(p-1, n/p^e)
A370182	lambdan	1	n -> { final Z p = ZV(7); final int e = ZUtils.valuation(ZV(n), p); final Z pe = p.^(e); return pe.*(p.-(1).gcd(ZV(n)./(pe))); }	* p^e*gcd(p-1, n/p^e)
A370183	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370184	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370185	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 0;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370186	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370187	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI((t+u)*n-k, n-s*k))); }	
A370188	simtraf	0	new A114052()	(n, v) -> v.^(2).-(1)./(27).sqrt()./(5)	a(n) = sqrt((A114052(n)^2 - 1)/27)/5.
A370189	lambdan	0	n -> new Zi(1, n).pow(n).im()	Imaginary part of (1 + n*i)^n, where i is the imaginary unit.
A370190	filnum	1	1	n -> ZV(6).^(n - 1).+(n).IPP()
A370191	holos	0	[[0],[-20],[8],[-1]]	1,4	0	0	{8, -20}, {1, 4}
A370192	holos	0	[[0],[-20],[8],[-1]]	0,-2	0	0	{8, -20}, {1, 4}
A370194	lambdan	0	n -> { final int s = 2; final int t = 2; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI(u*n, n-s*k))); }	
A370195	lambdan	0	n -> { final int s = 2; final int t = 2; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI(u*n, n-s*k))); }	
A370196	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI(u*n, n-s*k))); }	
A370200	lambdan	2	n -> new Q(FA(n).^(2), FA(n - 2).*(2).*(ZV(n).^(n))).num()	a(n) = numerator((n!)^2/(2*(n-2)!*n^n)).	nonn,frac,new	2..25	nyi	_Stefano Spezia_
A370201	lambdan	2	n -> new Q(FA(n).^(2), FA(n - 2).*(2).*(ZV(n).^(n))).den()	a(n) = denominator((n!)^2/(2*(n-2)!*n^n)).	nonn,frac,new	2..22	nyi	_Stefano Spezia_
A370212	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 1;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI(u*n, n-s*k))); }	
A370213	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 2;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI(u*n, n-s*k))); }	
A370214	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 1;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI(u*n, n-s*k))); }	
A370215	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 2;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI(u*n, n-s*k))); }	
A370216	lambdan	0	n -> { final int s = 3; final int t = 3; final int u = 1;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI(u*n, n-s*k))); }	
A370217	lambdan	0	n -> { final int s = 3; final int t = 3; final int u = 2;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI(u*n, n-s*k))); }	
A370218	lambdan	0	n -> { final int s = 3; final int t = 3; final int u = 3;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI(u*n, n-s*k))); }	
A370232	trilamb	0	0	0	() -> BI(n + k, 2*k).square()	Triangle read by rows. T(n, k) = binomial(n + k, 2*k)^2.	nonn,tabl,new	0..54	nyi	_Peter Luschny_
A370233	trilamb	0	0	0	() -> BI(n + k + 1, 2*k).^(2).*(n - k + 1)./(n + k + 1)	Triangle read by rows. T(n, k) = (n - k + 1) * binomial(n + k + 1, 2*k)^2 / (n + k + 1).	nonn,tabl,new	0..54	nyi	_Peter Luschny_
A370234	rowsum	0	new A370233()	a(n) = hypergeom([-n, 1 + n, 2 + n, -1 - n], [1/2, 1/2, 1], 1/16). Row sums of A370233.	nonn,new	0..22	nyi	_Peter Luschny_
A370238	multraf	0	(self, n) -> self.s(0).+(self.s(1))	""	new A000326(), new A008594()	a(n)=Annn(n)+Annn(n)
A370242	lambdan	0	n -> { final int s = 2; final int t = 1; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370243	lambdan	0	n -> { final int s = 2; final int t = 2; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370244	lambdan	0	n -> { final int s = 2; final int t = 3; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370245	lambdan	0	n -> { final int s = 2; final int t = 3; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370246	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370247	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370248	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 1;  return SU(0, n/s, k -> BI(t*n, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370249	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 2;  return SU(0, n/s, k -> BI(t*n, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370252	simtraf	1	new A005729()	(n, v) -> ZV(n).*(v)
A370253	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A001147(), new A053871()	a(n) = A001147(n) -   A053871(n).
A370256	muldirs	0	(p, e) -> SEQ.a(e)	new A103221()	Multiplicativewitha(p^e)=Annn(e)		A103221
A370269	lambdan	0	n -> { final int s = 2; final int t = 3; final int u = 1;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370270	lambdan	0	n -> { final int s = 2; final int t = 3; final int u = 2;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370271	lambdan	0	n -> { final int s = 2; final int t = 3; final int u = 3;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370272	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 1;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370273	lambdan	0	n -> { final int s = 3; final int t = 1; final int u = 2;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370274	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 1;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370275	lambdan	0	n -> { final int s = 3; final int t = 2; final int u = 2;  return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((u+1)*n-s*k-1, n-s*k))); }	
A370280	lambdan	0	n -> SU(0, n, k -> BI(n+k-1, k).*(BI(3*n+k-1, n-k)))	
A370281	lambdan	0	n -> SU(0, n/3, k -> BI(n+k-1, k).*(BI(3*n-k-1, n-3*k)))	
A370282	lambdan	0	n -> SU(0, n, k -> BI(n+k-1, k).*(BI(4*n+2*k-1, n-k)))	
A370283	lambdan	0	n -> SU(0, n/2, k -> BI(n+k-1, k).*(BI(4*n+k-1, n-2*k)))	
A370284	lambdan	0	n -> SU(0, n/3, k -> BI(n+k-1, k).*(BI(4*n-1, n-3*k)))	
A370285	lambdan	0	n -> SU(0, n/3, k -> BI(n, k).*(BI(2*n-2*k, n-3*k)))	
A370286	lambdan	0	n -> SU(0, n/2, k -> BI(n, k).*(BI(3*n-3*k, n-2*k)))	
A370287	lambdan	0	n -> SU(0, n/3, k -> BI(n, k).*(BI(3*n-3*k, n-3*k)))	
A370296	dirichcon2	1	new A000005()	1	new A323308()	1	Dirichlet convolution of A000005 and A323308.				Inverse Moebius transform of A322327.
A370297	dirichcon2	1	new A034444()	1	new A048691()	1	Dirichlet convolution of A034444 and A048691.				Inverse Moebius transform of A322328.
A370299	lingf	1	0,0,0,171,405	1,-13,39,-27	0						Number of chordless cycles in the complement of the n-Sierpinski gasket graph.
A370304	lingf	0	1,-1,1,1	1,-3,0,5,0,-3,-1	0						Number of multiplex juggling cards with n balls and capacity 2.
A370306	lingf	0	1,-2,1,4,3,0,-3,-2,-1	1,-4,2,4,7,-8,-12,-8,7,12,10,4,1	0						Number of multiplex juggling cards with n balls and capacity 3.
A370307	simtraf	0	new A002623()	(n, v) -> v.+(n)	a(n) = A002623(n) + n.	nonn,new	0..50	nyi	_Yavuz Oruc_
A370357	holos	0	[[0],[18,-27,9],[18,-36,18],[0,-9,9],[-2]]	1,0,9	0	0
A370358	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A025035(), new A370357()	a(n) = A025035(n) - A370357(n).
A370359	lambdan	0	n -> new Zi(n, n).pow(n).im()	Imaginary part of (n + n*i)^n where i = sqrt(-1).
A370369	lambdan	0	n -> FA(n).+(SU(1, n - 1, k -> FA(k).*(n - k)))	a(n) = n! + Sum_{k=1..n-1} (n-k)*k!
A370377	lingf	0	1,3,0,0,0,-1	1,0,-2,0,-1,0,1	0						a(n) is the number of symmetrical linear hydrocarbon chains with n C-C bonds.
A370391	multrar	0	(self, n) -> self.a(n - 1).*(9).-(self.a(n - 2).*(28)).+(self.a(n - 3).*(35)).-(self.a(n - 4).*(15)).+(self.a(n - 5))	"1, 7, 35, 154, 636"	a(n) = 9*a(n-1) - 28*a(n-2) + 35*a(n-3) - 15*a(n-4) + a(n-5).
A370418	trilamb0	0	(n, k) -> FA(n - k).*(FA(n + k))	T(n, k) = (n - k)! * (n + k)!
A370419	arrlamb	0	0	0	1	(n, k) -> RQ(0, n - 1, j -> new Q(2*j + k, 2)).*(Z2(n)).num()	
A370458	partprod	0	new A051179()	Partial products of A051179
A370462	lambdan	0	n -> RU(1, n  , k -> new Q(FA(3*k-2), FA(2*k-1)).*(S1(n, k))).num()
A370463	lambdan	0	n -> RU(1, n  , k -> new Q(FA(4*k-2), FA(3*k-1)).*(S1(n, k))).num()
A370471	lambdan	0	n -> RU(0, n  , k -> BI(new Q(n+5*k+1*2, 2), n)    .*(BI(n, k))./(new Q(n+5*k+2, 2)))  .num()
A370472	lambdan	0	n -> RU(0, n  , k -> BI(new Q(n+5*k+1, 2), n)  .*(BI(n, k))./(n+5*k+1))            .num()
A370473	lambdan	0	n -> RU(0, n  , k -> BI(new Q(n*2+5*k+1, 2), n)    .*(BI(n, k))./(2*n+5*k+1))          .num()
A370474	lambdan	0	n -> RU(0, n  , k -> BI(new Q(3*n+3*k+1*2, 2), n)  .*(BI(n, k))./(new Q(3*n+3*k+2, 2))).num()
A370475	lambdan	0	n -> RU(0, n  , k -> BI(new Q(3*n+5*k+1*2, 2), n)  .*(BI(n, k))./(new Q(3*n+5*k+2, 2))).num()
A370476	lambdan	0	n -> RU(0, n  , k -> BI(new Q(3*n+5*k+1, 2), n).*(BI(n, k))./(3*n+5*k+1))          .num()
A370479	lambdan	0	n -> { final int r=2; final int s=2; final int t=2; final int u=0; return RU(0, n, k -> new Q(BI(t*k+u*(n-k)+r, k)    .*(BI(n+(s-1)*k-1, n-k)), ZV(t*k+u*(n-k)+r)) ).*(r).num()  ; }
A370480	lambdan	0	n -> { final int r=3; final int s=2; final int t=2; final int u=0; return RU(0, n, k -> new Q(BI(t*k+u*(n-k)+r, k)    .*(BI(n+(s-1)*k-1, n-k)), ZV(t*k+u*(n-k)+r)) ).*(r).num()  ; }
A370482	multraf	0	(self, n) -> self.s(0).+(self.s(1))	""	new A010051(), new A059841()	a(n)=Annn(n)+Annn(n)
A370485	tuptraf	0	(n, s) -> s[0].-(s[1])	""	new A095816(), new A002464()	a(n) = A095816(n) -   A002464(n).
A370486	filter	1	new A116260()	v -> !v.+(1).mod(Z.TEN).isZero()	Terms in A116260 that are not of the form 10^d-1.	nonn,base,new	1..44	nyi	_Chai Wah Wu_
A370487	lambdan	0	n -> n == 0 ? ZV(1) : BI(2*n - 1, n).*(3).-(2)
A370492	filtpos	1	1	new A071178()	(k, v) -> v.equals(JF(k).largestPrimeFactor())	Numbers k such that A006530(k) = A071178(k).	nonn,new	1..10000	nyi	_Amiram Eldar_
A370493	filtpos	1	1	new A051903()	(k, v) -> v.equals(JF(k).largestPrimeFactor())	Numbers k such that A006530(k) = A051903(k).	nonn,new	1..3000	nyi	_Amiram Eldar_
A370508	lambdan	0	n -> SU(0, n/4, k -> Z_1(k).*(FA(n - 3*k)).*(BI(n - 3*k, k))     )
A370509	lambdan	0	n -> SU(0, n/3, k ->         (FA(n - 2*k)).*(BI(n - 2*k, k))     )
A370510	lambdan	0	n -> SU(0, n/4, k ->         (FA(n - 3*k)).*(BI(n - 3*k, k))     )
A370511	lambdan	0	n -> SU(0, n/3, k ->         (FA(n - 3*k)).*(BI(n - 2*k - 1, k)) )
A370524	lambdan	0	n -> { final int k=1; final int q=2; return RU(0, n/q - k, j -> new Q(Z_1(j).*(FA(n - (q - 1)*(j + k))), FA(j).*(FA(k)))).num(); }
A370525	lambdan	0	n -> { final int k=1; final int q=3; return RU(0, n/q - k, j -> new Q(Z_1(j).*(FA(n - (q - 1)*(j + k))), FA(j).*(FA(k)))).num(); }
A370528	lambdan	0	n -> { final int k=2; final int q=3; return RU(0, n/q - k, j -> new Q(Z_1(j).*(FA(n - (q - 1)*(j + k))), FA(j).*(FA(k)))).num(); }
A370529	lambdan	0	n -> { final int k=3; final int q=2; return RU(0, n/q - k, j -> new Q(Z_1(j).*(FA(n - (q - 1)*(j + k))), FA(j).*(FA(k)))).num(); }
A370530	lambdan	0	n -> { final int k=3; final int q=3; return RU(0, n/q - k, j -> new Q(Z_1(j).*(FA(n - (q - 1)*(j + k))), FA(j).*(FA(k)))).num(); }
A370532	lingf	1	0,1,3,1,5	1,-2,1	0						Integers m > 0 such that m^m and m^(m^m) have the same rightmost m digits.
A370557	filnum	1	1	n -> ZV(5).^(n - 1).+(n).IPP()
A370558	lingf	0	1,1,0,-1,2,0,1,-1,1,2,-1,-1,3,1,-2,1,1,2,-2,1,1,1,-2,2,1	1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1	0
A370559	lingf	0	1,2,2,1,2,1,2,2,1,2,1,1,3,2,1,2,1,2,2,2,2,1,1,2,2,1,2,1	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1	0
A370560	lingf	0	3,-1,-1,1,2,0,-1,1,2,-1,-1,2,2,-2,0,1,2,-1,0,0,2,-1,1,0,1	1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1	0
A370561	lingf	0	1,-1,1,0,1,-1,1,-1,2,-1,2,-2,1,0,2,-2,2,-1,1,-1,2,0,0,-1,2	1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1	0
A370565	lambdan	1	n -> { final Z p = ZV(3); final int e = ZUtils.valuation(ZV(n), p); final Z pe = p.^(e); return pe.*(p.-(1).gcd(ZV(n)./(pe))).*(n); }	* p^e*gcd(p-1, n/p^e)
A370566	lambdan	1	n -> { final Z p = ZV(5); final int e = ZUtils.valuation(ZV(n), p); final Z pe = p.^(e); return pe.*(p.-(1).gcd(ZV(n)./(pe))).*(n); }	* p^e*gcd(p-1, n/p^e)
A370567	lambdan	1	n -> { final Z p = ZV(7); final int e = ZUtils.valuation(ZV(n), p); final Z pe = p.^(e); return pe.*(p.-(1).gcd(ZV(n)./(pe))).*(n); }	* p^e*gcd(p-1, n/p^e)
A370579	lambdan	1	n -> RD(n, d -> new Q(Z.ONE, FA(d - 1))).*(FA(n)).num()	a(n) = n    ! * Sum_{d|n} 1/(d-1)!.	nonn,easy,new	1..22	nyi	_Seiichi Manyama_
A370580	lambdan	1	n -> RD(n, d -> new Q(ZV(d), FA(d - 1))).*(FA(n - 1)).num()	a(n) = (n-1)! * Sum_{d|n} d/(d-1)!.	nonn,easy,new	1..22	nyi	_Seiichi Manyama_
A370581	lambdan	1	n -> RD(n, d -> new Q(ZV(d), FA(d).*(FA(n / d)))).*(FA(n    )).num()	a(n) = n    ! * Sum_{d|n} d/(d! * (n/d)!).	nonn,easy,new	1..26	nyi	_Seiichi Manyama_
A370596	filtpos	1	1	new A007814()	(k, v) -> v.isProbablePrime()	Numbers k such that A007814(k) is a prime number.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A370597	filtpos	1	1	new A007814()	(k, v) -> ((k & 1) == 0) && v.gcd(ZV(k)).equals(Z.ONE)	Even numbers k such that gcd(k, A007814(k)) = 1.	nonn,easy,new	1..10000	nyi	_Amiram Eldar_
A370602	lambdan	1	n -> RD(n, d -> new Q(Z.ONE, FA(d - 1).*(ZV(n / d).^(d - 1))).*(FA(n))).num()	a(n) = n    ! * Sum_{d|n} 1/((d-1)! * (n/d)^(d-1)).	nonn,new	1..22	nyi	_Seiichi Manyama_
A370603	lambdan	1	n -> RD(n, d -> new Q(Z.ONE, FA(d - 1).*((FA(n / d).^(d - 1))))).*(FA(n)).num()	a(n) = n    ! * Sum_{d|n} 1/((d-1)! * (n/d)!^(d-1)).	nonn,new	1..22	nyi	_Seiichi Manyama_
A370604	lambdan	1	n -> RD(n, d -> new Q(Z.ONE, FA(d - 1).*(ZV(n / d).^(d)))).*(FA(n)).num()	a(n) = n    ! * Sum_{d|n} 1/((d-1)! * (n/d)^d).	nonn,new	1..23	nyi	_Seiichi Manyama_
A370605	lambdan	1	n -> RD(n, d -> new Q(Z.ONE, FA(d - 1).*(FA(n / d).^(d)))).*(FA(n)).num()	a(n) = n    ! * Sum_{d|n} 1/((d-1)! * (n/d)!^d).	nonn,new	1..29	nyi	_Seiichi Manyama_
A370608	lambdan	1	n -> RD(n, d -> new Q(Z.ONE, FA(d - 1).*(FA(n / d).^(d - 1)))).*(FA(n - 1)).num()	a(n) = (n-1)! * Sum_{d|n} 1/((d-1)! * (n/d)!^(d-1)).	nonn,new	1..23	nyi	_Seiichi Manyama_
A370616	lambdan	0	n -> SU(0, n/2, k -> BI(  n + k - 1, k).*(BI((1 - 1 + 1)*n - (2-1)*k - 1, n - 2*k)))
A370617	lambdan	0	n -> SU(0, n/2, k -> BI(2*n + k - 1, k).*(BI(3*n - k - 1, n - 2*k)))	BI((\d+)*n+k-(\d+),k)*binomial((\d+)*n-k-(\d+),n-(\d+)*k)	3,1,2
A370618	lambdan	0	n -> SU(0, n/2, k -> BI(2*n + k - 1, k).*(BI(2*n - k - 1, n - 2*k)))	BI((\d+)*n+k-(\d+),k)*binomial((\d+)*n-k-(\d+),n-(\d+)*k)	2,1,2
A370619	lambdan	0	n -> SU(0, n/2, k -> BI(2*n + k - 1, k).*(BI((2 - 2 + 1)*n - (2-1)*k - 1, n - 2*k)))
A370620	lambdan	0	n -> SU(0, n/2, k -> BI(3*n + k - 1, k).*(BI(4*n - k - 1, n - 2*k)))	BI((\d+)*n+k-(\d+),k)*binomial((\d+)*n-k-(\d+),n-(\d+)*k)	4,1,2
A370621	lambdan	0	n -> SU(0, n/2, k -> BI(3*n + k - 1, k).*(BI(3*n - k - 1, n - 2*k)))	BI((\d+)*n+k-(\d+),k)*binomial((\d+)*n-k-(\d+),n-(\d+)*k)	3,1,2
A370622	lambdan	0	n -> SU(0, n/2, k -> BI(3*n + k - 1, k).*(BI(2*n - k - 1, n - 2*k)))	BI((\d+)*n+k-(\d+),k)*binomial((\d+)*n-k-(\d+),n-(\d+)*k)	2,1,2
A370623	lambdan	0	n -> SU(0, n/2, k -> BI(3*n + k - 1, k).*(BI((3 - 3 + 1)*n - (2-1)*k - 1, n - 2*k)))
A370624	lambdan	0	n -> SU(0, n/3, k -> BI(  n + k - 1, k).*(BI((1 - 0 + 1)*n - (3-1)*k - 1, n - 3*k)))
A370625	lambdan	0	n -> SU(0, n/3, k -> BI(  n + k - 1, k).*(BI((1 - 1 + 1)*n - (3-1)*k - 1, n - 3*k)))
A370626	lambdan	0	n -> SU(0, n/3, k -> BI(2*n + k - 1, k).*(BI((2 - 0 + 1)*n - (3-1)*k - 1, n - 3*k)))
A370652	lambdan	0	n -> { final int k=2; final int q=4; return RU(0, n/q - k, j -> new Q(Z_1(j).*(FA(n - (q - 1)*(j + k))), FA(j).*(FA(k)))).num(); }
A370653	lambdan	0	n -> { final int k=3; final int q=4; return RU(0, n/q - k, j -> new Q(Z_1(j).*(FA(n - (q - 1)*(j + k))), FA(j).*(FA(k)))).num(); }
A370657	filnum	1	1	k -> ZV(7).^(k).+(k).IPP()	Numbers k such that 7^k + k is prime.	nonn,hard,more	1..4
A370658	filnum	1	1	k -> ZV(3).^(k).+(3*k)./(3).IPP()	Numbers k such that (3^k + 3*k)/3 is prime.	nonn,hard,more	1..12
A370659	filnum	1	1	k -> ZV(4).^(k).+(4*k)./(4).IPP()	Numbers k such that (4^k + 4*k)/4 is prime.	nonn,hard,more	1..8
A370660	filnum	1	1	k -> ZV(7).^(k).+(7*k)./(7).IPP()	Numbers k such that (7^k + 7*k)/7 is prime.	nonn,hard,more	1..8
A370661	filnum	1	1	k -> ZV(8).^(k).+(8*k)./(8).IPP()	Numbers k such that (8^k + 8*k)/8 is prime.	nonn,hard,more	1..5
A370662	filtpos	1	0	new A000108()	(k, v) -> v.mod(3) != 0	Numbers m such that 3 does not divide the m-th Catalan number A000108(m); m such that A067397(m) = 0.	nonn,easy
A370663	filnum	1	1	k -> ZV(9).^(k).+(9*k)./(9).IPP()	Numbers k such that (9^k + 9*k)/9 is prime.	nonn,hard,more	1..9
A370664	filnum	1	0	k -> ZV(7).^(k).+(7*k + 1).IPP()	Numbers k such that  7^k + 7*k + 1 is prime.	nonn,more,hard	1..7
A370668	lambdan	0	n -> SD(n ,d -> FA(d).*(BI(d, n/d - 1)))
A370669	lambdan	0	n -> SU(0, n/2, k -> Z_1(k).*(FA(n - 2*k)).*(BI(n - k - 1, k))   )	'
A370670	lambdan	0	n -> SU(0, n/3, k -> Z_1(k).*(FA(n - 3*k)).*(BI(n - 2*k - 1, k)) )
A370671	lambdan	0	n -> SU(2, n - 1, i -> ZV(n).^(i - 2).*(i))	a(n) = Sum_{i=2..n-1} i*n^(i-2).	nonn,new	0..21	nyi	_Chai Wah Wu_
A370674	lambdan	0	n -> SD(n, d -> Z_1(d - 1).*(FA(d + n/d - 1))./(FA(d - 1)))
A370695	lambdan	0	n -> RU(0, n, k -> new Q(BI(n - 1, n - k).*(BI(3*k + 4, k)), ZV(3*k + 4))).*(ZV(4)).num()
A370696	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(1) , FA(k))).*(FA(n)).num()
A370699	lambdan	0	n -> RU(0, n/3, k -> new Q(Z_1(k), ZV(6).^(k).*(FA(k)))).*(FA(n)).num()
A370700	lambdan	0	n -> RU(0, n/2, k -> new Q(Z_1(k), FA(k))).*(FA(n)).num()
A370701	lambdan	0	n -> RU(0, n/3, k -> new Q(Z_1(k), FA(k))).*(FA(n)).num()
A370704	rowsum	0	new A370707()	 a(n) = Sum_{k=0..n} k!*binomial(n, k)*Pochhammer(n, k). Row sums of â¬370707.
A370706	trilamb0	0	(n, k) -> BI(n, k).*(PR(0, k - 1, j -> ZV(j + n)))
A370707	trilamb0	0	(n, k) -> Z_1(k).*(PR(0, k - 1, j -> ZV(j - n).*(j + n)))
A370720	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(3*k + 4, k)), ZV(3*k + 4))).*(ZV(4)).num()
A370779	holos	0	[[0],[-500,125],[-280,105],[28,-21],[0,-1]]	1	0	0	(-21*n+7)*a(n)+(125*n-375)*a(n-2)+(105*n-175)*a(n-1)+(-n-1)*a(n+1) = 0
A370780	holos	0	[[0],[-19652,4913],[-12376,4641],[364,-273],[0,-1]]	1	0	0	(-273*n+91)*a(n)+(4913*n-14739)*a(n-2)+(4641*n-7735)*a(n-1)+(-n-1)*a(n+1) = 0
A370781	holos	0	[[0],[-16,8],[8,-6],[2,-3],[0,1]]	1	0	0	(-3*n-1)*a(n)+(8*n-8)*a(n-2)+(-6*n+2)*a(n-1)+(n+1)*a(n+1) = 0
A370782	holos	0	[[0],[-250,125],[140,-105],[14,-21],[0,1]]	1	0	0	(-21*n-7)*a(n)+(125*n-125)*a(n-2)+(-105*n+35)*a(n-1)+(n+1)*a(n+1) = 0
A370795	filter	1	new A001844()	v -> isPDP(4)	Centered square numbers which are products of four distinct primes (or tetraprimes).
A370833	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A004709()	new A006530()	a(n)=Annn(Annn(n))
A370834	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A001694()	new A006530()	a(n)=Annn(Annn(n))		D006530,A001694
A370835	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A036966()	new A006530()	a(n)=Annn(Annn(n))		D006530,A036966
A370836	lambdan	0	n -> RU(0, n/2, k -> new Q(Z_1(k).*(BI(n, 2*k)          ).*(BI(3*k, k))            , ZV(2*k+1)            )).num()
A370837	lambdan	0	n -> RU(0, n/3, k -> new Q(Z_1(k).*(BI(n, 3*k)          ).*(BI(4*k, k))            , ZV(3*k+1)            )).num()
A370838	lambdan	0	n -> RU(0, n/4, k -> new Q(Z_1(k).*(BI(n, 4*k)          ).*(BI(5*k, k))            , ZV(4*k+1)            )).num()
A370839	lambdan	0	n -> RU(0, n/2, k -> new Q(Z_1(k).*(BI(2*n - 2*k + 1, k)).*(BI(2*n - 2*k, n - 2*k)), ZV(n + 1)            )).num()
A370840	lambdan	0	n -> RU(0, n/3, k -> new Q(Z_1(k).*(BI(2*n - 3*k + 1, k)).*(BI(2*n - 3*k, n - 3*k)), ZV(n + 1)            )).num()
A370841	lambdan	0	n -> RU(0, n/4, k -> new Q(Z_1(k).*(BI(2*n - 4*k + 1, k)).*(BI(2*n - 4*k, n - 4*k)), ZV(n + 1)            )).num()
A370844	lambdan	0	n -> RU(0, n, k -> new Q(BI(n, k).*(BI(5*k + 3, k)), ZV(k + 1))).num()
A370845	lambdan	1	n -> ZV(n - 2).^(n).*(FA(n))	a(n) = (n-2)^n*n!.	sign,easy	1..14	nyi	_Eric W. Weisstein_
A370846	lingf	1	0,0,24,48,-192	1,-2,-7,-8,16	0						a(n) = 5 + 4^n + 3*((-i*sqrt(7) - 3)^n + (i*sqrt(7) - 3)^n)/2^n.
A370847	lambdan	1	n -> ZV(n - 1).*(FA(n)).*(FA(n - 1))	a(n) = (n-1)*n!*(n-1)!.	nonn,easy	1..17	nyi	_Eric W. Weisstein_
A370853	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] <  c[1] && c[1] <  c[2]; }
A370854	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] <= c[1] && c[1] <  c[2]; }
A370855	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] <  c[1] && c[1] <= c[2]; }
A370856	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] <= c[1] && c[1] <= c[2]; }
A370859	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] <  c[1] && c[1] >  c[2]; }
A370860	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] <= c[1] && c[1] >  c[2]; }
A370861	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] <  c[1] && c[1] >= c[2]; }
A370862	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] <= c[1] && c[1] >= c[2]; }
A370863	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] >  c[1] && c[1] <  c[2]; }
A370864	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] >= c[1] && c[1] <  c[2]; }
A370865	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] >  c[1] && c[1] <= c[2]; }
A370866	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] >= c[1] && c[1] <= c[2]; }
A370870	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] >  c[1] && c[1] >  c[2]; }
A370871	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] >= c[1] && c[1] >  c[2]; }
A370872	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] >  c[1] && c[1] >= c[2]; }
A370873	filnum	1	1	k -> { final int[] c = ZUtils.digitCounts(k, 3); return c[0] >= c[1] && c[1] >= c[2]; }
A370875	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(2*k+1).^(k-1).*(BI(n, 2*k)), FA(k)              )).*(FA(n)).num()
A370876	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(3*k+1).^(k-1).*(BI(n, 3*k)), FA(k)              )).*(FA(n)).num()
A370877	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(2*k+1).^(k-1).*(BI(n, 2*k)), FA(k).*(Z2(k))     )).*(FA(n)).num()
A370878	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(3*k+1).^(k-1).*(BI(n, 3*k)), FA(k).*(ZV(6).^(k)))).*(FA(n)).num()
A370880	lingf	1	0,1,-1,3,-1,1	1,-3,3,-2,3,-3,1	0
A370888	lambdan	2	n -> ZV(n-1).*(FA(n-2).*(2).+(1))
A370889	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(n - 2*k).^(k).*(BI(n + 1, n - 2*k))   , ZV(2).^(k).*(FA(k))))./(n + 1).*(FA(n)).num()
A370890	arrlamb	0	0	0	1	(n, k) -> RQ(0, (n + 1)/2 - 1, j -> new Q(2*j + k, 2)).*(Z2(n)).num()	Square array read by ascending antidiagonals.
A370894	lambdan	0	n -> SU(0, n  , k -> ZV(2).^(n - k).*(FA(n + k)).*(S2(n, k)))       ./(FA(n + 1))
A370895	altsum	1	new A018804()	"+-"	Partial alternating sums of Pillai.s arithmetical function (A018804).
A370896	altsum	1	new A007947()	"+-"	Partial alternating sums of the squarefree kernel function (A007947).
A370897	altsum	1	new A000688()	"+-"	Partial alternating sums of the number of abelian groups sequence (A000688).
A370898	altsum	1	new A034448()	"+-"
A370899	altsum	1	new A047994()	"+-"	Partial alternating sums of the unitary totient function (A047994).
A370901	altsum	1	new A055231()	"+-"	Partial alternating sums of the powerfree part function (A055231).
A370903	altsum	1	new A057521()	"+-"	Partial alternating sums of the powerful part function (A057521).
A370904	altsum	1	new A188999()	"+-"	Partial alternating sums of the sum of the bi-unitary divisors function (A188999).
A370905	partsun	1	new A206369()		Partial sums of the alternating sum of divisors function (A206369).
A370906	altsum	1	new A206369()	"+-"	Partial alternating sums of the alternating sum of divisors function (A206369).
A370907	lambdan	0	n -> SU(0, n+1, k -> ZV(2).^(n+1-k).*(ZV(k).^(n)).*(BI(n + 1, k))  )./(ZV(3*(n + 1)))
A370908	lambdan	0	n -> SU(0, n+1, k -> ZV(3).^(n+1-k).*(ZV(k).^(n)).*(BI(n + 1, k))  )./(ZV(4*(n + 1)))
A370909	lambdan	0	n -> SU(0, n+1, k -> ZV(2).^(k)    .*(ZV(k).^(n)).*(BI(n + 1, k))  )./(ZV(3*(n + 1)))
A370910	lambdan	0	n -> SU(0, n+1, k -> ZV(3).^(k)    .*(ZV(k).^(n)).*(BI(n + 1, k))  )./(ZV(4*(n + 1)))
A370912	holos	0	[[0],[-2,1],[5,-5],[-2,9],[5,-5]]	0,15	0	0
A370913	lambdan	0	n -> RU(0, n, k -> RQ(0, n - k - 1, j -> new Q(4*j + k, 4)).*(ZV(4).^(n - k))).num()	Row sums of ?370915(n - k, k).
A370914	holos	0	[0,-1,4,-6,4,-1]	0,45,120,231	0	0	a(n) = 64*Pochhammer(n/4, 3).
A370915	arrlamb	0	0	0	1	(n, k) -> RQ(0, n - 1, j -> new Q(4*j + k, 4)).*(ZV(4).^(n)).num()	4^n*Product_{j=0..n-1} (j + k/4)
A370916	filnum	1	1	k -> { final String s = Integer.toString(k, 3).replaceAll("01", "xx"); return s.indexOf('0') < 0 && s.indexOf('x') >= 0; }	includes at least one 0, and every 0 is followed by 1.
A370917	filnum	1	1	k -> { final String s = Integer.toString(k, 3).replaceAll("02", "xx"); return s.indexOf('0') < 0 && s.indexOf('x') >= 0; }	includes at least one 0, and every 0 is followed by 2.
A370918	filnum	1	1	k -> { final String s = Integer.toString(k, 3).replaceAll("10", "xx"); return s.indexOf('1') < 0 && s.indexOf('x') >= 0; }	includes at least one 1, and every 1 is followed by 0.
A370919	filnum	1	1	k -> { final String s = Integer.toString(k, 3).replaceAll("12", "xx"); return s.indexOf('1') < 0 && s.indexOf('x') >= 0; }	includes at least one 1, and every 1 is followed by 2.
A370920	filnum	1	1	k -> { final String s = Integer.toString(k, 3).replaceAll("20", "xx"); return s.indexOf('2') < 0 && s.indexOf('x') >= 0; }	2 occurs at least once,  and every 2 is followed by 0.
A370921	filnum	1	1	k -> { final String s = Integer.toString(k, 3).replaceAll("21", "xx"); return s.indexOf('2') < 0 && s.indexOf('x') >= 0; }	2 occurs at least once,  and every 2 is followed by 1.
A370922	lambdan	0	n -> RU(1, n, k -> new Q(FA(n + 2*k - 2), FA(n + k - 1)).*(S1(n, k))).num()
A370926	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(n - 3*k).^(k).*(BI(n + 1, n - 3*k))   , ZV(6).^(k).*(FA(k))))./(n + 1).*(FA(n)).num()
A370927	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(n - 2*k).^(k).*(FA(2*n - 2*k))        , FA(k).*(FA(n - 2*k))))./(n + 1).num()
A370928	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(n - 3*k).^(k).*(FA(2*n - 3*k))        , FA(k).*(FA(n - 3*k))))./(n + 1).num()
A370930	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(n - 2*k).^(k).*(FA(2*n - 2*k))        , ZV(2).^(k).*(FA(k)).*(FA(n - 2*k))))./(n + 1).num()
A370931	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(n - 3*k).^(k).*(FA(2*n - 3*k))        , ZV(6).^(k).*(FA(k)).*(FA(n - 3*k))))./(n + 1).num()
A370934	lambdan	0	n -> SU(0, n  , k -> ZV(3).^(n - k).*(FA(n + k)).*(S2(n, k)))       ./(FA(n + 1))
A370936	lambdan	0	n -> SU(0, n  , k -> ZV(2).^(n - k).*(FA(n + k)).*(S1(n, k)))       ./(FA(n + 1))
A370937	lambdan	0	n -> SU(0, n  , k -> ZV(3).^(n - k).*(FA(n + k)).*(S1(n, k)))       ./(FA(n + 1))
A370938	lambdan	0	n -> SU(0, n  , k -> ZV(2).^(n - k).*(FA(n + k)).*(SA(n, k)))       ./(FA(n + 1))
A370939	lambdan	0	n -> SU(0, n  , k -> ZV(3).^(n - k).*(FA(n + k)).*(SA(n, k)))       ./(FA(n + 1))
A370940	lambdan	0	n -> SU(0, n  , k -> ZV(2).^(k).*(FA(n + k)).*(S1(n, k)))           ./(FA(n + 1))
A370941	lambdan	0	n -> SU(0, n  , k -> ZV(2).^(k).*(FA(n + k)).*(SA(n, k)))           ./(FA(n + 1))
A370971	multraf	1	(self, n) -> self.s(0)./(self.s(2))	""	new A008336(), new A055773(), PREVIOUS	a(n)=Annn(n)/Annn(n-(\d+))	1
A370980	lambdan	0	n -> ZV((n & 1) == 0 ? (n*n - 2*n + 2)/2 : (n*n - n + 2)/2)	If n is even, (n^2-2*n+2)/2, otherwise (n^2-n+2)/2
A370982	lambdan	0	n -> RU(0, n, k -> RQ(0, n - k - 1, j -> new Q(2*j + k, 2)).*(ZV(2).^(n - k))).num()	Row sums of ?370419(n - k, k).
A370983	trilambn	0	0	0	(n, k) -> (k == 0) ? (n == 0 ? Z.ONE : Z.ZERO) : BI(n, k).*(PR(0, k - 1, j -> ZV(j + n)))./(n)	* Pochhammer(n, k) / n.
A370984	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k).^(n - 2*k).*(FA(n + k))            , FA(k).*(FA(n - 2*k))))./(n + 1).num()
A370985	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(n - 3*k).*(FA(n + k))            , FA(k).*(FA(n - 3*k))))./(n + 1).num()
A370986	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k).^(n - 2*k).*(FA(n + k))            , ZV(2).^(k).*(FA(k)).*(FA(n - 2*k))))./(n + 1).num()
A370987	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(n - 3*k).*(FA(n + k))            , ZV(6).^(k).*(FA(k)).*(FA(n - 3*k))))./(n + 1).num()
A370988	lambdan	0	n -> RU(0, n/2, k -> new Q(S2(n - k  , k)                           , FA(n - k))  .*(FA(n + k)))          ./(n + 1).num()
A370989	lambdan	0	n -> RU(0, n/3, k -> new Q(S2(n - 2*k, k)                           , FA(n - 2*k)).*(FA(n + k)))          ./(n + 1).num()
A370990	lambdan	0	n -> RU(0, n/4, k -> new Q(S2(n - 3*k, k)                           , FA(n - 3*k)).*(FA(n + k)))          ./(n + 1).num()
A370991	lambdan	0	n -> RU(0, n/3, k -> new Q(S2(n - 2*k, k)                           , ZV(2).^(k).*(FA((n - 2*k)))).*(FA(n + k)))./(n + 1).num()
A370992	lambdan	0	n -> RU(0, n/4, k -> new Q(S2(n - 3*k, k)                           , ZV(6).^(k).*(FA((n - 3*k)))).*(FA(n + k)))./(n + 1).num()
A370993	lambdan	0	n -> RU(0, n/2, k -> new Q(SA(n - k  , k)                           , FA(n - k))  .*(FA(n + k)))          ./(n + 1).num()
A370994	lambdan	0	n -> RU(0, n/3, k -> new Q(SA(n - 2*k, k)                           , FA(n - 2*k)).*(FA(n + k)))          ./(n + 1).num()
A370995	lambdan	0	n -> RU(0, n/4, k -> new Q(SA(n - 3*k, k)                           , FA(n - 3*k)).*(FA(n + k)))          ./(n + 1).num()
A370996	lambdan	0	n -> RU(0, n/3, k -> new Q(SA(n - 2*k, k)                           , ZV(2).^(k).*(FA((n - 2*k)))).*(FA(n + k)))./(n + 1).num()
A370997	lambdan	0	n -> RU(0, n/4, k -> new Q(SA(n - 3*k, k)                           , ZV(6).^(k).*(FA((n - 3*k)))).*(FA(n + k)))./(n + 1).num()# A084052	lambdan	0	n -> ZUtils.reverse(ZV(2*n)).modZ(2)	2,2	(\d+)*n digit-reversed mod (\d+)	m	i     
A371005	lambdan	0	n -> SU(0, n + 1, k -> ZV(2).^(k).*(Z_1(n + 1 - k)).*(ZV(k).^(n)).*(BI(n + 1, k)))./(n + 1)
A371006	lambdan	0	n -> SU(0, n + 1, k -> ZV(3).^(k).*(ZV(-2).^(n + 1 - k)).*(ZV(k).^(n)).*(BI(n + 1, k)))./(n + 1)
A371007	lambdan	0	n -> SU(0, n + 1, k -> ZV(3).^(k).*(Z_1(n + 1 - k)).*(ZV(k).^(n)).*(BI(n + 1, k)))./(2*(n + 1))
A371008	lambdan	0	n -> SU(0, n + 1, k -> ZV(-2).^(k).*(ZV(3).^(n + 1 - k)).*(ZV(k).^(n)).*(BI(n + 1, k)))./(n + 1)
A371009	lambdan	0	n -> SU(0, n + 1, k -> Z_1(k).*(ZV(3).^(n + 1 - k)).*(ZV(k).^(n)).*(BI(n + 1, k)))./(2*(n + 1))
A371012	multrafd	2	(self, n) -> SEQ.a(self.s(0))	"1"	new A001481()	new A006530()	a(n)=Annn(Annn(n+(\d+)))
A371015	simtraf	1	new A363340()	(n, v) -> ZV(n)./(v)
A371018	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k).^(n - 2*k).*(BI(n + 1, k)), FA(n - 2*k))).*(FA(n))./(ZV(n + 1)).num()
A371019	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(n - 3*k).*(BI(n + 1, k)), FA(n - 3*k))).*(FA(n))./(ZV(n + 1)).num()
A371020	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k).^(n - 2*k).*(BI(n + 1, k)), ZV(2).^(k).*(FA(n - 2*k)))).*(FA(n))./(ZV(n + 1)).num()
A371021	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(n - 3*k).*(BI(n + 1, k)), ZV(6).^(k).*(FA(n - 3*k)))).*(FA(n))./(ZV(n + 1)).num()
A371034	multraf	1	(self, n) -> self.s(1).equals(Z.ONE) ? self.s(0) : ZV(n)./(self.s(1))	"1"	new A004086(), new A055483()	a(n) = A004086(n) if A055483(n) = 1, otherwise a(n) = n / A055483(n).
A371038	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k + 1).^(k - 1).*(BI(n - k,   n - 2*k)), (FA(k)))).*(FA(n)).num()
A371039	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k + 1).^(k - 1).*(BI(n - 2*k, n - 3*k)), (FA(k)))).*(FA(n)).num()
A371040	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(2*k + 1).^(k - 1).*(BI(n - k, n - 3*k)), (FA(k)))).*(FA(n)).num()
A371041	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(3*k + 1).^(k - 1).*(BI(n + k, n - 2*k)), (FA(k)))).*(FA(n)).num()
A371042	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k).^(n - 2*k).*(BI(n - 2*k + 1, k)), ZV(n - 2*k + 1).*(FA(n - 2*k)))).*(FA(n)).num()
A371043	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k).^(n - 2*k).*(BI(n - k + 1  , k)), ZV(n - k + 1).*(FA(n - 2*k)))).*(FA(n)).num()
A371044	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(n - 3*k).*(BI(n - 3*k + 1, k)), ZV(n - 3*k + 1).*(FA(n - 3*k)))).*(FA(n)).num()
A371045	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(n - 3*k).*(BI(n - 2*k + 1, k)), ZV(n - 2*k + 1).*(FA(n - 3*k)))).*(FA(n)).num()
A371046	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(n - 3*k).*(BI(n - k + 1  , k)), ZV(n - k + 1).*(FA(n - 3*k)))).*(FA(n)).num()
A371063	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(k).^(n - 2*k).*(BI(n - 2*k + 1, k)), ZV(2).^(k).*(n - 2*k + 1).*(FA(n - 2*k)))).*(FA(n)).num()
A371066	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(k).^(n - 3*k).*(BI(n - 3*k + 1, k)), ZV(6).^(k).*(n - 3*k + 1).*(FA(n - 3*k)))).*(FA(n)).num()
A371067	lambdan	0	n -> RU(0, n/2, k -> new Q(ZV(n - 2*k).^(k).*(BI(2*k + 1, n - 2*k)), ZV(2*k + 1).*(FA(k)))).*(FA(n)).num()
A371068	lambdan	0	n -> RU(0, n/3, k -> new Q(ZV(n - 3*k).^(k).*(BI(3*k + 1, n - 3*k)), ZV(3*k + 1).*(FA(k)))).*(FA(n)).num()
A371079	lambdan	0	n -> RU(0, n, k -> RQ(0, n - k - 1, j -> new Q(3*j + k, 3)).*(ZV(3).^(n - k))).num()	Row sums of ?371077.
A371093	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A016777()	new A007814()	a(n)=Annn(Annn(n))
A371115	lambdan	0	n -> RU(0, n/2, k -> new Q(S2(n - k, k), FA(n - 2*k + 1))).*(FA(n)).num()
A371116	lambdan	0	n -> RU(0, n/3, k -> new Q(S2(n - 2*k, k), FA(n-3*k+1))).*(FA(n)).num()
A371117	lambdan	0	n -> RU(0, n/2, k -> new Q(SA(n - k, k), FA(n - 2*k + 1))).*(FA(n)).num()
A371118	lambdan	0	n -> RU(0, n/3, k -> new Q(SA(n - 2*k, k), FA(n-3*k+1))).*(FA(n)).num()
A371119	lambdan	0	n -> RU(0, n/2, k -> new Q(S2(n -   k, k), FA(n - k).*(FA(n -k + 1)))).*(FA(n).^(2)).num()
A371120	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(n + 2*k).*(S2(n-k, k)), FA(n - k).*(FA(n + k + 1)))).*(FA(n)).num()	n!*sum(k=0, n\2, (n+2*k)!*stirling(n-k, k, 2)/((n-k)!*(n+k+1)!))
A371121	lambdan	0	n -> RU(0, n/2, k -> new Q(SA(n -   k, k), FA(n - k).*(FA(n -k + 1)))).*(FA(n).^(2)).num()
A371122	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(n + 2*k).*(SA(n-k, k)), FA(n - k).*(FA(n + k + 1)))).*(FA(n)).num()
A371138	lambdan	0	n -> RU(0, n/3, k -> new Q(SA(n - 2*k, k), FA(n - 2*k).*(FA(n -k + 1)))).*(FA(n).^(2)).num()
A371139	lambdan	0	n -> RU(0, n/3, k -> new Q(S2(n - 2*k, k), FA(n - 2*k).*(FA(n -k + 1)))).*(FA(n).^(2)).num()
A371140	lambdan	0	n -> n == 0 ? Z.ONE : RU(0, n/2, k -> new Q(FA(2*k).*(SA(n - k, k)), FA(k + 1).*(FA(n - k)))).*(FA(n)).num()	n! * Sum_{k=0..floor(n/2)} (2*k)!/(k+1)! * |Stirling1(n-k,k)|/(n-k)!
A371141	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(3*k).*(SA(n-k, k)), FA( 2*k + 1).*(FA(n-k)))).*(FA(n)).num()
A371142	lambdan	0	n -> n == 0 ? Z.ONE : RU(0, n/2, k -> new Q(FA(2*k).*(S2(n - k, k)), FA(k + 1).*(FA(n - k)))).*(FA(n)).num()
A371143	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(3*k).*(S2(n-k, k)), FA( 2*k + 1).*(FA(n-k)))).*(FA(n)).num()	n!*sum(k=0, n\2, (3*k)!/(2*k+1)!*stirling(n-k, k, 2)/(n-k)!);
A371145	lambdan	0	n -> n == 0 ? Z.ONE : RU(0, n/3, k -> new Q(ZV(n + 1)).^(k - 1).*(S2(n - 2*k, k))./(FA(n - 2*k))).*(FA(n)).num()
A371146	lambdan	0	n -> n == 0 ? Z.ONE : RU(0, n/2, k -> new Q(FA(2*n + 1)).^(k - 1).*(SA(n - k,   k))./(FA(n - k  ))).*(FA(n)).num()
A371147	lambdan	0	n -> n == 0 ? Z.ONE : RU(0, n/3, k -> new Q(ZV(n + 1)).^(k - 1).*(SA(n - 2*k, k))./(FA(n - 2*k))).*(FA(n)).num()
A371148	#nyi	0		Let n = Product_{j=1..k} p_j^e_j and gpf(n)! = Product_{j=1..k} p_j^f_j, where p_j = A000040(j) is the j - th prime and p_k = gpf(n) = A006530(n) is the Largest prime factor of n. a(n) is the numerator of the maximum of e_j/f_j
A371149	#nyi	0		Let n = Product_{j=1..k} p_j^e_j and gpf(n)! = Product_{j=1..k} p_j^f_j, where p_j = A000040(j) is the j - th prime and p_k = gpf(n) = A006530(n) is the Largest prime factor of n. a(n) is the denominator of the maximum of e_j/f_j
A371154	lingf	0	1,1,0,0,-1,2,-1	1,-2,1,-1,2,-1	0
A371157	lambdan	0	n -> RU(0, n  , j -> RU(0, j/2, k -> new Q(BI(j - k, n - j - k)  .*(SA(j - k, k)  )         , FA(j -   k)))   .*(FA(n))).num()
A371158	lambdan	0	n -> RU(0, n  , j -> RU(0, j/3, k -> new Q(BI(j - 2*k, n - j - k).*(SA(j - 2*k, k))         , FA(j - 2*k)))   .*(FA(n))).num()
A371159	lambdan	0	n -> RU(0, n/2, j -> RU(0, j  , k -> new Q(BI(j, n - 2*j - k)    .*(SA(j, k)      )         , FA(j)))         .*(FA(n))).num()
A371160	lambdan	0	n -> RU(0, n/3, j -> RU(0, j  , k -> new Q(BI(j, n - 3*j - k)    .*(SA(j, k)      )         , FA(j)))         .*(FA(n))).num()
A371174	lambdan	0	n -> RU(0, n  , j -> RU(0, j/3, k -> new Q(BI(j - 2*k, n - j - k).*(S1(j - 2*k, k))         , FA(j - 2*k)))   .*(FA(n))).num()
A371175	lambdan	0	n -> RU(0, n/2, j -> RU(0, j  , k -> new Q(BI(j, n - 2*j - k)    .*(S1(j, k)      )         , FA(j)))         .*(FA(n))).num()
A371184	lambdan	0	n -> RU(0, n/3, j -> RU(0, j  , k -> new Q(BI(j, n - 3*j - k)    .*(S1(j, k)      )         , FA(j)))         .*(FA(n))).num()
A371193	lambdan	0	n -> Z2(4*n - 4).*(Z2(n).-(1))
A371196	lambdan	0	n -> RU(0, n  , j -> RU(0, j  , k -> new Q(BI(j, n - j - k)      .*(SA(j, k)      ).*(FA(k)), FA(j)))         .*(FA(n))).num()
A371197	lambdan	0	n -> RU(0, n  , j -> RU(0, j/2, k -> new Q(BI(j - k, n - j - k)  .*(SA(j - k, k)  ).*(FA(k)), FA(j -   k)))   .*(FA(n))).num()
A371198	lambdan	0	n -> RU(0, n  , j -> RU(0, j/3, k -> new Q(BI(j - 2*k, n - j - k).*(SA(j - 2*k, k)).*(FA(k)), FA(j - 2*k)))   .*(FA(n))).num()
A371199	lambdan	0	n -> RU(0, n/2, j -> RU(0, j  , k -> new Q(BI(j, n - 2*j - k)    .*(SA(j, k)      ).*(FA(k)), FA(j)))         .*(FA(n))).num()
A371200	lambdan	0	n -> RU(0, n/3, j -> RU(0, j  , k -> new Q(BI(j, n - 3*j - k)    .*(SA(j, k)      ).*(FA(k)), FA(j)))         .*(FA(n))).num()
A371222	simtraf	0	new A309953()	v -> v.modZ(3)	a(n)=Annn(n)mod(\d+)	3	A309953
A371224	simtraf	1	new A011545()	v -> v.IPP() ? Z.ZERO : SPF(v)	the integer formed by the first n decimal digits of Pi, or 0 if that number is prime
A371225	lambdan	0	n -> RU(0, n  , j -> RU(0, j  , k -> new Q(BI(j, n - j - k)      .*(S1(j, k)      ).*(FA(k)), FA(j)))         .*(FA(n))).num()
A371226	lambdan	0	n -> RU(0, n  , j -> RU(0, j  , k -> new Q(BI(j, n - j - k)      .*(S2(j, k)      ).*(FA(k)), FA(j)))         .*(FA(n))).num()
A371227	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(2*n - 2*k).*(SA(n - k, k)), FA(n - k).*(FA(2*n - 3*k + 1)))).*(FA(n)).num()	n! * Sum_{k=0..floor(n/2)} (2*n-2*k)! * |Stirling1(n-k,k)|/( (n-k)! * (2*n-3*k+1)!)
A371228	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(2*n - k).*(SA(n - k, k)), FA(n - k).*(FA(2*n - 2*k + 1)))).*(FA(n)).num()
A371229	lambdan	0	n -> RU(0, n/2, k -> new Q(SA(n - k, k), (FA(n-k)).*(FA(2*n - k + 1)))).*(FA(n)).*(FA(2*n)).num()
A371230	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(2*n +   k).*(SA(n-k, k)), FA(n - k))./(FA(2*n + 1))).*(FA(n)).num()
A371231	lambdan	0	n -> RU(0, n/2, k -> new Q(SA(n - k, k), (FA(n-k)).*(FA(3*n - k + 1)))).*(FA(n)).*(FA(3*n)).num()
A371232	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(3*n +   k).*(SA(n-k, k)), FA(n - k))./(FA(3*n + 1))).*(FA(n)).num()
A371233	lambdan	0	n -> RU(0, n/3, k -> new Q(FA(2*n - 4*k).*(SA(n - 2*k, k)), FA(n - 2*k).*(FA(2*n - 5*k + 1)))).*(FA(n)).num()
A371234	lambdan	0	n -> RU(0, n/3, k -> new Q(SA(n - 2*k, k), (FA(n-2*k)).*(FA(2*n - k + 1)))).*(FA(n)).*(FA(2*n)).num()
A371235	lambdan	0	n -> RU(0, n/3, k -> new Q(FA(2*n + k).*(SA(n - 2*k, k)), FA(n - 2*k).*(FA(2*n + 1)))).*(FA(n)).num()
A371238	dirtraf	1	new A000010()	new A048701()	"null"		0				Euler totient function applied to the binary palindromes of even length.
A371240	dirtraf	1	new A000203()	new A032924()	"null"		1				The sum of divisors of the zeroless numbers in base 3 (A032924).
A371241	dirtraf	1	new A000010()	new A032924()	"null"		1				Euler totient function applied to the zeroless numbers in base 3 (A032924).
A371262	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(2*n - 2*k).*(S2(n - k, k)), FA(n - k).*(FA(2*n - 3*k + 1)))).*(FA(n)).num()
A371269	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(2*n - k).*(S2(n-k, k)), FA(n - k)).*(FA(2*n - 2*k + 1))).*(FA(n)).num()
A371270	lambdan	0	n -> RU(0, n/2, k -> new Q(S2(n - k, k), (FA(n-k)).*(FA(2*n - k + 1)))).*(FA(n)).*(FA(2*n)).num()
A371271	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(2*n +   k).*(S2(n-k, k)), FA(n - k))./(FA(2*n + 1))).*(FA(n)).num()
A371272	lambdan	0	n -> RU(0, n/2, k -> new Q(S2(n - k, k), (FA(n-k)).*(FA(3*n - k + 1)))).*(FA(n)).*(FA(3*n)).num()
A371273	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(3*n +   k).*(S2(n-k, k)), FA(n - k))./(FA(3*n + 1))).*(FA(n)).num()
A371281	dirtraf	0	new A010879()	new A007954()	"null"		0				Last digit of the product of decimal digits of n.
A371296	lambdan	0	n -> SU(0, n, k -> Z2(k).*(FA(2*n+k)).*(S2(n, k)))./(FA(2*n + 1))
A371297	lambdan	0	n -> SU(0, n, k -> Z2(k).*(FA(2*n+k)).*(SA(n, k)))./(FA(2*n + 1))
A371298	lambdan	0	n -> SU(0, n, k -> Z2(n - k).*(FA(2*n+k)).*(S2(n, k)))./(FA(2*n + 1))
A371299	lambdan	0	n -> SU(0, n, k -> Z2(n - k).*(FA(2*n+k)).*(SA(n, k)))./(FA(2*n + 1))
A371302	lambdan	0	n -> RU(0, n/3, k -> new Q(FA(n - k).*(SA(n - 2*k, k)), FA(n - 2*k).*(FA(n - 2*k + 1)))).*(FA(n)).num()
A371304	lambdan	0	n -> RU(0, n/3, k -> new Q(FA(n - k).*(S2(n - 2*k, k)), FA(n - 2*k).*(FA(n - 2*k + 1)))) .*(FA(n)).num()
A371314	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*k - 2  ) , FA(2*k - 1  )).*(SA(n, k))).num()
A371315	lambdan	0	n -> RU(1, n, k -> new Q(FA(4*k - 2  ) , FA(3*k - 1  )).*(SA(n, k))).num()
A371316	lambdan	0	n -> RU(1, n, k -> new Q(FA(3*k - 2  ) , FA(2*k - 1  )).*(S2(n, k))).num()
A371317	lambdan	0	n -> RU(1, n, k -> new Q(FA(4*k - 2  ) , FA(3*k - 1  )).*(S2(n, k))).num()                    
A371318	lambdan	0	n -> n == 0 ? Z.ONE : RU(0, n  , k -> new Q(ZV(2*k + 1)).^(n - k - 1)  .*(BI(3*k, k))./(FA(n - k  )).*(FA(n))).num()	n!*sum(k=0, n, (2*k+1)^(n-k-1)*binomial(3*k, k)/(n-k)!);
A371319	lambdan	0	n -> n == 0 ? Z.ONE : RU(0, n/2, k -> new Q(ZV(k + 1)).^(n - 2*k - 1)  .*(BI(2*k, k))./(FA(n - 2*k)).*(FA(n))).num()
A371320	lambdan	0	n -> n == 0 ? Z.ONE : RU(0, n/2, k -> new Q(ZV(2*k + 1)).^(n - 2*k - 1).*(BI(3*k, k))./(FA(n - 2*k)).*(FA(n))).num()
A371326	lambdan	0	n -> RU(1, n, k -> new Q(FA(n + 3*k - 2) , FA(n + 2*k - 1)).*(S1(n, k))).num()
A371327	lambdan	0	n -> RU(1, n, k -> new Q(FA(n + 2*k - 2) , FA(n + k - 1  )).*(SA(n, k))).num()
A371328	lambdan	0	n -> RU(1, n, k -> new Q(FA(n + 3*k - 2) , FA(n + 2*k - 1)).*(SA(n, k))).num()
A371329	lambdan	0	n -> RU(1, n, k -> new Q(FA(n + 2*k - 2) , FA(n + k - 1  )).*(S2(n, k))).num()
A371330	lambdan	0	n -> RU(1, n, k -> new Q(FA(n + 3*k - 2) , FA(n + 2*k - 1)).*(S2(n, k))).num()
A371341	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, n, k -> BI(n, k).*(BI(2*n - 5*k - 2, n - 1))).*(Z_1(n - 1))./(n)	a(n)=if(n==0,1,(-1)^(n-1)*sum(k=0,n,binomial(n,k)*binomial(2*n-5*k-2,n-1))/n);
A371342	lambdan	0	n -> RU(1, n, k -> new Q(FA(n + k - 2  ) , FA(n - 1    )).*(S1(n, k))).num()                  
A371346	simtraf	1	new A000040()	p -> Puma.prevPrimeZ(p.^(p))	precprime(prime(n)^prime(n))
A371347	simtraf	1	new A000040()	p -> Puma.nextPrimeZ(p.^(p))	nextprime(prime(n)^prime(n))
A371348	lambdan	0	n -> CV(new Q(4, 7)).exp().-(1).*(7)./(4).sqrt().floor()	sqrt(7*(exp(4/7)-1)/4)
A371350	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A007173(), new A027610()
A371351	multraf	1	(self, n) -> self.s(0).*(2).-(self.s(1))	""	new A027610(), new A007173()
A371357	lambdan	0	n -> Z2(n - Integer.bitCount(n)).*(BI(2*n, n))	a(n) = 2^(n - HammingWeight(n)) * binomial(2*n, n)
A371362	lambdan	0	n -> SU(0, n, k -> ZV(2).^(n - k).*(BI(2*n + k + 1, k)).*(BI(2*n  , n - k)))./(n + 1)
A371363	lambdan	0	n -> SU(0, n, k -> ZV(2).^(n - k).*(BI(3*n + k + 2, k)).*(BI(3*n + 1, n - k)))./(n + 1)
A371364	lambdan	0	n -> SU(0, n, k -> ZV(3).^(n - k).*(BI(2*n + k + 1, k)).*(BI(2*n  , n - k)))./(n + 1)
A371365	lambdan	0	n -> SU(0, n, k -> ZV(3).^(n - k).*(BI(3*n + k + 2, k)).*(BI(3*n + 1, n - k)))./(n + 1)
A371366	lambdan	0	n -> SU(0, n, k -> ZV(4).^(n - k).*(BI(2*n + k + 1, k)).*(BI(2*n  , n - k)))./(n + 1)
A371367	lambdan	0	n -> SU(0, n, k -> ZV(5).^(n - k).*(BI(2*n + k + 1, k)).*(BI(2*n  , n - k)))./(n + 1)
A371368	lambdan	0	n -> SU(0, n, k -> ZV(6).^(n - k).*(BI(2*n + k + 1, k)).*(BI(2*n  , n - k)))./(n + 1)
A371369	lambdan	0	n -> SU(0, n, k -> ZV(7).^(n - k).*(BI(2*n + k + 1, k)).*(BI(2*n  , n - k)))./(n + 1)
A371370	lambdan	0	n -> RU(1, n, k -> new Q(FA(2*n + k - 2) , FA(2*n - 1  )).*(SA(n, k))).num()
A371371	lambdan	0	n -> RU(1, n, k -> new Q(FA(2*n + k - 2) , FA(2*n - 1  )).*(S2(n, k))).num()
A371372	lambdan	0	n -> (n == 0) ? Z.ZERO : SD(2*n, d -> BI(4*n/d - 1, 2*n/d).*(JF(d).phi()))./(4*n)
A371379	lambdan	0	n -> RU(0, n, k -> new Q(BI(n - 1, n - k).*(BI(6*k + 3, k)), ZV(5*k + 4))).*(ZV(4)).num()
A371380	lambdan	0	n -> SU(0, n, k -> ZV(2).^(k)  .*(BI(2*n + k + 1, k)).*(BI(2*n  , n - k)))./(n + 1)
A371382	simtraf	1	new A000201()	(n, v) -> v.*(v.add(1)).+(n*n)	a(n) = n^2 + q*(q + 1), where q = floor(n*(1 + sqrt(5))/2) = A000201(n).
A371385	lambdan	0	n -> SU(0, n, k -> ZV(2).^(k)  .*(BI(3*n + k + 2, k)).*(BI(3*n + 1, n - k)))./(n + 1)
A371386	lambdan	0	n -> SU(0, n, k -> ZV(3).^(k)  .*(BI(2*n + k + 1, k)).*(BI(2*n  , n - k)))./(n + 1)
A371387	lambdan	0	n -> SU(0, n, k -> ZV(3).^(k)  .*(BI(3*n + k + 2, k)).*(BI(3*n + 1, n - k)))./(n + 1)
A371388	lambdan	1	n -> CR.PHI.*(n).floor().*(2*n).-(n*n)	a(n)= 2*n*floor(n*(1 + sqrt(5))/2)- n^2
A371391	lambdan	0	n -> SU(0, n, k -> ZV(2).^(k)  .*(BI(2*(n + 1), k)).*(BI(2*n - k, n - k)))./(n + 1)
A371392	lambdan	0	n -> SU(0, n, k -> ZV(2).^(k)  .*(BI(3*(n + 1), k)).*(BI(2*n - k, n - k)))./(n + 1)
A371393	lambdan	0	n -> SU(0, n, k -> ZV(3).^(k)  .*(BI(2*(n + 1), k)).*(BI(2*n - k, n - k)))./(n + 1)
A371394	lambdan	0	n -> SU(0, n, k -> ZV(3).^(k)  .*(BI(3*(n + 1), k)).*(BI(2*n - k, n - k)))./(n + 1)
A371397	multraf	1	(self, n) -> self.s(0).-(self.s(1))	""	new A000162(), new A038119()	a(n)=Annn(n)-Annn(n)=(Annn(n)-Annn(n))/(\d+)=Annn(n)-Annn(n)	2
A371398	serrev	0	1	[0,1]	[1,7,18,20,8]	Expansion of (1/x) * Series_Reversion( x / ( (1+x) * (1+2*x)^3 ) ).  7*x + 18*x^2 + 20*x^3 + 8*x^4 + 1
A371400	trilamb0	0	(n, k) -> BI(n + k, n).*(BI(2*n - k, n))	Triangle read by rows: T(n, k) = binomial(k + n, k)*binomial(2*n - k, n)
A371404	serrev	0	1	[0,1]	[1,7,15,9]	Expansion of (1/x) * Series_Reversion( x / ( (1+x) * (1+3*x)^2 ) ).  7*x + 15*x^2 + 9*x^3 + 1
A371405	serrev	0	1	[0,1]	[1,10,36,54,27]	Expansion of (1/x) * Series_Reversion( x / ( (1+x) * (1+3*x)^3 ) ).  10*x + 36*x^2 + 54*x^3 + 27*x^4 + 1
A371406	serrev	0	1	[0,1]	[1,6,13,12,4]	Expansion of (1/x) * Series_Reversion( x / ( (1+x)^2 * (1+2*x)^2 ) ).  6*x + 13*x^2 + 12*x^3 + 4*x^4 + 1
A371407	serrev	0	1	[0,1]	[1,8,22,24,9]	Expansion of (1/x) * Series_Reversion( x / ( (1+x)^2 * (1+3*x)^2 ) ). 8*x + 22*x^2 + 24*x^3 + 9*x^4 + 1
A371412	dirtraf	1	new A000010()	new A036966()	"null"		1				Euler totient function applied to the cubefull numbers (A036966).
A371416	lambdan	0	n -> SU(0, n/2, k -> ZV( 3).^(k).*(BI(n + k, k)).*(BI(4*n + k + 2, n - 2*k)))./(n+1)
A371418	multraf	1	(self, n) -> self.s(0)./(self.s(1))	""	new A000203(), new A071189()
A371426	serrev	0	1	[0,1]	[1,2,1,-1]
A371427	serrev	0	1	[0,1]	[1,2,1,0,-1]	(1/x) * Series_Reversion( x / ((1+x)^2 - x^4) ).
A371428	serrev	0	1	[0,1]	[1,3,2,1]	(1/x) * Series_Reversion( x / ((1+x)^3 - x^2) ).
A371429	serrev	0	1	[0,1]	[1,3,3,1,-1]	(1/x) * Series_Reversion( x / ((1+x)^3 - x^4) ).
A371430	serrev	0	1	[0,1]	[1,4,5,4,1]	(1/x) * Series_Reversion( x / ((1+x)^4 - x^2) ).
A371431	lambdan	0	n -> SU(0, n/3, k -> Z_1(k  ).*(BI(n+k, k)).*(BI(3*n-k+1, n-3*k))   )./(n+1)
A371432	lambdan	0	n -> SU(0, n/4, k -> Z_1(k  ).*(BI(n+k, k)).*(BI(3*n-2*k+1, n-4*k)) )./(n+1)
A371433	lambdan	0	n -> SU(0, n  , k -> Z_1(k  ).*(BI(n+k, k)).*(BI(4*n+2*k+2, n-k))   )./(n+1)
A371434	lambdan	0	n -> SU(0, n/2, k -> Z_1(k  ).*(BI(n+k, k)).*(BI(4*n+k+2, n-2*k))   )./(n+1)
A371435	lambdan	0	n -> SU(0, n/4, k -> Z_1(k  ).*(BI(n+k, k)).*(BI(4*n-k+2, n-4*k))   )./(n+1)
A371436	lambdan	0	n -> SU(0, n  , k -> Z_1(k  ).*(BI(n+k, k)).*(BI(5*n+3*k+3, n-k))   )./(n+1)
A371468	lambdan	0	n -> PR(0, n, k -> FA(n*n*n + k*k*k))	a(n) = Product_{k=0..n} (n^3 + k^3)!
A371471	lambdan	1	n -> BI(n*n, n).mod(ZV(n).^(5))
A371474	filnum	0	1	k -> BI(k*k, k).mod(k*k*k) == 0	Numbers k such that binomial(k^2,k) == 0 (mod k^3).   
A371483	lambdan	0	n -> RU(0, n  , k -> new Q(            BI(n-1, n-k).*(BI(4*k+2, k))   , ZV(k+1))).num()
A371486	lambdan	0	n -> RU(0, n  , k -> new Q(            BI(n-1, n-k).*(BI(5*k+3, k))   , ZV(k+1))).num()
A371494	lambdan	0	n -> RU(0, n  , k -> new Q(Z_1(n-k).*(BI(n-1, n-k)).*(BI(3*k+1, k))   , ZV(k+1))).num()
A371495	lambdan	0	n -> RU(0, n  , k -> new Q(Z_1(n-k).*(BI(n-1, n-k)).*(BI(4*k+2, k))   , ZV(k+1))).num()
A371496	lambdan	0	n -> RU(0, n  , k -> new Q(Z_1(n-k).*(BI(n-1, n-k)).*(BI(5*k+3, k))   , ZV(k+1))).num()
A371515	lingf	0	1,53,119,19	1,-4,6,-4,1	0
A371516	lambdan	0	n -> RU(0, n, k -> new Q(            BI(n - 1, n - k).*(BI(3*k + 2, k)), ZV(2*k + 3))).*(3).num()
A371517	lambdan	0	n -> RU(0, n, k -> new Q(            BI(n - 1, n - k).*(BI(4*k + 3, k)), ZV(3*k + 4))).*(4).num()
A371518	lambdan	0	n -> RU(0, n, k -> new Q(            BI(n - 1, n - k).*(BI(4*k + 1, k)), ZV(3*k + 2))).*(2).num()
A371519	lambdan	0	n -> RU(0, n, k -> new Q(            BI(n - 1, n - k).*(BI(6*k + 4, k)), ZV(  k + 1))).num()
A371520	lambdan	0	n -> RU(0, n, k -> new Q(            BI(n - 1, n - k).*(BI(5*k + 4, k)), ZV(4*k + 5))).*(5).num()
A371521	lambdan	0	n -> RU(0, n, k -> new Q(            BI(n - 1, n - k).*(BI(6*k + 5, k)), ZV(5*k + 6))).*(6).num()
A371522	lambdan	0	n -> RU(0, n, k -> new Q(            BI(n - 1, n - k).*(BI(6*k + 2, k)), ZV(5*k + 3))).*(3).num()
A371523	lambdan	0	n -> RU(0, n, k -> new Q(            BI(n - 1, n - k).*(BI(6*k + 1, k)), ZV(5*k + 2))).*(2).num()
A371532	lingf	0	1,15,23,1	1,-4,6,-4,1	0
A371533	filnum	1	1	k -> new A001227().a(2*k).equals(ZV(JF(2*k).bigOmega()))	Numbers k such that A001227(2*k) = A001222(2*k)
A371537	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(6*k + 2, k)), ZV(6*k + 2))).*(2).num()
A371538	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(6*k + 3, k)), ZV(6*k + 3))).*(3).num()
A371539	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(6*k + 4, k)), ZV(6*k + 4))).*(4).num()
A371540	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(6*k + 4, k)), ZV(  k + 1))).num()
A371541	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(6*k + 6, k)), ZV(  k + 1))).num()
A371542	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(3*k + 3, k)), ZV(  k + 1))).num()
A371543	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(4*k + 4, k)), ZV(  k + 1))).num()
A371544	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(5*k + 5, k)), ZV(  k + 1))).num()
A371545	lambdan	0	n -> RU(0, n, k -> new Q(Z_1(n - k).*(BI(n - 1, n - k)).*(BI(4*k + 2, k)), ZV(4*k + 2))).*(2).num()
A371562	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, n, k -> BI(n, k).*(BI(4*n - 5*k - 2, n - 1))).*(Z_1(n - 1))./(n)	a(n)=if(n==0,1,(-1)^(n-1)*sum(k=0,n,binomial(n,k)*binomial(4*n-5*k-2,n-1))/n);
A371573	multraf	1	(self, n)-> self.s(0).lcm(self.s(1))	""	new A020639(), new A032742()
A371574	lambdan	0	n -> { final int r=2; final int s=1; final int t=5; final int u=2; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(   s*k     , n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371575	lambdan	0	n -> { final int r=2; final int s=1; final int t=6; final int u=2; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(   s*k     , n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371576	lambdan	0	n -> { final int r=2; final int s=1; final int t=3; final int u=0; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(   s*k     , n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371577	lambdan	0	n -> { final int r=2; final int s=1; final int t=4; final int u=0; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(   s*k     , n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371578	lambdan	0	n -> { final int r=2; final int s=1; final int t=5; final int u=0; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(   s*k     , n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371579	lambdan	0	n -> { final int r=2; final int s=2; final int t=5; final int u=2; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(   s*k     , n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371580	lambdan	0	n -> { final int r=2; final int s=2; final int t=5; final int u=0; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(   s*k     , n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371581	lambdan	0	n -> { final int r=2; final int s=1; final int t=5; final int u=2; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371582	lambdan	0	n -> { final int r=2; final int s=1; final int t=6; final int u=2; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371583	lambdan	0	n -> { final int r=2; final int s=1; final int t=5; final int u=0; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371584	lambdan	0	n -> { final int r=2; final int s=2; final int t=5; final int u=2; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371585	lambdan	0	n -> { final int r=2; final int s=2; final int t=5; final int u=0; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371586	lambdan	0	n -> { final int r=2; final int s=2; final int t=4; final int u=4; return RU(0, n, k -> new Q(BI(t*k + u*(n - k) + r, k).*(BI(   s*k           , n - k)), ZV(t*k + u*(n - k) + r))).*(r).num(); }
A371596	lingf	0	1,2,-1	1,-2,-1	0
A371598	multraf	1	(self, n) -> self.s(0).mod(self.s(1))	""	new A003266(), new A000045().skip(1)	a(n)=Annn(n)modAnnn(n+(\d+))	1
A371603	lambdan	0	n -> PR(0, n, k -> BI(n*n, k*k))	a(n) = Product_{k=0..n} binomial(n^2, k^2)
A371607	lambdan	0	n -> { final int r=2; final int s=1; final int t=0; final int u=4; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(   s*k           , n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371608	lambdan	0	n -> { final int r=2; final int s=1; final int t=0; final int u=6; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(   s*k           , n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371609	lambdan	0	n -> { final int r=2; final int s=2; final int t=0; final int u=4; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(   s*k           , n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371610	lambdan	0	n -> { final int r=2; final int s=2; final int t=0; final int u=6; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(   s*k           , n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371612	lambdan	0	n -> { final int r=2; final int s=1; final int t=0; final int u=4; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371613	lambdan	0	n -> { final int r=2; final int s=1; final int t=0; final int u=6; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371614	lambdan	0	n -> { final int r=2; final int s=2; final int t=0; final int u=4; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371615	lambdan	0	n -> { final int r=2; final int s=2; final int t=0; final int u=6; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371616	lambdan	0	n -> { final int r=1; final int s=3; final int t=0; final int u=3; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371617	lambdan	0	n -> { final int r=2; final int s=3; final int t=0; final int u=6; return RU(0, n, k -> new Q(BI(      u*(n - k) + r, k).*(BI(n + (s - 1)*k - 1, n - k)), ZV(      u*(n - k) + r))).*(r).num(); }
A371624	lambdan	0	n -> PR(0, n, k -> FA(n*n - k*k))	a(n) = Product_{k=0..n} (n^2 - k^2)!.
A371638	lambdan	1	n -> ZV(2*n + ZUtils.valuation(ZV(n), ZV(3)))	a(n) = 2*n    + valuation(n, 3) with valuation(n, 3) = A
A371640	lambdan	1	n -> Z.THREE.^(2*n + ZUtils.valuation(ZV(n), ZV(3)))	a(n) = 3^(2*n + valuation(n, 3)) = 3^A371638(n)
A371642	lambdan	0	n -> RQ(0, n, k -> new Q(FA(n*n + k*k), FA(n*n - k*k))).num()
A371643	lambdan	0	n -> PR(0, n, k -> FA(n*n + k*k))
A371644	lambdan	0	n -> PR(0, n, k -> BI(n*n + k*k, n*n - k*k))
A371645	lambdan	0	n -> PR(0, n, k -> FA(2*k*k))
A371646	lambdan	0	n -> PR(0, n, k -> BI(ZV(n).*(n).*(n), ZV(k).*(k).*(k)))
A371653	filnum	1	0	n -> Functions.DIGIT_SORT_DESCENDING.z(n).IPP()	Numbers k such that A004186(k) is prime. - _Robert Israel_, Apr 01 2024
A371655	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(4).^(n - k).*(BI(n, k)).*(BI(2*n - k, n - 1 - 2*k)))./(n)
A371657	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(3).^(n - k).*(BI(n, k)).*(BI(3*n - k, n - 1 - 2*k)))./(n)
A371658	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(4).^(n - k).*(BI(n, k)).*(BI(3*n - k, n - 1 - 2*k)))./(n)
A371660	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(3).^(n - k).*(BI(n, k)).*(BI(4*n - k, n - 1 - 2*k)))./(n)
A371661	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, (n - 1)/2, k -> ZV(4).^(n - k).*(BI(n, k)).*(BI(4*n - k, n - 1 - 2*k)))./(n)
A371675	lambdan	0	n -> { final int r = 2; final int t = 3; final int u = 1; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371676	lambdan	0	n -> { final int r = 2; final int t = 4; final int u = 1; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371677	lambdan	0	n -> { final int r = 2; final int t = 5; final int u = 1; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371678	lambdan	0	n -> { final int r = 2; final int t = 6; final int u = 1; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371679	lambdan	0	n -> { final int r = 2; final int t = 3; final int u = 2; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371680	lambdan	0	n -> { final int r = 2; final int t = 4; final int u = 2; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371681	lambdan	0	n -> { final int r = 3; final int t = 3; final int u = 3; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371693	lambdan	0	n -> { final int r = 2; final int t = 2; final int u = 2; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371698	lambdan	1	n -> ZV(4).*(SU(0, n-1, k -> BI(n - 1,     k).*(BI(n + k, k)))).-(Z2(n).-(1).*(n).+(1))
A371700	lambdan	0	n -> { final int r = 1; final int t = 6; final int u = 1; return RU(0, n, k -> new Q(BI(n, k).*(BI(t*n + u*k + r, n)), t*n + u*k + r)).*(r).num(); }
A371723	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+5*k+2*2, 2), n).*(BI(n, k))./(new Q(n+5*k+4, 2))).num().*(2)	2 * Sum_{k=0..n} binomial(n,k)* binomial(n/2+5*k/2+2,n)/(n/2+5*k/2+2).
A371724	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+3*k+3, 2), n).*(BI(n, k))./(new Q(n+3*k+3, 3))).num()
A371725	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+5*k+5, 2), n).*(BI(n, k))./(new Q(n+5*k+5, 5))).num()
A371739	lambdan	0	n -> SU(0, n, k -> BI(5*n, k))
A371742	lambdan	0	n -> SU(0, n/2, k -> BI(3*n - k, n - 2*k))
A371743	lambdan	0	n -> SU(0, n/2, k -> BI(4*n - k, n - 2*k))
A371744	lambdan	0	n -> SU(0, n/2, k -> BI(5*n - k, n - 2*k))
A371753	lambdan	0	n -> SU(0, n/2, k -> BI(5*n - 2*k - 1, n - 2*k))
A371754	lambdan	0	n -> SU(0, n/2, k -> BI(3*n - 2*k,n - 3*k))
A371755	lambdan	0	n -> SU(0, n/2, k -> BI(4*n - 2*k,n - 3*k))
A371756	lambdan	0	n -> SU(0, n/2, k -> BI(5*n - 2*k,n - 3*k))
A371758	lambdan	0	n -> SU(0, n/3, k -> BI(2*n - 3*k-1, n - 3*k))
A371770	lambdan	0	n -> SU(0, n/3, k -> BI(3*n - 3*k - 1,n - 3*k))
A371771	lambdan	0	n -> SU(0, n/3, k -> BI(4*n - 3*k - 1,n - 3*k))
A371772	lambdan	0	n -> SU(0, n/3, k -> BI(5*n - 3*k - 1,n - 3*k))
A371773	lambdan	0	n -> SU(0, n/3, k -> BI(2*n - k + 1,n - 3*k))
A371774	lambdan	0	n -> SU(0, n/3, k -> BI(3*n - k + 1,n - 3*k))
A371775	lambdan	0	n -> SU(0, n/3, k -> BI(4*n - k + 1,n - 3*k))
A371776	lambdan	0	n -> SU(0, n/3, k -> BI(5*n - k + 1,n - 3*k))
A371777	lambdan	0	n -> SU(0, n/3, k -> BI(2*n + 2,n - 3*k))
A371778	lambdan	0	n -> SU(0, n/3, k -> BI(3*n + 2,n - 3*k))
A371779	lambdan	0	n -> SU(0, n/3, k -> BI(4*n + 2,n - 3*k))
A371780	lambdan	0	n -> SU(0, n/3, k -> BI(5*n + 2,n - 3*k))
A371785	lambdan	0	n -> SU(0, n/2, k -> Z_1(k).*(BI(3*n - k,n - 2*k)))
A371786	lambdan	0	n -> SU(0, n/2, k -> Z_1(k).*(BI(4*n - k,n - 2*k)))
A371787	lambdan	0	n -> SU(0, n/2, k -> Z_1(k).*(BI(5*n - k,n - 2*k)))
A371798	lambdan	0	n -> SU(0, n/2, k -> Z_1(k).*(BI(2*n - 2*k - 1,n - 2*k)))
A371813	lambdan	0	n -> SU(0, n, k -> Z_1(k).*(BI(3*n - k - 1,n - k)))
A371814	lambdan	0	n -> SU(0, n, k -> Z_1(k).*(BI(4*n - k - 1,n - k)))
A371815	lambdan	0	n -> SU(0, n/2, k -> Z_1(k).*(BI(4*n - 2*k - 1,n - 2*k)))
A371816	lambdan	0	n -> SU(0, n/3, k -> Z_1(k).*(BI(3*n - 3*k - 1,n - 3*k)))
A371817	lambdan	0	n -> SU(0, n/3, k -> Z_1(k).*(BI(4*n - 3*k - 1,n - 3*k)))
A371818	lambdan	0	n -> SU(0, n/3, k -> Z_1(k).*(BI(2*n - 2*k,n - 3*k)))
A371819	lambdan	0	n -> SU(0, n/3, k -> Z_1(k).*(BI(2*n - k + 1,n - 3*k)))
A371820	lambdan	0	n -> SU(0, n/3, k -> Z_1(k).*(BI(2*n + 2,n - 3*k)))
A371825	lambdan	0	n -> SU(0, n, k -> ZV(n).^(k).*(BI(2*n,n - k)))
A371826	lambdan	0	n -> SU(0, n/2, k -> ZV(n).^(k).*(BI(2*n - k,n - 2*k)))
A371827	lambdan	0	n -> SU(0, n/3, k -> ZV(n).^(k).*(BI(2*n - 2*k,n - 3*k)))
A371831	lambdan	0	n -> RU(1, n, k -> new Q(ZV(k).^(2), FA(k))).num()
A371832	lambdan	0	n -> RU(1, n, k -> new Q(ZV(k).^(2), FA(k))).den()
A371836	lambdan	0	n -> SU(0, n/2, k -> ZV(n).^(k).*(BI(2*n - 2*k - 1,n - 2*k)))
A371837	lambdan	0	n -> SU(0, n/3, k -> ZV(n).^(k).*(BI(2*n - 3*k - 1,n - 3*k)))
A371842	lambdan	0	n -> SU(0, n/3, k -> BI(2*n - 2*k + 1,n - 3*k))
A371843	multraf	0	(self, n) -> self.s(0).+(self.s(1))	""	new A022088(), new A033999()	a(n)=Annn(n)+Annn(n)
A371847	zbasex	25962	Z.ONE.shiftLeft(86243).subtract(Z.ONE)	Decimal expansion of 2^ 86243 - 1, the 28th Mersenne prime.      nonn,cons,fini,new      25962..26051    nyi     _Paolo Xausa_
A371848	zbasex	33265	Z.ONE.shiftLeft(110503).subtract(Z.ONE)	Decimal expansion of 2^110503 - 1, the 29th Mersenne prime.     nonn,cons,fini,new      33265..33354    nyi     _Paolo Xausa_
A371849	zbasex	39751	Z.ONE.shiftLeft(132049).subtract(Z.ONE)	Decimal expansion of 2^132049 - 1, the 30th Mersenne prime.     nonn,cons,fini,new      39751..39840    nyi     _Paolo Xausa_
A371854	lambdan	0	n -> SU(0, n/3, k -> BI(2*n - k + 2, n - 3*k))
A371870	lambdan	0	n -> SU(0, n/2, k -> BI(2*n - k -1, n - 2*k)    )
A371871	lambdan	0	n -> SU(0, n/3, k -> BI(2*n - 3*k - 2, n - 3*k) )
A371872	lambdan	0	n -> SU(0, n/3, k -> BI(2*n - 2*k - 1, n - 3*k) )
A371873	lambdan	0	n -> SU(0, n/3, k -> BI(2*n + 1, n - 3*k)       )
A371885	holos	1	[0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1]]	1,11,2,3,33,5,4,7,15,12,21,20,9,28,8,76,49,24,36,27,16,54,32,48,135,80,64,112,240,192,336,320,144,216
A371888	holos	0	[[0],[180,-105,15],[-240,158,-26],[72,-70,16],[-12,18,-6],[0,-1,1]]	1,1,2	0	0
A371889	lambdan	0	n -> (n == 0) ? Z.ONE : SU(0, n, k -> BI(n, k).*(n == k ? Z.ZERO : BI(n - 3*k, n - k - 1)))./(n)
A371890	lambdan	0	n -> (n == 0) ? Z.ONE : SU(0, n, k -> BI(n, k).*(n == k ? Z.ZERO : BI(n - 4*k, n - k - 1)))./(n)
A371891	lambdan	0	n -> n <= 1 ? Z.ONE : SU(0, n, k -> BI(n, k).*(BI(2*n - 4*k, n - k - 1)))./(n)	sum(k=0, n, binomial(n, k)*binomial(2*n-4*k, n-k-1))/n)
A371892	lambdan	0	n -> n == 0 ? Z.ONE : Z_1(n-1).*(SU(0, n, k -> BI(n, k).*(BI(2*n - 4*k - 2, n - 1))))./(n)
A371893	lambdan	0	n -> n == 0 ? Z.ONE : Z_1(n-1).*(SU(0, n, k -> BI(n, k).*(BI(3*n - 4*k - 2, n - 1))))./(n)
A371912	lingf	3	0,0,0,12,0,-6	1,-3,3,-1	0
A371913	lambdan	0	n -> (n == 0) ? Z.ONE : SU(0, n, k -> BI(n, k).*(n == k ? Z.ZERO : BI(n - 5*k, n - k - 1)))./(n)
A371914	lambdan	0	n -> n <= 1 ? Z.ONE : SU(0, n, k -> BI(n, k).*(BI(2*n - 5*k, n - k - 1)))./(n)
A371915	lambdan	0	n -> n <= 1 ? Z.ONE : SU(0, n, k -> BI(n, k).*(BI(3*n - 5*k, n - k - 1)))./(n)
A371932	lambdan	0	n -> n == 0 ? Z.ONE : SU(0, n, k -> BI(n, k).*(BI(3*n - 5*k - 2, n - 1))).*(Z_1(n - 1))./(n)	a(n)=if(n==0,1,(-1)^(n-1)*sum(k=0,n,binomial(n,k)*binomial(3*n-5*k-2,n-1))/n);
A371943	holos	0	[[0],[-6,5,-1],[4,-2],[-4,2],[2],[-1]]	0,0,0,1	0	0	RecurrenceTable[{a[n] == 2*a[n-1] + 2*(n-2)*(a[n-2] - a[n-3]) - (n-2)*(n-3)*a[n-4], a[0] == 0, a[1] == 0, a[2] == 0, a[3] == 1},
A371986	multraf	0	(self, n) -> self.s(0).*(self.s(1))	""	new A000032(), new A000108()	Product of Lucas and Catalan numbers: a(n) = A000032(n)*D000108(n).
A371987	lambdan	0	n -> RU(0, n, k -> BI(new Q(k+1, 3), n)./(k + 1).*(BI(n, k)).*(ZV(9).^(n))).num()
A371988	lambdan	0	n -> RU(0, n, k -> BI(new Q(k+1, 4), n)./(k + 1).*(BI(n, k)).*(ZV(16).^(n))).num()
A371989	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+k+1, 3), n)./(n + k + 1).*(BI(n, k)).*(ZV(9).^(n))).num()
A371990	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+k+1, 4), n)./(n + k + 1).*(BI(n, k)).*(ZV(16).^(n))).num()
A372002	lambdan	0	n -> RU(0, n, k -> BI(new Q(n-k+1, 2), k).*(ZV(4).^(k)).*(BI(k, n-k))./(n-k+1)).num()
A372003	lambdan	0	n -> RU(0, n, k -> BI(new Q(n-k+1, 3), k).*(ZV(9).^(k)).*(BI(k, n-k))./(n-k+1)).num()
A372004	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+1, 3), k).*(ZV(9).^(k)).*(BI(k, n-k)))./(n+1).num()
A372005	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+1, 4), k).*(ZV(16).^(k)).*(BI(k, n-k)))./(n+1).num()
A372006	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+1, 5), k).*(ZV(25).^(k)).*(BI(k, n-k)))./(n+1).num()
A372010	lambdan	1	n -> ZV(10).^(n - 1).+(ZV(10).^(n/2)).-(1)	10^(n-1)+ 10 ^ (n \ 2)- 1
A372012	lambdan	0	n -> RU(0, n, k -> BI(new Q(k, 2), n-k)./(n - k + 1).*(BI(n, k)).*(Z_1(n)).*(ZV(4).^(n - k))).num()
A372013	lambdan	0	n -> RU(0, n, k -> BI(new Q(k, 3), n-k)./(n - k + 1).*(BI(n, k)).*(Z_1(n)).*(ZV(9).^(n - k))).num()
A372015	lingf	0	0,1,-1	1,-5,5,5,-5,1	0
A372016	lambdan	0	n -> RU(0, n, k -> BI(new Q(n-k+1, 2), k).*(ZV(4).^(k)).*(BI(n-1, n-k))./(n-k+1)).num()
A372017	lambdan	0	n -> RU(0, n, k -> BI(new Q(n-k+1, 3), k).*(ZV(9).^(k)).*(BI(n-1, n-k))./(n-k+1)).num()
A372018	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+1, 2), k).*(ZV(4).^(k)).*(BI(n-1, n-k)))./(n+1).num()
A372019	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+1, 3), k).*(ZV(9).^(k)).*(BI(n-1, n-k)))./(n+1).num()
A372020	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+1, 4), k).*(ZV(16).^(k)).*(BI(n-1, n-k)))./(n+1).num()
A372021	lambdan	0	n -> RU(0, n, k -> BI(new Q(n-k+1, 2), k).*(ZV(4).^(k)).*(BI(n+k-1, n-k))./(n-k+1)).num()
A372022	lambdan	0	n -> RU(0, n, k -> BI(new Q(n-k+1, 3), k).*(ZV(9).^(k)).*(BI(n+k-1, n-k))./(n-k+1)).num()
A372023	lambdan	0	n -> RU(0, n, k -> BI(new Q(1, 2),  k).*(ZV( 4).^(k)).*(BI(n-1, n-k))).num()
A372024	lambdan	0	n -> RU(0, n, k -> BI(new Q(1, 3), k).*(ZV( 9).^(k)).*(BI(n-1, n-k))).num()
A372025	lingf	3	0,0,0,12,18,-6	1,-3,3,-1	0
A372026	lingf	3	0,0,0,12,9,-3,17,-5,1,0,1	1,-2,1	0
A372027	lingf	3	0,0,0,12,-3,-2,0,-3,3,-1	1,-3,3,-1	0
A372035	lambdan	0	n -> RU(0, n, k -> BI(new Q(k+1, 2), k).*(ZV(4).^(k)).*(BI(n-1, n-k))./(k+1)).num()
A372036	lambdan	0	n -> RU(0, n, k -> BI(new Q(k+1, 3), k).*(ZV(9).^(k)).*(BI(n-1, n-k))./(k+1)).num()
A372037	lambdan	0	n -> RU(0, n, k -> BI(new Q(k+1, 2), k).*(ZV(4).^(k)).*(BI(k, n-k))./(k+1)).num()
A372038	lambdan	0	n -> RU(0, n, k -> BI(new Q(k+1, 3), k).*(ZV(9).^(k)).*(BI(k, n-k))./(k+1)).num()
A372039	lambdan	0	n -> RU(0, n, k -> BI(new Q(1, 3), k).*(ZV( 9).^(k)).*(BI(k, n-k))).num()
A372086	lambdan	0	n -> RU(0, n, k -> BI(new Q(3*k-1, 2), k).*(ZV(4).^(k)).*(BI(k, n-k))./(k+1)).num()
A372087	lambdan	0	n -> RU(0, n, k -> BI(new Q(4*k-2, 3), k).*(ZV(9).^(k)).*(BI(k, n-k))./(k+1)).num()
A372088	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+k-1, 2), k).*(ZV(4).^(k)).*(BI(k, n-k))./(n-k+1)).num()
A372089	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+2*k-2, 3), k).*(ZV(9).^(k)).*(BI(k, n-k))./(n-k+1)).num()
A372090	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+k*2-1, 2), k).*(ZV(4).^(k)).*(BI(k, n-k)))./(n+1).num()
A372091	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+k*3-2, 3), k).*(ZV(9).^(k)).*(BI(k, n-k)))./(n+1).num()
A372104	lambdan	0	n -> RU(0, n, k -> BI(new Q(3*k-1, 2), k).*(ZV(4).^(k)).*(BI(n-1, n-k))./(k+1)).num()
A372105	lambdan	0	n -> RU(0, n, k -> BI(new Q(4*k-2, 3), k).*(ZV(9).^(k)).*(BI(n-1, n-k))./(k+1)).num()
A372107	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+k-1, 2), k).*(ZV(4).^(k)).*(BI(n-1, n-k))./(n-k+1)).num()
A372108	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+2*k-2, 3), k).*(ZV(9).^(k)).*(BI(n-1, n-k))./(n-k+1)).num()
A372109	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+k*2-1, 2), k).*(ZV(4).^(k)).*(BI(n-1, n-k)))./(n+1).num()
A372110	lambdan	0	n -> RU(0, n, k -> BI(new Q(n+k*3-2, 3), k).*(ZV(9).^(k)).*(BI(n-1, n-k)))./(n+1).num()
A372115	lambdan	0	n -> RU(0, n, k -> BI(new Q(k, 2), n - k).*(ZV( 4).^(n-k)).*(BI(2*k, k))./(k+1)).num()
A372124	lambdan	0	n -> RU(0, n, k -> BI(new Q(k, 3), n - k).*(ZV( 9).^(n-k)).*(BI(2*k, k))./(k+1)).num()
A372125	lambdan	0	n -> RU(0, n , k -> BI(new Q(k, 2), n - k).*(ZV( 4).^(n-k)).*(BI(n+k, k)))./(n+1).num()
A372126	lambdan	0	n -> RU(0, n , k -> BI(new Q(k, 3), n - k).*(ZV( 9).^(n-k)).*(BI(n+k, k)))./(n+1).num()
A372136	lambdan	0	n -> RU(0, n, k -> BI(new Q(k, 3), n - k).*(ZV( 9).^(n-k)).*(BI(n+2*k, k))./(n+k+1)).num()
A372137	lambdan	0	n -> RU(0, n, k -> BI(new Q(k, 3), n - k).*(ZV( 9).^(n-k)).*(BI(3*k, k))./(2*k+1)).num()
A372138	lambdan	0	n -> RU(0, n, k -> BI(new Q(k, 2), n - k).*(ZV( 4).^(n-k)).*(BI(n+2*k, k))./(n+k+1)).num()
A372139	lambdan	0	n -> RU(0, n, k -> BI(new Q(k, 2), n - k).*(ZV( 4).^(n-k)).*(BI(3*k, k))./(2*k+1)).num()
A372148	lingf	1	0,1,8,13,6	1,-6,11,-6	0
A372154	lambdan	0	n -> { final int r=2; final int s=1; final int t=1; final int u=0; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(r).*(FA(n)).num()      ; }
A372155	lambdan	0	n -> { final int r=3; final int s=1; final int t=1; final int u=0; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(r).*(FA(n)).num()      ; }
A372156	lambdan	0	n -> { final int r=2; final int s=1; final int t=0; final int u=1; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(r).*(FA(n)).num()      ; }
A372157	lambdan	0	n -> { final int r=3; final int s=1; final int t=0; final int u=1; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(r).*(FA(n)).num()      ; }
A372158	lambdan	0	n -> { final int r=2; final int s=1; final int t=1; final int u=0; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(r).*(FA(n)).num()      ; }
A372159	lambdan	0	n -> { final int r=3; final int s=1; final int t=1; final int u=0; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(r).*(FA(n)).num()      ; }
A372160	lambdan	0	n -> { final int r=2; final int s=1; final int t=0; final int u=1; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(r).*(FA(n)).num()      ; }
A372161	lambdan	0	n -> { final int r=3; final int s=1; final int t=0; final int u=1; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(r).*(FA(n)).num()      ; }
A372162	lambdan	0	n -> RU(0, n  , k -> new Q(ZV(k+1).^(k-1)).*(ZV(2).^(n-k)).*(BI(new Q(k, 2), n-k))./(FA(k))).*(FA(n)).num()
A372163	lambdan	0	n -> RU(0, n  , k -> new Q(ZV(k+1).^(k-1)).*(ZV(3).^(n-k)).*(BI(new Q(k, 3), n-k))./(FA(k))).*(FA(n)).num()
A372164	lambdan	0	n -> { final int r=2; final int s=1; final int t=5; final int u=2; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(r).*(FA(n)).num()      ; }
A372165	lambdan	0	n -> { final int r=2; final int s=1; final int t=5; final int u=2; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(r).*(FA(n)).num()      ; }
A372177	lambdan	0	n -> RU(0, n, k -> new Q(n + k + 2, 2).^(n-1).*(BI(n, k))).num()	a(n, r=1, t=1/2, u=1/2) = r*sum(k=0, n, (t*n+u*k+r)^(n-1)*binomial(n, k));
A372178	lambdan	0	n -> { final int r=2; final int s=1; final int t=1; final int u=2; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(r).*(FA(n)).num()      ; }
A372179	lambdan	0	n -> { final int r=2; final int s=1; final int t=1; final int u=2; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(r).*(FA(n)).num()      ; }
A372182	lambdan	0	n -> { final int r=1; final int s=1; final int t=5; final int u=2; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(r).*(FA(n)).num()      ; }
A372183	lambdan	0	n -> { final int r=1; final int s=1; final int t=5; final int u=2; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(r).*(FA(n)).num()      ; }
A372184	lambdan	0	n -> PR(1, n - 1, k -> ZV(k*(k + 1)/2).*(ZV(2*k + 1).^(2)))	(1/2)*(n+1)*n*(2*n+1)^2)
A372186	filnum	1	0	n -> ZV(20*n + 1).IPP() && ZV(80*n + 1).IPP() && ZV(100*n + 1).IPP() && ZV(200*n + 1).IPP()	80).*(n).+(1)&&isprime(100).*(n).+(1)&&isprime(200).*(n).+(1).IPP()		isprime(20*n+1)&&isprime(80*n+1)&&isprime(100*n+1)&&isprime(200*n+1)
A372188	filnum	1	0	n -> ZV(18*n + 1).IPP() && ZV(36*n + 1).IPP() && ZV(108*n + 1).IPP() && ZV(162*n + 1).IPP()	36).*(n).+(1)&&isprime(108).*(n).+(1)&&isprime(162).*(n).+(1).IPP()		isprime(18*n+1)&&isprime(36*n+1)&&isprime(108*n+1)&&isprime(162*n+1)
A372199	multraf	1	(self, n) -> self.s(0).*(self.s(1))./(self.s(2))	""	new A000045(), new A000254(), new A002805()	a(n)=Annn(n)*Annn(n)/Annn(n)		A000045,A000254,A002805			a(n) = n! * F(n) * H(n), where F(n) is the n-th Fibonacci number and H(n) the n-th harmonic number.
A372200	lambdan	0	n -> { final int r=2; final int s=2; final int t=0, u=1; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(FA(n)).*(r).num(); }
A372201	lambdan	0	n -> { final int r=3; final int s=3; final int t=0, u=1; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(n+(s-1)*k-1, n-k))./(FA(k))).*(FA(n)).*(r).num(); }
A372202	lambdan	0	n -> { final int r=2; final int s=2; final int t=0, u=1; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(FA(n)).*(r).num(); }
A372203	lambdan	0	n -> { final int r=3; final int s=3; final int t=0, u=1; return RU(0, n, k -> new Q(t*k+u*(n-k)+r).^(k-1).*(BI(s*k, n-k)        )./(FA(k))).*(FA(n)).*(r).num(); }
A372216	multraf	0	(self, n) -> self.s(0).*(self.s(1))	""	new A000125(), new A000108()	Product of n-th Pell number and n-th Catalan number: a(n) = A000129(n)*D000108(n).
A372226	lambdan	1	n -> SD(n, d -> Functions.PHI.z(d).*(JF(d).sigma(2)))		sigma(d,2));
A372227	lambdan	0	n -> SD(n, d -> Functions.PHI.z(d).*(Functions.SIGMA.z(ZV(d).^(2))))		sigma(d^2));
A372228	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A066068()	new A006530()	a(n)=Annn(Annn(n))
A372229	multrafd	2	(self, n) -> SEQ.a(self.s(0))	""	new A061190()	new A006530()	a(n)=Annn(Annn(n))
A372232	simtraf	0	new A372177()	(n, v) -> Z2(n).*(v)
A372233	lambdan	0	n -> { final int s=2; final int t=1; final int u= 1; return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372235	lambdan	0	n -> RU(0, n, k -> new Q(3*k+2, 2).^(n-1).*(BI(n, k))).num()
A372236	lambdan	0	n -> RU(0, n, k -> new Q(1*k+2, 2).^(n-1).*(BI(n, k))).num()
A372246	lambdan	0	n -> RU(0, n, k -> new Q(2*n + k + 2, 2).^(n-1).*(BI(n, k))).num()
A372251	lambdan	0	n -> RU(0, n, k -> new Q(2*n+k+1, 2).^(n-1).*(BI(n, k)))./(2).num()
A372252	lingf	0	0,1,4,0,4,-1	1,-4,2,8,-5,-8,2,4,1	0
A372278	lambdan	0	n -> RU(0, n, k -> new Q(5*k+2, 2).^(n-1).*(BI(n, k))).num()
A372279	lambdan	0	n -> RU(0, n, k -> new Q(5*k, 2).^(n-k).*(new Q(5*k+2, 2).^(k-1).*(BI(n, k)))).num()
A372315	lambdan	0	n -> SU(0, n, k -> ZV(2*k+1).^(k-1).*(BI(n, k)))
A372316	lambdan	0	n -> SU(0, n, k -> ZV(3*k+1).^(k-1).*(BI(n, k)))
A372320	lambdan	0	n -> SU(0, n, k -> ZV(2*k-1).^(k-1).*(BI(n, k)))
A372321	lambdan	0	n -> SU(0, n, k -> ZV(3*k-1).^(k-1).*(BI(n, k)))
A372333	lambdan	0	n -> SU(1, n, k -> ZV(2*k)  .^(k-1).*(BI(n, k)))
A372334	lambdan	0	n -> SU(1, n, k -> ZV(3*k)  .^(k-1).*(BI(n, k)))
A372369	lambdan	0	n -> { final int s=2; final int t=3; final int u=-1; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((t+u)*n-k, n-s*k))                     )  ; }
A372370	lambdan	0	n -> { final int s=2; final int t=2; final int u=-1; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((t+u)*n-k, n-s*k))                     )  ; }
A372371	lambdan	0	n -> { final int s=3; final int t=2; final int u=-1; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((t+u)*n-k, n-s*k))                     )  ; }
A372372	lambdan	0	n -> { final int s=3; final int t=3; final int u=-1; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((t+u)*n-k, n-s*k))                     )  ; }
A372373	lambdan	0	n -> { final int s=3; final int t=3; final int u=-2; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((t+u)*n-k, n-s*k))                     )  ; }
A372374	lambdan	0	n -> { final int s=3; final int t=3; final int u= 0; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((t+u)*n-k, n-s*k))                     )  ; }
A372375	lambdan	0	n -> { final int s=3; final int t=2; final int u=-1; return SU(0, n/s, k -> BI(t*(n+1), k).*(BI((t+u)*(n+1)-k, n-s*k)))./(n+1)            ; }
A372376	lambdan	0	n -> { final int s=3; final int t=3; final int u=-1; return SU(0, n/s, k -> BI(t*(n+1), k).*(BI((t+u)*(n+1)-k, n-s*k)))./(n+1)            ; }
A372377	lambdan	0	n -> { final int s=3; final int t=3; final int u=-2; return SU(0, n/s, k -> BI(t*(n+1), k).*(BI((t+u)*(n+1)-k, n-s*k)))./(n+1)            ; }
A372378	lambdan	0	n -> { final int s=3; final int t=3; final int u= 0; return SU(0, n/s, k -> BI(t*(n+1), k).*(BI((t+u)*(n+1)-k, n-s*k)))./(n+1)            ; }
A372382	lambdan	0	n -> { final int s=2; final int t=4; final int u=-3; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((t+u)*n-k, n-s*k))                     )  ; }
A372383	lambdan	0	n -> { final int s=2; final int t=4; final int u=-3; return SU(0, n/s, k -> BI(t*(n+1), k).*(BI((t+u)*(n+1)-k, n-s*k)))./(n+1)            ; }
A372410	lambdan	0	n -> { final int s=2; final int t=1; final int u= 3; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((u-t+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372411	lambdan	0	n -> { final int s=2; final int t=2; final int u= 3; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((u-t+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372412	lambdan	0	n -> { final int s=2; final int t=3; final int u= 3; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((u-t+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372413	lambdan	0	n -> { final int s=3; final int t=1; final int u= 1; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((u-t+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372414	lambdan	0	n -> { final int s=3; final int t=1; final int u= 2; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((u-t+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372415	lambdan	0	n -> { final int s=3; final int t=1; final int u= 3; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((u-t+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372416	lambdan	0	n -> { final int s=3; final int t=2; final int u= 2; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((u-t+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372417	lambdan	0	n -> { final int s=3; final int t=2; final int u= 3; return SU(0, n/s, k -> BI(t*n, k)    .*(BI((u-t+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372418	lambdan	0	n -> { final int s=3; final int t=2; final int u= 2; return SU(0, n/s, k -> BI(t*(n+1), k).*(BI((u-t+1)*(n+1)-(s-1)*k-2, n-s*k)))./(n+1)  ; }
A372433	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A005117()	new A000120()	a(n)=Annn(Annn(n))
A372458	lambdan	0	n -> { final int s=2; final int t=2; final int u= 1; return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372459	lambdan	0	n -> { final int s=3; final int t=2; final int u= 1; return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372460	lambdan	0	n -> { final int s=2; final int t=2; final int u= 2; return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372461	lambdan	0	n -> { final int s=3; final int t=2; final int u= 2; return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372462	lambdan	0	n -> { final int s=2; final int t=2; final int u= 1; return SU(0, n/s, k -> Z_1(k).*(BI(t*n+k-1, k)).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k)))   ; }
A372463	lambdan	0	n -> { final int s=3; final int t=2; final int u= 1; return SU(0, n/s, k -> Z_1(k).*(BI(t*n+k-1, k)).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k)))   ; }
A372464	lambdan	0	n -> { final int s=2; final int t=2; final int u= 2; return SU(0, n/s, k -> Z_1(k).*(BI(t*n+k-1, k)).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k)))   ; }
A372465	lambdan	0	n -> { final int s=3; final int t=2; final int u= 2; return SU(0, n/s, k -> Z_1(k).*(BI(t*n+k-1, k)).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k)))   ; }
A372466	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A036537()	new A051903()	a(n)=Annn(Annn(n))
A372467	dirtraf	0	new A051903()	new A036537()	v -> v.+(1)
A372468	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A036537()	new A000005()	a(n)=Annn(Annn(n))
A372470	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A359473(), new A000005()	a(n)=Annn(n)*Annn(n)
A372476	lambdan	0	n -> { final int s=3; final int t=1; final int u= 1; return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372505	dirtraf	0	new A005361()	new A138302()
A372506	lambdan	0	n -> { final int s=1; final int t=1; final int u= 1; return SU(0, n/s, k -> BI(t*n+k-1, k).*(BI((t+u+1)*n-(s-1)*k-1, n-s*k))           )  ; }
A372507	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A067381()	new A000720()	a(n)=Annn(Annn(n))		D000720,A067381
A372546	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A066068()	new A001221()	a(n)=Annn(Annn(n))		D001221,A066068
A372583	lingf	1	0,1,11,21,11,1	1,-6,15,-20,15,-6,1	0
A372599	multrafd	0	(self, n) -> SEQ.a(self.s(0))	""	new A061190()	new A001221()	a(n)=Annn(Annn(n))		D001221,A061190
A372601	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A350390()	new A051903()	a(n)=Annn(Annn(n))
A372602	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A008833()	new A051903()	a(n)=Annn(Annn(n))
A372603	multrafd	1	(self, n) -> SEQ.a(self.s(0))	""	new A057521()	new A051903()	a(n)=Annn(Annn(n))
A372608	multraf	1	(self, n) -> self.s(0).*(self.s(1))	""	new A000010(), new A070639()	a(n)=Annn(n)*Annn(n)
A372619	arrlamb	1	1	1	-1	(n, k) -> SU(1, n, j -> Functions.PHI.z(k*j))./(Functions.PHI.z(k))	Square array T(n,k), n >= 1, k >= 1, read by antidiagonals downwards, where T(n,k) = 1/(phi(k)) * Sum_{j=1..n} phi(k*j).
A372621	lambdan	1	n -> SU(1, n, k -> Functions.PHI.z(k*3))./(2)
A372622	lambdan	1	n -> SU(1, n, k -> Functions.PHI.z(k*5,))./(4 )
A372633	lambdan	1	n -> SU(1, n, j -> SU(1, n, k -> Functions.PHI.z(j*k)))	Sum_{j=1..n} Sum_{k=1..n} phi(j*k).	nonn,nice,new	1..10000	nyi
A372635	lambdan	1	n -> SU(1, n, j -> SU(1, n, k -> Functions.PHI.z(j).*(Functions.PHI.z(k))))	Sum_{j=1..n} Sum_{k=1..n} phi(j)*phi(k).	nonn,new	1..41	nyi
A372636	lambdan	1	n -> RU(1, n, j -> RU(1, n, k -> new Q(Functions.PHI.z(j*k), Functions.PHI.z(k)))).num()	Sum_{j=1..n} Sum_{k=1..n} phi(j*k) / phi(k).	nonn,new	1..10000	nyi
A372637	lambdan	1	n -> SU(1, n, k -> Functions.PHI.z(k*6,))./(2 )
A372638	lambdan	1	n -> SU(1, n, k -> Functions.PHI.z(k*7,))./(6 )
A372639	lambdan	1	n -> SU(1, n, k -> Functions.PHI.z(k*10))./(4 )
A372661	lambdan	0	n -> SU(1, n, i -> SU(1, n, j -> SU(1, n, k -> Functions.PHI.z(i*j*k))))	a(n) = Sum_{i=1..n} Sum_{j=1..n} Sum_{k=1..n} phi(i*j*k).	nonn,new	1..1000	nyi	_Seiichi Manyama_              
A372662	lambdan	1	n -> RU(1, n, i -> RU(1, n, j -> RU(1, n, k -> new Q(Functions.PHI.z(i*j*k), Functions.PHI.z(k))))).num()	a(n) =              Sum_{i=1..n} Sum_{j=1..n} Sum_{k=1..n} phi(i*j*k) / phi(k).	nonn,new	1..35	nyi
A372663	lambdan	1	n -> RU(1, n, i -> RU(1, n, j -> RU(1, n, k -> new Q(Functions.PHI.z(i*j*k), Functions.PHI.z(j*k))))).num()	a(n) =              Sum_{i=1..n} Sum_{j=1..n} Sum_{k=1..n} phi(i*j*k) / phi(j*k).	nonn,new	1..39	nyi
A372664	lambdan	1	n -> RU(1, n, j -> RU(1, n, k -> new Q(Functions.PHI.z(2*j*k), Functions.PHI.z(k)))).num()	a(n) =              Sum_{j=1..n} Sum_{k=1..n} phi(2*j*k) / phi(k).	nonn,new	1..43	nyi
A372665	lambdan	1	n -> RU(1, n, j -> RU(1, n, k -> new Q(Functions.PHI.z(2*j*k), Functions.PHI.z(j*k)))).num()	a(n) =              Sum_{j=1..n} Sum_{k=1..n} phi(2*j*k) / phi(j*k).	nonn,new	1..50	nyi
A372668	lambdan	0	n -> SU(1, n, j -> SU(1, n, k -> Functions.PHI.z(n*j*k)))./(Functions.PHI.z(n))	a(n) = (1/phi(n)) * Sum_{j=1..n} Sum_{k=1..n} phi(n*j*k).	nonn,new	1..40	nyi	_Seiichi Manyama_              
A372669	lambdan	1	n -> RU(1, n, j -> RU(1, n, k -> new Q(Functions.PHI.z(n*j*k), Functions.PHI.z(n*k)))).num()	a(n) = Sum_{j=1..n} Sum_{k=1..n} phi(n*j*k) / phi(n*k).	nonn,new	1..44	nyi
A372671	lambdan	1	n -> Functions.PHI.z(n*12)./(4 )
A372672	lambdan	1	n -> Functions.PHI.z(n*10)./(4 )
A372673	arrlamb	1	1	1	-1	(n, k) -> Functions.PHI.z(k*n)./(Functions.PHI.z(k))
A372674	lambdan	1	n -> SU(1, n, j -> SU(1, n, k -> Functions.TAU.z(j*k)))	a(n) =              Sum_{j=1..n} Sum_{k=1..n} tau(j*k).
A372675	lambdan	1	n -> SU(1, n, j -> SU(1, n, k -> Functions.SIGMA.z(j*k)))	a(n) =              Sum_{j=1..n} Sum_{k=1..n} sigma(j*k).
A372676	lambdan	1	n -> Functions.PHI.z(n*11)./(10)
A372677	lambdan	1	n -> Functions.PHI.z(n*13)./(12)
A372678	lambdan	1	n -> Functions.PHI.z(n*14)./(6 )
A372679	lambdan	1	n -> Functions.PHI.z(n*15)./(8 )
A372681	lambdan	1	n -> Functions.PHI.z(n*17)./(16)
A372706	lambdan	1	n -> SU(1, n, k -> Functions.MOEBIUS.z(n*k))	= Sum_{k=1..n} mu(n*k), where mu is the
A372709	lambdan	1	n -> SU(1, n, k -> Functions.TAU.z(n*k))	= Sum_{k=1..n} tau(n*k), where tau(n) =
A372710	lambdan	1	n -> SU(1, n, k -> Functions.SIGMA.z(n*k))	= Sum_{k=1..n} sigma(n*k),	nonn,new
A372713	lambdan	1	n -> Functions.SIGMA0.z(3*n)	a(n) = tau(3*n) = A000005(3*n).	nonn,new	1..80	nyi
A372714	lambdan	1	n -> Functions.SIGMA0.z(3*n - 1)	a(n) = tau(3*n-1) = A000005(3*n-1).	nonn,new	1..86	nyi
A372715	lambdan	1	n -> Functions.SIGMA0.z(3*n - 2)	a(n) = tau(3*n-2) = A000005(3*n-2).	nonn,new	1..86	nyi
A372784	lambdan	1	n -> Functions.TAU.z(4*n)	a(n) = tau( 4*n) = A000005(4*n).	nonn,new	1..76	nyi
A372785	lambdan	1	n -> Functions.TAU.z(5*n)	a(n) = tau( 5*n) = A000005(5*n).	nonn,new	1..80	nyi
A372786	lambdan	1	n -> Functions.TAU.z(6*n)	a(n) = tau( 6*n) = A000005(6*n).	nonn,new	1..72	nyi
A372787	lambdan	1	n -> Functions.TAU.z(7*n)	a(n) = tau( 7*n) = A000005(7*n).	nonn,new	1..79	nyi
A372788	lambdan	1	n -> Functions.TAU.z(8*n)	a(n) = tau( 8*n) = A000005(8*n).	nonn,new	1..72	nyi
A372789	lambdan	1	n -> Functions.TAU.z(9*n)	a(n) = tau( 9*n) = A000005(9*n).	nonn,new	1..75	nyi
A372790	lambdan	1	n -> Functions.TAU.z(10*n)	a(n) = tau(10*n) = A000005(10*n).	nonn,new	1..72	nyi
A372791	lambdan	1	n -> Functions.TAU.z(11*n)	a(n) = tau(11*n) = A000005(11*n).	nonn,new	1..78	nyi
A372792	lambdan	1	n -> Functions.TAU.z(12*n)	a(n) = tau(12*n) = A000005(12*n).	nonn,new	1..66	nyi
A372808	lambdan	0	n -> Functions.DIGIT_SUM.z(new Z(Z.FIVE.^(n).toString().replace('9','4').replace('8','3').replace('7','2').replace('6','1').replace('5','0')))	a(n) = sum of the digits (mod 5) of 5^n.
A372829	lambdan	0	n -> RU(0, n/2, k -> new Q(FA(k), FA(2*k))).*(FA(n)).num()	nonn,new	0..22	nyi	_Ilya Gutkovskiy_
A372832	lambdan	1	n -> { final int sn = IntegerUtils.sqrt(n); return RD(n, d -> d <= sn ? new Q(1, d) : Q.ZERO).num(); }	is the numerator of Sum_{d|n, d <= sqrt(n)} 1/d.	nonn,frac,new	1..80	nyi
A372833	lambdan	1	n -> { final int sn = IntegerUtils.sqrt(n); return RD(n, d -> d <= sn ? new Q(1, d) : Q.ZERO).den(); }	is the denominator of Sum_{d|n, d <= sqrt(n)} 1/d.	nonn,frac,new	1..80	nyi
A372834	lambdan	1	n -> RD(n, d -> d*d < n ? new Q(1, d) : Q.ZERO).num()	numerator of Sum_{d|n, d < sqrt(n)} 1/d.	nonn,frac,new	1..80	nyi
A372835	lambdan	1	n -> RD(n, d -> 1 < d && d*d < n ? new Q(1, d) : Q.ZERO).den()	denominator of Sum_{d|n, d < sqrt(n)} 1/d.	nonn,frac,new	1..80	nyi
A372836	lambdan	1	n -> RD(n, d -> 1 < d && d < n ? new Q(1, d) : Q.ZERO).num()	numerator of Sum_{d|n, 1 < d < n} 1/d.	nonn,frac,new	1..80	nyi
A372881	lambdan	0	n -> SU(1, n, j -> SU(1, n, k -> ZV(j*k).gcd(ZV(n))))	a(n) = Sum_{j=1..n} Sum_{k=1..n} gcd(j*k,n).	nonn,mult,new	1..48	nyi	_Seiichi Manyama_
A372882	lambdan	0	n -> SU(1, n, k -> ZV(k).^(3).gcd(ZV(n)))	a(n) = Sum_{k=1..n} gcd(k^3,n).	nonn,mult,new	
A372918	lambdan	1	n -> SU(1, n, k -> ZV(k).^(3).gcd(ZV(n).*(n)))
A372921	trilambn	0	(n, k) -> RU(0, n - k, i -> new Q(Z_1(i).*(BI(n - k, i)).*(PR(1, n - i, j -> ZV(3*j - 2))).*(FA(n)), FA(n - k).*(PR(1, k, m -> ZV(3*m - 2))))).num()
A372926	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(2)).*(JF(d).sigma(2)))	a(n) = sumdiv(n, d, moebius(n/d)*d    ^2*sigma(d, 2));
A372927	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(2)).*(JF(d).sigma(3)))	a(n) = sumdiv(n, d, moebius(n/d)*d    ^2*sigma(d, 3));
A372928	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(3)).*(Functions.SIGMA0.z(d)))	umdiv(d))		a(n) = sumdiv(n, d, moebius(n/d)*d    ^3*numdiv(d));
A372929	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(3)).*(Functions.SIGMA.z(d)))	sigma(d))		a(n) = sumdiv(n, d, moebius(n/d)*d    ^3*sigma(d));
A372930	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(3)).*(JF(d).sigma(2)))	a(n) = sumdiv(n, d, moebius(n/d)*d    ^3*sigma(d, 2));
A372931	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(4)).*(Functions.SIGMA0.z(d)))	umdiv(d))		a(n) = sumdiv(n, d, moebius(n/d)*d    ^4*numdiv(d));
A372937	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(4)).*(Functions.SIGMA.z(d)))	a(n) = sumdiv(n, d, moebius(n/d)*d^4*sigma(d));
A372938	arrlamb	0	1	1	-1	(n, k) -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(k)).*(Functions.SIGMA0.z(d)))	n -> T(n, k) = sumdiv(n, d, moebius(n/d)*d^k*numdiv(d));
A372939	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(d).^(n)).*(Functions.SIGMA0.z(d)))	a(n) = sumdiv(n, d, moebius(n/d)*d^n*numdiv(d));
A372950	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(n/d).^(3)).*(JF(d).sigma(5)))	a(n) = sumdiv(n, d, moebius(n/d)*(n/d)^3*sigma(d, 5));
A372952	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(n/d)).*(JF(d).sigma(4)))	a(n) = sumdiv(n, d, moebius(n/d)*(n/d)  *sigma(d, 4));
A372961	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(n/d)).*(JF(d).sigma(5)))	a(n) = sumdiv(n, d, moebius(n/d)*(n/d)  *sigma(d, 5));
A372962	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(n/d).^(2)).*(JF(d).sigma(5)))	a(n) = sumdiv(n, d, moebius(n/d)*(n/d)^2*sigma(d, 5));
A372963	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(n/d).^(2)).*(JF(d).sigma(6)))	a(n) = sumdiv(n, d, moebius(n/d)*(n/d)^2*sigma(d, 6));
A372964	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(n/d).^(3)).*(JF(d).sigma(7)))	a(n) = sumdiv(n, d, moebius(n/d)*(n/d)^3*sigma(d, 7));
A372965	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(n/d).^(4)).*(JF(d).sigma(5)))	a(n) = sumdiv(n, d, moebius(n/d)*(n/d)^4*sigma(d, 5));
A372966	lambdan	1	n -> JF(n*n).sigma(8)./(JF(n*n).sigma(4))
A372968	arrlamb	0	1	1	-1	(n, k) -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(n/d).*(JF(d).sigma(k + 1)))         	n -> T(n, k) = sumdiv(n, d, moebius(n/d)*n/d*sigma(d, k+1));
A372969	lambdan	1	n -> SD(n, d -> Functions.MOEBIUS.z(n/d).*(ZV(n/d)).*(JF(d).sigma(n + 1)))	a(n) = sumdiv(n, d, moebius(n/d)*(n/d)  *sigma(d, n+1));
A372970	multrar	1	(self, n) -> ZV(n)./(self.a(n - 1).max(self.a(n/2)))	"1"		a(1)=1, then a(n) = floor(n/max(a(n-1),a(floor(n/2)))).	nonn,new
A372971	multrar	1	(self, n) -> ZV(n)./(self.a(n - 1).min(self.a(n/2)))	"1"		a(1)=1, then a(n) = floor(n/min(a(n-1),a(floor(n/2)))).	nonn,look,new
A372977	trilambn	0	0	0	(n, k) -> BI(n - 4*k, n - k - 1)
A372996	lambdan	1	n -> SD(n, d -> Functions.PHI.z(d).*(JF(ZV(d).^(2)).sigma(2)))	a(n) = sumdiv(n, d, eulerphi(d)*sigma(d^2, 2));
A372997	lambdan	1	n -> SU(1, n, k -> Functions.TAU.z(ZV(n/IntegerUtils.gcd(k, n)).^(3)))	a(n) = Sum_{k=1..n} tau( (n/gcd(k,n))^3 ).
A372998	lambdan	0	n -> SD(n, d -> Functions.PHI.z(d).*(Functions.SIGMA.z(ZV(d).^(3))))		sigma(d^3));
A372999	lambdan	1	n -> SD(n, d -> Functions.PHI.z(d).*(Functions.SIGMA0.z(ZV(d).^(4))))	a(n) = sumdiv(n, d, eulerphi(d)*numdiv(d^4));
A373000	lambdan	1	n -> SD(n, d -> Functions.PHI.z(d).*(Functions.SIGMA.z(ZV(d).^(4))))		sigma(d^4));
A373002	lambdan	1	n -> SD(n, d -> Functions.PHI.z(d).*(Functions.SIGMA0.z(ZV(d).^(n))))		numdi(d^n));
A373003	lambdan	1	n -> SD(n, d -> Functions.PHI.z(d).*(Functions.SIGMA0.z(ZV(d).^(n))))./(n)		numdi(d^n))/n;
A373004	lambdan	1	n -> SD(n, d -> Functions.PHI.z(d).*(Functions.SIGMA.z(ZV(d).^(n))))		sigma(d^n));
