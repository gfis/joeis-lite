A069934	mul	1	a(p^e) = Product_{k=2..e+1} Phi_k(p), where Phi_k(x) is k-th cyclotomic polynomial.								a(n) = lcm_{d|n} sigma(d).
A070920	mult	1	Z.valueOf(e + 1).pow(4).subtract(Z.valueOf(e).pow(4))	a(p^e) = (e+1)^4 - e^4.							a(n) = Card{ (x,y,z,u) | lcm(x,y,z,u)=n }.
A070921	mult	1	Z.valueOf(e + 1).pow(5).subtract(Z.valueOf(e).pow(5))	a(p^e) = (e+1)^5 - e^5.							a(n) = Card{ (x,y,z,u,v) | lcm(x,y,z,u,v)=n }.
A079707	mult	1	is2(p) ? Z.TWO.pow(e) : Puma.prevPrimeZ(p).pow(e)	2->2 and prime(k)->prime(k-1), k>1.							In prime factorization of n replace odd primes with their prime predecessor.
A082388	mul	1	a(2^e) = A006012(e), a(p^e) = 1 for odd prime p.								a(1) = 1, a(2) = 2; further terms are defined by rules that for k >= 2, a(2^k-i) = a(2^k+i) for 1 <= i <= 2^k-1 and a(2^k) = a(2^(k-1)) + Sum_{i < 2^k} a(i).
A087692	mul	1	is3(p) ? :	a(3) = 2, a(3^k) = 2*3^(k-2) a(3) = 2, a(3^k) = 2*3^(k-2) otherwise; a(p^k) = (p-1)*p^(k-1)/3 if prime p == 1 mod 6; a(p^k) = (p-1)*p^(k-1) for all other primes p.							Number of cubes in multiplicative group modulo n.
A087786	mul	1	a(p^e) = p^(2*floor(2*e/3)) + Sum_{i=0..floor((e-1)/3)} k*(p-1)*p^(e+i-1) where k = 3 if (p = 3 and 3*i+1 = e) or (p mod 3 = 1) otherwise k = 1.								a(n) = number of solutions to x^3 - y^3 == 0 (mod n).
A108548	mul	1	is2(p) ? Z.TWO.pow(e) :	a(2^e) = 2^e, else if p is the m-th prime then a(p^e) = q^e where q is the m/2-th prime of the form 4*k + 3 (A002145) for even m and a(p^e) = r^e where r is the (m-1)/2-th prime of the form 4*k + 1 (A002144) for odd m.							Fully multiplicative with a(prime(j)) = A108546(j), where A108546 is the lexicographically earliest permutation of primes such that after 2 the forms 4*k+1 and 4*k+3 alternate, and prime(j) is the j-th prime in A000040.
A122261	mul	1	(e == 1) ?	a(p) = A065333(p-1), for p prime.							Characteristic function of numbers having only factors that are Pierpont primes.
A126246	mult	1	(is2(p) && e == 1) ? Z.TWO : p.multiply(p.subtract(1).pow(e - 1))	a(p^e) = phi(p^e) = p*(p-1)^(e-1), except when p=2, then a(2)=2.	, because F(1)=F(2)=1 and a(2^e) = 3*(2^(e-2)), (e > 1, all smaller Fibonacci numbers are coprime, except ones that are multiples of 3, i.e., every 4th one).						a(n) is the number of Fibonacci numbers among (F(1),F(2),F(3),...,F(n)) which are coprime to F(n), where F(n) is the n-th Fibonacci number.
A152958	mul	1	a(p^e) = p^e * (1 - 1/p^ceiling((e+1)/2)).								
A160102	mul	1	a(A050376(m)) = Prime(m) = A000040(m). If k = 2^{i_1} + ... + 2^{i_j} is the binary representation of k, a(p^k) = a(p^2^{i_1}) * ... * a(p^2^{i_j})
A166586	mul	1	Z.valueOf(e + 1).pow(4).subtract()	a(p^e) = (p-2)^e. If n = Product p(k)^e(k) then a(n) = Product (p(k) - 2)^e(k). a(2k) = 0 for k >= 1.							Totally multiplicative sequence with a(p) = p - 2 for prime p.
A170819	mult	1	p.pow((p.mod(4) == 1) ? Z.ONE : Z.ZERO)	a(p^e) = p^A011765(p+1), e > 0.							a(n) = product of distinct primes of the form 4k-1 that divide n.
A181549	mult	0	(e == 1) ? p.add(1) : p.pow(e).add(p.pow(e - 1)).subtract(p.pow(e - 2))	a(p)= p + 1, and a(p^e) = p^e + p^(e-1) - p^(e-2) if e > 1.							a(n) = Sum_{k|n} k*mu_2(n/k).
A235201	mul	0	is3(p) ? :	a(3^k) = 2^(2k), a(2^(2k)) = 3^k, a(2^(2k+1)) = 2*3^k, a(p_i) = p_{a(i)} for primes with index i > 2, and for composites > 4, a(u * v) = a(u) * a(v) for u, v > 0.							Self-inverse and multiplicative permutation of integers: a(0)=0, a(1)=1, a(2)=2, a(3)=4 and a(4)=3, a(p_i) = p_{a(i)} for primes with index i > 2, and for composites > 4, a(u * v) = a(u) * a(v) for u, v > 0.
A235489	mul	0	is3(p) ? :	a(3^(2k)) = 2^3k = 8^k, a(3^(2k+1)) = 3*2^3k, a(2^(3k)) = 3^2k = 9^k, a(2^(3k+1)) = 2*9^k, a(2^(3k+2)) = 4*9^k, a(p_i) = p_{a(i)} for primes with index i, and a(u*v) = a(u) * a(v) for composites other than 8 or 9.							Self-inverse and multiplicative permutation of integers: For n < 8, a(n) = n, a(8)=9 and a(9)=8, a(p_i) = p_{a(i)} for primes with index i, and for composites > 9, a(u*v) = a(u) * a(v).
A262401	mul	1	p -> A054055(p), p prime.								In prime factorization of n: replace each factor with its largest decimal digit.
A265390	mul	1	a(p^e) = A025529(e+1) = (1/1 + 1/2 + 1/3 + ... + 1/(e+1)) * lcm{1, 2, 3, ..., e+1}.								a(n) = lcm_{d|n} tau(d) * Sum_{d|n} 1/tau(d), where tau(d) represents the number of divisors of d (A000005(d)).
A265708	mul	1	a(p^e) = (1/1 + ..., + 1/sigma(p^(e-1)) + 1/sigma(p^(e))) * lcm{1, ..., sigma(p^(e-1)), sigma(p^(e))}.								a(n) = lcm_{d|n} sigma(d) * Sum_{d|n} 1/sigma(d), where sigma(d) represents the sum of divisors of d (A000203(d)).
A270418	mul	1	a(p^e) = p^A065620(e) for odious e, a(p^e)=1 for evil e, or equally, a(p^e) = p^(A010060(e)*A065620(e)).								Numerator of the rational number obtained when exponents in prime factorization of n are reinterpreted as alternating binary sums (A065620).
A270419	mul	1	a(p^e) = p^(-A065620(e)) for evil e, a(p^e)=1 for odious e, or equally, a(p^e) = p^(A010059(e) * -A065620(e)).								Denominator of the rational number obtained when the exponents in prime factorization of n are reinterpreted as alternating binary sums (A065620).
A270436	mul	1	a(p^e) = p^A065621(e).								a(1) = 1, for n > 1, a(n) = A020639(n)^A065621(A067029(n)) * a(A028234(n)).
A279510	mul	1	a(p(i)^j) = p(i+1)^a(j) for i-th prime p(i) and j>0.								Multiplicative with a(p(i)^j) = p(i+1)^a(j) for i-th prime p(i) and j>0.
A293303	mul	1	a(p^e) = Sum_{d|e} A008683(e/d)*p^d.								Exponential convolution of the exponential Mobius function and the natural numbers.
A293442	mul	1	a(p^e) = A019565(e).								Multiplicative with a(p^e) = A019565(e).
A299200	mul	1	deref long? { final int k = Puma.primePi(p).intValueExact(); return IntegerPartition.partitions(k); }	a(prime(k)) = A000041(k).							Number of twice-partitions whose domain is the integer partition with Heinz number n.
A300955	mul	1	a(p^k) = A064614(p)^a(k).								In the prime tower factorization of n, replace 2's with 3's and 3's with 2's.
A307848	mul	1	a(p^e) = A037445(e).								The number of exponential infinitary divisors of n.
A308317	mul	1	{ final long k = Puma.primePi(p); return ; }	a(prime(k)^e) = A005117(e+1)^(2^(k-1)).							Multiplicative with a(prime(k)^e) = A005117(e+1)^(2^(k-1)).
A308993	mulr	1	(e == 1) ? Z.ONE :	a(p) = 1 and a(p^e) = p^a(e) for any e > 1 and prime number p.							Multiplicative with a(p) = 1 and a(p^e) = p^a(e) for any e > 1 and prime number p.
A309002	mulr	1	(e == 1) ?	a(p) = p^2 and a(p^e) = p^a(e) for any e > 1 and prime number p.							Multiplicative with a(p) = p^2 and a(p^e) = p^a(e) for any e > 1 and prime number p.
A318316	mul	1	a(p^e) = 2^A007306(e).								Multiplicative with a(p^e) = 2^A007306(e).
A318465	mul	1	a(p^e) = 2^A007895(e), where A007895(n) gives the number of terms in the Zeckendorf representation of n.								The number of Zeckendorf-infinitary divisors of n = Product_{i} p(i)^r(i): divisors d = Product_{i} p(i)^s(i), such that the Zeckendorf expansion (A014417) of each s(i) contains only terms that are in the Zeckendorf expansion of r(i).
A318469	mul	1	a(p^e) = A019565(A003714(e)).								Multiplicative with a(p^e) = A019565(A003714(e)).
A319445	mul	1	is3(p) ? :	a(3^e) = 2*3^(2*e-1), a(p^e) = phi(p^e)^2 = (p-1)^2*p^(2*e-2) if p == 1 (mod 3) and J_2(p^e) = A007434(p^e) = (p^2 - 1)*p^(2*e-2) if p == 2 (mod 3).							Number of Eisenstein integers in a reduced system modulo n.
A319449	mul	1	is3(p) ? :	a(3^e) = sigma(3^(2e)) = (3^(2e+1) - 1)/2, a(p^e) = sigma(p^e)^2 = ((p^(e+1) - 1)/(p - 1))^2 if p == 1 (mod 3) and sigma_2(p^e) = A001157(p^e) = (p^(2e+2) - 1)/(p^2 - 1) if p == 2 (mod 3).							Sum of the norm of divisors of n over Eisenstein integers, with associated divisors counted only once.
A324106	mul	1	a(p^e) = A005940(p^e).								Multiplicative with a(p^e) = A005940(p^e).
A324108	mul	1	a(p^e) = A324054((p^e)-1).								Multiplicative with a(p^e) = A324054((p^e)-1).
A324391	mul	1	a(p^e) = A070939(p)^e, where A070939(p) gives the length of the binary representation of p.								Fully multiplicative with a(p^e) = A070939(p)^e, where A070939(p) gives the length of the binary representation of p.
A325032	mul	1	{ final long k = Puma.primePi(p); return ; }	a(prime(k)) = A003963(k).							Product of products of the multisets of prime indices of each prime index of n.
A325035	mul	0	{ final long k = Puma.primePi(p); return ; }	a(prime(k)) = A056239(k), restricted to odd n.							Product of sums of the multisets of prime indices of each prime index of 2 * n + 1.
A326042	mul	1	a(p^e) = A064989((q^(e+1)-1)/(q-1)), where q = nextPrime(p).								a(n) = A064989(sigma(A003961(n))), where A003961 shifts the prime factorization of n one step towards larger primes, and A064989 shifts it back towards smaller primes.
A326401	mult	1	is3(p) ? Z.THREE.pow(e) : (isMod(3, p, 1) ?  sigmaP(p, e) : p.pow(e+1).add(neg1(e)).divide(p.add(1)))	a(3^e) = 3^e, a(p^e) = (p^(e+1) - 1)/(p - 1) if p == 1 (mod 3), and (p^(e+1) + (-1)^e)/(p + 1) if p == 2 (mod 3).							Expansion of Sum_{k>=1} k * x^k / (1 + x^k + x^(2*k)).
A331107	mul	1	a(p^e) = Product_{i} (p^s(i) + 1), where s(i) are the terms in the Zeckendorf representation of e (A014417).								The sum of Zeckendorf-infinitary divisors of n = Product_{i} p(i)^r(i): divisors d = Product_{i} p(i)^s(i), such that the Zeckendorf expansion (A014417) of each s(i) contains only terms that are in the Zeckendorf expansion of r(i).
A331110	mul	1	a(p^e) = Product_{i} (p^s(i) + 1), where s(i) are the terms in the dual Zeckendorf representation of e (A104326).								The sum of dual-Zeckendorf-infinitary divisors of n = Product_{i} p(i)^r(i): divisors d = Product_{i} p(i)^s(i), such that the dual Zeckendorf expansion (A104326) of each s(i) contains only terms that are in the dual Zeckendorf expansion of r(i).
A332712	lambda	1	Integers.SINGLETON.sumdiv(n, d -> Z.valueOf(Mobius.mobius(d / IntegerUtils.gcd(d, n/d))))	a(p^e) = A028242(e).								a(n) = Sum_{d|n} mu(d/gcd(d, n/d)).
A332818	mul	1	a(2) = 3, a(A002145(n)) = A002144(n) and a(A002144(n)) = A002145(1+n), for all n >= 1.								a(n) = A108548(A003961(A332808(n))).
A332819	mul	1	is2(p) ? ((e == 1) ? Z.valueOf(1) : ) : p.pow(e)	a(2) = 1, a(3) = 2, a(A002144(n)) = A002145(n), and a(A002145(1+n)) = A002144(n) for all n >= 1.							a(n) = A108548(A064989(A332808(n))).
A333926	mul	1	a(p^k) = 1 + Sum_{d recursive divisor of k} p^d.								The sum of recursive divisors of n.
A335115	mul	1	a(2^e) = A001045(e+1) and a(p^e) = p^e for e >= 0 and prime p > 2.								a(2*n) = 2*n - a(n), a(2*n+1) = 2*n + 1.
A336455	mul	1	a(p^e) = A335915(1 + p + p^2 + ... + p^e).								a(n) = A335915(sigma(n)), where A335915 is a fully multiplicative sequence with a(2) = 1 and a(p) = A000265(p^2 - 1) for odd primes p, with A000265(k) giving the odd part of k.
A336457	mul	1	a(p^e) = A065330(1 + p + p^2 + ... + p^e).								a(n) = A065330(sigma(n)), where A065330 is fully multiplicative with a(2) = a(3) = 1, and a(p) = p for primes p > 3.
A336468	mul	1	a(p^e) = A336466(p-1) * A336466(p)^(e-1).								a(n) = A336466(phi(n)), where A336466 is fully multiplicative with a(p) = A000265(p-1) for prime p, with A000265(k) giving the odd part of k.
A338224	mul	1	a(A246655(k)) = prime(k) for any k > 0 (where prime(k) denotes the k-th prime number).								Multiplicative with a(A246655(k)) = prime(k) for any k > 0 (where prime(k) denotes the k-th prime number).
A341343	mul	1	a(p^e) = Sum_{i=0..e} trinomial(2,i) for prime p and e >= 0, where trinomial(n,k) = 0 if 2*n < k.								Dirichlet g.f.: Sum_{n>=1} a(n)/n^s = (zeta(s))^3 / (zeta(3*s))^2.
A345699	mulr	1	(e == 1) ?	a(p) = a(p-1) and a(p^e) = a(p) + a(e) if e>1.							Multiplicative with a(p) = a(p-1) and a(p^e) = a(p) + a(e) if e>1.
A347101	mult	1	{ final long k = Puma.primePi(p); return Puma.primeZ(k + 1).subtract(p).pow(e); }	a(prime(k)) = A001223(k), where A001223 gives the distance from the k-th prime to the (k+1)-th prime.							Fully multiplicative with a(prime(k)) = A001223(k), where A001223 gives the distance from the k-th prime to the (k+1)-th prime.
A347123	mult	1	{ final long k = Puma.primePi(p); return Puma.primeZ(Puma.primeZ(k + 1).subtract(p).divide(2).add(1)).pow(e); }	a(prime(k)) = prime(1+floor(A001223(k)/2)).							Fully multiplicative with a(prime(k)) = prime(1+floor(A001223(k)/2)).
A347379	mult	1	{ final Z pc = ZUtils.primorialCount(p.longValueExact()); return pc.pow(e).subtract(pc.pow(e - 1)); }	a(p^e) = A034386(p)^e - A034386(p)^(e-1).							M√∂bius transform of A108951, the primorial inflation of n.
A348512	mul	1	a(p^e) = A003959(1 + p + ... + p^e).								a(n) = A003959(sigma(n)), where A003959 is multiplicative with a(p^e) = (p+1)^e and sigma is the sum of divisors function.
A348746	mul	1	is2(p) ? ((e == 1) ? Z.valueOf(1) : ) : p.pow(e)	a(2) = 3, a(3) = 5, a(A002144(n)) = A002144(1+n) and a(A002145(1+n)) = a(A002145(1+n)) for all n >= 1, where A002144 and A002145 give the primes of the form 4k+1 and 4k+3 respectively.							Fully multiplicative with a(2) = 3, a(3) = 5, a(A002144(n)) = A002144(1+n) and a(A002145(1+n)) = a(A002145(1+n)) for all n >= 1, where A002144 and A002145 give the primes of the form 4k+1 and 4k+3 respectively.
A348747	mul	1	is2(p) ? ((e == 1) ? Z.valueOf(1) : ) : p.pow(e)	a(2) = 1, a(3) = 2, a(5) = 3, a(A002144(1+n)) = A002144(n) and a(A002145(1+n)) = a(A002145(1+n)) for all n >= 1, where A002144 and A002145 give the primes of the form 4k+1 and 4k+3 respectively.							Fully multiplicative with a(2) = 1, a(3) = 2, a(5) = 3, a(A002144(1+n)) = A002144(n) and a(A002145(1+n)) = a(A002145(1+n)) for all n >= 1, where A002144 and A002145 give the primes of the form 4k+1 and 4k+3 respectively.
A348750	mult	1	A064989.a(A064989.a(Puma.nextPrimeZ(Puma.nextPrimeZ(p))))	a(p^e) = A064989(A064989((q^(e+1)-1)/(q-1))), where q = nextPrime(nextPrime(p)).								a(n) = A064989(A064989(sigma(A003961(A003961(n))))), where A003961 shifts the prime factorization of n one step towards larger primes, and A064989 shifts it back towards smaller primes.
A348930	mul	1	a(p^e) = A038502(1 + p + p^2 + ... + p^e).								a(n) = A038502(sigma(n)), where A038502 is fully multiplicative with a(3) = 1, and a(p) = p for any other prime p.
A350073	mult	1	A064989.a(sigmaP(p, e))	a(p^e) = A064989(1 + p + p^2 + ... + p^e).								a(n) = A064989(sigma(n)), where A064989 is multiplicative with a(2^e) = 1 and a(p^e) = prevprime(p)^e for odd primes p.
A351346	mul	1	a(p^e) = Pell(e+1).								Dirichlet g.f.: Product_{p prime} 1 / (1 - 2*p^(-s) - p^(-2*s)).
A351347	mul	1	a(p^e) = Jacobsthal(e+1).								Dirichlet g.f.: Product_{p prime} 1 / (1 - p^(-s) - 2*p^(-2*s)).
A351442	mul	1	a(p^e) = A003958(1 + p + ... + p^e).								a(n) = A003958(sigma(n)), where A003958 is multiplicative with a(p^e) = (p-1)^e and sigma is the sum of divisors function.
A351449	mult	1	(e == 1) ? Z.ONE : A064989.a(sigmaP(Puma.nextPrimeZ(p), e))	a(p) = 1 and for e > 1, a(p^e) = A064989((q^(e+1)-1)/(q-1)), where q = nextPrime(p) = A151800(p).							a(n) = A064989(A295294(A003961(n))).
A351450	mult	1	A064989.a(Puma.nextPrimeZ(p).add(1))	(a(p^e) = A064989(q+1), where q = nextPrime(p) = A151800(p).								a(n) = A064989(A048250(A003961(n))).
A351451	mult	1	(e == 1) ? A064989.a(Puma.nextPrimeZ(p).add(1)) : Z.ONE	a(p) = A064989(q+1) and a(p^e) = 1 for e > 1, where q = nextPrime(p) = A151800(p).							a(n) = A064989(A092261(A003961(n))).
A351455	mult	1	{ final Z q = Puma.nextPrimeZ(p); return A064989.a(q.add(1)).multiply(q.pow(e - 1)); }	a(p^e) = A064989((q+1)*q^(e-1)), where q = nextPrime(p) = A151800(p).								a(n) = A064989(A001615(A003961(n))).
A351456	mul	1	a(p^e) = A003958(1 + q + ... + q^e), where q = nextPrime(p) = A151800(p).								a(n) = A003958(sigma(A003961(n))), where A003958 is multiplicative with a(p^e) = (p-1)^e, A003961 multiplicative with a(prime(k)^e) = prime(1+k)^e, and sigma is the sum of divisors function.
A351655	mul	1	a(p^e) = A000073(e+2).								Dirichlet g.f.: Product_{p prime} 1 / (1 - p^(-s) - p^(-2*s) - p^(-3*s)).
A351656	mul	1	a(p^e) = A000078(e+3).								Dirichlet g.f.: Product_{p prime} 1 / (1 - p^(-s) - p^(-2*s) - p^(-3*s) - p^(-4*s)).
A353789	mul	1	a(p^e) = (q - 1) * q^(e-1) * p^e, where q is the least prime greater than p.								Multiplicative with a(p^e) = (q - 1) * q^(e-1) * p^e, where q is the least prime greater than p.
A353792	mul	1	a(p^e) = A003958(1 + p + ... + p^e) * A064989(1 + p + ... + p^e).								a(n) = A003958(sigma(n)) * A064989(sigma(n)).
A353794	mul	1	a(p^e) = A003958(1 + q + ... + q^e) * A064989(1 + q + ... + q^e), where q is the least prime larger than p.								a(n) = A353791(sigma(A003961(n))), where A353791(n) = A003958(n) * A064989(n).
A353897	mult	1	p.pow(1 << IntegerUtils.floorLog2(e))	a(p^e) = p^(2^floor(log_2(e))).							a(n) is the largest divisor of n whose exponents in its prime factorization are all powers of 2 (A138302).
A353898	mult	1	Z.valueOf(IntegerUtils.floorLog2(e) + 2)	a(p^e) = floor(log_2(e)) + 2.							a(n) is the number of divisors of n whose exponents in their prime factorizations are all powers of 2 (A138302).
A353900	mult	1	Integers.SINGLETON.sum(0, IntegerUtils.floorLog2(e), k -> p.pow(1 << k)).add(1)	a(p^e) = 1 + Sum_{k=0..floor(log_2(e))} p^(2^k).								a(n) is the sum of divisors of n whose exponents in their prime factorizations are all powers of 2 (A138302).
A354091	mul	1	a(A003627(n)) = A003627(1+n), a(A007645(n)) = A007645(n).								Fully multiplicative prime shift where the primes of the form 3k+2 are replaced by the next larger such prime, and primes of the form 3k and 3k+1 stay as they are.
A354092	mul	1	a(2) = 1, a(A003627(1+n)) = A003627(n), a(A007645(n)) = A007645(n).								Fully multiplicative prime shift where the primes of the form 3k+2 are replaced by the previous such prime (with 2 -> 1), and primes of the form 3k and 3k+1 stay as they are.
A354093	mul	1	a(p^e) = (q^(e+1)-1)/(q-1) where q = A003627(1+n) if p = A003627(n), otherwise q = p.								a(n) = sigma(A354091(n)), where A354091 is fully multiplicative prime shift which replaces the primes of the form 3k+2 by the next larger such prime, while other primes stay as they are, and sigma is the sum of divisors function.
A354094	mul	1	a(p^e) = (q-1) * q^(e-1) where q = A003627(1+n) if p = A003627(n), otherwise q = p.								a(n) = phi(A354091(n)), where A354091 is fully multiplicative prime shift which replaces the primes of the form 3k+2 by the next larger such prime, while other primes stay as they are, and phi is Euler totient function.
A354351	mult	1	e > 1 ? Z.ZERO : ZUtils.primorialCount(p.longValueExact()).negate()	a(p^e) = 0 if e > 1, and -A034386(p) otherwise.							Dirichlet inverse of A108951, primorial inflation of n.
A354355	mul	1	a(p^e) = A065333(1 + p + p^2 + ... + p^e).								Characteristic function of numbers with their sum of divisors (sigma) 3-smooth.
A354358	mult	1	ZUtils.primorial(e).subtract(ZUtils.primorial(e - 1))	a(p^e) = primorial(e) - primorial(e-1).							M√∂bius transform of A124859.
A355823	mul	1	a(p^e) = A209229(e).								a(n) = 1 if all exponents in prime factorization of n are powers of 2, otherwise 0.
A355825	mul	1	a(p^e) = A010060(e).								a(n) = 1 if all exponents in prime factorization of n have an odd binary weight, otherwise 0.
A356194	mult	1	p.pow(1 << IntegerUtils.ceilingLog2(e))	a(p^e) = p^(2^ceiling(log_2(e))).							a(n) is the smallest multiple of n whose prime factorization exponents are all powers of 2.
A357853	mul	1	{ final long k = Puma.primePi(p); return ; }	a(prime(k)) = A000009(k+1).							Fully multiplicative with a(prime(k)) = A000009(k+1).
A358346	mult	1	((e & 1) == 1) ? p.pow(e).add(1) : Z.ONE	a(p^e) = p^e + 1 if e is odd, and 1 otherwise.							a(n) is the sum of the unitary divisors of n that are exponentially odd (A268335).
A358766	lambda	1	Z.valueOf(Jaguar.factor(Jaguar.factor(n).sigma()).lambda())	a(p^e) = (-1)^A001222(1 + p + p^2 + ... + p^e).							a(n) = lambda(sigma(n)), where lambda is Liouvilles lambda, and sigma is the sum of divisors function.
A358780	mul	1	a(p^e) = A001400(e).								Dirichlet g.f.: zeta(s) * zeta(2*s) * zeta(3*s) * zeta(4*s).
A359411	mul	1	a(p^e) = A246600(e).								a(n) is the number of divisors of n that are both infinitary and exponential.
A359954	mult	1	(e == 1) ? p.multiply2().subtract(3) : p.multiply(e + 1).subtract(e).multiply(p.subtract(1)).multiply(p.pow(e - 2))	a(p) = 2*p - 3 and a(p^e) = (e*p + p - e)*(p - 1)*p^(e - 2) for e > 1.							a(n) = Sum_{d|n} tau(d)*phi(d)*mu(n/d).
A360648	mul	1	a(A027697(k)) = A027699(k) and a(A027699(k)) = A027697(k) for any k > 0.								Fully multiplicative with a(A027697(k)) = A027699(k) and a(A027699(k)) = A027697(k) for any k > 0.
A360710	mul	1	a(p^k) = 1 or -1 so as to minimize abs(Sum_{m = 1..p^k} a(m)); in case of a tie, a(p^k) = a(p^k-1).								Multiplicative with a(p^k) = 1 or -1 so as to minimize abs(Sum_{m = 1..p^k} a(m)); in case of a tie, a(p^k) = a(p^k-1).
A360722	mul	1	a(p^e) = f(p, e) if e is even, and f(p, e) - p is e is odd, where f(p, e) = Product{k>=1, e_k=1} (p^(2^k) + 1), where e = Sum_{k} e_k * 2^k is the binary representation of e.	, i.e., e_k is bit k of e.							a(n) is the sum of infinitary divisors of n that are powerful (A001694).
A361174	mul	1	a(p^e) = Sum_{d|e, d squarefree} p^d.								The sum of the exponential squarefree exponential divisors (or e-squarefree e-divisors) of n.
A361175	mul	1	a(p^e) = Sum_{d infinitary divisor of e} p^d.								The sum of the exponential infinitary divisors of n.
A361793	mul	1	Z.valueOf(e + 1).pow(4).subtract()	a(p^e) = (p^(2*(floor(e/3) + 1)) - 1)/(p^2 - 1).							Sum of the squares d^2 of the divisors d satisfying d^3|n.
A361794	mul	1	Z.valueOf(e + 1).pow(4).subtract()	a(p^e) = (p^(3*(floor(e/2) + 1)) - 1)/(p^3 - 1).							Sum of the cubes d^3 of the divisors d satisfying d^2|n.
A363331	mul	1	a(p^e) = (Product_{k>=0} ((p^(2^k*(b(k)+1)) - 1)/(p^(2^k) - 1)) - 1, where e = Sum_{k >= 0} b(k) * 2^k is the binary representation of e.								a(n) is the sum of divisors of n that are both coreful and infinitary.
A364252	mul	1	a(p^e) = [p==2] + A036987(p), where [ ] is the Iverson bracket.								a(n) = 1 if n has no other prime factors than 2 and/or Mersenne primes, otherwise 0.
A364925	mul	1	is2(p) ? ((e == 1) ? Z.valueOf(1) : ) : p.pow(e)	a(2) = 1, a(4) = 2, a(2^e) = 2*prime(e-2) for e >= 3; a(p^e) = prime(v(p-1,2)), where v(,2) is the 2-adic valuation.							If the Sylow 2-subgroup of the multiplicative group modulo n is isomorphic to the direct product of (C_(2^i))^(e_i) for 1 <= i <= k, where C_m denotes the cyclic group of order m, then a(n) = Product_{i=1..k} prime(i)^(e_i).
A365172	mul	1	((e & 1) == 0) ? subDiv2(p, e + 1) : Z.ONE.add(p.pow(2*((e+1)/4) + 1)).multiply(subDiv2(p, 2*(e/4)+2))	a(p^e) = (p^(e+2) - 1)/(p^2 - 1) if e is even, and (1 + p^(2*floor((e+1)/4) + 1))*(p^(2*floor(e/4)+2) - 1)/(p^2 - 1) if e is odd.							The sum of divisors d of n such that gcd(d, n/d) is a square.
A365174	mul	1	1 + p^e + (p^(e + 1) - p)/(p^2 - 1) if e is even, and 1 + p^e + (1 + p^(2*floor(e/4)+1))*(p^(2*floor((e+1)/4)+1) - p)/(p^2 - 1) if e is odd.								The sum of divisors d of n such that gcd(d, n/d) is an exponentially odd number (A268335).
A365211	mult	1	is2(p) || is3(p) ? p.pow(e).add(1) : sigmaP(p, e)	a(p^e) = 1 + p^e for p = 2 and 3, and a(p^e) = (p^(e+1)-1)/(p-1) for a prime p >= 5.							The sum of divisors d of n such that gcd(d, n/d) is a 5-rough number (A007310).
A365296	mult	1	p.pow(ZUtils.valuation(p, Z.TWO))	a(p^e) = p^A006519(e).							The smallest coreful infinitary divisor of n.
A365297	mult	1	p.pow(1 << IntegerUtils.ceilingLog2(e)).subtract(e)	a(p^e) = p^(2^ceiling(log_2(e)) - e).							a(n) is the smallest number k such that k*n is a number whose prime factorization exponents are all powers of 2 (A138302).
A365336	mult	1	Z.valueOf(IntegerUtils.max(1, (e+3)/4))	a(p^e) = floor((e+2)/4).							The sum of exponentially odd divisors of the square root of the largest square dividing n.
A365550	mult	1	Z.valueOf(e/2)	a(p^e) = floor(e/2).							The number of square coreful divisors of n.
A365649	mult	1	p.pow(e).multiply(p.square().multiply(e + 1).subtract(p.multiply2()).add(- e - 1)).add(2).divide(p.subtract(1).square())	a(p^e) = (2 + ((e+1)*p^2 - 2*p - e - 1)*p^e)/(p-1)^2.								Dirichlet convolution of sigma with Dedekind psi function.
A365680	mul	1	a(p^e) = A013928(e+1) + 1.								The number of exponentially squarefree divisors of n.
A365682	mul	1	a(p^e) = 1 + Sum_{k=1..e, k squarefree} p^k.								The sum of exponentially squarefree divisors of n.
