A084091	mult	0	Z.valueOf(is2(p) ? oneOr0(e) : (is3(p) ? 0 : (isMod(6, p, 1) ? 1 : (neg1(e)))))	"0"	
A125510	simtraf	0	new MultiplicativeSequence(0, (p, e) -> p.equals(Z.TWO) ? Z.ONE : (p.equals(Z.THREE) ? p.pow(e + 1).subtract(2) : MultiplicativeSequence.sigmaP(p, e)))	(n,v) -> (n == 0) ? Z.ONE : v.multiply(6)	
A126246	mult	1	is2(p) ? ((e == 1) ? Z.TWO : Z.TWO.pow(e - 2).multiply(3)) : p.multiply(p.subtract(1).pow(e  - 1))	a(p^e) = phi(p^e) = p*(p-1)^(e-1), except when p=2, then a(2)=2, and a(2^e) = 3*(2^(e-2))
A138805	simtraf	0	new MultiplicativeSequence(0, (p, e) -> p.equals(Z.THREE) ? (e == 1 ? Z.ZERO : Z.THREE) : Z.valueOf(MultiplicativeSequence.isMod(6, p, 1) ? e + 1 : ((e & 1) == 0) ? 1 : 0))	(n,v) -> (n == 0) ? Z.ONE : v.multiply2()	
A138811	simtraf	0	new MultiplicativeSequence(0, (p, e) -> p.equals(Z.valueOf(43)) ? Z.ONE : Z.valueOf(LongUtils.kronecker(-43, p.longValue()) == 1 ? e + 1 : ((e & 1) == 0) ? 1 : 0))	(n,v) -> (n == 0) ? Z.ONE : v.multiply2()	
A181549	mult	0	(e == 1) ? p.add(1) : p.pow(e).add(p.pow(e - 1)).subtract(p.pow(e - 2))	"0"	
A235027	mult	0	p.equals(Z.TWO) ? p.pow(e) : ZUtils.reverse(p, 2).pow(e)	"0"	
A245572	simtraf	0	new MultiplicativeSequence(0, (p, e) -> p.equals(Z.TWO) ? (e == 1 ? Z.NEG_ONE : Z.THREE) : Z.valueOf(MultiplicativeSequence.isMod(8, p, 1, 3) ? e + 1 : ((e & 1) == 0) ? 1 : 0))	(n,v) -> (n == 0) ? Z.THREE : v.multiply2()	
A259761	simtraf	0	new MultiplicativeSequence(0, (p, e) -> p.equals(Z.TWO) ? Z.ONE : Z.valueOf(p.equals(Z.THREE) ? 1 + (((e & 1) == 0) ? 1 : -1) : (MultiplicativeSequence.isMod(12, p, 1, 5) ? e + 1 : ((e & 1) == 0) ? 1 : 0)))	(n,v) -> (n == 0) ? Z.ONE : v.multiply2()	
A281786	simtraf	0	new MultiplicativeSequence(0, (p, e) -> p.equals(Z.TWO) ? Z.ONE : (p.equals(Z.THREE) ? Z.valueOf(-8) : MultiplicativeSequence.sigmaP(p, e)))	(n,v) -> (n == 0) ? Z.TWO : v.multiply(3)	

