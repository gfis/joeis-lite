#!perl

# Convert a tsv file with optional headers (DBAT output) into HTML
# @(#) $Id$
# 2022-09-11, Georg Fischer: copied from OEIS-mat/common/html_checks.pl
#
#:# usage:
#:#   perl htmlize.pl [-e] [-s] title.tsv > title.htm
#:#       -e    link to edit in internal format (nyi)
#:#       -s    show the output in browser (nyi Windows only, output must be in *.htm)
#:#---------------------------------
use strict;
use integer;
my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime (time);
my $timestamp = sprintf ("%04d-%02d-%02d %02d:%02d"  #:%02d\+01:00"
        , $year + 1900, $mon + 1, $mday, $hour, $min); # , $sec, $isdst);

if (scalar(@ARGV) == 0) { # print help and exit
  print `grep -E "^#:#" $0 | cut -b3-`;
  exit;
} # print help

my $edit = 0; # no edit link
my $show = 0; # do not show in browser
while (scalar(@ARGV) > 0 and ($ARGV[0] =~ m{\A\-})) {
    my $opt = shift(@ARGV);
    if (0) {
    } elsif ($opt  =~ m{\A\-e}) {
        $edit = 1;
    } elsif ($opt  =~ m{\A\-s}) {
        $show = 1;
    } else {
        die "invalid option \"$opt\"\n";
    }
} # while $opt

my $oeis_url   = "https://oeis.org/";
# $oeis_url      = "http://localhost/cgi-bin/oeis.pl?&aseqno=";
if ($edit > 0) {
    $oeis_url .= "edit?&internal=1&seq=";
}

my $target = "Check";
my $title  = "Check";
my $infile = shift(@ARGV);
if ($infile =~ m{^(\w+)}) {
    $target = "$1:";
    $title = ucfirst($target);
}
print &get_html_head($title);
open(INF, "<", $infile) or die "cannot read \"$infile\"\n";
my $count = 0;
while (<INF>) {
    s/\s+\Z//; # chompr
    my $line = $_;
    $count ++;
    if ($count == 1 && ($line !~ m{\AA\d+\t})) {
        print "<tr><th class=\"bor\">" . join("</th><th class=\"bor\">", split(/\t/, $line)) . "</th></tr>\n";
    } else {
        my @rest = map {
            s{(A\d\d\d\d+)}{\<a href\=\"$oeis_url$1\" target\=\"_blank\"\>$1\<\/a\>}g;
            $_
            } split(/\t/, $line);
        print "<tr><td class=\"bor\">" . join("</td><td class=\"bor\">", @rest) . "</td></tr>\n";
    }
} # while <INF>
close(INF);
print get_html_tail();
close(STDOUT);
if (0 || $show) {
    $infile =~ s{\.(\w+)\Z}{\.htm};
    `cmd /c start $infile`;
}
#--------
sub get_html_head {
    my ($title) = @_;
    return <<"GFis";
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" [
]>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>$title</title>
<meta name="generator" content="https://github.com/gfis/joeis-lite/blob/master/internal/fischer/htmlize.pl" />
<meta name="author"    content="Georg Fischer" />
<style>
body,table,p,td,th
        { font-family: Verdana,Arial,sans-serif; }
table   { border-collapse: collapse; }
td      { padding-right: 4px; }
tr,td,th{ vertical-align: top; }
th      { text-align: left; }
.arr    { text-align: right; background-color: white; color: black; }
.bor    { border-left  : 1px solid gray    ; padding-left: 8px; padding-right: 8px;
          border-top   : 1px solid gray    ;
          border-right : 1px solid gray    ;
          border-bottom: 1px solid gray    ;  }
.narrow { font-size    : smaller;  }
.prefor { font-family  : monospace; white-space: pre;
          font-size    : large; font-weight: bold; }
.same   { background-color:lightyellow }
</style>
</head>
<body>
<h4>$title</h4>
<table class="bor">
GFis
} # get_html_head
#--------
sub get_html_tail {
    my $result = <<"GFis";
</table>
<p>
$count records
<br />Generated by <a href="https://github.com/gfis/joeis-lite/blob/master/internal/fischer/htmlize.pl">htmlize.pl</a>: $timestamp
<br />Questions, suggestions: email <a href="mailto:georg.fischer\@t-online.de">Georg Fischer</a>
</p>
</body>
</html>
GFis
} # get_html_tail
#--------
__DATA__
A030465	t	Numbers k such that k concatenated with k+1 is a square.
A115431	p	Numbers k such that the concatenation of k with k-2 gives a square.
A115437	t	Numbers m such that the concatenation of m with m+4 gives a square.