package irvine.oeis.$(PACK);
// Generated by $(GEN) $(CALLCODE) at $(DATE)

import irvine.math.group.PolynomialRingField;
import irvine.math.q.Q;
import irvine.math.q.Rationals;
import irvine.math.z.Z;
import irvine.oeis.AbstractSequence;

/**
 * $(ASEQNO) $(NAME)
 * @author $(AUTHOR)
 */
public class $(ASEQNO) extends AbstractSequence {

  private static final PolynomialRingField<Q> RING = new PolynomialRingField<>(Rationals.SINGLETON);
  private int mN = $(OFFSET) - 1;
  private Z mF = Z.ONE;

  /** Construct the sequence. */
  public $(ASEQNO)() {
    super($(OFFSET));
  }

  @Override
  public Z next() {
    while ((++mN & 1) == 0) {
      if (mN != 0) {
        mF = mF.multiply(mN);
      }
    }
    if (mN != 0) {
      mF = mF.multiply(mN);
    }
    return $(PARM1).coeff(mN).multiply(mF).toZ()$(PARM2);
  }
}
