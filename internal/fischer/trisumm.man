> A131127	trisum2	0	2	-1	A007318	A167374					Table read by rows: 2*A007318(n,k) - (-1)^(n+m)*A097806(n,m).
> A131324	trisum2	0	2	-1	A168561	A097807					2*A168561 - A000012(signed).
> A131325	trisum2	0	3	-2	A168561	A097807					Triangle |3*|A049310(n,k)| - 2| read by rows, 0 <= k <= n.
> A131327	trisum2	0	4	-3	A168561	A097807					Triangle |4*|A049310(n,k)| - 3| read by rows, 0<=k<=n.  nonn,tab
> A131350	trisum2	0	2	-1	A007318	A168561					2*A007318 - A168561 as infinite lower triangular matrices.
> A131374	trisum3	0	1	+1	-1	A046854	A065941	A168561			A046854 + A065941 - A168561.
> A131375	trisum3	0	1	+1	-1	A007318	A046854	A168561			A007318 + A046854 - A168561.
> A131767	trisum2	0	2	-1	A007318	A065941					2*A007318 - A065941.
> A131774	trisum2	1	2	-1	A065941	A168561					2*A065941 - A168561.
> A131775	trisum2	1	3	-2	A065941	A168561					3*A065941 - 2*A168561.
> A131776	trisum2	1	4	-3	A065941	A168561					4*A065941 - 3*A168561.
> A131777	trisum2	1	5	-4	A065941	A168561					5*A065941 - 4*A168561.
> A131778	trisum2	1	6	-5	A065941	A168561					6*A065941 - 5*A168561.
> A135222	trisum3	0	1	1	-1	A168561	A000012	A023531		Triangle A049310 + A000012 - I,
> # A137865	triprod	1	A000012	A168561		Triangle read by rows, antidiagonals of an array formed by A000012 * A049310(transform).
> A309213	trisum3	0	1	1	-1	A007318	A065941	A049310	A007318 + A065941 - A049310.

# 2023-06-07
A174527	trisum2	0	2	-1	A022167	A007318		T(n,m) = 2*A022167(n,m)  - binomial(n, m),
A174528	trisum2	0	2	-1	A022168	A007318		T(n,m) = 2*A022168(n,m)  - binomial(n, m),    
A131111	trisum2	0	3	-2	A007318	A023531		T(n,k) = 3*binomial(n,k) - 2*I(n,k),
A131112	trisum2	0	4	-3	A007318	A023531		T(n,k) = 4*binomial(n,k) - 3*I(n,k), 
A131113	trisum2	0	5	-4	A007318	A023531		T(n,k) = 5*binomial(n,k) - 4*I(n,k), 
A131114	trisum2	0	6	-5	A007318	A023531		T(n,k) = 6*binomial(n,k) - 5*I(n,k), 

A065420	trisimple	0	Binomial.binomial(n+2, k + 1).multiply(Binomial.binomial(n+2, k+1).subtract(1))
A104764	trisimple	0	Fibonacci.lucas(n - k + 1)
A109906	trisimple	0	Fibonacci.fibonacci(n - k + 1).multiply(Fibonacci.fibonacci(k + 1)).multiply(Binomial.binomial(n, k))
A123097	trisimple	0	(n == 1 && k == 1) ? Z.ONE : Binomial.binomial(n-2, k-1).add(Binomial.binomial(n-1, k-1).multiply(n))
A124845	trisimple	0	Z.valueOf(3 - (((k & 1) == 0) ? 1 : -1)).multiply(Binomial.binomial(n, k).divide2())
A124846	trisimple	0	Z.valueOf(2 - (((k & 1) == 0) ? 1 : -1)).multiply(Binomial.binomial(n, k))
A124847	trisimple	0	Binomial.binomial(n-1, k-1).multiply(k * (k + 1)).divide2()
A125026	trisimple	0	Binomial.binomial(n, k).multiply(k).add(Binomial.binomial(n-1, k))
A125091	trisimple	0	Binomial.binomial(n, k).multiply(k*(k + 1)).multiply(k + 2).divide(6)
A125100	trisimple	0	Fibonacci.fibonacci(k+1).multiply(Binomial.binomial(n, k)).add(Binomial.binomial(n, k+1).multiply(k + 1))
A125101	trisimple	0	Binomial.binomial(n-1, k - 1).multiply(k).add(Fibonacci.fibonacci(k).multiply(Binomial.binomial(n - 1, k)))
A125102	trisimple	0	Binomial.binomial(n, k).multiply(k + 1).add(3 - (((k & 1) == 0 ? 1 : -1))).multiply(Binomial.binomial(n, k+1)).divide2()
A125103	trisimple	0	Binomial.binomial(n, k).add(Z.ONE.shiftLeft(k).multiply(Binomial.binomial(n, k + 1)))
A131086	trisimple	0	Binomial.binomial(n, k).multiply2().subtract((((n - k) & 1) == 0) ? 1 : -1)
A131087	trisimple	0	Binomial.binomial(n, k).multiply2().subtract((1 + ((((n - k) & 1) == 0) ? 1 : -1))/2)
A131225	trisimple	0	Z.valueOf(2 * k - (1 + ((((n - k) & 1) == 0) ? 1 : -1))/2)
A131238	trisimple	0	Binomial.binomial(n, k).multiply2().subtract(Binomial.binomial((n + k)/2, k))
A131268	trisimple	0	Binomial.binomial(n - (k + 1)/2, k/2).multiply2().subtract(1)  
A132108	trisimple	0	Binomial.binomial(n, k).add(n - k)
A132729	trisimple	0	(k == 0 || k == n) ? Z.ONE : Binomial.binomial(n, k).multiply(2).subtract(3)
A132731	trisimple	0	(k == 0 || k == n) ? Z.ONE : Binomial.binomial(n, k).multiply(2).subtract(2)
A132733	trisimple	0	(k == 0 || k == n) ? Z.ONE : Binomial.binomial(n, k).multiply(4).subtract(5)
A132737	trisimple	0	Binomial.binomial(n, k).multiply(2).subtract(1) 
A132919	trisimple	0	Fibonacci.fibonacci(n).add(k - 1)
A132923	trisimple	0	Fibonacci.fibonacci(k).add(n - k)
A131411	trisimple	0	Fibonacci.fibonacci(n).add(Fibonacci.fibonacci(k)).subtract(1)
A132749	trisimple	0	(k == 0) ? Z.TWO : Binomial.binomial(n, k)
A135838	trisimple	0	Z.ONE.shiftLeft(n / 2).multiply(Binomial.binomial(n-1, k-1))
A137276	trisimple	0	(((n - k) & 1) == 1) ? Z.ONE : Binomial.binomial((n + k)/2, (n - k)/2).multiply2().multiply(((((n - k)/2) & 1) == 0) ? 1 : -1).multiply(2*k - n).divide(n + k)
A140682	trisimple	0	Z.valueOf(IntegerUtils.gcd(n, k)).subtract(Binomial.binomial(n, k))
A140822	trisimple	0	Binomial.binomial(n, IntegerUtils.gcd(n, k))
A140875	trisimple	0	Z.valueOf(IntegerUtils.gcd(n, k + 2)).subtract(2*IntegerUtils.gcd(n, k + 1) + IntegerUtils.gcd(n, k))
A141596	trisimple	0	Binomial.binomial(n, k).square().multiply(4).subtract(3)
A141597	trisimple	0	Binomial.binomial(n, k).square().multiply(2).subtract(1)
A141680	trisimple	0	(n % k == 0) ? Binomial.binomial(n, k).multiply(n / k) : Z.ZERO
A142243	trisimple	0	Binomial.binomial(2*n, k).multiply(Binomial.binomial(2*n - 2*k, n - k))
A143086	trisimple	0	(k <= n/2) ? Z.ONE.shiftLeft(k + 1).subtract(1) : Z.ONE.shiftLeft(n - k + 1).subtract(1)
A143216	trisimple	0	MemoryFactorial.SINGLETON.factorial(n).multiply(MemoryFactorial.SINGLETON.factorial(k))
A143538	trisimple	0	Z.valueOf(k).isProbablePrime() ? Z.ONE : Z.ZERO
A143541	trisimple	0	(Z.valueOf(n).isProbablePrime() && Z.valueOf(k).isProbablePrime()) ? Z.ONE : Z.ZERO
A143544	trisimple	0	Z.valueOf(n).isProbablePrime() ? Z.TWO : Z.ONE 
A144403	trisimple	0	Binomial.binomial(n, k).square().subtract(Binomial.binomial(n, k)).subtract(1)
A144404	trisimple	0	Binomial.binomial(n, k).square().multiply(3).subtract(Binomial.binomial(n, k)).subtract(1)
A144405	trisimple	0	Binomial.binomial(n, k).multiply(Binomial.binomial(n, k).square().multiply(3).subtract(Binomial.binomial(n, k)).subtract(1))

A095800	trisimple	0	Z.valueOf((k * ((2*n + 1) * ((((n + k) & 1) == 0) ? 1 : -1) + 2*k - 1) / 4)).abs()
A095871	trisimple	0	Z.valueOf((n + 1)*(3*(n + 1) - 1)/2 - k*(3*k - 1)/2)
A095873	trisimple	0	Z.valueOf((2*k - 1)*(n + k - 1)*(n - k + 1))
A104715	trisimple	0	Z.valueOf(2*k - 1).multiply((n - k + 1) * (n - k + 2) / 2)
A104727	trisimple	0	Z.valueOf((k - 1 - n)*(k - 2 - n)*(k*k + k + 2*k*n + 3*n*n + 5*n)/24)
A104728	trisimple	0	Z.valueOf((k - 1 - n)*(k - 2 - n)*(k - 2 + 2*n)/2)
A104730	trisimple	0	Binomial.binomial(n + 1,  k).subtract(Binomial.binomial(k,  n - k + 1))
A104731	trisimple	0	Integers.SINGLETON.sum(k, n, j -> Binomial.binomial(k, j - k).multiply(j + 1))
A104733	trisimple	0	Integers.SINGLETON.sum(k, n, j -> Fibonacci.fibonacci(n - j + 1).multiply(Fibonacci.fibonacci(k + 1)))
A104734	trisimple	0	Integers.SINGLETON.sum(k, n, j -> Z.valueOf(2*n - 2*j + 1).multiply(Binomial.binomial(k, j - k)))
A104797	trisimple	0	Fibonacci.fibonacci(n - k + 4).add(- n - k - 3)
A104797	trisimple	0	Fibonacci.fibonacci(n - k + 4).add(- n - k - 3)
A104798	trisimple	0	Fibonacci.fibonacci(n - k + 3).multiply(k).subtract(1)
A104798	trisimple	0	Z.valueOf(k).multiply(Fibonacci.fibonacci(n - k + 3).add(-1))
A124929	trisimple	0	Z.ONE.shiftLeft(k).add(-1).multiply(Binomial.binomial(n - 1, k - 1))
A124931	trisimple	0	Z.TWO.multiply(k - 1).multiply(Binomial.binomial(n, k))
A124932	trisimple	0	Z.valueOf(k).multiply(k + 1).multiply(Binomial.binomial(n, k)).divide2()
A127952	trisimple	0	Z.valueOf(n + 1).multiply(Binomial.binomial(n - 1, k - 1))
A129372	trisimple	0	(n % k == 0 && (((n / k) & 1) == 1)) ? Z.ONE : Z.ZERO
A134081	trisimple	0	Binomial.binomial(n,  k).multiply((2*k + 1)*(n - k) + k + 1).divide(k + 1)
A134082	trisimple	0	(k == n) ? Z.ONE : ((k == n - 1) ? Z.valueOf(2 * n) : Z.ZERO)
A134234	trisimple	0	(k == n) ? Z.ONE : Z.valueOf(2 * (n + k - 1))
A134235	trisimple	0	(k + n == 0) ? Z.ONE : Z.valueOf((k == n) ? n : n + 2 * k)
A134237	trisimple	0	(k + n == 0) ? Z.ONE : Z.valueOf((k == n) ? n : 2 * n - 2 + k)
A134346	trisimple	0	Z.ONE.shiftLeft(n + 1).add(-1).multiply(Binomial.binomial(n, k))
A134398	trisimple	0	Z.valueOf(k - 1).multiply(Z.valueOf(n - k).add(Binomial.binomial(n - 1, k - 1)))
A134482	trisimple	0	Z.valueOf((k == n) ? n : n + k)
A135387	trisimple	0	(k == n) ? Z.TWO : ((k == n - 1) ? Z.ONE : Z.ZERO)
A137388	trisimple	0	Z.valueOf(k*k - 1).multiply(Binomial.binomial(n, k)).multiply(n + 2).divide(n + 2 - k)
A139459	trisimple	0	Binomial.binomial(3*n, 3*k)
A140880	trisimple	0	MemoryFactorial.SINGLETON.factorial(n + 2).divide(MemoryFactorial.SINGLETON.factorial(k)).multiply(MemoryFactorial.SINGLETON.factorial(n - k))
A141901	trisimple	0	(k == 0) ? Z.ONE : Integers.SINGLETON.sum(0, n - k - 1, j -> Binomial.binomial(n,  j + k + 1).subtract(Z.ONE.shiftLeft(n - k)))
A141906	trisimple	0	MemoryFactorial.SINGLETON.factorial(n*k).divide(MemoryFactorial.SINGLETON.factorial(k).pow(n))
A142472	trisimple	0	Binomial.binomial(n,  k).multiply(Integers.SINGLETON.sum(k, n, j -> Stirling.firstKind(n, j).multiply(Stirling.firstKind(j,  k))))
A142473	trisimple	0	MemoryFactorial.SINGLETON.factorial(n).multiply(Stirling.firstKind(n,  k)).divide(Binomial.binomial(n, k))
A143085	trisimple	0	Z.valueOf(n + 1).multiply(MemoryFactorial.SINGLETON.factorial(n + k))
A143122	trisimple	0	Integers.SINGLETON.sum(k, n, j -> MemoryFactorial.SINGLETON.factorial(j))
A143183	trisimple	0	Z.valueOf(2 + n).multiply(Z.valueOf(n - 2*k).abs()).add(1)
A143198	trisimple	0	Z.valueOf(n + 1).multiply(k - 1).multiply(k + 2).divide2().add(n)
A143418	trisimple	0	Binomial.binomial(n, k).multiply(Binomial.binomial(n, k).add(-1)).divide2()
A143802	trisimple	0	(k == n) ? Z.valueOf(n) : Z.ONE.shiftLeft(k - 1).subtract(1)
A144388	trisimple	0	(k + n == 0) ? Z.ONE : Binomial.binomial(n,  k).add(((((n + k) & 1) == 0) ? 1 : -1)*n).multiply(Binomial.binomial(n - 1,  k))
A144389	trisimple	0	Z.valueOf(n).multiply(Binomial.binomial(n - 1,  k)).subtract(((((n - k) & 1) == 0) ? 1 : -1)).multiply(Binomial.binomial(n, k))
A144397	trisimple	0	MemoryFactorial.SINGLETON.factorial(n).add(1).multiply(Binomial.binomial(n,  k)).subtract(MemoryFactorial.SINGLETON.factorial(n)).divide(Binomial.binomial(n, k))
A145677	trisimple	0	(k == 0) ? Z.ONE : (k == n) ? Z.valueOf(n) : Z.ZERO
A154690	trisimple	0	Z.ONE.shiftLeft(n - k).add(Z.ONE.shiftLeft(k)).multiply(Binomial.binomial(n, k))
A154692	trisimple	0	Z.ONE.shiftLeft(n - k).multiply(Z.THREE.pow(k)).add(Z.ONE.shiftLeft(k)).multiply(Z.THREE.pow(n - k)).multiply(Binomial.binomial(n, k))
A157423	trisimple	0	Z.valueOf(n - k + 1).isPrime() ? Z.ZERO : Z.ONE
A158753	trisimple	0	Fibonacci.lucas(2*(n - k) + 1)
A176046	trisimple	0	Z.ONE.add(Fibonacci.fibonacci(k)).add(Fibonacci.fibonacci(n - k)).subtract(Fibonacci.fibonacci(n))
A339050	trisimple	0	Fibonacci.fibonacci(2*k - 1).multiply(n - k).add(Fibonacci.fibonacci(2*k))
